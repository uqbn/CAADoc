<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>The Attachments Interface</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>Lifecycle Applications</h1>
    </td>
    <td valign="top">
      <h2>Engineering Change Management</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>The Attachments Interface</h3>
      <em>Adding and Removing Attachments</em></td>
  </tr>
  <tr>
    <td class="use" colspan="2">Use Case</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td>
      <h3>Abstract</h3>
      <p>This article shows how to use the ENOVICWAttachments interface of the
      ENOVInterfaces framework to add and remove existing object as an
      attachment for a Change Management object such as an Engineering Change
      Order, Action or Engineering Change Request.</p>
      <ul>
        <li><a href="#Learn"><strong>What You Will Learn With This Use Case</strong></a></li>
        <li><a href="#UseCase"><strong>The CAAEviAttachments Use Case</strong></a></li>
        <ul>
          <li><a href="#What">What Does CAAEviAttachments Do?</a></li>
          <li><a href="#How">How to Launch CAAEviAttachments</a></li>
          <li><a href="#Where">Where to Find the CAAEviAttachments Code</a></li>
        </ul>
        <li><a href="#Step"><strong>Step-by-Step</strong></a></li>
        <li><a href="#InShort"><strong>In Short</strong></a></li>
        <li><a href="#References"><strong>References</strong></a></li>
      </ul>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>This use case is intended to show you how to add and remove an existing
object, in this case a part version, to an existing Engineering Change Order as
an attachment. The technique is the same for Actions and Engineering Change
Request.Attachments are usually connected to objects as a reference or for
information purposes. An attachment can be almost anything including documents,
links, parts, or other Engineering Change Orders and Actions. The ENOVInterfaces
framework contains the interface ENOVICWAttachments which allows you to directly
add an attachment to and remove from a Change Management object.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h3><a name="UseCase"></a>The CAAEviAttachments Use Case</h3>
<p>CAAEviAttachments is a use case of the CAAENOVInterfaces.edu framework that
illustrates how you use the ENOVICWAttachments interface to add an attachment to
and remove from an existing Engineering Change Order.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h4><a name="What"></a>What Does CAAEviAttachments Do?</h4>
<p>CAAEviAttachments begins by opening a VPM session and creating a login a
session. Then the Eco Manager is retrieved. To set up the demonstration, an ECO
is created with the necessary parameters as well as a part version. For more
information on how to create an ECO, refer to use case CAAEviEcoManager. After
the necessary objects are created, the subject interface is used to add the part
version to the ECO as an attachment. Then the attachment is subsequently removed
from the ECO.
<p>The ENOVInterfaces interface/methods shown here is:</p>
<ul>
  <li><b>ENOVIBOCWAttachments.h - AddNewAttachment</b></li>
  <li><b>ENOVIBOCWAttachments.h - RemoveAttachment</b></li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="How"></a>How to Launch CAAEviAttachments</h4>
<p>To launch CAAEviAttachments, you will need to set up the build time
environment, then compile CAAEviAttachments.cpp along with its prerequisites,
set up the run time environment, and then execute the use case. The required
interfaces can be found in the ENOVInterfaces, VPMInterfaces, VPMPersistency,
System, and VPMTpManager frameworks. From the directory where the executable
file is stored, enter&quot;CAAEviAttachments&quot; to execute the program. [<a href="#References">1</a>].</p>
<p align="right">[<a href="#Top">Top</a>]</p>

<!---------------------------------comment------------------------------------->

<h4><a name="Where"></a>Where to Find the CAAEviAttachments Code</h4>
<p>The CAAEviAttachments use case is made of a single file located in the
CAAEviAttachments.m module of the CAAENOVInterfaces.edu framework:</p>
<table>
  <tr>
    <td>Windows</td>
    <td><code>InstallRootDirectory\CAAENOVInterfaces.edu\CAAEviAttachments.m\</code></td>
  </tr>
  <tr>
    <td>Unix</td>
    <td><code>InstallRootDirectory/CAAENOVInterfaces.edu/CAAEviAttachments.m/</code></td>
  </tr>
</table>
<p>where <code>InstallRootDirectory</code> is the directory where the CAA CD-ROM
is installed.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h3><a name="Step"></a>Step-by-Step</h3>
<p>For demonstration purposes, the code from the CAAEviAttachments use case is
shown here. After the preliminary set up of creating the ECO and part version,
there are two logical steps:</p>
<ul>
  <li><a href="#Step1">Add attachment to ECO</a></li>
  <li><a href="#Step2">Remove attachment from ECO</a></li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h4><a name="Step1"></a>Add attachment to an ECO</h4>
<table class="code">
  <tr>
    <td>
      <pre>
    #include &quot;ENOVICWAttachments.h&quot;
    #include &quot;CATIVpmAFLAttachment.h&quot;
    #include &quot;CATUnicodeString.h&quot;
    </pre>
    </td>
  </tr>
</table>
<p>These include statements give access to the interfaces demonstrated here.</p>
<table class="code">
  <tr>
    <td>
      <pre>
  //--- Add a Part Version as an Attachment to ECO
  
    CATUnicodeString AttName(&quot;MyAttachment&quot;);
    CATUnicodeString Description(&quot;This is a CAA Attachment&quot;);
    CATIVpmAFLAttachement_var AttObj = NULL_var;
    ENOVICWAttachments_var spAtt(Eco);
        
    rc = spAtt-&gt;AddNewAttachment(AttName, 
        			 Description,
    				 partVersion,  
    				 AttObj);
    
    if (AttObj==NULL_var||!SUCCEEDED(rc))
    {
    	cout &lt;&lt; &quot;ERROR in Adding Attachment.&quot; &lt;&lt; endl &lt;&lt; flush;    
    	VPMSession::CloseSession();
    	return 7;
    }

    cout &lt;&lt; &quot;Added Attachment succesfully.&quot; &lt;&lt; endl &lt;&lt; flush;     
      </pre>
    </td>
  </tr>
</table>
<p>&nbsp;
<ol>
  <li>After the VPM session is opened, and the ECO and part version created, you
    can use the ENOVICWAttachments interface to add the attachment to the ECO.</li>
  <li>Then, the ECO object, <b>Eco</b>, is cast as a ENOVICWAttachment type - <b>spAtt</b>.</li>
  <li>With the description and attachment name set, <b>spAtt</b> calls method <b>AddNewAttachment</b>.</li>
  <li>The method returns S_OK if successful and the attachment object <b>AttObj</b>
    is created.</li>
</ol>
<p align="right">[<a href="#Top">Top</a>]</p>
<h4><a name="Step2"></a>Remove attachment from an ECO</h4>
<table class="code">
  <tr>
    <td>
      <pre>
    #include &quot;ENOVICWAttachments.h&quot;
    #include &quot;CATIVpmAFLAttachment.h&quot;
    </pre>
    </td>
  </tr>
</table>
<p>These include statements give access to the interfaces demonstrated here.</p>
<table class="code">
  <tr>
    <td>
      <pre>
  //--- Remove Attachment from ECO
  
    rc = spAtt-&gt;RemoveAttachment(AttObj);
    if (!SUCCEEDED(rc))
    {
    	cout &lt;&lt; &quot;ERROR in Removing Attachment.&quot; &lt;&lt; endl &lt;&lt; flush;    
    	VPMSession::CloseSession();
    	return 8;
    }

    cout &lt;&lt; &quot;Removed Attachment succesfully.&quot; &lt;&lt; endl &lt;&lt; flush;  
      </pre>
    </td>
  </tr>
</table>
<p>&nbsp;
<ol>
  <li>With the ECO cast as a ENOVICWAttachment smart pointer - <b>spAtt</b>,
    method <b>RemoveAttachment</b> is called.</li>
  <li>The method returns S_OK if successful and the attachment object <b>AttObj</b>
    is removed from the ECO.</li>
</ol>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>

<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>Use the ENOVICWAttachments interface available in the ENOVInterfaces
framework to add or remove an existing object as an attachment for Change
Management objects (ECOs, Actions, ECRs).</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->

<h3><a name="References"></a>References</h3>
<table width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="../CAADocUseCases/CAADocRunSample.htm">Building
      and Launching a CAA V5 Use Case</a></td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [Feb 2002]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 1994-2002, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
