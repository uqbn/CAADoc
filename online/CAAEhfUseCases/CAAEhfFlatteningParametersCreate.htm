<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Retrieving the Active Plane</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>Equipment &amp; Systems Engineering</h1>
    </td>
    <td valign="top">
      <h2>Electrical Harness Flattening</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>Creating the Flattening Parameters</h3>
      <i>How to create the flattening parameters </i></td>
  </tr>
  <tr>
    <td class="use" colspan="2">Use Case</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<table width="100%">
  <tr>
    <td bgcolor="#F0F0FF">
      <h3>Abstract</h3>
      <p>This article discusses the ElecFlatteningItf use case. This use case
      explains how to create the flattening parameters</p>
      <ul>
        <li><b><a href="#Learn">What You Will Learn With This Use Case</a></b></li>
        <li><b><a href="#UseCase">The CAAEhfFlatteningParametersCreate Use Case</a></b>
          <ul>
            <li><a href="#What">What does CAAEhfFlatteningParametersCreate do</a></li>
            <li><a href="#How">How to Launch CAAEhfFlatteningParametersCreate</a></li>
            <li><a href="#Where">Where to Find the 
			CAAEhfFlatteningParametersCreate
              code</a></li>
          </ul>
        </li>
        <li><a href="#Step"><b>Step-by-Step</b></a></li>
        <li><b><a href="#InShort">In Short</a></b></li>
        <li><b><a href="#history">History</a></b></li>
      </ul>
    </td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>This use case is intended to help you make your first steps in programming
with CATIA EHF Interfaces.&nbsp;Its main intent is to allow you to create the
flattening parameters.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="UseCase"></a>The CAAEhfFlatteningParametersCreate Use Case</h3>
<p>CAAEhfFlatteningParametersCreate.m is a use case of the CAAElecFlatteningItf.edu
framework that illustrates the CATIA EHF Interfaces framework capabilities.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="What"></a>What Does CAAEhfFlatteningParametersCreate Do?</h4>
<p>The goal of CAAEhfFlatteningParametersCreate use case is to show how to 
create
the flattening parameters.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p align="right">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="How"></a>How to Launch CAAEhfFlatteningParametersCreate ?</h4>
<p>To launch CAAEhfFlatteningParametersCreate, you will need to set up the build time
environment, then compile CAAEhfFlatteningParametersCreate along with its
prerequisites, set up the run time environment, and then execute the sample.</p>
<p>To launch the use case, execute the following command:</p>
<pre>mkrun </pre>
<p>&nbsp;</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Where">&nbsp;</a>Where to Find the CAAEhfFlatteningParametersCreate Code</h4>
<p>The CAAEhfFlatteningParametersCreate&nbsp; sample is made of a single class named
CAAEhfFlatteningParametersCreate&nbsp; located in the 
CAAEhfFlatteningParametersCreate .m
module of the CAAElecFlatteningItf.edu framework:</p>
<table>
  <tr>
    <td>Windows</td>
    <td><code>InstallRootDirectory\CAAElecFlatteningItf.edu\CAAEhfFlatteningParametersCreate.m\</code></td>
  </tr>
  <tr>
    <td>Unix</td>
    <td><code>InstallRootDirectory/CAAElecFlatteningItf.edu/CAAEhfFlatteningParametersCreate.m/</code></td>
  </tr>
</table>
<p>where <code>InstallRootDirectory</code> is the directory where the CAA CD-ROM
is installed.</p>
<p>&nbsp;</p>
<p>This sample deals with the following classes:</p>
<p>&nbsp;</p>
<table width="709" height="387">
  <tr>
    <td width="218" height="21"><i>CATSession</i></td>
    <td width="477" height="21">Class for the session base class</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATDocument</i></td>
    <td width="477" height="21">Class for the document base class</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATDocumentServices</i></td>
    <td width="477" height="21">Class for managing document in the session</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATIDocRoots</i></td>
    <td width="477" height="21">Class for browsing root object in document</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATIProduct</i></td>
    <td width="477" height="21">Interface dedicated to define product behaviour</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATIEleDocServices</i></td>
    <td width="477" height="21">Interface dedicated electrical environment
      initialization</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATIEhfEnvironment</i></td>
    <td width="477" height="21">Interfaces dedicated to retrieve the flattening
      parameter</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATIEhfFlatteningParameters</i></td>
    <td width="477" height="21">Interfaces dedicated to read attribute on
      flattening parameter</td>
  </tr>
  <tr>
    <td width="218" height="21"><i>CATMathPlane</i></td>
    <td width="477" height="21">Class representing a mathematical plane in 3D</td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="Step"></a>Step-by-Step</h3>
<p>We will now first comment the Electrical environment and it’s components
creation by looking at the code of the Main . There are 5 logical steps in Main
:</p>
<table width="100%">
  <tr>
    <td><b>#</b></td>
    <td><b>Step</b></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step4">1</a></td>
    <td valign="top"><a href="#Step2">Create a session and open a new document</a></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step4">2</a></td>
    <td valign="top"><a href="#Step3">Initializing Electrical Environment</a></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step4">3</a></td>
    <td valign="top"><a href="#Step4">Retrieve the root product of the new document</a></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step5">4</a></td>
    <td valign="top"><a href="#Step5">Create the Flattening parameters from the root Product</a></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step7">5</a></td>
    <td valign="top"><a href="#Step7">Epilogue</a></td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step2"></a>Create a session and open a new document.</h4>
<p>We need a <i>CATSession</i> pointer to create the Session.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
pSession = CATSession::Create_Session(sessionIdent);

...</pre>
    </td>
  </tr>
</table>
<p align="left">We need a CATDocument pointer to create a new document.</p>
<table class="code" height="35">
  <tr>
    <td height="31">
      <pre>...
CATDocumentServices::New(&quot;Product&quot;, pDoc);

...</pre>
    </td>
  </tr>
</table>
<p align="right">&nbsp;</p>
<p>Once the current session&nbsp; and the CATProduct document have been created. pDoc is a pointer to this document.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step3"></a>Initializing Electrical Environment.</h4>
<p>We initialize the Document by using CATIEleDocServices interface pointer and
the method Initialize() on it.</p>
<table class="code">
  <tr>
    <td>
      <pre>....
  hr = pDoc-&gt;QueryInterface(IID_CATIEleDocServices,(void**)&amp;pIEleDocServices );
  if ( FAILED(hr) )
  {
    retCode = 4; 
    goto EscapeWay;
  }

  hr = pIEleDocServices-&gt;Initialize();
  if ( FAILED(hr) )
  {
    retCode = 5; 
    goto EscapeWay;
  }</pre>
      <pre>....</pre>
    </td>
  </tr>
</table>
<p align="left">Initializing the electrical environment is mandatory to enable
access to electrical object or electrical attributes.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step4"></a>Retrieve the root product of the input document.</h4>
<p>We need a <i>CATProduct</i> pointer to retrieving the root product.&nbsp;</p>
<table class="code">
  <tr>
    <td>
      <pre>....
  hr = pDoc-&gt;QueryInterface(IID_CATIDocRoots, (void**)(&amp;pIDocRootsOnDoc));
  if(FAILED(hr))
  {
    retCode = 6;
    goto EscapeWay;
  }
  
  // Get the root product which is the first element of root elements
  pListUnkRootProducts = pIDocRootsOnDoc-&gt;GiveDocRoots();
  if(NULL == pListUnkRootProducts)
  {
    retCode = 7;
    goto EscapeWay;
  }
  
  nProducts = pListUnkRootProducts-&gt;Size();
  if( 0 == nProducts)
  {
    retCode = 8;
    goto EscapeWay;
  }
  
  hUnkRootProd = (*pListUnkRootProducts)[1];
  if(NULL_var == hUnkRootProd)
  {
    retCode = 9;
    goto EscapeWay;
  }

  hr = hUnkRootProd-&gt;QueryInterface(IID_CATIProduct, (void**)(&amp;pIRootProduct));
  if(FAILED(hr))
  {
    retCode = 10;
    goto EscapeWay;
  }</pre>
      <pre>....</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step5"></a>Create the Flattening parameters from the root
Product.</h4>
<p>We need a CATIEhfEnviroment pointer on root product to create the
Flattening parameters</p>
<table class="code" width="878">
  <tr>
    <td width="870">
      <pre>...</pre>
      <pre>  hr = pIRootProduct-&gt;QueryInterface(IID_CATIEhfEnvironment,(void**)&amp;pIEhfEnvironment);
  if ( FAILED(hr) )
  {
    retCode = 11;
    goto EscapeWay;
  }
  
  hr = pIEhfEnvironment-&gt;CreateFlatteningParameters(pIEhfCreateFlattenPara);
if( ( FAILED(hr) ) || ( NULL == pIEhfCreateFlattenPara ) )
{
    retCode = 12;
    goto EscapeWay;
  }

  hr = pIEhfEnvironment-&gt;GetFlatteningParameters(&amp;phListFlatteningPara);
  if ( ( FAILED(hr) ) || ( NULL == phListFlatteningPara ) )
   {
    retCode = 13;
    goto EscapeWay;
   }

  nbFlatteningPara = phListFlatteningPara-&gt;Size();
  if (0 &gt;= nbFlatteningPara)
  {
    retCode = 14; 
    goto EscapeWay;
  }

  hUnkFlatteningPara = (*phListFlatteningPara)[1];
  if (NULL_var == hUnkFlatteningPara)
  {
    retCode = 15; 
    goto EscapeWay;
  }

  hr = hUnkFlatteningPara-&gt;QueryInterface(IID_CATIEhfFlatteningParameters, (void **)&amp;pIFlatteningPara);
  if ( FAILED(hr) )
  {
    retCode = 16; 
    goto EscapeWay;
  }
  
...</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step7"></a>Epilogue</h4>
<p>Removing document from session and closing the session.</p>
<table class="code">
  <tr>
    <td>
      <pre> ...</pre>
      <pre>  CATDocumentServices::Remove (*pDoc) ;

  if ( NULL != pSession )
  {
    pSession-&gt;Delete_Session(sessionIdent);
  }</pre>
      <pre>&nbsp;</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>This use case has demonstrated the way to create the Flattening parameters.&nbsp;</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<table width="100%">
  <tr>
    <td valign="top" align="right">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="history"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>2</strong> [January 2007]</td>
    <td valign="top">Document updated</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2007, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
