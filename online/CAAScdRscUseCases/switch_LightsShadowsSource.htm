<html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>switch_LightsShadows.CATScript</title><link rel="stylesheet" type="text/css" href="../CAAScrBase/caav5.css"></head><body><pre>
<font color="#0000FF">Option Explicit</font>

<font color="#008000">' COPYRIGTH DASSAULT SYSTEMES 2003</font>

<font color="#008000">' ***********************************************************************</font>
<font color="#008000">'   Purpose:		Switch on and off all the ligths' shadows of a product</font>
<font color="#008000">'</font>
<font color="#008000">'   Version:		1.0</font>
<font color="#008000">'   Author:			bmb</font>
<font color="#008000">'   Languages:		VBScript </font>
<font color="#008000">'   Locales:		English </font>
<font color="#008000">'   CATIA Level:	V5R12 </font>
<font color="#008000">' ***********************************************************************</font>


<font color="#008000">' Main </font>
<font color="#0000FF">Sub </font>CATMain()

	<font color="#008000">' Get the documents collection</font>
	Dim oCollection<font color="#0000FF"> As </font>Documents
	Set oCollection = CATIA.Documents

	<font color="#008000">' test if no document is open</font>
	If 0=oCollection.Count<font color="#0000FF"> Then </font>
		msgbox "A product document must be active to execute this macro.", vbOKOnly, "Switch On Lights"
		Exit Sub
	End If

	 <font color="#008000">' Get material library</font>
	Dim oProductDocument<font color="#0000FF"> As </font>Document
	Set oProductDocument = CATIA.ActiveDocument

	<font color="#008000">' test if the active document is a material library (CATMaterial)</font>
	If 0=InStr(oProductDocument.Name, ".CATProduct") Then
		msgbox "A product document must be active to execute this macro.", vbOKOnly, "Switch Off Shadows"
		Exit Sub
	End If

	<font color="#008000">' Accessing the Root Product</font>
	Dim oRootProduct<font color="#0000FF"> As </font>Document
	Set oRootProduct = oProductDocument.Product

	<font color="#008000">' Accessing the collection of rendering lights</font>
	Dim oLights<font color="#0000FF"> As </font>RenderingLights
	Set oLights = oRootProduct.GetItem("CATRscRenderingLightVBExt")

	<font color="#008000">' Declarations</font>
	Dim I<font color="#0000FF"> As </font>Int
	Dim oLight<font color="#0000FF"> As </font>RenderingLight
	Dim oTab(3)<font color="#0000FF"> As </font>CATSafeArrayVariant

	<font color="#008000">' Create the parameter</font>
	Dim oParams<font color="#0000FF"> As </font>Parameters
	Dim oReadParam<font color="#0000FF"> As </font>Parameter
	Dim oParam<font color="#0000FF"> As </font>Parameter
	Dim sParamValue<font color="#0000FF"> As </font>String
	Set oParams = oProductDocument.Product.Parameters

	On Error Resume Next
	Set oParam = oParams.Item("LightsShadowsStatus")

	If Err &lt;&gt; 0<font color="#0000FF"> Then </font><font color="#008000">''''''''' switch OFF '''''''''</font>

		<font color="#008000">' Ligths loop</font>
		For I=1<font color="#0000FF"> To </font>oLights.Count
			Set oLight = oLights.Item(I)

			<font color="#008000">' Create sParamValue</font>
			If I&gt;1<font color="#0000FF"> Then</font>
				sParamValue = sParamValue & "&"
			End If
			sParamValue = sParamValue & oLight.Name & "="
			
			If oLight.HardwareShadowStatus = 1<font color="#0000FF"> Then</font>
				oLight.HardwareShadowStatus = 0
				sParamValue = sParamValue & "1"
			Else
				sParamValue = sParamValue & "0"
			End If

			sParamValue = sParamValue & "/"

			If oLight.ShadowObjectStatus = 1<font color="#0000FF"> Then</font>
				oLight.ShadowObjectStatus = 0
				sParamValue = sParamValue & "1"
			Else
				sParamValue = sParamValue & "0"
			End If
		Next

		<font color="#008000">' Create the parameter</font>
		oParams.CreateString "LightsShadowsStatus", sParamValue
		oParams.Item("LightsShadowsStatus").Hidden = True


	Else <font color="#008000">''''''''' switch ON '''''''''</font>

		<font color="#008000">' Parse the parameter value</font>
		Dim aLights<font color="#0000FF"> As </font>Array
		Dim aLight<font color="#0000FF"> As </font>Array
		sParamValue = oParam.ValueAsString <font color="#008000">' read the parameter value</font>
		aLights = Split(sParamValue, "&")

		<font color="#008000">' Ligths loop</font>
		For I=0<font color="#0000FF"> To </font>UBound(aLights)

			aLight = Split(aLights(I), "=")
			Err.Clear
			Set oLight = oLights.Item(aLight(0))
			If Err &lt;&gt; 0<font color="#0000FF"> Then </font><font color="#008000">' light not exist</font>
				msgbox "Impossible to find the light '" & aLight(0) & "'", vbOKOnly, "Switch On Lights' Shadows"
			Else
				If oLight.Type = 3<font color="#0000FF"> Then </font><font color="#008000">' 1=directional light</font>
					oLight.HardwareShadowStatus = Mid(aLight(1), 1, 1)
				End If
				If oLight.Type = 1<font color="#0000FF"> Then </font><font color="#008000">' 1=spot light</font>
					oLight.ShadowObjectStatus = Mid(aLight(1), 3, 1)
				End If
			End If
		Next

		<font color="#008000">' Remove parameter</font>
		oParams.Remove "LightsShadowsStatus"

	End If

<font color="#0000FF">End Sub</font>


</pre></body></html>
