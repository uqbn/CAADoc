<html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>CAASchAppObjFactory.CATScript</title><link rel="stylesheet" type="text/css" href="../CAAScrBase/caav5.css"></head><body><pre>
<font color="#0000FF">Option Explicit</font>
<font color="#008000">' COPYRIGHT DASSAULT SYSTEMES 2004</font>

<font color="#008000">' *****************************************************************************</font>
<font color="#008000">'   Purpose:      Create an application reference and add connectors. Also</font>
<font color="#008000">'                 create an application route connecting to an instance of</font>
<font color="#008000">'                 the component.</font>
<font color="#008000">'   Languages:    VBScript</font>
<font color="#008000">'   Locales:      English </font>
<font color="#008000">'   CATIA Level:  V5R15 </font>
<font color="#008000">' *****************************************************************************</font>

<font color="#0000FF">Sub </font>CATMain()

    <font color="#008000">' ------------------------------------------------------------------------- </font>
    <font color="#008000">' Optional: allows to find the sample wherever it's installed</font>
<font color="#0000FF">    dim </font>sDocPath<font color="#0000FF"> As </font>String 
    sDocPath=CATIA.SystemService.Environ("CATDocView")

<font color="#0000FF">    If </font>(Not CATIA.FileSystem.FolderExists(sDocPath))<font color="#0000FF"> Then</font>
      Err.Raise 9999,sDocPath,"No Doc Path Defined"
<font color="#0000FF">    End If</font>
    <font color="#008000">' ------------------------------------------------------------------------- </font>
    <font color="#008000">' Open the schematic document </font>
<font color="#0000FF">    Dim </font>sFilePath
    sFilePath = CATIA.FileSystem.ConcatenatePaths(sDocPath, _
            "online\CAAScdSchUseCases\samples\CAASCH_Detail01.CATProduct")

<font color="#0000FF">    Dim </font>objSchDoc<font color="#0000FF"> As </font>Document
<font color="#0000FF">    Set </font>objSchDoc = CATIA.Documents.Open(sFilePath)

<font color="#0000FF">    Dim </font>strMessage<font color="#0000FF"> As </font>String

    strMessage = _
      "--------------------------------------------------------------------" & vbCr
    strMessage = strMessage & _
      "Output traces from CAASchAppObjFactory.CATScript" & vbCrLf

    <font color="#008000">' Find the top node of the schematic object tree - schematic root.</font>
<font color="#0000FF">    Dim </font>objPrdRoot<font color="#0000FF"> As </font>Product
<font color="#0000FF">    Dim </font>objSchRoot<font color="#0000FF"> As </font>SchematicRoot
<font color="#0000FF">    If </font>( Not ( objSchDoc Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objPrdRoot = objSchDoc.Product 
<font color="#0000FF">      If </font>( Not ( objPrdRoot Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">        Set </font>objSchRoot = objPrdRoot.GetTechnologicalObject("SchematicRoot")
<font color="#0000FF">      End If</font>
<font color="#0000FF">    End If</font>

<font color="#0000FF">    Dim </font>objAppObjFact<font color="#0000FF"> As </font>SchAppObjectFactory
<font color="#0000FF">    Dim </font>objSchBaseFact<font color="#0000FF"> As </font>SchBaseFactory
<font color="#0000FF">    Dim </font>objSchTempListFact<font color="#0000FF"> As </font>SchTempListFactory

<font color="#0000FF">    If </font>( Not ( objSchRoot Is Nothing ) )<font color="#0000FF"> Then</font>

       <font color="#008000">'-----------------------------------------------------------------------</font>
       <font color="#008000">' Get all the necessary factories.</font>
       <font color="#008000">'-----------------------------------------------------------------------</font>
<font color="#0000FF">       Set </font>objAppObjFact = objSchRoot.GetApplObjFactFromVirtualType ("CAASCHEDU_SamplePID")
<font color="#0000FF">       Set </font>objSchBaseFact = objSchRoot.GetSchBaseFactory 
<font color="#0000FF">       Set </font>objSchTempListFact = objSchRoot.GetTemporaryListFactory

<font color="#0000FF">       If </font>( Not ( objAppObjFact Is Nothing ) And _
            Not ( objSchBaseFact Is Nothing )  And _
            Not ( objSchTempListFact Is Nothing ) )<font color="#0000FF"> Then</font>

         strMessage = strMessage &  "Got Application object factory " & vbCr

<font color="#0000FF">         Dim </font>objAppCompRef<font color="#0000FF"> As </font>AnyObject
<font color="#0000FF">         Dim </font>objSchSymbol<font color="#0000FF"> As </font>AnyObject
<font color="#0000FF">         Dim </font>objSchCompRef<font color="#0000FF"> As </font>SchComponent 
<font color="#0000FF">         Dim </font>objSchListGRR<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">         Dim </font>objSchComp2Ref<font color="#0000FF"> As </font>SchComponent2
<font color="#0000FF">         Dim </font>objSchCompInst<font color="#0000FF"> As </font>SchComponent

         <font color="#008000">'---------------------------------------------------------------------</font>
         <font color="#008000">' Ask application to create a component reference</font>
         <font color="#008000">'---------------------------------------------------------------------      </font>
         objAppObjFact.AppCreateCompRef "CAASCHEDUCompressFunc", _
           objAppCompRef

<font color="#0000FF">         If </font>( Not ( objAppCompRef Is Nothing ) )<font color="#0000FF"> Then</font>
           strMessage = strMessage &  "application reference component created" & vbCr

           <font color="#008000">'---------------------------------------------------------------------</font>
           <font color="#008000">' Find a unassociated component symbol in the document</font>
           <font color="#008000">'---------------------------------------------------------------------   </font>
<font color="#0000FF">           Set </font>objSchSymbol = GetComponentSymbol (objSchRoot)
<font color="#0000FF">           If </font>( Not ( objSchSymbol Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">              Set </font>objSchListGRR = objSchTempListFact.CreateListOfObjects
<font color="#0000FF">              If </font>( Not ( objSchListGRR Is Nothing ) )<font color="#0000FF"> Then</font>
                 objSchListGRR.Append objSchSymbol
<font color="#0000FF">                 Set </font>objSchCompRef = objSchBaseFact.CreateSchComponent ( _
                   objAppCompRef, objSchListGRR)
<font color="#0000FF">                 If </font>( Not ( objSchCompRef Is Nothing ) )<font color="#0000FF"> Then</font>
                    strMessage = strMessage &  "schematic reference component attached" & vbCr
<font color="#0000FF">                 End If</font>
<font color="#0000FF">              End If</font>
<font color="#0000FF">           End If</font>

           <font color="#008000">'---------------------------------------------------------------------</font>
           <font color="#008000">' Add two connectors to the reference component</font>
           <font color="#008000">'---------------------------------------------------------------------   </font>
<font color="#0000FF">           Dim </font>objSchCntr<font color="#0000FF"> As </font>SchCompConnector
<font color="#0000FF">           Dim </font>objSchAppCntr<font color="#0000FF"> As </font>SchAppConnector
<font color="#0000FF">           Dim </font>objSchCntrLoc<font color="#0000FF"> As </font>SchCntrLocation

<font color="#0000FF">           Set </font>objSchCntr = objSchRoot.GetInterface ("CATIASchCompConnector", _
             objSchCompRef)

<font color="#0000FF">           If </font>( Not ( objSchCntr Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">              Dim </font>iCntr<font color="#0000FF"> As </font>Integer
<font color="#0000FF">              Dim </font>db2CntrPos (2)<font color="#0000FF"> As </font>CATSafeArrayVariant
<font color="#0000FF">              Dim </font>db2CntrVec (2)<font color="#0000FF"> As </font>CATSafeArrayVariant
   
<font color="#0000FF">              For </font>iCntr = 1<font color="#0000FF"> To </font>2
<font color="#0000FF">                Set </font>objSchCntrLoc = Nothing
<font color="#0000FF">                Set </font>objSchAppCntr = Nothing

                <font color="#008000">'-------------------------------------------------------------</font>
                <font color="#008000">' connector position and alignment vector are in coordinates</font>
                <font color="#008000">' relative the origin of the reference component graphical</font>
                <font color="#008000">' representation (the detail axis).</font>
                <font color="#008000">'-------------------------------------------------------------</font>
<font color="#0000FF">                If </font>( iCntr = 1 )<font color="#0000FF"> Then</font>
                   db2CntrPos(0) = 15.0
                   db2CntrPos(1) = -5.0
                   db2CntrVec(0) = 1.0
                   db2CntrVec(1) = 0.0
                Else
                   db2CntrPos(0) = -15.0
                   db2CntrPos(1) = -5.0
                   db2CntrVec(0) = -1.0
                   db2CntrVec(1) = 0.0
<font color="#0000FF">                End If</font>

                objSchCntr.AddConnector "CAASCHEDUConnector", objSchSymbol, _
                  Db2CntrPos, objSchAppCntr 

<font color="#0000FF">                If </font>( Not ( objSchAppCntr Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                   Set </font>objSchCntrLoc = objSchRoot.GetInterface ( _
                     "CATIASchCntrLocation", objSchAppCntr)
<font color="#0000FF">                   If </font>( Not ( objSchCntrLoc Is Nothing ) )<font color="#0000FF"> Then</font>

                      objSchCntrLoc.SetAlignVector objSchSymbol, Db2CntrVec

                      strMessage = strMessage &  "  connector " & iCntr & _
                        " created" & vbCr

<font color="#0000FF">                   End If</font>
<font color="#0000FF">                End If     </font>
<font color="#0000FF">              Next </font>

<font color="#0000FF">           End If </font><font color="#008000">'--- If ( Not ( objSchCntr Is Nothing ) ...</font>

           <font color="#008000">'-------------------------------------------------------------------</font>
           <font color="#008000">' Place an instance of reference just created in an empty space in </font>
           <font color="#008000">' the design document</font>
           <font color="#008000">' Note that the target document is an input to PlaceInSpace</font>
           <font color="#008000">'-------------------------------------------------------------------</font>


           <font color="#008000">'-------------------------------------------------------------------</font>
           <font color="#008000">' Component instance (to be created below) orientation matrix.</font>
           <font color="#008000">' x-axis = (1.0,0.0)</font>
           <font color="#008000">' y-axis = (0.0,1.0)</font>
           <font color="#008000">' origin = (100.0,100.0)</font>
           <font color="#008000">'-------------------------------------------------------------------</font>
<font color="#0000FF">           Dim </font>db6Matrix(6)<font color="#0000FF"> As </font>CATSafeArrayVariant
           db6Matrix(0)=1.0
           db6Matrix(1)=0.0
           db6Matrix(2)=0.0
           db6Matrix(3)=1.0
           db6Matrix(4)=100.0
           db6Matrix(5)=100.0
  
<font color="#0000FF">           Set </font>objSchComp2Ref = objSchRoot.GetInterface ( _
             "CATIASchComponent2",objAppCompRef)

<font color="#0000FF">           If </font>( Not ( objSchComp2Ref Is Nothing ) )<font color="#0000FF"> Then</font>

              objSchComp2Ref.PlaceInSpace objSchSymbol,db6Matrix, _
                objSchDoc,objSchCompInst

<font color="#0000FF">              If </font>( Not ( objSchCompInst Is Nothing ) )<font color="#0000FF"> Then</font>
                 strMessage = strMessage &  "Place component instance in space is successful" & vbCr
<font color="#0000FF">              End If </font>
<font color="#0000FF">           End If </font>


<font color="#0000FF">         End If </font><font color="#008000">'--- If ( Not ( objAppCompRef Is Nothing ) ...</font>



         <font color="#008000">'---------------------------------------------------------------------</font>
         <font color="#008000">' Find the coordinates of the route point by asking an existing</font>
         <font color="#008000">' component instance for a nearest compatible connector (connector A</font>
         <font color="#008000">' on the component instance). </font>
         <font color="#008000">'</font>
         <font color="#008000">' The position of connector A will be used to define </font>
         <font color="#008000">' the first route point. A extremity connector will be</font>
         <font color="#008000">' automatically created for the route </font>
         <font color="#008000">' at this start point (connector B). </font>
         <font color="#008000">'</font>
         <font color="#008000">' Connect the route to the component using </font>
         <font color="#008000">' connector A and connector B. </font>
         <font color="#008000">'---------------------------------------------------------------------</font>
<font color="#0000FF">         If </font>( Not  ( objSchCompInst Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">            Dim </font>bCompatible<font color="#0000FF"> As </font>Boolean
<font color="#0000FF">            Dim </font>objLCntrs<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">            Dim </font>objSchGRRCompInst<font color="#0000FF"> As </font>SchGRRComp
<font color="#0000FF">            Dim </font>objSchCompGraphic<font color="#0000FF"> As </font>SchCompGraphic
<font color="#0000FF">            Dim </font>objSchCompCompat<font color="#0000FF"> As </font>SchCompatible

<font color="#0000FF">            Set </font>objSchCompGraphic = objSchRoot.GetInterface ( _
              "CATIASchCompGraphic",objSchCompInst)

            <font color="#008000">'-------------------------------------------------------------------</font>
            <font color="#008000">' Get the image (ditto) of the component instance</font>
            <font color="#008000">'-------------------------------------------------------------------</font>
<font color="#0000FF">            If </font>( Not ( objSchCompGraphic Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">               Set </font>objSchGRRCompInst = GetComponentImage (objSchCompGraphic)                 
<font color="#0000FF">            End If  </font>

<font color="#0000FF">            Set </font>objSchCompCompat = objSchRoot.GetInterface ( _
             "CATIASchCompatible",objSchCompInst)

<font color="#0000FF">            If </font>( Not ( objSchCompCompat Is Nothing ) And _ 
                 Not ( objSchGRRCompInst Is Nothing ) )<font color="#0000FF"> Then</font>

               objSchCompCompat.IsTargetOKForRoute "CAASCHEDUConnector", _
                 objSchGRRCompInst, objLCntrs, bCompatible

               <font color="#008000">'---------------------------------------------------------------</font>
               <font color="#008000">'  IsTargetOKRoute returns a list of compatible connectors</font>
               <font color="#008000">'  on the target component if the component is compatible to</font>
               <font color="#008000">'  be connected to the start point of the route.</font>
               <font color="#008000">'---------------------------------------------------------------</font>

<font color="#0000FF">               Dim </font>objSchGRRInst<font color="#0000FF"> As </font>SchGRR
<font color="#0000FF">               Dim </font>objAppCntrCompBest<font color="#0000FF"> As </font>SchAppConnector
<font color="#0000FF">               Dim </font>objLDbOut<font color="#0000FF"> As </font>SchListOfDoubles
<font color="#0000FF">               Dim </font>db2SelectPt(2)<font color="#0000FF"> As </font>CATSafeArrayVariant
 
               db2SelectPt(0) = 130.0
               db2SelectPt(1) = 110.0

<font color="#0000FF">               Set </font>objSchGRRInst = objSchRoot.GetInterface ( _
                 "CATIASchGRR",objSchGRRCompInst)

<font color="#0000FF">               If </font>( Not ( objLCntrs Is Nothing ) And  _
                    Not ( objSchGRRInst Is Nothing ) And bCompatible )<font color="#0000FF"> Then</font>

                  <font color="#008000">'------------------------------------------------------------</font>
                  <font color="#008000">'  GetBestCntrForRoute returns a connector from</font>
                  <font color="#008000">'  the output list that is closest </font>
                  <font color="#008000">'  to a user selection point.</font>
                  <font color="#008000">'------------------------------------------------------------</font>
                  objSchCompCompat.GetBestCntrForRoute db2SelectPt, _
                    objSchGRRInst, objLCntrs, objLDbOut, objAppCntrCompBest

<font color="#0000FF">                  Dim </font>objAppRouteRef<font color="#0000FF"> As </font>AnyObject
<font color="#0000FF">                  Dim </font>objSchRoute<font color="#0000FF"> As </font>AnyObject
<font color="#0000FF">                  Dim </font>strLogLineID<font color="#0000FF"> As </font>String
<font color="#0000FF">                  Dim </font>dbPtArray(6)<font color="#0000FF"> As </font>CATSafeArrayVariant
<font color="#0000FF">                  Dim </font>objAppCntrRouteBest<font color="#0000FF"> As </font>SchAppConnector
<font color="#0000FF">                  Dim </font>objAppConnection<font color="#0000FF"> As </font>SchAppConnection
<font color="#0000FF">                  Dim </font>objRouteCntbl<font color="#0000FF"> As </font>SchAppConnectable
<font color="#0000FF">                  Dim </font>IntNbCoord<font color="#0000FF"> As </font>Integer

                  dbPtArray(0) = 0.0
                  dbPtArray(1) = 0.0
   
                  IntNbCoord = objLDbOut.Count
<font color="#0000FF">                  If </font>(IntNbCoord &gt; 1)<font color="#0000FF"> Then</font>
                    dbPtArray(0) = objLDbOut.Item(1)
                    dbPtArray(1) = objLDbOut.Item(2)
                    strMessage = strMessage &  _
                      "Target is compatible for route " & vbCr
                    strMessage = strMessage &  "Route point starts at " & _
                      dbPtArray(0) & " " & dbPtArray(1) & vbCr
<font color="#0000FF">                  End If </font>

                  dbPtArray(2) = dbPtArray(0) + 100.0
                  dbPtArray(3) = dbPtArray(1)
                  dbPtArray(4) = dbPtArray(2)
                  dbPtArray(5) = dbPtArray(1) + 60.0

                  <font color="#008000">'-------------------------------------------------------------</font>
                  <font color="#008000">' Ask application to create a route reference</font>
                  <font color="#008000">'-------------------------------------------------------------</font>
                  <font color="#008000">'strLogLineID = "U1-P101-2in-CS150R-FG"</font>
                  strLogLineID = ""
                  objAppObjFact.AppCreateRoute "CAASCHEDUFuncString", _
                    objAppRouteRef, strLogLineID      

<font color="#0000FF">                  If </font>( Not ( objAppCompRef Is Nothing ) )<font color="#0000FF"> Then</font>
                    strMessage = strMessage &  _
                      "application reference route created" & vbCr

                    objSchBaseFact.CreateSchRouteByPoints objAppRouteRef, _
                      dbPtArray, objSchRoute  

<font color="#0000FF">                    If </font>( Not ( objSchRoute Is Nothing ) )<font color="#0000FF"> Then</font>
                      strMessage = strMessage &  "schematic route created" & vbCr

<font color="#0000FF">                      Set </font>objRouteCntbl = objSchRoot.GetInterface ( _
                        "CATIASchAppConnectable",objSchRoute)

<font color="#0000FF">                      Set </font>objAppCntrRouteBest = FindConnectorAtPosition ( _
                        dbPtArray(0), dbPtArray(1), objRouteCntbl, objSchRoot)

<font color="#0000FF">                      If </font>( Not (objAppCntrRouteBest Is Nothing ) And _
                           Not (objAppCntrCompBest Is Nothing ) )<font color="#0000FF"> Then</font>

                         <font color="#008000">'-----------------------------------------------------</font>
                         <font color="#008000">' Connect "Connector A" to "Connector B"</font>
                         <font color="#008000">'-----------------------------------------------------</font>
<font color="#0000FF">                         Set </font>objAppConnection = objAppCntrCompBest.AppConnect _
                           (objAppCntrRouteBest)

<font color="#0000FF">                         If </font>( Not ( objAppConnection Is Nothing ) )<font color="#0000FF"> Then</font>
                            strMessage = strMessage & "route has been connected"
                            strMessage = strMessage & _
                              " to component successfully" & vbCr

<font color="#0000FF">                         End If </font>

<font color="#0000FF">                      End If </font><font color="#008000">'--- If ( Not (objAppCntrRouteBest Is Nothing ) ...</font>

<font color="#0000FF">                    End If </font><font color="#008000">'--- If ( Not ( objSchRoute Is Nothing )...</font>

<font color="#0000FF">                  End If </font><font color="#008000">'--- If ( Not ( objAppCompRef Is Nothing ) ...</font>

<font color="#0000FF">               End If </font><font color="#008000">'--- If ( Not ( objLCntrs Is Nothing )...</font>

<font color="#0000FF">            End If </font><font color="#008000">'--- If ( Not ( objSchCompCompat Is Nothing ) ...</font>

<font color="#0000FF">         End If </font><font color="#008000">'--- If ( Not  ( objSchCompInst Is Nothing ) ...</font>

<font color="#0000FF">       End If </font><font color="#008000">'--- If ( Not ( objAppObjFact Is Nothing )...</font>

<font color="#0000FF">    End If </font><font color="#008000">'--- If ( Not ( objSchRoot Is Nothing )...</font>

    strMessage = strMessage & _
      "--------------------------------------------------------------------" & vbCr
    MsgBox strMessage


<font color="#0000FF">End Sub</font>

<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find a component symbol that has not been associated with a schematic</font>
<font color="#008000">' | component from a document root.</font>
<font color="#008000">' | Input: objSchRootArg:  the root of the document.</font>
<font color="#008000">' | Returns: component symbol object.</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function GetComponentSymbol (objSchRootArg<font color="#0000FF"> As </font>SchematicRoot)<font color="#0000FF"> As </font>AnyObject
<font color="#0000FF">   Dim </font>objSchLSymbols<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   If </font>( Not ( objSchRootArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objSchLSymbols = objSchRootArg.GetUnassociatedSymbols
<font color="#0000FF">      If </font>( Not ( objSchLSymbols Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">         Set </font>GetComponentSymbol = objSchLSymbols.Item (1,"CATIASchGRR")
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If</font>
<font color="#0000FF">End Function</font>


<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find the first symbol used for the input schematic component.</font>
<font color="#008000">' | Input: objSchCompGraph:  the schematic component </font>
<font color="#008000">' |        (a CATIASchCompGraphic interface handle).</font>
<font color="#008000">' | Returns: the component image (the symbol instance)</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function GetComponentImage (objSchCompGraphArg<font color="#0000FF"> As </font>SchCompGraphic)<font color="#0000FF"> As </font>SchGRRComp
<font color="#0000FF">   Dim </font>objSchLSymbols<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   If </font>( Not ( objSchCompGraphArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objSchLSymbols = objSchCompGraphArg.ListGraphicalImages
<font color="#0000FF">      If </font>( Not ( objSchLSymbols Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">         Set </font>GetComponentImage = objSchLSymbols.Item (1,"CATIASchGRRComp")
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If</font>
<font color="#0000FF">End Function</font>

<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find the first graphical primitives of an input route.</font>
<font color="#008000">' | Input: objSchRouteGraph:  the schematic route</font>
<font color="#008000">' |        (a CATIASchRouteGraphic interface handle).</font>
<font color="#008000">' | Returns: the route graphic primitives</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function GetRoutePrimitives (objSchRouteGraphArg<font color="#0000FF"> As </font>SchRouteGraphic) _
 <font color="#0000FF"> As </font>SchGRR

<font color="#0000FF">   Dim </font>objSchLGRR<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   If </font>( Not ( objSchRouteGraphArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objSchLGRR = objSchRouteGraphArg.ListGraphicalPrimitives
<font color="#0000FF">      If </font>( Not ( objSchLGRR Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">         Set </font>GetRoutePrimitives = objSchLGRR.Item (1,"CATIASchGRR")
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If</font>
<font color="#0000FF">End Function</font>


<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find a connector that matches the input x-y coordinates.</font>
<font color="#008000">' | Input: dbXArg,dbYArg:  the x-y coordinates of the matching point</font>
<font color="#008000">' |        objSchGRR: the graphic primitives of the route.</font>
<font color="#008000">' |        objSchCntbl: the connectable to search for the connectors</font>
<font color="#008000">' | Returns: the connector handle</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function FindConnectorAtPosition ( dbXArg<font color="#0000FF"> As </font>Double, dbYArg<font color="#0000FF"> As </font>Double, _
  objSchCntblArg<font color="#0000FF"> As </font>SchAppConnectable, _
  objSchRootArg<font color="#0000FF"> As </font>SchematicRoot )<font color="#0000FF"> As </font>SchAppConnector

<font color="#0000FF">   Dim </font>objLCntr<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   Dim </font>objLFilter<font color="#0000FF"> As </font>CATIASchListOfBSTRs
<font color="#0000FF">   Dim </font>objSchRouteGraphic<font color="#0000FF"> As </font>SchRouteGraphic
<font color="#0000FF">   Dim </font>objGRR<font color="#0000FF"> As </font>SchGRR

<font color="#0000FF">   If </font>( Not ( objSchCntblArg Is Nothing ) And _
        Not ( objSchRootArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objLFilter = Nothing

<font color="#0000FF">      Set </font>objLCntr = objSchCntblArg.AppListConnectors (objLFilter)

<font color="#0000FF">      Set </font>objSchRouteGraphic = objSchRootArg.GetInterface ( _
        "CATIASchRouteGraphic", objSchCntblArg)
<font color="#0000FF">      If </font>( Not ( objSchRouteGraphic Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">         Set </font>objGRR = GetRoutePrimitives (objSchRouteGraphic)
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If </font><font color="#008000">'--- If ( Not ( objSchCntblArg Is Nothing ) ...</font>

<font color="#0000FF">   If </font>( Not ( objLCntr Is Nothing )  And _
         Not ( objGRR Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">      Dim </font>intNbCntr<font color="#0000FF"> As </font>Integer
<font color="#0000FF">      Dim </font>iCntr<font color="#0000FF"> As </font>Integer
<font color="#0000FF">      Dim </font>objLDbOut<font color="#0000FF"> As </font>SchListOfDoubles
<font color="#0000FF">      Dim </font>objCntrLoc<font color="#0000FF"> As </font>SchCntrLocation
<font color="#0000FF">      Dim </font>IntNbCoord<font color="#0000FF"> As </font>Integer
<font color="#0000FF">      Dim </font>dbXOut<font color="#0000FF"> As </font>Double
<font color="#0000FF">      Dim </font>dbYOut<font color="#0000FF"> As </font>Double

      intNbCntr = objLCntr.Count
<font color="#0000FF">      If </font>(intNbCntr &gt; 0)<font color="#0000FF"> Then</font>
<font color="#0000FF">         For </font>iCntr = 1<font color="#0000FF"> To </font>intNbCntr
<font color="#0000FF">           Set </font>objCntrLoc = Nothing
<font color="#0000FF">           Set </font>objLDbOut = Nothing

<font color="#0000FF">           Set </font>objCntrLoc = objLCntr.Item (iCntr,"CATIASchCntrLocation")

<font color="#0000FF">           If </font>(Not ( objCntrLoc Is Nothing ) )<font color="#0000FF"> Then</font>

              objCntrLoc.GetPosition objGRR,objLDbOut

<font color="#0000FF">              If </font>( Not ( objLDbOut Is Nothing ) )<font color="#0000FF"> Then</font>
                 IntNbCoord = objLDbOut.Count
<font color="#0000FF">                 If </font>(IntNbCoord &gt; 1)<font color="#0000FF"> Then</font>
                   dbXOut = objLDbOut.Item(1)
                   dbYOut = objLDbOut.Item(2)
<font color="#0000FF">                   If </font>( ( dbXOut = dbXArg ) And _ 
                        ( dbYOut = dbYArg ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">                      Set </font>FindConnectorAtPosition =  objSchRootArg.GetInterface ( _
                         "CATIASchAppConnector", objCntrLoc )

<font color="#0000FF">                      Exit For</font>

<font color="#0000FF">                   End If </font>
<font color="#0000FF">                 End If </font>
<font color="#0000FF">              End If</font>
<font color="#0000FF">           End If </font><font color="#008000">'--- If (Not ( objCntrLoc Is Nothing ...</font>
<font color="#0000FF">         Next </font><font color="#008000">' --- For iCntr = 1 To intNbCntr ...</font>
<font color="#0000FF">      End If </font><font color="#008000">'--- If (intNbCntr &gt; 0) ...</font>
<font color="#0000FF">   End If </font><font color="#008000">'--- If ( Not ( objLCntr Is Nothing ) ...</font>

<font color="#0000FF">End Function</font>

</pre></body></html>
