<html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>CAASchDelete.CATScript</title><link rel="stylesheet" type="text/css" href="../CAAScrBase/caav5.css"></head><body><pre>
<font color="#0000FF">Option Explicit</font>
<font color="#008000">' COPYRIGHT DASSAULT SYSTEMES 2004</font>

<font color="#008000">' *****************************************************************************</font>
<font color="#008000">'   Purpose:      Delete objects.</font>
<font color="#008000">'   Languages:    VBScript</font>
<font color="#008000">'   Locales:      English </font>
<font color="#008000">'   CATIA Level:  V5R15 </font>
<font color="#008000">' *****************************************************************************</font>

<font color="#0000FF">Sub </font>CATMain()

    <font color="#008000">' ------------------------------------------------------------------------- </font>
    <font color="#008000">' Optional: allows to find the sample wherever it's installed</font>
<font color="#0000FF">    dim </font>sDocPath<font color="#0000FF"> As </font>String 
    sDocPath=CATIA.SystemService.Environ("CATDocView")

<font color="#0000FF">    If </font>(Not CATIA.FileSystem.FolderExists(sDocPath))<font color="#0000FF"> Then</font>
      Err.Raise 9999,sDocPath,"No Doc Path Defined"
<font color="#0000FF">    End If</font>
    <font color="#008000">' ------------------------------------------------------------------------- </font>
    <font color="#008000">' Open the schematic document </font>
<font color="#0000FF">    Dim </font>sFilePath
    sFilePath = CATIA.FileSystem.ConcatenatePaths(sDocPath, _
            "online\CAAScdSchUseCases\samples\CAASCH_Delete01.CATProduct")

<font color="#0000FF">    Dim </font>objSchDoc<font color="#0000FF"> As </font>Document
<font color="#0000FF">    Set </font>objSchDoc = CATIA.Documents.Open(sFilePath)

<font color="#0000FF">    Dim </font>strMessage<font color="#0000FF"> As </font>String

    strMessage = _
      "--------------------------------------------------------------------" & vbCr
    strMessage = strMessage & _
      "Output traces from CAASchDelete.CATScript" & vbCrLf

    <font color="#008000">' Find the top node of the schematic object tree - schematic root.</font>
<font color="#0000FF">    Dim </font>objPrdRoot<font color="#0000FF"> As </font>Product
<font color="#0000FF">    Dim </font>objSchRoot<font color="#0000FF"> As </font>SchematicRoot
<font color="#0000FF">    If </font>( Not ( objSchDoc Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objPrdRoot = objSchDoc.Product 
<font color="#0000FF">      If </font>( Not ( objPrdRoot Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">        Set </font>objSchRoot = objPrdRoot.GetTechnologicalObject("SchematicRoot")
<font color="#0000FF">      End If</font>
<font color="#0000FF">    End If</font>

<font color="#0000FF">    Dim </font>objSchBaseFact<font color="#0000FF"> As </font>SchBaseFactory

<font color="#0000FF">    If </font>( Not ( objSchRoot Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">       Set </font>objSchBaseFact = objSchRoot.GetSchBaseFactory 

<font color="#0000FF">       Dim </font>objSchComp<font color="#0000FF"> As </font>SchComponent
<font color="#0000FF">       Dim </font>objLRoutes<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">       Dim </font>intNbRouteBefore<font color="#0000FF"> As </font>Integer
<font color="#0000FF">       Dim </font>intNbRouteAfter<font color="#0000FF"> As </font>Integer

       <font color="#008000">'-----------------------------------------------------------------------</font>
       <font color="#008000">'  In this specific input model, we expects to find a component</font>
       <font color="#008000">'  instance that has been inserted into a route.</font>
       <font color="#008000">'</font>
       <font color="#008000">'  After this component instance is deleted, the two routes on </font>
       <font color="#008000">'  each side of the deleted component will be concatenated by the</font>
       <font color="#008000">'  system to become one. </font>
       <font color="#008000">'-----------------------------------------------------------------------</font>
<font color="#0000FF">       Set </font>objLRoutes = objSchRoot.GetRoutes
<font color="#0000FF">       If </font>( Not ( objLRoutes Is Nothing ) )<font color="#0000FF"> Then</font>
          intNbRouteBefore = objLRoutes.Count
          strMessage = strMessage & "Number of routes in the model "
          strMessage = strMessage & "before deleting an inserted component " 
          strMessage = strMessage & " = " & intNbRouteBefore & vbCr
<font color="#0000FF">       End If </font>

<font color="#0000FF">       If </font>( Not ( objSchBaseFact Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">          Set </font>objSchComp = FindComponentInst (objSchRoot)

<font color="#0000FF">          If </font>( Not ( objSchComp Is Nothing ) )<font color="#0000FF"> Then</font>

             objSchBaseFact.DeleteObject objSchComp

             strMessage = strMessage & "Component instance deleted from the model " & vbCr

<font color="#0000FF">          End If </font>

<font color="#0000FF">       End If </font><font color="#008000">'--- If ( Not ( objSchBaseFact Is Nothing ...</font>

       <font color="#008000">'-----------------------------------------------------------------------</font>
       <font color="#008000">'  Concatenate the 2 members</font>
       <font color="#008000">'  The first member will be extended and the 2 member will be</font>
       <font color="#008000">'  deleted</font>
       <font color="#008000">'-----------------------------------------------------------------------</font>
<font color="#0000FF">       Set </font>objLRoutes = objSchRoot.GetRoutes
<font color="#0000FF">       If </font>( Not ( objLRoutes Is Nothing ) )<font color="#0000FF"> Then</font>
          intNbRouteAfter = objLRoutes.Count
          strMessage = strMessage & "Number of routes in the model "
          strMessage = strMessage & "after deleting an inserted component " 
          strMessage = strMessage & " = " & intNbRouteAfter & vbCr

<font color="#0000FF">          Dim </font>objRoute1<font color="#0000FF"> As </font>SchRoute
<font color="#0000FF">          Dim </font>objRoute2<font color="#0000FF"> As </font>SchRoute

<font color="#0000FF">          Dim </font>objRCntbl1<font color="#0000FF"> As </font>SchConnectable
<font color="#0000FF">          Dim </font>objRCntbl2<font color="#0000FF"> As </font>SchConnectable

<font color="#0000FF">          Dim </font>objAppRCntr1<font color="#0000FF"> As </font>SchAppConnector
<font color="#0000FF">          Dim </font>objAppRCntr2<font color="#0000FF"> As </font>SchAppConnector

<font color="#0000FF">          If </font>( intNbRouteAfter &gt; 0 )<font color="#0000FF"> Then</font>
<font color="#0000FF">             Set </font>objRoute1 = objLRoutes.Item (1, "CATIASchRoute")

<font color="#0000FF">             If </font>( Not ( objRoute1 Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                Set </font>objRCntbl1 = objSchRoot.GetInterface ( _
                  "CATIASchAppConnectable", objRoute1)
<font color="#0000FF">                If </font>( Not ( objRCntbl1 Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                   Set </font>objAppRCntr1 = FindOpenConnector (objSchRoot,objRCntbl1)
<font color="#0000FF">                   Set </font>objRoute2 = objLRoutes.Item (2, "CATIASchRoute")
<font color="#0000FF">                End If</font>
<font color="#0000FF">             End If</font>
<font color="#0000FF">             If </font>( Not ( objRoute2 Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                Set </font>objRCntbl2 = objSchRoot.GetInterface ( _
                  "CATIASchAppConnectable", objRoute2)
<font color="#0000FF">                If </font>( Not ( objRCntbl2 Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                   Set </font>objAppRCntr2 = FindOpenConnector (objSchRoot,objRCntbl2)
<font color="#0000FF">                End If</font>
<font color="#0000FF">             End If</font>

<font color="#0000FF">             If </font>( Not ( objRoute1 Is Nothing ) And _
                   Not ( objAppRCntr1 Is Nothing ) And _
                   Not ( objAppRCntr2 Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">                Set </font>objRoute2 = objLRoutes.Item (2, "CATIASchRoute")
<font color="#0000FF">                If </font>( Not ( objRoute2 Is Nothing ) )<font color="#0000FF"> Then</font>
                    objRoute1.Concatenate objAppRCntr1, objRoute2, objAppRCntr2
                    strMessage = strMessage & "2 routes concatenated" & vbCr
<font color="#0000FF">                End If</font>
<font color="#0000FF">             End If </font>
<font color="#0000FF">          End If </font>
<font color="#0000FF">       End If </font><font color="#008000">'--- If ( Not ( objLRoutes Is Nothing ) ...</font>
       
<font color="#0000FF">    End If </font><font color="#008000">'--- If ( Not ( objSchRoot Is Nothing )...</font>

    strMessage = strMessage & _
      "--------------------------------------------------------------------" & vbCr
    MsgBox strMessage

<font color="#0000FF">End Sub</font>

<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find a component instance with a specific name </font>
<font color="#008000">' | (contains "delete" sub-string)</font>
<font color="#008000">' | Input: objSchRootArg:  the root of the document.</font>
<font color="#008000">' | Returns: a list schematic component handle</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function FindComponentInst (objSchRootArg<font color="#0000FF"> As </font>SchematicRoot)<font color="#0000FF"> As </font>SchComponent

<font color="#0000FF">   Dim </font>objLCompInst<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   Dim </font>intNbComp<font color="#0000FF"> As </font>Integer

<font color="#0000FF">   If </font>( Not ( objSchRootArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objLCompInst = objSchRootArg.GetComponents
<font color="#0000FF">      If </font>( Not ( objLCompInst Is Nothing ) )<font color="#0000FF"> Then</font>
         intNbComp = objLCompInst.Count
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If</font>

<font color="#0000FF">   Dim </font>intIndex<font color="#0000FF"> As </font>Integer
<font color="#0000FF">   Dim </font>objSchComp<font color="#0000FF"> As </font>SchComponent
<font color="#0000FF">   Dim </font>objPrd<font color="#0000FF"> As </font>Product
<font color="#0000FF">   Dim </font>strInstName<font color="#0000FF"> As </font>String
<font color="#0000FF">   Dim </font>intFound<font color="#0000FF"> As </font>Integer

<font color="#0000FF">   If </font>(Not ( objLCompInst Is Nothing ) )<font color="#0000FF"> Then</font>

      <font color="#008000">'------------------------------------------------------------------------</font>
      <font color="#008000">'  Loop through the members in the list and find s component that</font>
      <font color="#008000">'  has"delete" as part of its product instance name</font>
      <font color="#008000">'------------------------------------------------------------------------</font>

<font color="#0000FF">      For </font>intIndex = 1<font color="#0000FF"> To </font>intNbComp

        intFound = 0
        strInstName = ""

<font color="#0000FF">        Set </font>objSchComp = objLCompInst.Item (intIndex,"CATIASchComponent")

<font color="#0000FF">        If </font>( Not ( objSchComp Is Nothing ) )<font color="#0000FF"> Then</font>

<font color="#0000FF">           Set </font>objPrd = objSchRootArg.GetInterface ( _
             "CATIAProduct", objSchComp)

<font color="#0000FF">           If </font>( Not ( objPrd Is Nothing ) )<font color="#0000FF"> Then</font>
              strInstName = objPrd.Name
              intFound  = Instr (1, strInstName, "_Delete", 1)  
<font color="#0000FF">           End If </font>

<font color="#0000FF">           If </font>( intFound &gt; 0 )<font color="#0000FF"> Then</font>

<font color="#0000FF">              Set </font>FindComponentInst = objSchRootArg.GetInterface ( _
                "CATIASchComponent", objSchComp)

<font color="#0000FF">              Exit For  </font>
<font color="#0000FF">           End If          </font>

<font color="#0000FF">        End If </font><font color="#008000">'--- If ( Not ( objSchComp Is Nothing ) ...</font>

<font color="#0000FF">      Next</font>

<font color="#0000FF">   End If </font><font color="#008000">'--- If (Not ( objLCompInst Is Nothing ) ...</font>
<font color="#0000FF">End Function</font>



<font color="#008000">' -----------------------------------------------------------------------------</font>
<font color="#008000">' | Find a connector in a route that is not connected to another object.</font>
<font color="#008000">' | Input: objSchRoute:  the route object.</font>
<font color="#008000">' | Returns: the open connector</font>
<font color="#008000">' -----------------------------------------------------------------------------</font>
Private Function FindOpenConnector (objSchRootArg<font color="#0000FF"> As </font>SchematicRootArg, _
  objRCntblArg<font color="#0000FF"> As </font>SchAppConnectable)<font color="#0000FF"> As </font>SchAppConnector

<font color="#0000FF">   Dim </font>objLAppCntr<font color="#0000FF"> As </font>SchListOfObjects
<font color="#0000FF">   Dim </font>intNbCntr<font color="#0000FF"> As </font>Integer
<font color="#0000FF">   Dim </font>objLFilter<font color="#0000FF"> As </font>SchListOfBSTRs
<font color="#0000FF">   Set </font>objLFilter = Nothing

<font color="#0000FF">   If </font>( Not ( objRCntblArg Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">      Set </font>objLAppCntr = objRCntblArg.AppListConnectors (objLFilter)
<font color="#0000FF">      If </font>( Not ( objLAppCntr Is Nothing ) )<font color="#0000FF"> Then</font>
         intNbCntr = objLAppCntr.Count
<font color="#0000FF">      End If</font>
<font color="#0000FF">   End If</font>

<font color="#0000FF">   Dim </font>intIndex<font color="#0000FF"> As </font>Integer
<font color="#0000FF">   Dim </font>objAppCntr<font color="#0000FF"> As </font>SchAppConnector
<font color="#0000FF">   Dim </font>bIsConnected<font color="#0000FF"> As </font>Boolean

<font color="#0000FF">   If </font>(Not ( objLAppCntr Is Nothing ) And ( intNbCntr &gt; 0 ) And _
       Not ( objSchRootArg Is Nothing ) )<font color="#0000FF"> Then</font>

      <font color="#008000">'------------------------------------------------------------------------</font>
      <font color="#008000">'  Loop through the members in the list and find an unconnected connector</font>
      <font color="#008000">'------------------------------------------------------------------------</font>

<font color="#0000FF">      For </font>intIndex = 1<font color="#0000FF"> To </font>intNbCntr

<font color="#0000FF">        Set </font>objAppCntr = objLAppCntr.Item (intIndex,"CATIASchAppConnector")

<font color="#0000FF">        If </font>( Not ( objAppCntr Is Nothing ) )<font color="#0000FF"> Then</font>

           objAppCntr.AppIsCntrConnected bIsConnected

<font color="#0000FF">           If </font>( Not ( bIsConnected ) )Then

<font color="#0000FF">              Set </font>FindOpenConnector = objSchRootArg.GetInterface ( _
                "CATIASchAppConnector", objAppCntr)

<font color="#0000FF">              Exit For  </font>
<font color="#0000FF">           End If          </font>

<font color="#0000FF">        End If </font><font color="#008000">'--- If ( Not ( objAppCntr Is Nothing ) ...</font>

<font color="#0000FF">      Next</font>

<font color="#0000FF">   End If </font><font color="#008000">'--- If (Not ( objLAppCntr Is Nothing ) ...</font>
<font color="#0000FF">End Function</font>



</pre></body></html>
