<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>

<HEAD>
<TITLE>Creating Extrude with Symmetry Mesh Parts</TITLE>
<META HTTP-EQUIV="Content-Language" CONTENT="en-us">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META CONTENT="Microsoft FrontPage 6.0" NAME="GENERATOR">
<META CONTENT="FrontPage.Editor.Document" NAME="ProgId">
<link href="../CAAScrBase/caav5.css" type="text/css" rel="stylesheet">
<script language="JavaScript" src="../CAAScrJavaScript/submit.js"></SCRIPT>
</HEAD>

<BODY>

<TABLE WIDTH="100%" BORDER="0">
	<TR>
		<TD>
		<H2>Analysis Modeler</H2>
		</TD>
		<TD VALIGN="top" ALIGN="right">
		<H2><A NAME="Top"></A>Creating Extrude with Symmetry Mesh Parts</H2>
		</TD>
	</TR>
</TABLE>
<HR>
<!---------------------------------comment------------------------------------->
<TABLE WIDTH="100%" BORDER="0">
	<TR>
		<TD VALIGN="top" WIDTH="7%">
		<img height="32" src="../CAAScrBase/images/atarget.gif" width="32" border="0"></TD>
		<TD WIDTH="93%">
		<P><A NAME="Learn"></A>This use case shows how to create extrude with symmetry 
		mesh parts. </P>
		<P>This macro opens an Analysis document. The extrude with symmetry mesh 
		part can create a 2D mesh from 1D mesh and 3D mesh from 2D mesh. In this 
		macro 3D mesh is created from 2D mesh. Global specifications associated 
		with the mesh part are set.</P>
		<P>&nbsp;</P>
		<P ALIGN="center"><img src="images/ExtrWithSymmMesh.gif" border="2"></P>
		<P>&nbsp;</P>
		</TD>
	</TR>
	<TR>
		<TD VALIGN="top" WIDTH="7%">
		<img height="32" src="../CAAScrBase/images/ainfo.gif" width="32" border="0"></TD>
		<TD WIDTH="93%">
		<P><A NAME="How"></A>CAAAniMeshExtrudeSymm is launched in CATIA [<A HREF="#References">1</A>]. 
		No open document is needed.</P>
		<P><a href="CAAAniMeshExtrudeSymmSource.htm">CAAAniMeshExtrudeSymm.catvbs</A> 
		is located in the CAAScdAniUseCases module.
		<a href="macros/CAAAniMeshExtrudeSymm.catvbs">Execute macro</A> (Windows 
		only).</P>
		<P ALIGN="center">&nbsp;</P>
		</TD>
	</TR>
	<TR>
		<TD VALIGN="top" WIDTH="7%">
		<img height="32" src="../CAAScrBase/images/ascenari.gif" width="32" border="0"></TD>
		<TD WIDTH="93%">
		<P><A NAME="Step"></A>CAAAniMeshExtrudeSymm includes the following steps:</P>
		<OL>
			<LI><A HREF="#prolog">Prolog</A></LI>
			<LI><A HREF="#Reference">Extracting the List of Mesh Parts and Publications</A></LI>
			<LI><A HREF="#Navigate">Creating Mesh part and Assigning Values to its 
			Attributes</A></LI>
			<LI><A HREF="#Epilog">Epilog</A></LI>
		</OL>
		<H4><A NAME="prolog"></A>Prolog</H4>
		<TABLE CLASS="code">
			<TR>
				<TD>
				<PRE>...</PRE>
				<PRE><FONT COLOR="#008000">'----------------------------------------------------------- </FONT>
<FONT COLOR="#008000">'Optional: allows to find the sample wherever it's installed</FONT>

  sDocPath=CATIA.SystemService.Environ("CATDocView")

<FONT COLOR="#0000FF">    If </FONT>(Not CATIA.FileSystem.FolderExists(sDocPath))<FONT COLOR="#0000FF"> Then</FONT>
      Err.Raise 9999,,"No Doc Path Defined"
<FONT COLOR="#0000FF">    End If</FONT>
<FONT COLOR="#008000">'----------------------------------------------------------- </FONT></PRE>
				<PRE>
<FONT COLOR="#008000">'Open the Analysis document</FONT> 
sFilePath = CATIA.FileSystem.ConcatenatePaths(sDocPath, &quot;online\CAAScdAniUseCases\samples\Surface.CATAnalysis&quot;)
<FONT COLOR="#0000FF">Set</FONT> oAnalysisDocument = CATIA.Documents.Open(sFilePath)
...</PRE>
				</TD>
			</TR>
		</TABLE>
		<P>Open the Analysis document. The Analysis document is retrieved in the 
		documentation installation path, this path has already been stored in the
		<CODE>sDocPath</CODE> variable. In the collection of documents, two documents 
		can be retrieved; the Analysis document and the Part document. </P>
		<H4><A NAME="Reference"></A>Extracting the List of Mesh Parts and Publications</H4>
		<TABLE CLASS="code">
			<TR>
				<TD>
				<PRE>...</PRE>
				<PRE>
<FONT COLOR="#008000">'Retrieve the analysis Manager </FONT>
<FONT COLOR="#0000FF">Set </FONT>oAnalysisManagar = oAnalysisDocument.Analysis
<FONT COLOR="#0000FF">Set </FONT>oAnalysisSet = oAnalysisManagar.AnalysisSets

<FONT COLOR="#008000">'Retrieve the part document and product</FONT>
<FONT COLOR="#0000FF">Set </FONT>oAnalysisLinkedDocuments = oAnalysisManagar.LinkedDocuments
<FONT COLOR="#0000FF">Set </FONT>partDocument = oAnalysisLinkedDocuments.Item(1)
<FONT COLOR="#0000FF">Set </FONT>product = partDocument.Product
</PRE>
				<PRE>
<FONT COLOR="#008000">'Retrieve the published plane</FONT>
<FONT COLOR="#008000">'the mesh will be symmetric along this plane</FONT>
<FONT COLOR="#0000FF">Set </FONT>publications = product.Publications
<FONT COLOR="#0000FF">Set </FONT>pubPlane = publications.Item("SymmetryPlane")</PRE>
				<PRE>

<FONT COLOR="#008000">'Retrieve the analysis model</FONT>
<FONT COLOR="#0000FF">Set </FONT>oAnalysisModels = oAnalysisManagar.AnalysisModels
<FONT COLOR="#0000FF">Set </FONT>oAnalysisModel = oAnalysisModels.Item(1)

<FONT COLOR="#008000">&#39;Retrieve the mesh manager and list of mesh parts</FONT>
<FONT COLOR="#0000FF">Set </FONT>oAnalysisMeshManager = oAnalysisModel.MeshManager 
<FONT COLOR="#0000FF">Set </FONT>oAnalysisMeshParts = oAnalysisMeshManager.AnalysisMeshParts
<FONT COLOR="#0000FF">Set </FONT>surfMesh = oAnalysisMeshParts.Item("Surface Mesh.1")

<FONT COLOR="#008000">&#39;Create the reference of the surface mesh</FONT>
<FONT COLOR="#0000FF">Set </FONT>reference = oAnalysisManagar.CreateReferenceFromObject(surfMesh)
...</PRE>
				</TD>
			</TR>
		</TABLE>
		<P>According to the general
		<a href="../CAAScdAniTechArticles/CAAAniTocAnalysisDocument.htm">
		Analysis Document</A> structure, this macro uses some standard procedures 
		to navigate or retrieve the required objects. First, from the <B>Document</B>, 
		we find the <B>Analysis Manager Object</B>, the <B>Analysis Models</B> and 
		the <B>Mesh Manager Objects</B>. The extraction of pre-defined geometric 
		elements is done with the help of Reference interface. This is equivalent 
		to the selection of B-Rep elements inside the interactive application. In 
		this macro reference is created from the surface mesh part.</P>
		<H4><A NAME="Navigate"></A>Creating the Mesh Part and Assigning Values to 
		its Attributes.</H4>
		<TABLE CLASS="code">
			<TR>
				<TD>
				<PRE>...
<FONT COLOR="#008000">&#39;Add the extrude with translation mesh part to the list of mesh parts</FONT>
<FONT COLOR="#0000FF">Set </FONT>extrudeMesh = oAnalysisMeshParts.Add("MSHPartExtrSymmetry")

<FONT COLOR="#008000">&#39;Assign the surface mesh part as support</FONT>
extrudeMesh.AddSupportFromReference NOTHING, reference

<FONT COLOR="#008000">&#39;Set the global specifications</FONT>
extrudeMesh.SetGlobalSpecification "Condensation", 0
extrudeMesh.SetGlobalSpecification "Tolerance", "1.0 mm"</PRE>
				<PRE><FONT COLOR="#008000">&#39;Set the specification; specifying the plane of symmetry</FONT>
extrudeMesh.SetSpecificationFromPublication "Direction", product, pubPlane, 0

<FONT COLOR="#008000">&#39;Get the basic components and sub components</FONT>
<FONT COLOR="#0000FF">Set </FONT>basicComps = extrudeMesh.BasicComponents
<FONT COLOR="#0000FF">Set </FONT>subBasicComps = basicComps.Item(1).BasicComponents

<FONT COLOR="#008000">&#39;Retrieve each of the attributes by name and set their values</FONT>
<FONT COLOR="#0000FF">Set </FONT>subBasicComp1 = subBasicComps.Item("Type")
subBasicComp1.SetValue "", 0, 0, 0, "Geometric"

<FONT COLOR="#0000FF">Set </FONT>subBasicComp2 = subBasicComps.Item("NbNodes")
subBasicComp2.SetValue "", 0, 0, 0, 20

<FONT COLOR="#0000FF">Set </FONT>subBasicComp3 = subBasicComps.Item("Symmetric")
subBasicComp3.SetValue "", 0, 0, 0, 2

<FONT COLOR="#0000FF">Set </FONT>subBasicComp4 = subBasicComps.Item("Ratio")
subBasicComp4.SetValue "", 0, 0, 0, 10

<FONT COLOR="#008000">&#39;Update the mesh</FONT>
extrudeMesh.Update

...</PRE>
				<PRE></PRE>
				</TD>
			</TR>
		</TABLE>
		<H4><FONT COLOR="#000000"><SPAN STYLE="font-weight: 400">The extruded mesh 
		can be manipulated with the parameters like distribution type ( Uniform, 
		Arithmetic, Geometric) number of layers, symmetry and ratio. To set these 
		parameters we retrieve the list of basic components (BCs) from the mesh. 
		From the first element of the list we retrieve one more list of the BCs. 
		Then we retrieve each of the BC by its name and set the values.</SPAN></FONT></H4>
		<H4><A NAME="Epilog"></A>Epilog</H4>
		<TABLE CLASS="code">
			<TR>
				<TD>
				<PRE>...
End Sub
...</PRE>
				</TD>
			</TR>
		</TABLE>
		<P>To run the macro interactively CATDocView and ADL_ODT_SLASH 
		environment variables must be defined.</TD>
	</TR>
</TABLE>
<!---------------------------------comment------------------------------------->
<P ALIGN="center">
<img height="32" src="../CAAScrBase/images/aendtask.gif" width="64" border="0"></P>
<P ALIGN="right">[<A HREF="#Top">Top</A>]</P>
<HR>
<!---------------------------------comment------------------------------------->
<H4><A NAME="InShort"></A>In Short</H4>
<P>This use case has shown how to create extrude with symmetry mesh parts and how 
to assign values to its global specifications.</P>
<P ALIGN="right"><A HREF="#Top">Top</A>]</P>
<HR>
<!---------------------------------comment------------------------------------->
<H4><A NAME="References"></A>References</H4>
<TABLE WIDTH="100%" BORDER="0">
	<TR>
		<TD VALIGN="top" WIDTH="7%">[1]</TD>
		<TD WIDTH="93%">
		<a href="../CAAScdInfUseCases/CAAInfLauchMacro.htm">Replaying 
		a Macro</A></TD>
	</TR>
	<TR>
		<TD ALIGN="right" COLSPAN="2">[<A HREF="#Top">Top</A>]</TD>
	</TR>
</TABLE>
<HR>
<!---------------------------------comment------------------------------------->
<P><I>Copyright © 2001, Dassault Systèmes. All rights reserved.</I></P>

</BODY>

</HTML>
