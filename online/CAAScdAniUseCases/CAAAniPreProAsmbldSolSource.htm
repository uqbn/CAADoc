<html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>CAAAniPreProAsmbldSol.catvbs</title><link rel="stylesheet" type="text/css" href="../CAAScrBase/caav5.css"></head><body><pre>
<font color="#008000">' COPYRIGHT DASSAULT SYSTEMES 2000</font>

<font color="#008000">' ***********************************************************************</font>
<font color="#008000">'   Purpose: Creates Assembled Solution sets</font>
<font color="#008000">'            add one V4 imported solution to one of the assembled solution</font>
<font color="#008000">'            and one static case solution to another assembled solution</font>
<font color="#008000">'	     Update the solutions</font>
<font color="#008000">'   Assumptions: one solution case already exist in the document</font>
<font color="#008000">'   Author:       bmw</font>
<font color="#008000">'   Languages:    VBScript</font>
<font color="#008000">'   Locales:      English </font>
<font color="#008000">'   CATIA Level:  V5R16</font>
<font color="#008000">' ***********************************************************************</font>


<font color="#0000FF">Sub </font>CATMain()

<font color="#008000">' ----------------------------------------------------------- </font>
<font color="#008000">' Optional: allows to find the sample wherever it's installed</font>
sDocPath=CATIA.SystemService.Environ("CATDocView")
sSep=CATIA.SystemService.Environ("ADL_ODT_SLASH")

<font color="#0000FF">If </font>(Not CATIA.FileSystem.FolderExists(sDocPath))<font color="#0000FF"> Then</font>
Err.Raise 9999,,"No Doc Path Defined"
<font color="#0000FF">End If</font>
<font color="#008000">' ----------------------------------------------------------- </font>


<font color="#008000">' Open the CATAnalysis Document</font>
<font color="#0000FF">Set </font>analysisDocument1 = CATIA.Documents.Open(sDocPath & sSep & "online" & sSep & "CAAScdAniUseCases" & sSep & "samples" & sSep & "Assembled_Loads_Slutions.CATAnalysis")

<font color="#008000">'Retrieve the Analysis Manager from the analysis document</font>
<font color="#0000FF">Set </font>analysisManager1 = analysisDocument1.Analysis

<font color="#008000">'Retrieve the product document from the linked document</font>
<font color="#0000FF">Set </font>analysisLinkedDocuments1 = analysisManager1.LinkedDocuments
<font color="#0000FF">Set </font>productDocument1 = analysisLinkedDocuments1.Item(1)

<font color="#008000">'From product document retrieve products</font>
<font color="#0000FF">Set </font>product1 = productDocument1.Product
<font color="#0000FF">Set </font>products1 = product1.Products
<font color="#0000FF">Set </font>product2 = products1.Item("Analysis1.1")

<font color="#008000">'Retrieve the analysis models and the first model</font>
<font color="#0000FF">Set </font>analysisModels1 = analysisManager1.AnalysisModels
<font color="#0000FF">Set </font>analysisModel1 = analysisModels1.Item(1)


<font color="#008000">'Retrieve the analysis cases from analysis model</font>
<font color="#0000FF">Set </font>analysisCases1 = analysisModel1.AnalysisCases

<font color="#008000">'Retrieve the second object that is Solution Case.1 </font>
<font color="#008000">'from the list of analysis cases</font>
<font color="#0000FF">Set </font>analysisCase1 = analysisCases1.Item(2)

<font color="#008000">'Retrieve the analysis case</font>
<font color="#0000FF">Set </font>analysisSets1 = analysisCase1.AnalysisSets

<font color="#008000">'Add two Assembled solution sets</font>
<font color="#0000FF">Set </font>analysisSet1 = analysisSets1.Add("ElfAssembledSet", catAnalysisSetOut)
<font color="#0000FF">Set </font>analysisSet2 = analysisSets1.Add("ElfAssembledSet", catAnalysisSetOut)

<font color="#008000">'Retrieve the basic component from the analysis set</font>
<font color="#0000FF">Set </font>basicComponents1 = analysisSet1.BasicComponents
<font color="#0000FF">Set </font>basicComponent1 = basicComponents1.GetItem("ElfAssemblyPtr.1")

<font color="#008000">'Retrieve the basic component from the analysis set</font>
<font color="#0000FF">Set </font>basicComponents2 = analysisSet2.BasicComponents
<font color="#0000FF">Set </font>basicComponent2 = basicComponents2.GetItem("ElfAssemblyPtr.1")


<font color="#008000">'Search and select</font>
<font color="#0000FF">Set </font>selection1 = analysisDocument1.Selection
selection1.Search "Name=*DISP*,all"

<font color="#008000">'Retrieve the analysis manager object from the analysis document</font>
<font color="#0000FF">Set </font>documents1 = CATIA.Documents
<font color="#0000FF">Set </font>analysisDocument2 = documents1.Item("Analysis1.CATAnalysis")
<font color="#0000FF">Set </font>analysisManager2 = analysisDocument2.Analysis


<font color="#008000">'Go through the selections and find out the the analysis set</font>
<font color="#008000">'create a reference from the analysis set and add it to the basic component</font>
<font color="#0000FF">For </font>i =1<font color="#0000FF"> To </font>selection1.Count
<font color="#0000FF">          Set </font>element = selection1.Item(i)
           IF (element.Type = "AnalysisSet" ) Then 'DO NOTHING
<font color="#0000FF">              Set </font>Reference = analysisManager2.CreateReferenceFromObject(element.Value)
              basicComponent1.AddSupportFromProduct product2, Reference
         END IF
       
<font color="#0000FF">Next</font>

<font color="#008000">'Search and select</font>
selection1.Clear
selection1.Search "Name=*Static Case*,all"

<font color="#008000">'Remove the last static case, since this is at the same</font>
<font color="#008000">'level in the analysis assembly</font>
selection1.Remove2(selection1.Count)

<font color="#008000">'Go through the selections and find out the the analysis set</font>
<font color="#008000">'create a reference from the analysis set and add it to the basic component</font>
<font color="#0000FF">For </font>i =1<font color="#0000FF"> To </font>selection1.Count
<font color="#0000FF">          Set </font>element = selection1.Item(i)
           IF (element.Type = "AnalysisSet" ) Then 'DO NOTHING
<font color="#0000FF">               Set </font>Reference = analysisManager2.CreateReferenceFromObject(element.Value)
               basicComponent2.AddSupportFromProduct product2, Reference
         END IF
       
<font color="#0000FF">Next</font>

<font color="#008000">'update the two analysis sets</font>
analysisSet1.Update
analysisSet2.Update

<font color="#0000FF">End Sub</font>

</pre></body></html>
