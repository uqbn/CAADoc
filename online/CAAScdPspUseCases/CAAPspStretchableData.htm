<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="stylesheet" type="text/css" href="../CAAScrBase/caav5.css">
<title>Querying Stretchable Data</title>
</head>

<body>

<table border="0" width="100%">
  <tr>
    <td>
      <h2>Distributive Systems</h2>
    </td>
    <td align="right" valign="top">
      <h2><a name="Top"></a>Querying Stretchable Data</h2>
    </td>
  </tr>
</table>
<hr>
<!-- ------------------------------comment---------------------------- -->
<table border="0" width="100%">
  <tr>
    <td width="7%" valign="top"><img border="0" src="../CAAScrBase/images/atarget.gif" width="32" height="32"></td>
    <td width="93%">
      <p><a name="Learn"></a>This use case is intended to show you how to obtain
      data of a stretchable object using a macro.</p>
      <p>This macro opens the document CAAPsp3DEduIn.CATProduct. Using the root
      node of the document, it then finds a Stretchable object with a
      given instance name and to get Stretchable data.</p>
    </td>
  </tr>
  <tr>
    <td width="7%" valign="top"><img border="0" src="../CAAScrBase/images/ainfo.gif" width="32" height="32"></td>
    <td width="93%">
      <p><a name="How"></a>CAAPspStretchableData is launched in CATIA [<a href="#References">1</a>].
      No open document is needed.</p>
      <p><a href="CAAPspStretchableDataSource.htm">CAAPspStretchableData.CATScript</a>
      is located in the CAAScdPspUseCases module. <a href="macros/CAAPspStretchableData.CATScript">Execute
      macro</a> (windows only).</p>
    </td>
  </tr>
  <tr>
    <td width="7%" valign="top"><img border="0" src="../CAAScrBase/images/ascenari.gif" width="32" height="32"></td>
    <td width="93%">
      <p><a name="Step"></a>CAAPspStretchableData includes the following steps:</p>
      <ol>
        <li><a href="#Prolog">Prolog</a></li>
        <li><a href="#Get a PspStretchable object">Get a PspStretchable
          Object</a></li>
        <li><a href="#Get Definition Points">Get Definition Points</a></li>
        <li><a href="#Get bendable radii information">Get Bendable Radii
          Information</a></li>
      </ol>
      <h4><a name="Prolog"></a>Prolog</h4>
      <p>The macro first loads Distributive System document
      CAAPsp3DEduIn.CATProduct containing Equipment and Piping Design objects. </p>
      <p><i>Note</i>: To open a different document, modify the variable <i>sDocPath</i>
      to point to the document directory and <i>sDocFullPath</i> to point to
      full path name of the document.</p>
      <pre>    <font color="#008000">' ------------------------------------------------------------------------- </font>
    <font color="#008000">' Open the Distributive system document </font>
<font color="#0000FF">    Dim </font>objPspDoc<font color="#0000FF"> As </font>Document

    sDocFullPath = CATIA.FileSystem.ConcatenatePaths(sDocPath, _    
       &quot;\online\CAAScdPspUseCases\samples\CAAPsp3DEduIn.CATProduct&quot; )

<font color="#0000FF">    Set </font>objPspDoc = CATIA.Documents.Open(sDocFullPath)
    <font color="#008000">...</font></pre>
      <p>Next, the macro acquires the <i>PspWorkbench</i> object from the
      document. The <i>PspWorkbench</i> is the top node of the object instance
      tree in a Distributive System application document.</p>
      <pre>    <font color="#008000">...</font>
    <font color="#008000">' ---------------</font>
    <font color="#008000">' Find the top node of the Distributive System object tree - .  </font>
    
<font color="#0000FF">    If </font>( Not ( objPspDoc Is Nothing ) )<font color="#0000FF"> Then</font>
      <font color="#008000">'Set objPrdRoot = objPspDoc.Product </font>
<font color="#0000FF">      Set </font>objPrdRoot = CATIA.ActiveDocument.Product
<font color="#0000FF">      If </font>( Not ( objPrdRoot Is Nothing ) )<font color="#0000FF"> Then</font>
<font color="#0000FF">        Set </font>objPspWorkbench = objPrdRoot.GetTechnologicalObject (&quot;PspWorkbench&quot;)
<font color="#0000FF">      End If</font>
<font color="#0000FF">    End If</font>
    <font color="#008000">...</font></pre>
      <h4><a name="Get a PspStretchable object"></a>Get
      a PspStretchable Object</h4>
      <p>Using the <i>objPrdRoot</i> as the node, navigate through the
      Products collection to get a product whose instance name is
      P-074. Then use <i>GetInteraface</i> method of <i>objPspWorkbench</i>
      to get <i>PspStretchableData</i> object corresponding to the
      bendable pipe.</p>
      <pre>    <font color="#008000">...</font>
    <font color="#0000FF">Dim </font>objBendablePipe<font color="#0000FF"> As </font>Product
<font color="#0000FF">    Dim </font>objPspStretchableData  <font color="#0000FF"> As </font>PspStretchableData</pre>
      <pre>
<font color="#0000FF">    If </font>( Not ( objPspWorkbench Is Nothing ) And _
         Not ( objPrdRoot Is Nothing ) )<font color="#0000FF"> Then</font>    
<font color="#0000FF">      Set </font>objBendablePipe = objPrdRoot.Products.Item(&quot;P-074&quot;)                    
<font color="#0000FF">      Set </font>objPspStretchableData = objPspWorkbench.Ge<font color="#0000FF">tInt</font>erface(&quot;CATIAPspStretchableData&quot;, _
                                                objBendablePipe )                  

<font color="#0000FF">    End If </font><font color="#008000">'--- If ( Not ( objPspWorkbench Is Nothing ) and objPspApplication</font>
    <font color="#008000">...</font>
</pre>
      <h4><a name="Get Definition Points"></a>Get
      Definition Points</h4>
      <p>Macro calls <i>ListDefinitionPoints</i> method of <i>PspStretchableData</i>
      object (<i>objPspStretchableData</i>) to get a list of
      definition points. <i>objLDefPoints</i> is a collection object of
      the type <i>PspListOfDoubles </i>. Here <i>objLDefPoints</i>
      represents a list of X-Y-Z coordinates of the points such that there
      are doubles values per point.</p>
      <pre>      <font color="#008000">...</font>
      <font color="#0000FF">Set </font>objLDefPoints = objPspStretchableData.ListDefinitionPoints ( _       
                            objRelAxisPrd )      

      <font color="#008000">'-----------------------------------------</font>
      <font color="#008000">' Display information on Definition points</font>
      <font color="#008000">'-----------------------------------------</font>
<font color="#0000FF">      If </font>( Not ( objLDefPoints Is Nothing ) )<font color="#0000FF"> Then</font>
        iNbPts =  objLDefPoints.Count / 3
        strMessage_g = strMessage_g &amp; _
               &quot;Number of definition points =&quot; &amp;  iNbPts &amp; vbCr
<font color="#0000FF">        For </font>intIdx = 1<font color="#0000FF"> To </font>objLDefPoints.Count Step 3                   
          dbX = objLDefPoints.Item(<font color="#0000FF"> int</font>Idx )
          dbY = objLDefPoints.Item(<font color="#0000FF"> int</font>Idx + 1 )
          dbX = objLDefPoints.Item(<font color="#0000FF"> int</font>Idx + 2 )
  
          strMessage_g = strMessage_g &amp; &quot;Definition pt &quot; &amp;  vbCr
          strMessage_g = strMessage_g &amp; &quot;      X= &quot; &amp; dbX &amp; vbCr
          strMessage_g = strMessage_g &amp; &quot;      Y= &quot; &amp; dbY &amp; vbCr
          strMessage_g = strMessage_g &amp; &quot;      Z= &quot; &amp; dbZ &amp; vbCr
<font color="#0000FF">        Next </font>
<font color="#008000">      ...</font></pre>
      <h4><a name="Get bendable radii information"></a>Get
      Bendable Radii Information</h4>
      <p>Macros calls <i>ListBendData</i> property of <i>PspStretchableData</i>
      object to retrieve bendable radii information as <i>objLBendRadii</i>.</p>
      <pre>    <font color="#008000">...</font>
<font color="#0000FF">      Set </font>objLBendRadii = objPspStretchableData.ListBendData 

      <font color="#008000">'-----------------------------------------</font>
      <font color="#008000">' Display Bend radii information</font>
      <font color="#008000">'-----------------------------------------</font>
<font color="#0000FF">      If </font>( Not ( objLBendRadii Is Nothing ) )<font color="#0000FF"> Then        </font>
        iNbPts =  objLDefPoints.Count / 3
        strMessage_g = strMessage_g &amp; _
               &quot;Number of bend radii =&quot; &amp;  objLBendRadii.Count &amp; vbCr
<font color="#0000FF">        For </font>intIdx = 1<font color="#0000FF"> To </font>objLBendRadii.Count 
          dbRadius = objLBendRadii.Item(<font color="#0000FF"> int</font>Idx )
          strMessage_g = strMessage_g &amp; _
               &quot;   Bend radius = &quot; &amp; dbRadius &amp; vbCr
<font color="#0000FF">        Next</font>
<font color="#0000FF">      End If</font>
    <font color="#008000">...</font></pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!-- ------------------------------comment---------------------------- -->
<h4><a name="InShort"></a>In Short</h4>
<p>This use case shows how to how to obtain data of a stretchable object using a
macro.. A message logging the status of the critical steps is displayed at the
end of the use case.</p>
<p><img border="0" src="images/CAAPspStretchableData_01.jpg" width="773" height="503"></p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!-- ------------------------------comment---------------------------- -->
<h4><a name="References"></a>References</h4>
<table border="0" width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="CAAPspStretchableDataSource.htm">Replaying a macro</a></td>
  </tr>
  <tr>
    <td colspan="2" align="right" width="100%">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!-- ------------------------------comment---------------------------- -->
<p><i>Copyright © 2004, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
