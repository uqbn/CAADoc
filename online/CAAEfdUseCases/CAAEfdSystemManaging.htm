<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Managing an Electrical System</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>Equipment &amp; Systems Engineering</h1>
    </td>
    <td valign="top">
      <h2>Electrical System Functional Definition</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>Managing an Electrical System</h3>
      <em>How to create an electrical system in a Product document</em></td>
  </tr>
  <tr>
    <td class="use" colspan="2">Use Case</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td>
      <h3>Abstract</h3>
      <p>This article discusses the CAAEFDInterfaces use case. This use case
      explains how to create an electrical system feature that is bound to imbed
      Electrical Features.</p>
      <ul>
        <li><b><a href="#Learn">What You Will Learn With This Use Case</a></b></li>
        <li><b><a href="#UseCase">The CAAEFDInterfacesSample Use Case</a></b>
          <ul>
            <li><a href="#What">What Does CAAEFDInterfacesSample Do</a></li>
            <li><a href="#How">How to Launch CAAEFDInterfacesSample</a></li>
            <li><a href="#Where">Where to Find the CAAEFDInterfacesSample Code</a></li>
          </ul>
        </li>
        <li><b><a href="#Step">Step-by-Step</a></b></li>
        <li><b><a href="#InShort">In Short</a></b></li>
        <li><b><a href="#References">References</a></b></li>
      </ul>
    </td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>This use case is intended to help you make your first steps in programming
with CATIA EFD Interfaces. Its main intent is to allow you to create an
electrical system in a document.Before creating this system, you will have to
navigate through the feature model of CATIA V5 to find the objects that will
enable you to create this system (also called a EfdSystem) under the document.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="UseCase"></a>The CAAEFDInterfaces Use Case</h3>
<p>CAAEFDInterfaces is a use case of the CAAElecFunctionalItf.edu framework that
illustrates ElectFunctionalItf framework capabilities.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="What"></a>What Does CAAEFDInterfacesSample Do</h4>
<table>
  <caption>Fig. 1: The Document Created by the Use Case</caption>
  <tr>
    <td align="center"><img border="0" src="images/EfdSystem.jpg" width="868" height="603"></td>
  </tr>
</table>
<p>This picture represents a Product document created by the use case. The
program creates an EfdSystem. The system contains two equipments, under each
equipment one connector, under each connector three contact points, under the
system you may also find two signals: a power signal and a ground signal, each
signal has two extremities.</p>
<p>The goal of CAAEFDInterfaces use case is to show how to create an electrical
system and it’s components, which is the first common step before creating the
entire electrical system. We enrich the sample code
CAAEFDInterfacesSample.cpp(.h) and illustrates some backbone concepts thats are
shared by all electrical applications.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="How"></a>How to Launch CAAEFDInterfacesSample</h4>
<p>To launch CAAEFDInterfacesSample, you will need to set up the build time
environment, then compile CAAEFDInterfacesSample along with its prerequisites,
set up the run time environment, and then execute CAAEfdElecSystem with the name
you want to generate as argument&nbsp; [<a href="#References">1</a>].</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Where"></a>Where to Find the CAAEFDInterfacesSample Code</h4>
<p>The CAAEFDInterfacesSample sample is made of a single class named
CAAEFDInterfacesSample located in the CAAEfdElecSystem.m module of the
CAAElecFunctionalItf.edu framework:</p>
<table>
  <tr>
    <td>Windows</td>
    <td><code>InstallRootDirectory\CAAElecFunctionalItf.edu\CAAEFDInterfaces.m\</code></td>
  </tr>
  <tr>
    <td>Unix</td>
    <td><code>InstallRootDirectory/CAAElecFunctionalItf.edu/CAAEFDInterfaces.m/</code></td>
  </tr>
</table>
<p>where <code>InstallRootDirectory</code> is the directory where the CAA CD-ROM
is installed.</p>
<p>This sample deals with the following classes:</p>
<table>
  <tr>
    <td><i>CATDocument</i></td>
    <td>Class for the document base class</td>
  </tr>
  <tr>
    <td><i>CATIEfdFactory</i></td>
    <td>Class for the creation of electrical objects</td>
  </tr>
  <tr>
    <td><i>CATIEfdSystem</i></td>
    <td>Class for the electrical system</td>
  </tr>
  <tr>
    <td><i>CATIEfdEquipment</i></td>
    <td>Class for the electrical equipment</td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h3><a name="Step"></a>Step-by-Step</h3>
<p>We will now first comment the EfdSystem and it’s components creation by
looking at the code of the CAAEFDInterfacesSample. There are eight logical steps
in CAAEFDInterfacesSample:</p>
<table width="100%">
  <tr>
    <td><b>#</b></td>
    <td><b>Step</b></td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step1">1</a></td>
    <td valign="top">Create a Product document and retrieve it's root container</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step2">2</a></td>
    <td valign="top">Create an electrical system</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step3">3</a></td>
    <td valign="top">Create two electrical Equipments under the System</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step4">4</a></td>
    <td valign="top">Create electrical connectors under the Equipments</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step5">5</a></td>
    <td valign="top">Creates three contact points for each connector</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step6">6</a></td>
    <td valign="top">Creation of two different Signals a power Signal and a
      Ground Signal under the system</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step7">7</a></td>
    <td valign="top">Creation of signal extremities on the Power signal</td>
  </tr>
  <tr>
    <td valign="top"><a href="#Step8">8</a></td>
    <td valign="top">Managing Equipment attributes</td>
  </tr>
</table>
<p>The electrical system is displayed when the CAAEfdInterfacesSample
application is launched. The system creation and display is performed in the <i>Electrical
Factory</i> constructor that calls the <code>CreateEfdSystem</code> method. This
is described below.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step1"></a>Creating a Product Document and Retrieving It's Root
Container</h5>
<p>We need a <i>CATInit</i> interface pointer onto the Document feature to be
able to get the current Root Container.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
HRESULT RC = S_OK;
CATDocument *pDoc = NULL;
RC = <b>CATDocumentServices::New</b>(&quot;Product&quot;, pDoc);
...
<b>CATInit</b> *piInitDoc =NULL;
RC = pDoc-&gt;<b>QueryInterface</b>(IID_CATInit, (void**) &amp;piInitDoc);
...
CATBaseUnknown *pCont = piInitDoc-&gt;<b>GetRootContainer</b>(CATIContainer::ClassName());
...</pre>
    </td>
  </tr>
</table>
<p>We first create a Product document, retrieve a pointer to <i>CATInit</i> onto
this document, and retrieve from this pointer to <i>CATInit</i> a pointer to the
document's root container.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step2"></a>Creating an Electrical System</h5>
<p>We need a <i>CATIEfdFactory</i> interface pointer onto the root container to
create the electrical system.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
<b>CATIEfdFactory</b> *piEFDFactory = NULL;
RC = pCont-&gt;<b>QueryInterface</b>(CATIEfdFactory::ClassId(), (void**)&amp; piEFDFactory);
...
CATIEfdSystem *piSystem = NULL;
wchar_t* systemId =L&quot;EfdSystem&quot;;
RC =piEFDFactory-&gt;<b>CreateEfdSystem</b>(systemId, &amp;piSystem);
...</pre>
    </td>
  </tr>
</table>
<p>We get the factory pointer from the root container, and then we create the
electrical system thanks to the <code>CreateEfdSystem</code> method of <i>CATIEfdFactory</i>.
The <code>systemId</code> character string is the electrical system name that
you can set to you own value.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h5><a name="Step3"></a>Creating un Electrical Equipment under the system</h5>
<p>We need a <i>CATIEfdEquipment</i> interface pointer to be able to create the
electrical equipment under the system.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIEfdEquipment* piEquipment1 = NULL;
wchar_t* eqt1Id =L&quot;EfdEqt1&quot;;
RC =piSystem-&gt;<b>AddEfdEquipment</b>(eqt1Id, &amp;piEquipment1);
...</pre>
    </td>
  </tr>
</table>
<p>We create the electrical equipment under the system</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h5><a name="Step4"></a>Create electrical connectors under the Equipments</h5>
<p>We need a <i>CATIEfdConnector</i> interface pointer to be able to create the
electrical Connector under the equipment.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIEfdConnector* piConnector1 = NULL;
wchar_t* connector1Id =L&quot;Efdcon1&quot;;
wchar_t* conNumber1Id =L&quot;EfdconNum1&quot;;
RC =piEquipment1-&gt;<b>AddEfdConnector</b>(connector1Id,conNumber1Id, &amp;piConnector1);
...</pre>
    </td>
  </tr>
</table>
<p>We create the electrical connector under the equipment.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step5"></a>Creates three contact points for each connector</h5>
<p>We need a <i>CATIEfdContactPoint</i> interface pointer to be able to create
the electrical ContactPoint under the connectors.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIEfdContactPoint* piContactPt1 = NULL;
CATIEfdContactPoint* piContactPt2 = NULL;
CATIEfdContactPoint* piContactPt3 = NULL;

RC =piConnector1-&gt;<b>AddContactPoint</b>(conPt1Id,conPtNum1Id, &amp;piContactPt1);
RC =piConnector1-&gt;<b>AddContactPoint</b>(conPt2Id,conPtNum2Id, &amp;piContactPt2);
RC =piConnector1-&gt;<b>AddContactPoint</b>(conPt3Id,conPtNum3Id, &amp;piContactPt3);
...</pre>
    </td>
  </tr>
</table>
<p>We create the electrical contact points under the connectors</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step6"></a>Creation of two different Signals a power Signal and a
Ground Signal under the system</h5>
<p>We need a <i>CATIEfdSignal</i> interface pointer to be able to create the
electrical signals under the system..</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIEfdSignal* piSignalG = NULL;
CATIEfdSignal* piSignalP = NULL;
wchar_t* groundSignalId =L&quot;GroundSignal&quot;;
wchar_t* groundSignalNum =L&quot;GroundSignalNum&quot;;

wchar_t* powerSignalId =L&quot;PowerSignal&quot;;
wchar_t* powerSignalNum =L&quot;PowerSignalNum&quot;;

RC =piSystem-&gt;<b>AddSignal</b>(groundSignalId,groundSignalNum, &amp;piSignalG);
...
RC =piSystem-&gt;AddSignal(powerSignalId,powerSignalNum, &amp;piSignalP);
...</pre>
    </td>
  </tr>
</table>
<p>We create the electrical signals points under the system</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step7"></a>Creation of signal extremities on the Power signal</h5>
<p>We need a <i>CATIEfdSignalExtremity</i> interface pointer to be able to
create the electrical signal extremity under the equipment or under the
connector</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIEfdSignalExtremity* piExtremityP1 =NULL;
wchar_t* ExtremityId1 =L&quot;PowerExt1&quot;;
RC =piSignalP-&gt;<b>AddExtremity</b>(piEquipment1,ExtremityId1, &amp;piExtremityP1);
...
CATIEfdSignalExtremity* piExtremityP3 =NULL;
wchar_t* ExtremityId3 =L&quot;PowerExt3&quot;;
RC =piSignalG-&gt;<b>AddExtremity</b>(piConnector1,ExtremityId3, &amp;piExtremityP3);
...</pre>
    </td>
  </tr>
</table>
<p>We create the electrical signal extremities points under the equipment or
under the connector.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h5><a name="Step8"></a>Managing Equipment attributes</h5>
<p>We need a <i>CATIElecAttrAcces</i> interface pointer to be able to manage the
electrical attributes.</p>
<table class="code">
  <tr>
    <td>
      <pre>...
CATIElecAttrAccess* piElecAttrAccess = NULL;
RC = piEquipment1-&gt;<b>QueryInterface</b>(CATIElecAttrAccess::ClassId(), (void**)&amp; piElecAttrAccess);
...
CATUnicodeString pRefDesName = &quot;Power Supply&quot;;
RC = piElecAttrAccess -&gt; <b>Set</b>(&quot;Elec_Ref_Des&quot;, pRefDesName);
...</pre>
    </td>
  </tr>
</table>
<p>We have changed Equipment's name in &quot;Power Supply&quot;.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>This sample case has demonstrated the way to create an electrical system in a
document. We illustrate how some management interfaces on the system feature can
be used like <i>CATIEfdEquipment</i>, <i>CATIEfdConnector</i>, <i>CATIEfdSignal</i>.
We also illustrate the way to value the feature attributes in the list of its
attributes using <i>CATIElecAttrAccess</i>.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->

<h3><a name="References"></a>References</h3>
<table width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="../CAADocUseCases/CAADocRunSample.htm">Building
      and Launching a CAA V5 Use Case</a></td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [Sep 2000]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2000, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
