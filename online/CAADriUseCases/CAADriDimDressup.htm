<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Editing Dimension Dress-Up</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>Mechanical Design</h1>
    </td>
    <td valign="top">
      <h2>Drafting</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>Editing Dimension Dress-Up</h3>
      <em>How to use dimension interfaces</em></td>
  </tr>
  <tr>
    <td class="use" colspan="2">Use Case</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td>
      <h3>Abstract</h3>
      <p>This article discusses the CAADrwDimDressupCmd.cpp use case. This use
      case explains how to edit a dimension dress-up.</p>
      <ul>
        <li><a href="#Learn"><strong>What You Will Learn With This Use Case</strong></a>
        <li><a href="#IDM and CATI"><strong>The Main Dimension Interfaces</strong></a>
        <li><a href="#UseCase"><strong>The CAADrwDimDressupCmd Use Case</strong></a>
          <ul>
            <li><a href="#What">What Does CAADrwDimDressupCmd Do</a>
            <li><a href="#How">How to Launch CAADrwDimDressupCmd</a></li>
            <li><a href="#Where">Where to Find the CAADrwDimDressupCmd Code</a></li>
          </ul>
        </li>
        <li><a href="#Step"><strong>Step-by-Step</strong></a></li>
        <li><a href="#InShort"><strong>In Short</strong></a></li>
        <li><a href="#References"><strong>References</strong></a></li>
      </ul>
    </td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>In this use case you will learn how to modify the dimension dress-up
parameters.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="IDM and CATI"></a>The Main Dimension Interfaces</h3>
<table>
  <caption>Fig. 1: The Dimension Interfaces UML Diagram</caption>
  <tr>
    <td><img border="0" src="images/CAADrwDimDressup2.jpg" width="490" height="535"></td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="UseCase"></a>The CAADrwDimDressupCmd Use Case</h3>
<p>CAADrwDimDressupCmd is a use case of the CAADraftingInterfaces.edu framework
that illustrates DraftingInterfaces framework capabilities.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h4><a name="What"></a>What Does CAADrwDimDressupCmd Do</h4>
<p>This sample waits for a dimension selection and modifies the dress-up as
follows:</p>
<table width="100%">
  <caption>Fig. 2: The Dimension After and Before Dress-Up</caption>
  <tr>
    <td><img border="0" src="images/CAADrwDimDressup1.jpg" width="332" height="287"></td>
    <td valign="top">
      <dl>
        <dt><b>Texts</b>
        <dd>Prefix = “L=“, main text upper = “Up” main text lower = “Down”
        <dt><b>Dual value</b>
        <dd>On, in inch, side by side
        <dt><b>Tolerance</b>
        <dd>main and dual, alpha-numerical
        <dt><b>Dimension Line</b>
        <dd>Thickness = 0.2, color = blue
        <dt><b>Extension Line</b>
        <dd>Funnel, thickness = 0.2, color = yellow, over-run = 4, blanking = 4
        <dt><b>Symbol</b>
        <dd>Circled cross, thickness = 0.2 color = green
        <dt><b>Font</b>
        <dd>5mm, color = red
        <dt><b>Frame :</b>
        <dd>Rectangle
      </dl>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="How"></a>How to Launch CAADrwDimDressupCmd</h4>
<p>To launch CAADrwDimDressupCmd, you will need to set up the build time
environment, then compile CAADrwDimDressupCmd and CAADrwAddin along with its
prerequisites, set up the run time environment, and then include the command in
a workbench [<a href="#References">1</a>].</p>
<ol>
  <li>Launch CATIA session.</li>
  <li>Right-click on Drafting workshop to activate CAAUseCaseCommands toolbar.</li>
  <li>Launch the DimDressup use case command, and select the annotation.</li>
</ol>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Where"></a>Where to Find the CAADrwDimDressupCmd Code</h4>
<p>The CAADrwDimDressupCmduse case is made of two source files named
CAADrwDimDressupCmd.h and CAADrwDimDressupCmd.cpp located in the
CAADrwDimDressup.m module of the CAADraftingInterfaces.edu framework:</p>
<table>
  <tr>
    <td>Windows</td>
    <td><code>InstallRootDirectory\CAADraftingInterfaces.edu\CAADrwDimDressup.m\</code></td>
  </tr>
  <tr>
    <td>Unix</td>
    <td><code>InstallRootDirectory/CAADraftingInterfaces.edu/CAADrwDimDressup.m/</code></td>
  </tr>
</table>
<p>where <code>InstallRootDirectory</code> is the directory where the CAA CD-ROM
is installed.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="Step"></a>Step-by-Step</h3>
<p>There are 11 steps in CAADrwDimDressupCmd:</p>
<ol>
  <li><a href="#Step1">Building the State Chart and Creating the Appropriate
    Selection Agent</a></li>
  <li><a href="#Step2">Retrieving the Selection</a></li>
  <li><a href="#Step3">Editing the Text</a></li>
  <li><a href="#Step4">Setting the Dual Value</a></li>
  <li><a href="#Step5">Adding the Tolerance</a></li>
  <li><a href="#Step6">Editing the Main Value</a></li>
  <li><a href="#Step7">Editing the Dual Value</a></li>
  <li><a href="#Step8">Editing the Dimension Line</a></li>
  <li><a href="#Step9">Editing the Extension Line</a></li>
  <li><a href="#Step10">Setting the Funnel</a></li>
  <li><a href="#Step11">Building the Dimension and Exit</a></li>
</ol>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h4><a name="Step1"></a>Building the State Chart and Creating the Appropriate
Selection Agent</h4>
<table class="code">
  <tr>
    <td>
      <pre>void CAADrwDimDressupCmd::BuildGraph()
{  
   // Creation of the acquisition agent
   _pObjectAgent = new CATPathElementAgent(&quot;_ObjectAgent A&quot;);
   _pObjectAgent -&gt;SetBehavior( CATDlgEngWithPrevaluation | 
                                CATDlgEngMultiAcquisition | 
                                CATDlgEngWithCSO); 

   // We want to select dimensions
   _pObjectAgent -&gt;AddElementType(&quot;<b>CATIDrwDimDimension</b>&quot;);
   AddCSOClient(_pObjectAgent);
   
   //  States definition
   CATDialogState* state1 = GetInitialState(&quot;Sel dimension&quot;);
   state1-&gt;AddDialogAgent(_pObjectAgent);
   
   // Transition definition
   AddTransition(state1, NULL, IsOutputSetCondition(_pObjectAgent),
                 Action((ActionMethod)&amp;CAADrwDimDressupCmd::DressUp, NULL, NULL));
}</pre>
    </td>
  </tr>
</table>
<p>In this section we create a <i>CATPathElementAgent</i> and set the
corresponding element type to <i>CATIDrwDimDimension</i>. So only dimensions
could be selected.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step2"></a>Retrieving the Selection</h4>
<table class="code">
  <tr>
    <td>
      <pre>boolean CAADrwDimDressupCmd::DressUp(void *)
{ 
   // We get the Selected set of objects
   CATSO* pObjSO = _pObjectAgent-&gt;GetListOfValues(); 
   CATPathElement *pElemPath = NULL;
   
   if (pObjSO)  
   {

      // There is a selection, we will scan it from the beginning
      pObjSO-&gt;InitElementList();
      while (NULL != (pElemPath = (CATPathElement*)pObjSO-&gt;NextElement()))
      {
         // Make sure the element is dimension
         <b>CATIDrwDimDimension</b> *piDim = (CATIDrwDimDimension *)pElemPath-&gt;FindElement(IID_CATIDrwDimDimension);
         
         if (NULL != piDim)
         {</pre>
      <pre>...</pre>
    </td>
  </tr>
</table>
<p>The acquisition agent did put the selected dimension into the CSO. So we get
the set of object and loop on it.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step3"></a>Editing the Text</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // Text properties
            <b>CATIDrwTextProperties</b>_var spTextProperties = piDim;
            spTextProperties-&gt;<b>SetFontSize</b>(5);
            spTextProperties-&gt;<b>SetColor</b>(255, 0, 0, 255);
            spTextProperties-&gt;<b>SetFrameType</b>(CATDrwRectangle);</pre>
      <pre>...</pre>
    </td>
  </tr>
</table>
<p>The dimension implements the <i>CATIDrwTextProperties</i> interface. Using
this interface, we modify the font size, color and the text frame format.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step4"></a>Setting the Dual Value</h4>
<table class="code">
  <tr>
    <td>
      <pre>...            
            // Dual value
            piDim-&gt;<b>ShowDualValue</b>();
...</pre>
    </td>
  </tr>
</table>
<p>The dual value is set using the <i>CATIDrwDimDimension</i> interface.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step5"></a>Adding the Tolerance</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // Tolerance
            piDim-&gt;<b>AddTolerance</b>(&quot;h7&quot;,&quot;g6&quot;,1,1);
...</pre>
    </td>
  </tr>
</table>
<p>The tolerance is set using the <i>CATIDrwDimDimension</i> interface.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step6"></a>Editing the Main Value</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // We get the dim value
            <b>CATIDrwDimValue</b>_var spDimValue = piDim-&gt;GetValue();
            spDimValue-&gt;<b>SetDualValueDisplay</b>(CATDrwDimDualSideBySide);
            
            // The main value
            <b>CATIDrwDimValueComponent</b>_var spMainValue = spDimValue-&gt;<b>GetFaceComponent</b>();
            <b>CATIDrwDimText</b>_var spMainText = spMainValue-&gt;<b>GetText</b>();
            spMainText-&gt;<b>SetPSText</b>(&quot;L=&quot;, &quot;&quot;);
            spMainText-&gt;<b>SetBAULText</b>(&quot;&quot;, &quot;&quot;, &quot;Up&quot;, &quot;Down&quot;);
...</pre>
    </td>
  </tr>
</table>
<p>The <i>CATGraphicAttributeSet</i> will be used to convert RGBA data from a
4-integer representation to a 1-integer representation. First we get the
dimension value. This feature manages the main and dual value representations.
Then we get the main value from the dimension value. Using <code>SetPSText</code>
we set:</p>
<ul>
  <li>The prefix</li>
  <li>The suffix.</li>
</ul>
<p>Using <code>SetBAULText</code> we set:</p>
<ul>
  <li>The text before</li>
  <li>The text after</li>
  <li>The text upper</li>
  <li>The text lower.</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step7"></a>Editing the Dual Value</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // The dual value
            CATIDrwDimValueComponent_var spDualValue = spDimValue-&gt;<b>GetDualComponent</b>();
            <b>CATIDrwDimFormat</b>_var spDualFormat = spDualValue-&gt;<b>GetFormat</b>();
            spDualFormat-&gt;<b>SetUnit</b>(CATDrwDimUnitINCH);
...</pre>
    </td>
  </tr>
</table>
<p>We get the dual value from the dimension value and modify the format putting
the unit to &quot;INCH&quot;.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step8"></a>Editing the Dimension Line</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // Useful to convert RGBA(4-int)&lt;-&gt;RGBA(1-int)
            <b>CATGraphicAttributeSet</b> attrSet;            </pre>
      <pre>            // DimensionLine
            <b>CATIDrwDimDimensionLine</b>_var spDimLine = piDim-&gt;<b>GetDimensionLine</b>();
            attrSet.SetColorRGBA(255,0,0,255);
            spDimLine-&gt;<b>SetGraphicParameters</b>(attrSet.GetColorRGBA(), 0.2);
            spDimLine-&gt;<b>SetSymbol</b>(CATDrwDimSymbCircledCross,CATDrwDimSymbCircledCross);
            attrSet.<b>SetColorRGBA</b>(0,255,0,255);
            spDimLine-&gt;<b>SetSymbolsGraphicParameters</b>(attrSet.GetColorRGBA(), 0.1, 
                                                   attrSet.GetColorRGBA(), 0.1);
...</pre>
    </td>
  </tr>
</table>
<p>We get the dimension line interface from the dimension. Using the <i>CATIDrwDimDimensionLine</i>
interface we modify :</p>
<ul>
  <li>The color and thickness (using the <i>CATGraphicAttributeSet</i>)</li>
  <li>Both symbols</li>
  <li>The symbol graphic parameters.</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step9"></a>Editing the Extension Line</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // ExtentionLine
            <b>CATIDrwDimExtensionLine</b>_var spExtLine = piDim-&gt;<b>GetExtensionLine</b>();
            attrSet.SetColorRGBA(0,255,255,255);
            spExtLine-&gt;<b>SetGraphicParameters</b>(attrSet.GetColorRGBA(), 0.2);
            spExtLine-&gt;<b>SetGap</b>(4);
            spExtLine-&gt;<b>SetOverRun</b>(4);
...</pre>
    </td>
  </tr>
</table>
<p>We get the extension line interface from the dimension.<br>
Using the <i>CATIDrwDimExtensionLine</i> interface we modify :</p>
<ul>
  <li>The color and thickness (using the <i>CATGraphicAttributeSet</i>)</li>
  <li>The gap and over-run.</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step10"></a>Setting the Funnel</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // Funnel
            <b>CATIDrwDimExtensionLineLinear</b>_var spLinearExtLine = spExtLine;
            spLinearExtLine-&gt;<b>SetFunnel</b>(1);
...</pre>
    </td>
  </tr>
</table>
<p>This is a distance dimension. So the extension line implements <i>CATIDrwDimExtensionLine</i>.
<code>CATIDrwDimExtensionLineLinear::SetFunnel(1)</code> sets the funnel at
true.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Step11"></a>Building the Dimension and Exit</h4>
<table class="code">
  <tr>
    <td>
      <pre>...
            // Let's update the dimension after spec modifications
            <b>CATISpecObject</b>_var spDimSpec = piDim;
            spDimSpec-&gt;<b>Update</b>();

            piDim-&gt;Release();
         }
      }
      
      _pObjectAgent -&gt; InitializeAcquisition();
      return TRUE;
   }
   return FALSE;
}</pre>
    </td>
  </tr>
</table>
<p>We have to update the dimension to take into account the dress-up
modifications.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>This use case shows how to edit a dimension dress-up. The main dimension
interfaces are <i>CATIDrwDimDimension, CATIDrwTextProperties, CATIDrwDimValue,
CATIDrwDimValueComponent, CATIDrwDimText, CATIDrwDimFormat,
CATIDrwDimDimensionLine, CATIDrwDimExtensionLine, CATIDrwDimExtensionLineLinear</i>
and <i>CATISpecObject</i>.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="References"></a>References</h3>
<table width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="../CAADocUseCases/CAADocRunSample.htm">Building
      and Lauching CAA V5 Samples</a></td>
  </tr>
  <tr>
    <td valign="top">[2]</td>
    <td><a href="../CAADegUseCases/CAADegSampleGraph.htm"><font size="2">Implementing
      the Statechart Diagram</font></a></td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [Jan 2000]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2000, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
