<html>
<head>
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Class System.CATUnicodeString</title>
</head>
<body bgcolor=white>

<dl>
 <h2>Constructor Index</h2> <br>
 <dt> o 
    <a href="#CATUnicodeString()"><b>CATUnicodeString</b></a>
<dd>  Constructs an empty Unicode string.
 <dt> o 
    <a href="#CATUnicodeString(CATUnicodeString&)"><b>CATUnicodeString</b></a>
<dd>   Copy constructor.
 <dt> o 
    <a href="#CATUnicodeString(char* const)"><b>CATUnicodeString</b></a>
<dd>  Constructs a CATUnicodeString instance from a char *.
 <dt> o 
    <a href="#CATUnicodeString(char* const,size_t)"><b>CATUnicodeString</b></a>
<dd>  Constructs a CATUnicodeString instance from a char * and a 
 number of characters.
 <dt> o 
    <a href="#CATUnicodeString(CATUnicodeChar&,size_t)"><b>CATUnicodeString</b></a>
<dd>  Constructs a CATUnicodeString instance by repeating a given 
 character.
 <dt> o 
    <a href="#CATUnicodeString(CATUnicodeString&,size_t)"><b>CATUnicodeString</b></a>
<dd>  Constructs a CATUnicodeString instance by repeating a given 
 character string.
</dl>

 <h2>Constructors</h2> <br>
<a name="CATUnicodeString"><a name="CATUnicodeString()"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> <td><tt></tt>)</table></dt>
<dl>
  <dd>
 Constructs an empty Unicode string.

</dl>
<a name="CATUnicodeString"><a name="CATUnicodeString(CATUnicodeString&)"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> const <font color="blue"><u>CATUnicodeString</u></font>& <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
  Copy constructor. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>    The Unicode string to copy 
</dd>
</dl>
</dl>
</dl>
<a name="CATUnicodeString"><a name="CATUnicodeString(char* const)"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> const char* const <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
 Constructs a CATUnicodeString instance from a char *.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The pointer to the character string
</dd>
</dl>
</dl>
</dl>
<a name="CATUnicodeString"><a name="CATUnicodeString(char* const,size_t)"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> const char* const <td><tt>iString</tt>,<tr><td></td><td>size_t <td><tt>iLength</tt>)</table></dt>
<dl>
  <dd>
 Constructs a CATUnicodeString instance from a char * and a 
 number of characters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The pointer to the character string
 </dd>
    <dt><tt> iLength</tt>
   <dd>   The number of characters to be taken into account, starting at 
   the first character.
   <br><b>Legal values</b>: Must be less than or equal to the total 
   number of characters contained in <tt>iString</tt> 
</dd>
</dl>
</dl>
</dl>
<a name="CATUnicodeString"><a name="CATUnicodeString(CATUnicodeChar&,size_t)"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> const <font color="blue"><u>CATUnicodeChar</u></font>& <td><tt>iChar</tt>,<tr><td></td><td>size_t <td><tt>iRepeatCount</tt>)</table></dt>
<dl>
  <dd>
 Constructs a CATUnicodeString instance by repeating a given 
 character.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>   The character to be repeated
 </dd>
    <dt><tt> iRepeatCount</tt>
   <dd>   The number of times <tt>iChar</tt> is to be repeated
</dd>
</dl>
</dl>
</dl>
<a name="CATUnicodeString"><a name="CATUnicodeString(CATUnicodeString&,size_t)"> <dt> o <b>CATUnicodeString</b>

<dt>  <table><tr><td>  public   <b>CATUnicodeString</b>(<td> const <font color="blue"><u>CATUnicodeString</u></font>& <td><tt>iString</tt>,<tr><td></td><td>size_t <td><tt>iRepeatCount</tt>)</table></dt>
<dl>
  <dd>
 Constructs a CATUnicodeString instance by repeating a given 
 character string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The character string to be repeated
 </dd>
    <dt><tt> iRepeatCount</tt>
   <dd>   The number of times <tt>iString</tt> is to be repeated
</dd>
</dl>
</dl>
</dl>

</body>
</html>
