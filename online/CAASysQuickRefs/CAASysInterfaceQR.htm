<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Interface Quick Reference</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>3D PLM Enterprise Architecture</h1>
    </td>
    <td valign="top">
      <h2>Middleware Abstraction - Object Modeler</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>Interface Quick Reference</h3>
      <em>A step-by-step to create interfaces</em></td>
  </tr>
  <tr>
    <td class="quick" colspan="2">Quick Reference</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td>
      <h3>Abstract</h3>
      <p>This article gives you a step-by-step to create an interface. It
      includes the following sections:
      <ul>
        <li><a href="#IntName"><strong>Choosing the Interface Name</strong></a></li>
        <li><a href="#HeaderFile"><strong>Creating the Interface Header File</strong></a></li>
        <li><a href="#SourceFile"><strong>Creating the Interface Source File</strong></a></li>
        <li><a href="#TIEFile"><strong>Creating the Interface TIE File</strong></a></li>
        <li><a href="#InShort"><strong>In Short</strong></a></li>
        <li><a href="#References"><strong>References</strong></a></li>
      </ul>
    </td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<h3><a name="IntName"></a>Choosing the Interface Name</h3>
Choose a significant name beginning with the trigram of your company, followed
by I for Interface. For example, CATIA interface names begin with CATI, and
sample interfaces for CAA begin with CAAI. This ensures unique interface names
to enable coexistence for interfaces coming from different providers on your
site, or on you customers' sites&nbsp; [<a href="#References">1</a>].
<p>You can add to this four-character prefix the trigram of the framework into
which you intend to put the interface, providing you manage a list of unique
trigrams for your frameworks [<a href="#References">2</a>]. This lets you manage
unique interface names at the framework level. For example, sample interfaces of
the CAASystem.edu framework, that illustrates the CATIA System framework, begin
with CAAISys, where Sys is the trigram for the System framework.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->

<h3><a name="HeaderFile"></a>Creating the Interface Header File</h3>
<p>Create the interface header file, such as CAAISysPoint.h. Since an interface
is usually intended for clients, this header file should be placed in the
PublicInterfaces directory of your framework.
Insert in this file:</p>
<ul>
  <li>The preprocessor directives that enclose the header file contents
    <pre>#ifndef CAAISysCollection_h
#define CAAISysCollection_h
...
#endif</pre>
    <p>These directives protect from file multiple inclusion</li>
  <li>The include statement to the base interface header file, and to header
    files of interfaces used as parameter types for the interface methods. There
    are none in this example.</li>
  <pre>...
#include &quot;CATBaseUnknown.h&quot;
...</pre>
  <li>The framework header file that contains the framework export information
    <pre>...
#include &quot;CAASysGeoModelInf.h&quot;
...</pre>
  </li>
  <li>The IID declaration</li>
  <pre>...
extern ExportedByCAASysGeoModelInf IID IID_CAAISysCollection;
...</pre>
  <li>The class declaration and the inherited class</li>
  <pre>...
class ExportedByCAASysGeoModelInf CAAISysCollection : public CATBaseUnknown
{
...</pre>
  <li>The <code>CATDeclareClass</code> macro, always located before the <code>public</code>
    keyword</li>
  <pre>...
CATDeclareClass;
...</pre>
  <li>The methods, always declared as public and pure virtual, and returning a <code>HRESULT</code>
    [<a href="#References">3</a>]
    <pre>...
public :
  virtual HRESULT GetNumberOfObjects(int * oCount) = 0;
  virtual HRESULT GetObject    (int iRank,
                                CATBaseUnknown ** oObject) = 0;
  virtual HRESULT AddObject    (CATBaseUnknown *  iObject) = 0;
  virtual HRESULT RemoveObject (CATBaseUnknown *  iObject) = 0;
  virtual HRESULT Empty() = 0;
};
...</pre>
  </li>
</ul>
<p>The header file is:
<pre>#ifndef CAAISysCollection_h
#define CAAISysCollection_h

#include &quot;CATBaseUnknown.h&quot;

#include &quot;CAASysGeoModelInf.h&quot;

extern ExportedByCAASysGeoModelInf IID IID_CAAISysCollection;

class ExportedByCAASysGeoModelInf CAAISysCollection : public CATBaseUnknown
{
  CATDeclareInterface;
  public:
    virtual HRESULT GetNumberOfObjects(int * oCount) = 0;
    virtual HRESULT GetObject    (int iRank,
                                  CATBaseUnknown ** oObject) = 0;
    virtual HRESULT AddObject    (CATBaseUnknown * iObject) = 0;
    virtual HRESULT RemoveObject (CATBaseUnknown * iObject) = 0;
    virtual HRESULT Empty  () =0 ;
};
#endif</pre>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="SourceFile"></a>Creating the Interface Source File</h3>
<p>Create the interface source file in the src directory of the module dedicated
to interfaces of your framework, such as CAAISysCircle.cpp file, and insert in
it:
<ul>
  <li>The include statement to the class header file
    <pre>#include &quot;CAAISysCollection.h&quot;
...</pre>
  </li>
  <li>The IID [<a href="#References">4</a>] initialization
    <pre>...
IID IID_CAAISysCollection = { /* 8d143952-d4bf-11d3-b7f5-0008c74fe8dd */
    0x8d143952,
    0xd4bf,
    0x11d3,
    {0xb7, 0xf5, 0x00, 0x08, 0xc7, 0x4f, 0xe8, 0xdd}
  };
...</pre>
  </li>
  <li>The <code>CATImplementInterface</code> macro to make a CAA V5 interface
    from this abstract class. The parameters of <code>CATImplementInterface</code>
    are the interface name and the base interface name respectively
    <pre>...
CATImplementInterface(CAAISysCollection, CATBaseUnknown);</pre>
  </li>
</ul>
<p>The source file is:
<pre>#include &quot;CAAISysCollection.h&quot;

IID IID_CAAISysCollection = { /* 8d143952-d4bf-11d3-b7f5-0008c74fe8dd */
    0x8d143952,
    0xd4bf,
    0x11d3,
    {0xb7, 0xf5, 0x00, 0x08, 0xc7, 0x4f, 0xe8, 0xdd}
  };

CATImplementInterface(CAAISysCollection, CATBaseUnknown);</pre>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="TIEFile"></a>Creating the TIE File</h3>
<p>Create the TIE file in the src directory of the module dedicated to
interfaces of your framework, such as TIE_CAAISysCollection.tsrc, to request the
code builder mkmk to generate the TIE associated with the interface. Because 
your clients do not need the TIE to retrieve a pointer to your interface thanks 
to <code>QueryInterface</code> and to call its methods, the TIE is created in the 
ProtectedGenerated directory by default. </p>
<pre>#include &quot;CAAISysCollection.h&quot;</pre>
<p>
If the client must implement the interface, create the TIE in the PublicGenerated directory. The TIE file should 
then also include the
<code>//public</code> keyword.</p>
<pre>#include &quot;CAAISysCollection.h&quot;
//public</pre>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>Creating interfaces implies choosing a name appropriate for both interface
easy identification and interface name uniqueness. Then you can create the
interface header and source files. Last, the interface TIE file lets mkmk
automatically create the interface TIE.
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="References"></a>References</h3>
<table width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="../CAADocTechArticles/CAADocNamingRules.htm">CAA
      V5 Naming Conventions</a></td>
  </tr>
  <tr>
    <td valign="top">[2]</td>
    <td><a href="../CAADocQuickRefs/CAADocFWTrigrams.htm">Trigrams
      for Frameworks</a></td>
  </tr>
  <tr>
    <td valign="top">[3]</td>
    <td><a href="CAASysHRESULT.htm">What Is HRESULT?</a></td>
  </tr>
  <tr>
    <td valign="top">[4]</td>
    <td><a href="CAASysGUID.htm">About Globally Unique IDentifiers</a></td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [Jul 2000]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2000, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
