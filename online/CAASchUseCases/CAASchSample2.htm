<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>Creating Features in an Applicative Container</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>Equipment &amp; Systems</h1>
    </td>
    <td valign="top">
      <h2>Schematics Platform Modeler</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>Creating Schematic Application Components</h3>
      <em>Working with Schematic Components</em></td>
  </tr>
  <tr>
    <td class="use" colspan="2">Use Case</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table class="abstract">
  <tr>
    <td>
      <h3>Abstract</h3>
      <p>This article discusses the CAASchAppSample2 use case.</p>
      <ul>
        <li><strong><a href="#Learn">What You Will Learn With This Use Case</a></strong></li>
        <li><a href="#UseCase"><strong>The CAASchAppSample2 Use Case</strong></a>
          <ul>
            <li><a href="#What">What Does CAASchAppSample2 Do</a></li>
            <li><a href="#How">How to Launch CAASchAppSample2</a></li>
            <li><a href="#Where">Where to Find the CAASchAppSample2 Code</a></li>
          </ul>
        </li>
        <li><strong><a href="#Step">Step-by-Step</a></strong></li>
        <li><strong><a href="#InShort">In Short</a></strong></li>
        <li><strong><a href="#References">References</a></strong></li>
      </ul>
    </td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="Learn"></a>What You Will Learn With This Use Case</h3>
<p>This use case is intended to help you understand how to use the CAA Schematic
Platform Interfaces to manipulate Graphical Representations (GRRS) of Schematic
components.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="UseCase"></a>The CAASchAppSample2 Use Case</h3>
<p>CAASchAppSample2 is a use case of the CAASchPlatformModeler.edu framework
that illustrates CAASchPlatformModeler framework capabilities. The use case
demonstrates the creation of a component for a sample Schematics application, <b>CAASCHEDU_SamplePID</b>.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="What"></a>What Does CAASchAppSample2 Do</h4>
<p>The sample demonstrates the use of multiple Graphical Representations (GRRs)
of a component and the ability to swap these representations among the instances
of the component.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="How"></a>How to Launch CAASchAppSample2</h4>
<p>To launch CAASchAppSample2, you will need to set up the build time
environment, then compile CAASchAppSample2 along with its prerequisites, set up
the run time environment, and then execute the sample. This is fully described
in the referenced article [<a href="#References">1</a>]. When launching the use
case, you must pass the following arguments:</p>
<ul>
  <li><b>CAASchEduIn2.CATProduct</b> - the entire pathname, name and extension
    (.CATProduct) of the input drawing. Normally, it should be stored in the
    CNext/resources/graphic file directory.</li>
  <li><b>CAASchEduOut2.CATProduct</b> - the entire pathname, name and extension
    (.CATProduct) under which the new document is to be stored</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Where"></a>Where to Find the CAASchAppSample2 Code</h4>
<p>CAASchAppSample2 code is located in the CAASchAppSample2.m use case module of
the CAASchPlatformModeler.edu framework:</p>
<table>
  <tr>
    <td>Windows</td>
    <td><code>InstallRootDirectory\CAASchPlatformModeler.edu\CAASchAppSample2.m</code></td>
  </tr>
  <tr>
    <td>Unix</td>
    <td><code>InstallRootDirectory/CAASchPlatformModeler.edu/CAASchAppSample2.m</code></td>
  </tr>
</table>
<p>where <code>InstallRootDirectory</code> is the root directory of your CAA V5
installation. It is made of a two unique source files named
CAASchAppSample2Main.cpp and CAASchAppSample2.cpp.</p>
<p>Additional prerequisite code is located in the CAASchAppUtilities.m and
CAASchAppBase.m modules of the same framework.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h3><a name="Step"></a>Step-by-Step</h3>
<p>These are the logical steps in CAASchAppSample2:</p>
<ol>
  <li><a href="#Prolog">Prolog</a></li>
  <li><a href="#Initializing">Initializing the Environment</a></li>
  <li><a href="#ObtainingListGRRs">Obtaining the List of GRRs for the Component
    Reference Object</a></li>
  <li><a href="#AddAdditionalGRRs">Adding additional GRRs to the Component
    Reference Object</a></li>
  <li><a href="#PlacingAnotherInstance">Placing another Instance of the
    Component on the Main Sheet</a></li>
  <li><a href="#Activate">Activating a Second Occurrence of the Instance using a
    Different GRR</a></li>
  <li><a href="#Swap">Swapping GRRs</a></li>
</ol>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Prolog"></a>Prolog</h4>
<p>In this use case, we open an input drawing containing one main sheet and one
detail sheet. The main sheet contains one component instantiated from a
reference object. The detail sheet contains three views. The use case will
create a new .CATProduct drawing for the sample application.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Initializing"></a>Initializing the Environment</h4>
<p>The CAASchAppSample2 code is derived from the CAASchAppBaseEnv base class.
The base class contains functionality common to the other CAASchApp samples.
Initializing the environment involves the following methods:</p>
<table class="code">
  <tr>
    <td>
      <pre>CAASchAppSample2::InitEnvironment
CAASchAppSample2::GetAppReference
CreateCATProductEnv::CreateCATProductEnv</pre>
    </td>
  </tr>
</table>
<p>These methods perform the following functions:</p>
<ul>
  <li>Creating a session, namely &quot;Session DSA CAASchAppBaseEnv
    CATProduct&quot;.</li>
  <li>Obtaining the <i>CATISchSession</i> interface from the session.</li>
  <li>Obtaining the <i>CATISchBaseFactory</i> interface from the session</li>
  <li>Obtaining the applications <i>CATISchAppObjectFactory</i> interface
    pointer.</li>
  <li>Loading the input document.</li>
  <li>Initializing the document using the <i>CATInit</i> interface.</li>
  <li>Obtaining the pointer to the component reference.</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="ObtainingListGRRs"></a>Obtaining the List of GRRs for the Component
Reference Object</h4>
<p>In order to add to the list of GRRs for the component reference, we first
obtain the current list of GRRs. We don’t want to add a duplicate GRR to our
component reference. To obtain the list of GRRs, the code uses the <i>CATISchCompGraphic</i>
interface method ListGraphicalRepresentations. From this method we obtain a list
of GRR, each of which we can query for the <i>CATIView</i> interface pointer.</p>
<p>Since the drawing was created by CAASchAppSample1, we know there is only one
GRR in the list.</p>
<table class="code">
  <tr>
    <td>
      <pre>    //-------------------------------------------------------------------------
    //  Using the reference object, find CATISchCompGraphic interface.
    //-------------------------------------------------------------------------    
    HRESULT rc = _spAppRef-&gt;QueryInterface (IID_CATISchCompGraphic,(void **) &amp;piCompGraphic);
    if (!SUCCEEDED(rc))
    {
       cout &lt;&lt; &quot;cannot get CATISchCompGraphic interface &quot; &lt;&lt; endl;
       return 0;
    }
  
    //-------------------------------------------------------------------------
    //  Use the CATISchCompGraphic's method, ListGraphicalRepresentations, to
    //  find the current graphical representations for the object. 
    //
    //  Since this object was created in sample1, we know it will only have
    //  one GRR.  Use this to find the detail sheet and view of the GRR.
    //-------------------------------------------------------------------------
    int NbGRR = 0;
    if (SUCCEEDED (piCompGraphic-&gt;ListGraphicalRepresentations (&amp;pLIGRRs)))
    {
       unsigned int uSize = 0;
       if (SUCCEEDED (pLIGRRs-&gt;Count(&amp;uSize)))
       {
          cout &lt;&lt; &quot;Size of GRR List = &quot; &lt;&lt; uSize &lt;&lt; endl;
          NbGRR = uSize;
          if (uSize)
          {
             IUnknown *piUK = NULL;
             if (SUCCEEDED (pLIGRRs-&gt;Item(0,&amp;piUK)))
             {
                if ( SUCCEEDED (piUK-&gt;QueryInterface (IID_CATIView,(void **) &amp;piViewGRR1)))
                {
                   spDtlSheet = piViewGRR1-&gt;GetSheet();
                   if (!!spDtlSheet)
                   {
                      cout &lt;&lt; &quot;Got detail sheet containing the GRR detail &quot;
                           &lt;&lt; endl;
                   }
                }
                rc = piUK-&gt;QueryInterface (IID_CATISchGRRComp,(void **) &amp;piGRRComp1);
                CAASchAppDeleteBaseUnknown (piUK);
             }
          } 
       }
    } 
</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="AddAdditionalGRRs"></a>Adding Additional GRRs to the Component
Reference Object</h4>
<p>To add a GRR to a component reference we use the the <i>CATISchCompGraphic</i>
interface method <code>AddGraphicalRepresentation</code>. This method has one
argument which is of type CATISchGRRComp*. The code loops through all the view
in the detail sheet. When it finds a view, it checks to see if it matches the
view of the original GRR. If not, it adds the GRR to the component. Since the <i>CATISchGRRComp</i>
interface is tied to the view object, we can obtain the CATISchGRRComp* for each
view.</p>
<table class="code">
  <tr>
    <td>
      <pre>	for (int iView = 3; iView &lt;= SizeOfLView; iView++) 
        {
          if (LView[iView] != spSpecView)
          {
            if (SUCCEEDED ( (LView[iView])-&gt;QueryInterface (IID_CATISchGRRComp,(void **) &amp;piGRRComp)))
            {
              if (SUCCEEDED (piCompGraphic-&gt;AddGraphicalRepresentation (piGRRComp)))
              {
                cout &lt;&lt; &quot;successfully added GRR at position &quot; &lt;&lt; iView &lt;&lt; endl;
                NbGRR ++;
                if ( NbGRR == 2 ) piGRRComp2 = piGRRComp;
                if ( NbGRR == 3 ) piGRRComp3 = piGRRComp;
              }
            }
          }
	}</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="PlacingAnotherInstance"></a>Placing Another Instance of the
Component on the Main Sheet</h4>
<p>Placing an instance of the component reference is done using the PlaceInSpace
method of the CATISchComponent interface. The coding is similar to that of
CAASchAppSample1.</p>
<table class="code">
  <tr>
    <td>
      <pre>    if ( SUCCEEDED(_spAppRef-&gt;QueryInterface (IID_CATISchComponent,(void **) &amp;piComponent)) )
    {
      double aDb6Axis[6] = {1.0,0.0, 0.0,1.0, 50.0,200.0};

      rc = piComponent-&gt;PlaceInSpace (NULL, aDb6Axis, &amp;piSchComp);
      if (SUCCEEDED (rc))
      {

        CATISpecObject *piSchCompInst = NULL;
        if (SUCCEEDED (piSchComp-&gt;QueryInterface (IID_CATISpecObject,(void **) &amp;piSchCompInst)))
        {
          piSchCompInst-&gt;SetName (SCHEDUPart_TestInst2);  // Name the instance
          CAASchAppDeleteBaseUnknown (piSchCompInst);
        }</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Activate"></a>Activating a Second Occurrenc of the Instance using a
Different GRR</h4>
<p>A component may have more than one occurrence shown on the drawing. This is
not the same as instantiating the component reference another time. Rather, it
is useful for allowing the representation of a component to be shown in
different locations on a drawing with the same or a different GRR. Our component
reference object now has three GRRs. The code below shows the activating of
another occurrence of our component at a new location and using the second GRR.
This is done using the <i>CATISchCompGraphic</i> interface <code>Activate</code>
method from our placed component.</p>
<table class="code">
  <tr>
    <td>
      <pre>        double Db2Loc[2] = {220.0,200.0};
        char *pGRRName = NULL;
        if ( SUCCEEDED (piGRRComp2-&gt;QueryInterface(IID_CATISchGRR,(void**)&amp;piSchGRR) ) )
        {
          if ( SUCCEEDED (piSchGRR-&gt;GetGRRName(&amp;pGRRName)) )
          {
            rc = piSchComp-&gt;QueryInterface (IID_CATISchCompGraphic,(void **) &amp;piCompGraphic);
            if ( SUCCEEDED(rc) ) 
            {
              rc = piCompGraphic-&gt;Activate(pGRRName,Db2Loc,&amp;piNewGRRComp);
            }   </pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<h4><a name="Swap"></a>Swap GRRs</h4>
<p>The <i>CATISchCompGraphic</i> interface also has methods to allow switching
of the GRRs for a given occurrence or all occurrences of an object. The sample
shows using the <code>SwitchAll</code> method to change all the occurrences of
our new placed component to the second GRR.</p>
<table class="code">
  <tr>
    <td>
      <pre>   if ( SUCCEEDED(piCompGraphic-&gt;SwitchAll(pGRRName)) )
   {
     cout &lt;&lt; &quot;Successfully switched all images&quot; &lt;&lt; endl;
   }
   else cout &lt;&lt; &quot;Failed to switch all images&quot; &lt;&lt; endl;</pre>
    </td>
  </tr>
</table>
<p align="right">[<a href="#Top">Top</a>]</p>
<!---------------------------------comment------------------------------------->
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="InShort"></a>In Short</h3>
<p>This use case has demonstrated how to get a component reference object from a
drawing, manipulate it's GRRs, instantiate and activate more than one
occurrence. Specifically, it has illustrated:</p>
<ul>
  <li>Obtaining the necessary Sch Interfaces</li>
  <li>Listing the Graphical Representations of a component reference</li>
  <li>Adding additional Graphical Representations to a component reference</li>
  <li>Activating additional occurrences of a component instance</li>
  <li>Swapping GRRs of a component instance</li>
</ul>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="References"></a>References</h3>
<table width="100%">
  <tr>
    <td valign="top">[1]</td>
    <td><a href="../CAADocUseCases/CAADocRunSample.htm">Building
      and Launching a CAA V5 Use Case</a></td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [April 2001]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2000, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
