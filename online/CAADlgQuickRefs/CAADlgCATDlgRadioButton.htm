<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<link rel="Stylesheet" type="text/css" href="../CAADocStyleSheets/caav5.css">
<title>CATDlgRadioButton</title>
</head>

<body>

<table width="100%">
  <tr>
    <td valign="top">
      <h1>3D PLM Enterprise Architecture</h1>
    </td>
    <td valign="top">
      <h2>User Interface - Dialogs</h2>
    </td>
    <td rowspan="2" align="right" valign="top">
      <h3><a name="Top"></a>CATDlgRadioButton</h3>
      <em>Sets an option among several mutually exclusive ones</em></td>
  </tr>
  <tr>
    <td class="quick" colspan="2">Quick Reference</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<pre><a href="CAADlgCATDialog.htm">CATDialog</a>
  |
  +---<a href="CAADlgCATDlgControl.htm">CATDlgControl</a>
        |
        +---CATDlgRadioButton</pre>
<hr>
<!---------------------------------comment------------------------------------->

<table width="100%">
  <caption>The Radio Button</caption>
  <tr>
    <td><img src="images/CATDlgRadioButton.gif" alt="CATDlgRadioButton.gif (5839 bytes)" width="219" height="139"></td>
    <td>Each circle and its related title is a radio button instance. The radio
      buttons allow for selecting mutually exclusive options, that is one radio
      button is checked and all the others are unchecked. For example, the
      figure beside is a part of the Print dialog box where you must choose the
      page orientation among three existing possibilities. In this example,
      Portrait is selected, and the corresponding button is checked. The two
      other radio buttons are consequently unchecked. The checked radio button
      is depicted by the specific color and shading. This can vary depending on
      the platform and on the CATIA User Interface Style used.</td>
  </tr>
</table>
<p>Use radio buttons whenever you propose to the end user a choice among several
mutually exclusive options, that is when one option only can be selected among
all the options proposed.</p>
<hr>
<!---------------------------------comment------------------------------------->

<table width="100%">
  <caption><a name="Styles"></a>Styles</caption>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tr>
    <td>default</td>
    <td>The title is placed at the right of the button</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<table width="100%">
  <caption><a name="Events"></a>Events</caption>
  <thead>
    <tr>
      <th>Notification</th>
      <th>Method</th>
      <th>Sent when</th>
    </tr>
  </thead>
  <tr>
    <td>CATDlgRadBModifyNotification</td>
    <td><code>GetRadBModifyNotification</code></td>
    <td>Whenever the radio button is checked or unchecked</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->

<h3>Programmer's Guide</h3>
<p>A radio button never exists alone, but always belongs to a set of radio
buttons grouped in the same container, such as a frame or a tabpage. All the
radio buttons of the same container are automatically bound together in such a
way that only one among all can be checked while the others are unchecked.
Checking a given radio button unchecks the one that was checked before.</p>
<p>A notification is sent whenever the user presses a radio button. This
notification can be retrieved using the <code>GetRadBModifyNotification</code>
method. The radio button state can be <code>CATDlgCheck</code> when it is
checked, and <code>CATDlgUncheck</code> when it is not. You can have to test
this state using the method <code>GetState</code>, or to set it using the method
<code>SetState</code>.</p>
<h4><a name="Constructor"></a>Constructing a Radio Button</h4>
<p>A radio button has no style parameter. Construct it as follows:</p>
<table class="code">
  <tr>
    <td>
      <pre>_pRadioButton = new CATDlgRadioButton(iParent, iName);</pre>
    </td>
  </tr>
</table>
<h4><a name="Prog1"></a>Retrieving or Setting the State of a Radio Button</h4>
<p>When the end user checks a radio button,&nbsp; this radio button sends a
notification, instance of the CATDlgRadBModifyNotification class. This
notification can be retrieved using the <code>GetRadBModifyNotification</code>
method. If, in the same container, another radio button was checked, it is
unchecked. and it also sends a CATDlgRadBModifyNotification notification. Since
each radio button has usually its own callback method, each of them is executed.
To help distinguish in such a callback method whether the radio button is
checked or unchecked, use the GetState method that retrieves the state. The
following example shows how to do this.</p>
<table class="code">
  <tr>
    <td>
      <pre>void Container::MethodToExecute(CATCommand           * iRadioButton,
                                CATNotification      * iNotification,
                                CATCommandClientData   iUsefulData)
{
  if (iRadioButton-&gt;GetState() == CATDlgCheck) // radio button is checked
  { // Do what's required when the radio button is checked }
  else                                          // radio button is unchecked
  { // Do what's required when the radio button is unchecked }
}</pre>
    </td>
  </tr>
</table>
<p>You can set the state of a radio button using the <code>SetState</code>
method:</p>
<table class="code">
  <tr>
    <td>
      <pre>int iNotify = 1;
_pRadioButton-&gt;SetState(CATDlgUncheck, iNotify);</pre>
    </td>
  </tr>
</table>
<p>Set the first parameter to the state you require, and the parameter <code>iNotify</code>
to a non null value if you want that the corresponding notification is sent.
Otherwise set to 0, no notification is sent.</p>
<h4><a name="Callback"></a>Setting a Callback on a Radio Button</h4>
<p>Set a callback on a radio button as follows:</p>
<table class="code">
  <tr>
    <td>
      <pre>AddAnalyseNotificationCB(
   _pRadioButton,                                // radio button 
   _pRadioButton-&gt;GetRadBModifyNotification(),   // notification
   (CATCommand)&amp;Container::MethodToExecute,      // method to execute 
   CATCommandClientData iUsefulData);            // useful data for this method </pre>
    </td>
  </tr>
</table>
<h4><a name="Resources"></a>Setting a Title to a Radio Button</h4>
<p>The radio button title should be set by the resource file using a key built
with the identifier you declare as the second parameter of the radio button
constructor.</p>
<p align="right">[<a href="#Top">Top</a>]</p>
<hr>
<!---------------------------------comment------------------------------------->
<h3><a name="History"></a>History</h3>
<table width="100%">
  <tr>
    <td valign="top">Version: <strong>1</strong> [Jan 2000]</td>
    <td valign="top">Document created</td>
  </tr>
  <tr>
    <td valign="top" align="right" colspan="2">[<a href="#Top">Top</a>]</td>
  </tr>
</table>
<hr>
<!---------------------------------comment------------------------------------->
<p><i>Copyright © 2000, Dassault Systèmes. All rights reserved.</i></p>

</body>

</html>
