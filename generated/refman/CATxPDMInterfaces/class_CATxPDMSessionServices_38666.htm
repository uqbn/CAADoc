<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATxPDMInterfaces Class CATxPDMSessionServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATxPDMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATxPDMSessionServices','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATxPDMSessionServices','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATxPDMSessionServices','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATxPDMSessionServices','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATxPDMInterfaces Class CATxPDMSessionServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATxPDMSessionServices_38666','CATxPDMSessionServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATxPDMSessionServices</b>
</p>
<p>
<b><i> Class for PDM services working on items loaded in session.</i></b><br>
 
 <b>Role</b>: This class is used for external File PDM system integration.
 <p>All the methods pre-requisites the PX1 license </p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIxPDMItem','');return false">CATIxPDMItem</a>, <a href="#" onClick="openLink('CATIxPDMSession','');return false">CATIxPDMSession</a>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BreakAllExternalLinks(CATIxPDMItem_var&amp;)"><b>BreakAllExternalLinks</b></a>(CATIxPDMItem_var&amp;)
<dd>  Breaks external links of an item.
 <dt> o 
    <a href="#CheckDesignRules(CATListOfCATString&amp;,CATListValCATIxPDMItem_var*&amp;,CATIReporter*&amp;)"><b>CheckDesignRules</b></a>(CATListOfCATString&amp;,CATListValCATIxPDMItem_var*&amp;,CATIReporter*&amp;)
<dd>  Check rules necessary for PDM before Save.
 <dt> o 
    <a href="#CheckFeatureCompatibility(CATBaseUnknown*,CATBaseUnknown*)"><b>CheckFeatureCompatibility</b></a>(CATBaseUnknown*,CATBaseUnknown*)
<dd>  Checks that two features are compatible.
 <dt> o 
    <a href="#FindNonImportedPublications(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString**)"><b>FindNonImportedPublications</b></a>(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString**)
<dd>  Retrieves publications from an instance not imported in a specific item.
 <dt> o 
    <a href="#GetItemFromDocument(CATDocument*,CATIxPDMItem_var&amp;)"><b>GetItemFromDocument</b></a>(CATDocument*,CATIxPDMItem_var&amp;)
<dd>  Retrieves an item from a document loaded in session.
 <dt> o 
    <a href="#GetItemFromFeature(CATBaseUnknown_var&amp;,CATIxPDMItem_var&amp;)"><b>GetItemFromFeature</b></a>(CATBaseUnknown_var&amp;,CATIxPDMItem_var&amp;)
<dd>  Retrieves an item from a feature loaded in session.
 <dt> o 
    <a href="#GetxPDMItemsInSession(CATListValCATIxPDMItem_var*&amp;)"><b>GetxPDMItemsInSession</b></a>(CATListValCATIxPDMItem_var*&amp;)
<dd>  Retrieves all items loaded in session.
 <dt> o 
    <a href="#IsImported(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATBaseUnknown*)"><b>IsImported</b></a>(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATBaseUnknown*)
<dd>  Retrieves if an object from an instance is imported in a specific item.
 <dt> o 
    <a href="#LoadItemInSession(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;)"><b>LoadItemInSession</b></a>(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;)
<dd>  Loads an item in session.
 <dt> o 
    <a href="#NeedToLaunchCATDUAForLinksAnalysis(CATIxPDMItem_var&amp;,CATBoolean&amp;)"><b>NeedToLaunchCATDUAForLinksAnalysis</b></a>(CATIxPDMItem_var&amp;,CATBoolean&amp;)
<dd>  Check contents of item to verify if CATDUA will improve link status.
 <dt> o 
    <a href="#RefreshItemInformation(CATIxPDMItem_var&amp;,ItemRefresh&amp;)"><b>RefreshItemInformation</b></a>(CATIxPDMItem_var&amp;,ItemRefresh&amp;)
<dd>  Refreshes some session information on a loaded item.
 <dt> o 
    <a href="#SaveSessionToDirectory(char*,CATUnicodeString&amp;,CATListValCATIxPDMItem_var*,CATListOfCATUnicodeString*)"><b>SaveSessionToDirectory</b></a>(char*,CATUnicodeString&amp;,CATListValCATIxPDMItem_var*,CATListOfCATUnicodeString*)
<dd>  Saves a session to a specific directory.
 <dt> o 
    <a href="#SetExternalLinksStatus(CATIxPDMItem_var&amp;,CATBoolean)"><b>SetExternalLinksStatus</b></a>(CATIxPDMItem_var&amp;,CATBoolean)
<dd>  Manages links activity of an item.
 <dt> o 
    <a href="#SetInitialDocFileName(CATIxPDMItem_var&amp;,CATUnicodeString&amp;)"><b>SetInitialDocFileName</b></a>(CATIxPDMItem_var&amp;,CATUnicodeString&amp;)
<dd>  Sets an initial file name on an item.
 <dt> o 
    <a href="#SynchronizeAllExternalLinks(CATIxPDMItem_var&amp;)"><b>SynchronizeAllExternalLinks</b></a>(CATIxPDMItem_var&amp;)
<dd>  Synchronizes external links of an item.
 <dt> o 
    <a href="#UnLoadItemFromSession(CATIxPDMItem_var&amp;)"><b>UnLoadItemFromSession</b></a>(CATIxPDMItem_var&amp;)
<dd>  Unloads an item from session.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ItemRefresh"><b>ItemRefresh</b></a>
<dd>  Item information to refresh in session.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BreakAllExternalLinks"></a><a name="BreakAllExternalLinks(CATIxPDMItem_var&amp;)"></a> <dt> o <b>BreakAllExternalLinks</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BreakAllExternalLinks</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iPDMItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Breaks external links of an item.
 <br><b>Role:</b>This method retrieves all the external links of the
 given document, and breaks them.
 <br>Only few links can be broken (like geometrical or parameter imports).
 <p>Notice that this API is equivalent to Isolate button in Edit/Links panel.</p> 
 <p>Save is necessary after a break.</p> 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPDMItem</tt>
   <dd>   The item to break its external links.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: All external links of the given item are successfully broken. </li> 
   <li><tt>S_FALSE</tt>: There is no more external links to break. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       The input item pointer is NULL.
      <li><tt>InputERR_1012:</tt></li>
       Error during the break of one specific link.
      <li><tt>InputERR_1004:</tt></li>
       Internal error during the break process.
  </ul>
  </ul>

</dl>
</dl>
<a name="CheckDesignRules"></a><a name="CheckDesignRules(CATListOfCATString&amp;,CATListValCATIxPDMItem_var*&amp;,CATIReporter*&amp;)"></a> <dt> o <b>CheckDesignRules</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckDesignRules</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATString','CATListOfCATString&amp;')</script> <td><tt>iListOfRulesToCheck</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var*&amp;')</script> <td><tt>oItemsWithError</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIReporter','CATIReporter*&amp;')</script> <td><tt>oReporter</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Check rules necessary for PDM before Save.
 <br><b>Role:</b>This method checks a customized list of rules necessary for PDM before Save.
 The list to choose depends of what is allowed in targeted PDM. These rules work also on items  
 coming from ENOVIA V5 (with the exception of rule READONLY_CONSISTENCY, which is specific to file items).
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfRulesToCheck</tt>
   <dd>   List of string describing rules to check on all items in session.
   Authorized values are:
   <ul>
   <li><tt>"RESOLVED_IMPORT"</tt>: Check that all imports (geometry and parameters) are resolved.
     If you activate this check, this method will load pointed items to check the link. So number
     of items loaded in session could increase after this call.</li> 
   <li><tt>"SYNCHRONIZED_IMPORT"</tt>: Check that all imports (geometry and parameters) are synchronized.
     If you activate this check, this method will load pointed items to check the link. So number
     of items loaded in session could increase after this call.</li> 
   <li><tt>"NESTED_LEVEL=x"</tt>: Check number of levels of links. x is the maximum authorized value.
     If PartA imports geometry from PartB and PartB import parameter from PartC, there is 3 levels of links.
     If DrawingA has a link to ProductB and ProductB contains PartD, there is 3 levels of links.
     If you activate this check, this method will load pointed items to check the link. So number
     of items loaded in session could increase after this call.</li> 
   <li><tt>"NESTED_IMPORT=x"</tt>: Check number of levels of import. x is the maximum authorized value.
     If PartA imports geometry from PartB and PartB import parameter from PartC, there is 3 levels of imports.
     This check is a restriction of NESTED_LEVEL to geometrical and knowledge links between CATPart and CATShape.
     If you activate this check, this method will load pointed items to check the link. So number
     of items loaded in session could increase after this call.</li> 
   <li><tt>"CYCLES"</tt>: Check that there is no cycle between items. All kind of links are checked.
     Notice that 'Context' link from CATPart to CATProduct is not considered as a cycle.
     If you activate this check, this method will load pointed items to check the link. So number
     of items loaded in session could increase after this call.</li> 
   <li><tt>"ONLY_PUBLICATIONS"</tt>: Check that all imports are using publications.
     This check perform verification without loading pointed data.</li> 
   <li><tt>"READONLY_CONSISTENCY"</tt>: Check that all Read Only and Read Write status of item loaded
     is consistent. Inconsistent status could lead to Product Structure desynchronization in case of Save
     (SYN_1 and SYN_2 errors in CATDUA).</li> 
   </ul>
 </dd>
    <dt><tt> oItemsWithError</tt>
   <dd>   List of items with associated errors. Items can be duplicated in this list if there is several errors on one item.
 </dd>
    <dt><tt> oReporter</tt>
   <dd>   List of errors. Use CATIReporter#GetListReporterInfo to retrieve all errors.
   Authorized values are:
   <ul>
      <li><tt>InputERR_1301:</tt></li>
       An import is not synchronized.
      <li><tt>InputERR_1302:</tt></li>
       Impossible to find pointed object by an import.
      <li><tt>InputERR_1303:</tt></li>
       Too many level of imports.
      <li><tt>InputERR_1304:</tt></li>
       Too many level of links.
      <li><tt>InputERR_1305:</tt></li>
       There is a cycle between items.
      <li><tt>InputERR_1306:</tt></li>
       There is a import without publication.
  </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The check runs successfully whithout any error. </li> 
   <li><tt>S_FALSE</tt>: The check runs successfully and detects some errors, use oReporter to retrieve them. </li> 
   <li><tt>E_FAIL</tt>: The check fails with an internal error. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1004:</tt></li>
       Internal error.
      <li><tt>InputERR_1251:</tt></li>
       Requested rule is unknown.
      <li><tt>InputERR_1252:</tt></li>
       No item loaded in session.
  </ul>
  </ul>
</dl>
</dl>
<a name="CheckFeatureCompatibility"></a><a name="CheckFeatureCompatibility(CATBaseUnknown*,CATBaseUnknown*)"></a> <dt> o <b>CheckFeatureCompatibility</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckFeatureCompatibility</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iFirstFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iSecondFeature</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks that two features are compatible.
 <br><b>Role:</b>This method checks that two features are compatible.
 If two features are compatible, a link put on the first feature will be able to 
 solve on second feature if you replace first document by second one.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstFeature</tt>
   <dd>   The first feature to compare.
 </dd>
    <dt><tt> iSecondFeature</tt>
   <dd>   The second feature to compare.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Features are compatible </li> 
   <li><tt>E_FAIL</tt>: There are two raisons: </li>
     <ul> 
       <li>The features are not compatible: no 
<a href="#" onClick="openLink('CATError','');return false">CATError</a> class instance is generated. The static 
<a href="#" onClick="openLink('CATError','CATGetLastError');return false">CATError.CATGetLastError</a>        method returns <tt>NULL</tt></li>
      <li>The method has failed. A 
<a href="#" onClick="openLink('CATError','');return false">CATError</a> class instance is generated. The possible <b>returned errors </b> (listed by their identifier) are:</li>   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       At least one input pointer is NULL.
  </ul>
  </ul>
</dl>
</dl>
<a name="FindNonImportedPublications"></a><a name="FindNonImportedPublications(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATListOfCATUnicodeString**)"></a> <dt> o <b>FindNonImportedPublications</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FindNonImportedPublications</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iItemWithImportedPublications</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iDocumentInstanceWithPublications</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString**')</script> <td><tt>oNonImportedPublications</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves publications from an instance not imported in a specific item.
 <br><b>Role:</b>This method verifies that all objects published by an instance are 
 imported in a specific item.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iItemWithImportedPublications</tt>
   <dd>   Item where we check that all objects published by 
  <tt>iDocumentInstanceWithPublications</tt> are imported.
   This item has always a CATPart type.
 </dd>
    <dt><tt> iDocumentInstanceWithPublications</tt>
   <dd>    This is an instance of a Part in a Product (implementing CATIProduct interface).
 </dd>
    <dt><tt> oNonImportedPublications</tt>
   <dd>    List of publications existing in <tt>iDocumentInstanceWithPublications</tt> 
    and not imported in iDocumentToCheck. If all publications are imported, this list
    is empty and return is <tt>S_OK</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The list is successfully computed.</li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       At least one input parameter is invalid.
  </ul>
  </ul>
</dl>
</dl>
<a name="GetItemFromDocument"></a><a name="GetItemFromDocument(CATDocument*,CATIxPDMItem_var&amp;)"></a> <dt> o <b>GetItemFromDocument</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetItemFromDocument</b>(<td> const <script type="text/javascript"> activateLink('CATDocument','CATDocument*')</script> <td><tt>iInputDocument</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>oPDMItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an item from a document loaded in session.
 <br><b>Role:</b>This method retrieves a handler to a 
<a href="#" onClick="openLink('CATIxPDMItem','');return false">CATIxPDMItem</a> interface from a 
<a href="#" onClick="openLink('CATDocument','');return false">CATDocument</a>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputDocument</tt>
   <dd>   The document loaded in session
 </dd>
    <dt><tt> oPDMItem</tt>
   <dd>   The returned item
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The item is successfully returned. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       The input document is NULL.
  </ul>
  </ul>
</dl>
</dl>
<a name="GetItemFromFeature"></a><a name="GetItemFromFeature(CATBaseUnknown_var&amp;,CATIxPDMItem_var&amp;)"></a> <dt> o <b>GetItemFromFeature</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetItemFromFeature</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iInputFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>oPDMItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an item from a feature loaded in session.
 <br><b>Role:</b>This method retrieves a handler to a 
<a href="#" onClick="openLink('CATIxPDMItem','');return false">CATIxPDMItem</a> interface from a feature ('CATISpecObject').
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputFeature</tt>
   <dd>   The feature loaded in session
 </dd>
    <dt><tt> oPDMItem</tt>
   <dd>   The returned item
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The item is successfully returned. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       The input feature is NULL.
  </ul>
  </ul>
</dl>
</dl>
<a name="GetxPDMItemsInSession"></a><a name="GetxPDMItemsInSession(CATListValCATIxPDMItem_var*&amp;)"></a> <dt> o <b>GetxPDMItemsInSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetxPDMItemsInSession</b>(<td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var*&amp;')</script> <td><tt>oListOfLoadedItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves all items loaded in session.
 <br><b>Role:</b>This method retrieves all items loaded in session.
 This list is especially useful to rename items by the 
<a href="#" onClick="openLink('','SaveSessionToDirectory');return false">SaveSessionToDirectory</a> method. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfLoadedItem</tt>
   <dd>   The list of loaded items in session. This list will be NULL if no item is loaded in session.
   The caller has to delete the list.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The list is successfully returned. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
  </ul>
  </ul>
</dl>
</dl>
<a name="IsImported"></a><a name="IsImported(CATIxPDMItem_var&amp;,CATBaseUnknown*,CATBaseUnknown*)"></a> <dt> o <b>IsImported</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsImported</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iItemWithImport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipRefObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iDocumentInstance</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves if an object from an instance is imported in a specific item.
 <br><b>Role:</b>This method verifies that an object in an instance context is 
 imported in a specific item.The object can be a geometry, parameter or a publication.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iItemWithImport</tt>
   <dd>   Item where we check that <tt>ipRefObject</tt> in context of Product
  <tt>iDocumentInstance</tt> is imported.
   This item has always a CATPart type.
 </dd>
    <dt><tt> ipRefObject</tt>
   <dd>    Search object (geometry, parameter, publication).
    Use result of <tt>CATIPrdObjectPublisher::GetFinalObject</tt> as imput for publications.
 </dd>
    <dt><tt> iDocumentInstance</tt>
   <dd>    This is an instance of a Part in a Product (implementing CATIProduct interface).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Object is imported.</li> 
   <li><tt>S_FALSE</tt>: Object is not imported.</li> 
   <li>Search failed: <b>Returned errors </b> (listed by their identifier) </li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       One input pointer is NULL.
  </ul>
  </ul>
</dl>
</dl>
<a name="LoadItemInSession"></a><a name="LoadItemInSession(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;)"></a> <dt> o <b>LoadItemInSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LoadItemInSession</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iItemToLoad</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>oLoadedItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Loads an item in session.
 <br><b>Role:</b>This method loads an item is session.
 If item is already loaded in session, this method just returns a handler on already loaded item.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iItemToLoad</tt>
   <dd>   The item to load.
 </dd>
    <dt><tt> oLoadedItem</tt>
   <dd>   The loaded item. It can be same as <tt>iItemToLoad</tt> if item was already loaded.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The item is successfully loaded. </li> 
   <li><tt>S_FALSE</tt>: The item is already loaded. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
      The PX1 licence is not available.
      <li><tt>InputERR_1004:</tt></li>
       Internal error.
      <li><tt>InputERR_1121:</tt></li>
       The file associated with the item is not on the disk.
      <li><tt>InputERR_1123:</tt></li>
      This non CATIA document can never be loaded</li>
  </ul>
  </ul>
</dl>
</dl>
<a name="NeedToLaunchCATDUAForLinksAnalysis"></a><a name="NeedToLaunchCATDUAForLinksAnalysis(CATIxPDMItem_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>NeedToLaunchCATDUAForLinksAnalysis</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>NeedToLaunchCATDUAForLinksAnalysis</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iItemToCheck</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oNeedToLaunchCATDUA</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Check contents of item to verify if CATDUA will improve link status.
 <br><b>Role:</b>This method verifies if some CATDUA rules about links (a sub-set of CATDUA rules) are detected
 in the selected item. Only check is performed, no correction, no modification, this is the CATDUA jobs.
 <p>If some rules are detected, it means that after CATDUA links status will be different. Some links will
 potentially disappears and ConsistentSet could be very different.</p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iItemToCheck</tt>
   <dd>   The item to check.
 </dd>
    <dt><tt> iNeedToLaunchCATDUA</tt>
   <dd>   TRUE if CATDUA can be launch to improve links status, FALSE otherwise.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Check successfully performed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       Not available on non loaded item.
      <li><tt>InputERR_1004:</tt></li>
       Internal error.
  </ul>
  </ul>
</dl>
</dl>
<a name="RefreshItemInformation"></a><a name="RefreshItemInformation(CATIxPDMItem_var&amp;,ItemRefresh&amp;)"></a> <dt> o <b>RefreshItemInformation</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RefreshItemInformation</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iPDMItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ItemRefresh','ItemRefresh&amp;')</script> <td><tt>iToRefresh</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Refreshes some session information on a loaded item.
 <br><b>Role:</b>This method refreshes session information like Read/Write status or Unresolved link status.
 This method should be called when some information changes on file system to update V5 session.
 <br>Notice that only a very limited set of modification directly on file are supported when
 item is loaded in V5 session.
 V5 is not a database and does not support concurrent engineering in a File Base environment.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPDMItem</tt>
   <dd>   The item to refresh from file system.
 </dd>
    <dt><tt> iToRefresh</tt>
   <dd>   The kind of information to refresh.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The information is successfully refreshed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1005:</tt></li>
       The item is not loaded.
  </ul>
  </ul>

</dl>
</dl>
<a name="SaveSessionToDirectory"></a><a name="SaveSessionToDirectory(char*,CATUnicodeString&amp;,CATListValCATIxPDMItem_var*,CATListOfCATUnicodeString*)"></a> <dt> o <b>SaveSessionToDirectory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SaveSessionToDirectory</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iDirectoryPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oErrorMessage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var*')</script> <td><tt>iListItemToRename</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>iListOfNewNames</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Saves a session to a specific directory.
 <br><b>Role:</b>This method allows you save a session to a specific directory 
 (in interactive or batch) while keeping links consistency between all documents if some are renamed. 

 <p>As soon as you work on several documents, you have to use this method instead of the
  <tt>SaveAs</tt> method of the <tt>CATDocumentServices</tt> class to keep link consistency
  especially when renaming documents.</p>

 <p>Item is saved in the targeted directory only if:
 <ul>
    <li>Item is loaded in session (see 
<a href="#" onClick="openLink('','GetxPDMItemsInSession');return false">GetxPDMItemsInSession</a> )</li>    <li>Item has status New or Modified (see 
<a href="#" onClick="openLink('CATIxPDMItem','NeedToBeSaved');return false">CATIxPDMItem.NeedToBeSaved</a> )</li>      <li>Item has been loaded from another location than the targeted directory </li>
    <li>Item being renamed or impacted by a rename (renaming Item with the same name is not supported) </li>
 </ul>

 <p>This method allows also to export data coming from ENOVIA V5 or ENOVIA VPM V4 to a File directory.

 <p>Item not processed by this method:
 <ul>
    <li>cgr loaded in Session</li>
 </ul>

 <p>This method performs a complete export if the targeted directory doesn't contain any of 
 documents in session. This means that all items will be saved in the targeted
 directory even if they are not modified in session. 
 <p>
 <b>Notes</b> 
 <ul>
    <li>This method does not consider pointing/pointed documents that are not loaded in session. </li>
    <li>if a Part is in Visualization mode in an assembly, it means that it is not loaded in session. 
        So Part will not be saved in the targeted directory.</li>
 </ul>  
 </p>
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirectoryPath</tt>
   <dd>   The path where all session items will be saved.
   This path could be a directory path or a DLName.
   It must be accessible with write access.
 </dd>
    <dt><tt> oErrorMessage</tt>
   <dd>   The detailled error message filled if result is <tt>E_FAIL</tt> with the error <tt>InputERR_1108</tt>.
   <p>For other errors, same content as message associaded to returned error.</p>
 </dd>
    <dt><tt> iListItemToRename</tt>
   <dd>   The list of items to rename. The list of new names is the <tt>iListOfNewNames</tt>. The two lists must
   have the same size. 
   <p> If an item of the directory is not added in this list, the used default name will be the CATIA display name.</p>
   <p>If items are not file based, but VPM or ENOVIA items, you must fill up <tt>iListItemToRename</tt> and
     <tt>iListOfNewNames</tt>. </p>
</p>
 </dd>
    <dt><tt> iListOfNewNames</tt>
   <dd>   The list of new name for documents of <tt>iListItemToRename</tt>. Name should be file name (no DBCS) with correct extension
   and without any path. For example 'Part1.CATPart' or 'Part1'. 'C:\Part1.CATPart', 'Part\1' or 'Part*.Part' are not supported.
   If there is no extension, it is automatically added.
   <p>The size of <tt>iListDocToRename</tt> and <tt>iListOfNewNames</tt> must be exactly the same.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: All items are successfully saved. </li> 
   <li><tt>S_FALSE</tt>: Some items have not been saved (item modified by synchro and read only),
                         warning message available in oErrorMessage parameter. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1009:</tt></li>
       List of documents to rename and list of new names must have the same size.
      <li><tt>InputERR_1106:</tt></li>
       Invalid input directory.
      <li><tt>InputERR_1107:</tt></li>
       Some documents cannot been saved, impossible to process.
      <li><tt>InputERR_1108:</tt></li>
       Internal error, see oErrorMessage for more details.
      <li><tt>InputERR_1110:</tt></li>
       Two documents with same display name exist in session. Duplicated name is available in error message.
      <li><tt>InputERR_1111:</tt></li>
       Invalid file name, check that name does not contain specific characters and that extension is correct.
       Invalid name and item are available in error message.
      <li><tt>InputERR_1118:</tt></li>
       One item of <tt>iListItemToRename</tt> is not loaded. Item name is available in error message.
      <li><tt>InputERR_1201:</tt></li>
		   File already exist, overwriten with different file is not allowed.
  </ul>
  </ul>

</dl>
</dl>
<a name="SetExternalLinksStatus"></a><a name="SetExternalLinksStatus(CATIxPDMItem_var&amp;,CATBoolean)"></a> <dt> o <b>SetExternalLinksStatus</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExternalLinksStatus</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iPDMItem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActivated</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Manages links activity of an item.
 <br><b>Role:</b>This method retrieves all the external links of the
 given document, and activates (or deactivates) them.
 <p>Notice that only geometrical links support this activation notion. A deactivated link
 means that geometrical modifications are no more propagated through this link. The link still exists
  and is still taken into account in SendTo, 
<a href="#" onClick="openLink('CATxPDMFileServices','GetConsistentSet');return false">CATxPDMFileServices.GetConsistentSet</a> or 
<a href="#" onClick="openLink('CATxPDMFileServices','SearchRootItems');return false">CATxPDMFileServices.SearchRootItems</a> .</p>  <p>Notice that this API is equivalent to Activate/Deactivate buttons in Edit/Links panel.</p> 
 <p>Save is necessary after a link status modification.</p> 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPDMItem</tt>
   <dd>   The item to activate/deactivate its external links.
 </dd>
    <dt><tt> iActivated</tt>
   <dd>   The activation/deactivation status to set on links.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: All external links of the given item are successfully activated/deactivated. </li>
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       The input item pointer is NULL.
      <li><tt>InputERR_1004:</tt></li>
       Internal error during the activation process.
      <li><tt>InputERR_1007:</tt></li>
       Error during the activation process of one specific link.
  </ul>
  </ul>

</dl>
</dl>
<a name="SetInitialDocFileName"></a><a name="SetInitialDocFileName(CATIxPDMItem_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetInitialDocFileName</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetInitialDocFileName</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iPDMItem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iInitialFileName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets an initial file name on an item.
 <br><b>Role:</b>This method valuate the initial item name.
 This method is available on item with "New" status, other items could be renamed only through CATxPDMSessionServices::SaveSessionToDirectory
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPDMItem</tt>
   <dd>   The item to set .
 </dd>
    <dt><tt> iInitialFileName</tt>
   <dd>   The initial file name to set on item.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The information is successfully refreshed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1005:</tt></li>
       The item is not loaded.
      <li><tt>InputERR_1013:</tt></li>
       The item has already been saved.
  </ul>
  </ul>

</dl>
</dl>
<a name="SynchronizeAllExternalLinks"></a><a name="SynchronizeAllExternalLinks(CATIxPDMItem_var&amp;)"></a> <dt> o <b>SynchronizeAllExternalLinks</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SynchronizeAllExternalLinks</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iPDMItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Synchronizes external links of an item.
 <br><b>Role:</b>This method retrieves all the external links of the
 given document, and synchronizes them if they are loaded in session.
 <br>Only activated links are synchronized.
 <p>Notice that this API is equivalent to Synchronize button in Edit/Links panel.</p> 
 <p>Save is necessary after a synchronization.</p> 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPDMItem</tt>
   <dd>   The item to synchonize its external links.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: All external links of the given item are successfully synchronized. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       The input item pointer is NULL.
      <li><tt>InputERR_1003:</tt></li>
       Error during the synchronisation of one specific link.
      <li><tt>InputERR_1004:</tt></li>
       Internal error during the synchronisation process.
      <li><tt>InputERR_1005:</tt></li>
       The pointed item is not loaded.
  </ul>
  </ul>

</dl>
</dl>
<a name="UnLoadItemFromSession"></a><a name="UnLoadItemFromSession(CATIxPDMItem_var&amp;)"></a> <dt> o <b>UnLoadItemFromSession</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnLoadItemFromSession</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iItemToUnLoad</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unloads an item from session.
 <br><b>Role:</b>This method unloads an item from session.
 <p>This unload method can be used only is specific cases
   <ul>
      <li>If you are in batch mode, only root items can be unloaded. It means that you can't unload
      an item in a Product Structure, only root can be unloaded, Unloading root will automatically
      unload all pointed items.</li>
      <li>In interactive mode, same rules apply. There is one specific rule: an item associated
      to an editor cannot be unloaded, you have to close the interactive editor to unload it.</li>
  </ul>
 </p>
 <p>In short, this method can be used only to clean a session, not for selective unloading in a Product Structure.</p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iItemToUnLoad</tt>
   <dd>   The item to unload from session.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: Item successfully unloaded. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       Not available on non loaded item.
      <li><tt>InputERR_1004:</tt></li>
       Internal error.
  </ul>
  </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ItemRefresh"> <dt> o <b>ItemRefresh</b>
<dl>
  <dd>
<pre>
enum <b>ItemRefresh</b> {
  All,
  ReadWrite,
  UnresolvedLinks
}
</pre>
 Item information to refresh in session.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> All</tt>
   <dd>        All attributes will be refreshed, see next values for details.
 </dd>
    <dt><tt> ReadWrite</tt>
   <dd>        Read/Write or Read/Only status will be recomputed from file information.
        ReadOnly status is read at item opening and kept during the session, a ReadOnly item cannot be saved
        so this information should be refreshed in session before saving if you modify file right access.
 </dd>
    <dt><tt> UnresolvedLinks</tt>
   <dd>        To optimize performances, V5 try to resolved a link only once. So if pointed item is not found, link
        will keep broken status during all the session. If you add the necessary file on disk during session,
        refreshing this information will allow to solve link.
        <br> This method is equivalent to 'Refresh' button in Edit/Links.
        <br> Notice that this call doesn't refresh all applicative information so display status could still be
        wrong in some cases.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATxPDMSessionServices','RefreshItemInformation');return false">CATxPDMSessionServices.RefreshItemInformation</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATxPDMSessionServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATxPDMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
