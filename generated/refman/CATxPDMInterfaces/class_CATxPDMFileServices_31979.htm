<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATxPDMInterfaces Class CATxPDMFileServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATxPDMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATxPDMFileServices','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATxPDMFileServices','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATxPDMFileServices','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATxPDMFileServices','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATxPDMInterfaces Class CATxPDMFileServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATxPDMFileServices_31979','CATxPDMFileServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATxPDMFileServices</b>
</p>
<p>
<b><i> Class for PDM services working directly on files not necessary loaded in session.</i></b><br>

 <b>Role:</b> Except the <a href="#" onClick="openLink('','CheckItemCompatibility');return false">CheckItemCompatibility</a> method, all the methods of the class retrieve or create items. All the   methods do not load in session the files associated with the returned items. 
 <p>Before using these methods in a batch, a 
<a href="#" onClick="openLink('CATSession','');return false">CATSession</a> must be created even no documents will be loaded. </p> <p>All the static methods of the class pre-requisites the PX1 license. </p>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIxPDMItem','');return false">CATIxPDMItem</a>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CheckItemCompatibility(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;,ItemCompatibility&amp;)"><b>CheckItemCompatibility</b></a>(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;,ItemCompatibility&amp;)
<dd>  Checks that two items are compatible.
 <dt> o 
    <a href="#CreateSendToService(CATIxPDMSendToService_var&amp;,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;)"><b>CreateSendToService</b></a>(CATIxPDMSendToService_var&amp;,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;)
<dd>  Creates a Send To service pointer.
 <dt> o 
    <a href="#GetConsistentSetOfItems(CATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)"><b>GetConsistentSetOfItems</b></a>(CATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)
<dd>  Searches list of pointed items.
 <dt> o 
    <a href="#GetConsistentSetOfItemsFromDirectory(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString,CATBoolean,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)"><b>GetConsistentSetOfItemsFromDirectory</b></a>(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString,CATBoolean,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)
<dd>  Searches list of pointed items in a specific list of directories.
 <dt> o 
    <a href="#GetImpactedDrawingsFromDirectory(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)"><b>GetImpactedDrawingsFromDirectory</b></a>(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)
<dd>  Searches list of impacted Drawings.
 <dt> o 
    <a href="#GetItemFromFile(CATUnicodeString&amp;,CATIxPDMItem_var&amp;)"><b>GetItemFromFile</b></a>(CATUnicodeString&amp;,CATIxPDMItem_var&amp;)
<dd>  Retrieves an item from a file path.
 <dt> o 
    <a href="#SearchRootItems(CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)"><b>SearchRootItems</b></a>(CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)
<dd>  Searches root items in a list of directories.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ItemCompatibility"><b>ItemCompatibility</b></a>
<dd>  Compatibility status between two items.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CheckItemCompatibility"></a><a name="CheckItemCompatibility(CATIxPDMItem_var&amp;,CATIxPDMItem_var&amp;,ItemCompatibility&amp;)"></a> <dt> o <b>CheckItemCompatibility</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckItemCompatibility</b>(<td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iFirstItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iSecondItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ItemCompatibility','ItemCompatibility&amp;')</script> <td><tt>oCompatibility</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks that two items are compatible.
 <br><b>Role:</b>This method checks that two items are compatible.
 This check is the mandatory condition to replace the first item by the second one.
 <p>Notice that this test is not enough to insure that links put on first item will
 solve on second item, but this is the minimum condition (it does not insure that pointed
 geometry is available in document for example). </p>
 <p>This method does not require that the two files associated with the items are loaded in session. </p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstItem</tt>
   <dd>   The first item to compare.
 </dd>
    <dt><tt> iSecondItem</tt>
   <dd>   The second item to compare.
 </dd>
    <dt><tt> oCompatibility</tt>
   <dd>   The result of comparison.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The comparison is successfully done </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1002:</tt></li>
       One input item is invalid.    
  </ul>
  </ul>
</dl>
</dl>
<a name="CreateSendToService"></a><a name="CreateSendToService(CATIxPDMSendToService_var&amp;,CATUnicodeString&amp;,CATBoolean,CATUnicodeString&amp;)"></a> <dt> o <b>CreateSendToService</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateSendToService</b>(<td><script type="text/javascript"> activateLink('CATIxPDMSendToService_var','CATIxPDMSendToService_var&amp;')</script> <td><tt>oSendToServices</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTargetDirectory</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iKeepDirectory</tt><td><tt>= CATFalse</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iReportFile</tt><td><tt>= CATUnicodeString("")</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a Send To service pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTargetDirectory</tt>
   <dd>   The destination directory where the sent files will be copied.
   The target directory must already exist on disk.
 </dd>
    <dt><tt> iKeepDirectory</tt>
   <dd>   The option to control the tree structure creation in the target directory. 
   <ul><li><tt>iKeepDirectory=1:</tt> to preserve the relative tree structure of the files.
       This option will be effective only if there is a common root directory for all files.</li>
       <li><tt>iKeepDirectory=0:</tt> this is the default value. The files are directly copied in the destination directory. 
   </ul>
 </dd>
    <dt><tt> iReportFile</tt>
   <dd>   Localization of the report file. If the null string value ("") is used, no report is done. Null string is the default value.
 </dd>
    <dt><tt> oSendToServices</tt>
   <dd>   The pointer to a new instance of Send To service.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: if Send To service is successfully created. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_2000:</tt></li>
       Invalid Input.
       <li><tt>InputERR_2001:</tt></li>
       The target directory doesn't exist.
      <li><tt>InputERR_2003:</tt></li>
       The report file path does not exist.
   </ul>
</dl>
</dl>
<a name="GetConsistentSetOfItems"></a><a name="GetConsistentSetOfItems(CATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)"></a> <dt> o <b>GetConsistentSetOfItems</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConsistentSetOfItems</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iRootItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfExistingPointedItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfMissingPointedItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Searches list of pointed items.
 <br><b>Role:</b>This method allows identify  recursively all pointed items
 by a given root item. The result is divided into two lists:
  <ul>
    <li>The <b>existing</b> pointed items</li>
    <p>It is the list of items whose the associated file exists on the disk. 
        The root item itself is included into this list.</p>
    <li>The <b>missing</b> pointed items</li>
    <p>It is the list of items whose the associated file does not exist on the disk. 
   </ul>
 <p>The concatenation of these two lists is the same list as those computed by the Send To services. In other words it 
  is the <b>consistent set of files</b> for a file. This is
 the mandatory files list to insure that all links will be resolved.  </p>
 <p>Links between items are resolved with current activated locators. It means that result of
 this method will be greatly impacted by your current locator settings (See Tools/Options/General, Documents Tab). </p>
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootItem</tt>
   <dd>   The root item to compute the consistent set of files from.
 </dd>
    <dt><tt> oListOfExistingPointedItem</tt>
   <dd>   The list of existing  pointed items.
   An existing item has a file found on disk
   using current locators (Relative Folder, Other Folders...).
   There is no garanty on this list order, it could be change at any time.
   <tt>iRootItem</tt> is always in this list.
 </dd>
    <dt><tt> oListOfMissingPointedItem</tt>
   <dd>   The list of missing pointed items. A missing item has a file not found on disk
   using current locators (Relative Folder, Other Folders...).
   There is no garanty on this list order, it could be change at any time.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The consistent set of items is successfully computed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1006:</tt></li>
       Error during the process.
      <li><tt>InputERR_1119:</tt></li>
       An item is loaded and modified in session, it should be saved before. Item name (the 
       
<a href="#" onClick="openLink('CATIxPDMItem','GetDocFileName');return false">CATIxPDMItem.GetDocFileName</a> string ) is available in message.               
  </ul>
  </ul>
</dl>
</dl>
<a name="GetConsistentSetOfItemsFromDirectory"></a><a name="GetConsistentSetOfItemsFromDirectory(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString,CATBoolean,CATListValCATIxPDMItem_var&amp;,CATListValCATIxPDMItem_var&amp;)"></a> <dt> o <b>GetConsistentSetOfItemsFromDirectory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConsistentSetOfItemsFromDirectory</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iRootItem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString')</script> <td><tt>iListOfDirectory</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iScanRecursively</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfExistingPointedItem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfMissingPointedItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Searches list of pointed items in a specific list of directories.
 <br><b>Role:</b>This method allows identify  recursively all pointed items
 by a given root item. The result is divided into two lists:
  <ul>
    <li>The <b>existing</b> pointed items</li>
    <p>It is the list of items whose the associated file exists on the disk. 
        The root item itself is included into this list.</p>
    <li>The <b>missing</b> pointed items</li>
    <p>It is the list of items whose the associated file does not exist on the disk. 
   </ul>
 <p>The concatenation of these two lists is the same list as those computed by the Send To services. In other words it 
  is the <b>consistent set of files</b> for a file. This is
 the mandatory files list to insure that all links will be resolved.  </p>
 <p>Links between items are resolved inside list of directories provided as input. </p>
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootItem</tt>
   <dd>   The root item to compute the consistent set of files from.
 </dd>
    <dt><tt> iListOfDirectory</tt>
   <dd>   The list of directories to scan. Each element of the list must be the absolute path of a directory. 
   Like C:\tmp\MyDir(Windows) or /home/temp/MyDir (Unix).
 </dd>
    <dt><tt> iScanRecursively</tt>
   <dd>   If <tt>TRUE</tt>, sub-directoryies will be scanned also.
 </dd>
    <dt><tt> oListOfExistingPointedItem</tt>
   <dd>   The list of existing  pointed items.
   An existing item has a file found on disk
   using current locators (Relative Folder, Other Folders...).
   There is no garanty on this list order, it could be change at any time.
   <tt>iRootItem</tt> is always in this list.
 </dd>
    <dt><tt> oListOfMissingPointedItem</tt>
   <dd>   The list of missing pointed items. A missing item has a file not found on disk
   using current locators (Relative Folder, Other Folders...).
   There is no garanty on this list order, it could be change at any time.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The consistent set of items is successfully computed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1006:</tt></li>
       Error during the process.
      <li><tt>InputERR_1112:</tt></li>
       Impossible to open a directory. The directory path name available in error message.
      <li><tt>InputERR_1119:</tt></li>
       An item is loaded and modified in session, it should be saved before. Item name (the 
       
<a href="#" onClick="openLink('CATIxPDMItem','GetDocFileName');return false">CATIxPDMItem.GetDocFileName</a> string ) is available in message.               
  </ul>
  </ul>
</dl>
</dl>
<a name="GetImpactedDrawingsFromDirectory"></a><a name="GetImpactedDrawingsFromDirectory(CATIxPDMItem_var&amp;,CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)"></a> <dt> o <b>GetImpactedDrawingsFromDirectory</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImpactedDrawingsFromDirectory</b>(<td> const <script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>iRootItem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iListOfDirectory</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iScanRecursively</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfImpactedDrawingsItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Searches list of impacted Drawings.
 <br><b>Role:</b>This method retrieves CATDrawings impacted by one item.
 <p>Drawings are searched inside list of directories provided as input. </p>
 <p>If some CATDrawing are still loaded and modified in session, API will fail because it will not be able
    to check its links correctly. </p>
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRootItem</tt>
   <dd>   The root item to compute the consistent set of files from. This item should be a CATPart or a CATProduct.
 </dd>
    <dt><tt> iListOfDirectory</tt>
   <dd>   The list of directories to scan. Each element of the list must be the absolute path of a directory. 
   Like C:\tmp\MyDir(Windows) or /home/temp/MyDir (Unix).
 </dd>
    <dt><tt> iScanRecursively</tt>
   <dd>   If <tt>TRUE</tt>, sub-directoryies will be scanned also.
 </dd>
    <dt><tt> oListOfImpactedDrawingsItem</tt>
   <dd>   The list of impacted CATDrawing by iRootItem.
   There is no garanty on this list order, it could be change at any time.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The list has been successfully computed (it could be empty). </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1006:</tt></li>
       Error during the process.
      <li><tt>InputERR_1112:</tt></li>
       Impossible to open a directory. The directory path name available in error message.
      <li><tt>InputERR_1132:</tt></li>
       A CATDrawing is still opened and modified in session, CATDrawing name available in error message.
  </ul>
  </ul>
</dl>
</dl>
<a name="GetItemFromFile"></a><a name="GetItemFromFile(CATUnicodeString&amp;,CATIxPDMItem_var&amp;)"></a> <dt> o <b>GetItemFromFile</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetItemFromFile</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iInputFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIxPDMItem_var','CATIxPDMItem_var&amp;')</script> <td><tt>oPDMItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves an item from a file path.
 <br><b>Role:</b>This method creates,or retrieves in session, an item 
 from a file path. This method does not load the file in session.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputFilePath</tt>
   <dd>   The path of the input file 
 </dd>
    <dt><tt> oPDMItem</tt>
   <dd>   The returned item. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: method successful, <tt>oPDMItem</tt> is correctly returned. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1113:</tt></li>
       <tt>iInputFilePath </tt> not found on disk.
  </ul>
  </ul>

</dl>
</dl>
<a name="SearchRootItems"></a><a name="SearchRootItems(CATListOfCATUnicodeString&amp;,CATBoolean,CATListValCATIxPDMItem_var&amp;)"></a> <dt> o <b>SearchRootItems</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SearchRootItems</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iListOfDirectory</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iScanRecursively</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATIxPDMItem_var','CATListValCATIxPDMItem_var&amp;')</script> <td><tt>oListOfRootItem</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Searches root items in a list of directories.
 <br><b>Role:</b>This method scans all files in the input directories to find which one
 are root files. Root file means not pointed by another file contained into a directory of the input list.
 <p>For example, a file A1 in directory A is pointed by another file B1 in directory B. If you call
 this method with directory A and B, only B1 will be returned as root. </p>
  <p>The item associated with a root file is
 either created or retrieved in session, and added in the output list. </p>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfDirectory</tt>
   <dd>   The list of directories to scan. Each element of the list must be the absolute path of a directory. 
   Like C:\tmp\MyDir(Windows) or
   /home/temp/MyDir (Unix).
 </dd>
    <dt><tt> iScanRecursively</tt>
   <dd>   If <tt>TRUE</tt>, sub-directoryies will be scanned also.
 </dd>
    <dt><tt> oListOfRootItem</tt>
   <dd>   The list of root items.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
   <li><tt>S_OK</tt>: The root list is successfully computed. </li> 
   <li><tt>E_FAIL</tt>: The method has failed. The possible <b>returned errors </b> (listed by their identifier) are:</li>
   <ul>
      <li><tt>InputERR_1001:</tt></li>
       The PX1 licence is not available.
      <li><tt>InputERR_1008:</tt></li>
       The input directory list is empty.
      <li><tt>InputERR_1112:</tt></li>
       Impossible to open a directory. The directory path name available in error message.
      <li><tt>InputERR_1113:</tt></li>
       A file could not be read ( no read access right for example ). The file name available in error message. 
      <li><tt>InputERR_1122:</tt></li>
       Some files are involved in a cycle, no roots can be found for those files. In this case, this method return
       E_FAIL with list of file involved in cycle in error message but other roots are (without cycle) are computed
       and returned normally in oListOfRootItem.
  </ul>
  </ul>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ItemCompatibility"> <dt> o <b>ItemCompatibility</b>
<dl>
  <dd>
<pre>
enum <b>ItemCompatibility</b> {
  FullCompatible,
  CompatibleExeptFileName,
  NotCompatible
}
</pre>
 Compatibility status between two items.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FullCompatible</tt>
   <dd>        The two items are fully compatible.
 </dd>
    <dt><tt> CompatibleExeptFileName</tt>
   <dd>        The two items are compatible except file name. Rename one file on your disk to be <tt>FullCompatible</tt>
 </dd>
    <dt><tt> NotCompatible</tt>
   <dd>        The two items are not compatible.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATxPDMFileServices','CheckItemCompatibility');return false">CATxPDMFileServices.CheckItemCompatibility</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATxPDMFileServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATxPDMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
