<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Tessellation Class CATTessTrianIter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Tessellation.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTessTrianIter','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTessTrianIter','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTessTrianIter','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTessTrianIter','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Tessellation Class CATTessTrianIter</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTessTrianIter_20534','CATTessTrianIter','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTessTrianIter</b>
</p>
<p>
<b><i> Class defining the iterator on the triangles resulting from a Tessellation operator.</i></b><br>

 <br> Such iterator is directly created by the <a href="#" onClick="openLink('CATBodyTessellator','GetFace');return false">CATBodyTessellator.GetFace</a> or 
<a href="#" onClick="openLink('CATCellTessellator','GetFace');return false">CATCellTessellator.GetFace</a> methods. Its deletion is managed at the CATBodyTessellator and CATCellTessellator deletion. 
 <br> Use it according to the following scheme:
 <ul>
 <li> Retrieve the number of triangles 
 <li> Go the next result
 <li> Retrieve the result
 <li> Optionally, reset to begin again.
 </ul>
 <p> This class also allows you to directly retrieve the results in an array that 
 you have to allocate and deallocate after use.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTessTrianIter()"><b>~CATTessTrianIter</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetNbTrian()"><b>GetNbTrian</b></a>()
<dd>  Returns the number of triangles.
 <dt> o 
    <a href="#GetTrianAllNuPts(int[][3])"><b>GetTrianAllNuPts</b></a>(int[][3])
<dd>  Globally retrieves the points ranks for all the triangles.
 <dt> o 
    <a href="#GetTrianNuPts(int[3])"><b>GetTrianNuPts</b></a>(int[3])
<dd>  Retrieves the points ranks (as int) defining the current triangle.
 <dt> o 
    <a href="#GetTrianNuPts(CATLONG32[3])"><b>GetTrianNuPts</b></a>(CATLONG32[3])
<dd>  Retrieves the points ranks (as CATLONG32) defining the current triangle.
 <dt> o 
    <a href="#GoToNext()"><b>GoToNext</b></a>()
<dd>  Skips to the next triangle.
 <dt> o 
    <a href="#IsExhausted()"><b>IsExhausted</b></a>()
<dd>  Tests whether the list is completed.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Resets the iterator to the beginning.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTessTrianIter"></a><a name="~CATTessTrianIter()"></a> <dt> o <b>~CATTessTrianIter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTessTrianIter</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetNbTrian"></a><a name="GetNbTrian()"></a> <dt> o <b>GetNbTrian</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','inline CATLONG32')</script>  <b>GetNbTrian</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of triangles.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of triangles.
</dl>
</dl>
<a name="GetTrianAllNuPts"></a><a name="GetTrianAllNuPts(int[][3])"></a> <dt> o <b>GetTrianAllNuPts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetTrianAllNuPts</b>(<td><script type="text/javascript"> activateLink('int[][3','int[][3]')</script> <td><tt>iNuPts</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Globally retrieves the points ranks for all the triangles.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioNuPts[][3]</tt>
   <dd> The array of the point numbers. The allocation has to be managed by
 the caller:  its dimension: <tt>3* (strip->GetNbTrian())</tt>.</dd>
</dl>
</dl>
</dl>
<a name="GetTrianNuPts"></a><a name="GetTrianNuPts(int[3])"></a> <dt> o <b>GetTrianNuPts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetTrianNuPts</b>(<td><script type="text/javascript"> activateLink('int[3','int[3]')</script> <td><tt>iNuPts</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the points ranks (as int) defining the current triangle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuPts</tt>
   <dd> The array [3] allocated by the caller.</dd>
</dl>
</dl>
</dl>
<a name="GetTrianNuPts"></a><a name="GetTrianNuPts(CATLONG32[3])"></a> <dt> o <b>GetTrianNuPts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetTrianNuPts</b>(<td><script type="text/javascript"> activateLink('CATLONG32[3','CATLONG32[3]')</script> <td><tt>iNuPts</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the points ranks (as CATLONG32) defining the current triangle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNuPts</tt>
   <dd> The array [3] allocated by the caller.</dd>
</dl>
</dl>
</dl>
<a name="GoToNext"></a><a name="GoToNext()"></a> <dt> o <b>GoToNext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GoToNext</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next triangle.
</dl>
<a name="IsExhausted"></a><a name="IsExhausted()"></a> <dt> o <b>IsExhausted</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsExhausted</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the list is completed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>1</tt> if the list is completed, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets the iterator to the beginning.
</dl>
<hr>
 This object is included in the file: <b>CATTessTrianIter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTessellation</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
