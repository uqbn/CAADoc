<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CAACloudQsrItf Interface CATIQsrCAAPowerFit</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CAACloudQsrItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIQsrCAAPowerFit','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIQsrCAAPowerFit','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIQsrCAAPowerFit','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIQsrCAAPowerFit','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CAACloudQsrItf Interface CATIQsrCAAPowerFit</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIQsrCAAPowerFit_27492','CATIQsrCAAPowerFit','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIQsrCAAPowerFit</b>
</p>
<p>
<b><i> Interface defining a PowerFit.</i></b><br>

 <br><b>Role</b>: The PowerFit's algorithm is used to create :
 <br> - An untrimmed surface supported by one cloud of points and/or curves.
 <br> - A surface supported or not by one cloud of points and trimmed by an external boundary. 
 <br>A CATIQsrCAAPowerFit is created through the <tt>CreatePowerFit</tt> method
 of the <tt>CATIQsrCAAFactory</tt> interface and deleted with the <tt>Remove</tt> method.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDistanceFace(int,float*,float*,boolean&amp;,float&amp;,int&amp;)"><b>GetDistanceFace</b></a>(int,float*,float*,boolean&amp;,float&amp;,int&amp;)
<dd>  Gets the description of a point and its orthogonal projection on the result face.
 <dt> o 
    <a href="#GetErrorAboveValue(double,int*&amp;,int&amp;,double&amp;,int&amp;)"><b>GetErrorAboveValue</b></a>(double,int*&amp;,int&amp;,double&amp;,int&amp;)
<dd>  Gets the points the error of which is greater than a given value.
 <dt> o 
    <a href="#GetStatisticError(double&amp;,double&amp;,double&amp;,int&amp;)"><b>GetStatisticError</b></a>(double&amp;,double&amp;,double&amp;,int&amp;)
<dd>  Gets the maximum error, the mean error and the standard deviation.
 <dt> o 
    <a href="#MakeFace(CATBody*&amp;,CATFace*&amp;,int&amp;)"><b>MakeFace</b></a>(CATBody*&amp;,CATFace*&amp;,int&amp;)
<dd>  Runs the algorithm.
 <dt> o 
    <a href="#SetCloudOfPoints(float*,int,int&amp;)"><b>SetCloudOfPoints</b></a>(float*,int,int&amp;)
<dd>  Sets the cloud of points.
 <dt> o 
    <a href="#SetCurveUse(int,int&amp;)"><b>SetCurveUse</b></a>(int,int&amp;)
<dd>  Sets the curves'use for the computation.
 <dt> o 
    <a href="#SetCurves(CATLISTP(CATCell)&amp;,CATLISTP(CATCell)&amp;,CATListOfInt&amp;,double&amp;,int&amp;)"><b>SetCurves</b></a>(CATLISTP(CATCell)&amp;,CATLISTP(CATCell)&amp;,CATListOfInt&amp;,double&amp;,int&amp;)
<dd>  Sets the constrained curves.
 <dt> o 
    <a href="#SetDgSpans(int,int&amp;)"><b>SetDgSpans</b></a>(int,int&amp;)
<dd>  Sets the span degree.
 <dt> o 
    <a href="#SetG0GlobalCurves(double,int&amp;)"><b>SetG0GlobalCurves</b></a>(double,int&amp;)
<dd>  Sets the tolerance G0 on each Edge.
 <dt> o 
    <a href="#SetG0Points(double,int&amp;)"><b>SetG0Points</b></a>(double,int&amp;)
<dd>  Sets the tolerance on the points.
 <dt> o 
    <a href="#SetG1GlobalCurves(double,int&amp;)"><b>SetG1GlobalCurves</b></a>(double,int&amp;)
<dd>  Sets the tolerance G1 on each Edge if the tangency constraint is required.
 <dt> o 
    <a href="#SetNbSpans(int,int&amp;)"><b>SetNbSpans</b></a>(int,int&amp;)
<dd>  Sets the maximum spans number of the NUBS result surface.
 <dt> o 
    <a href="#SetPipeRadius(double,int&amp;)"><b>SetPipeRadius</b></a>(double,int&amp;)
<dd>  Sets the radius of the pipe.
 <dt> o 
    <a href="#SetSurfaceInit(CATSurface*,int&amp;)"><b>SetSurfaceInit</b></a>(CATSurface*,int&amp;)
<dd>  Sets the initial surface.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDistanceFace"></a><a name="GetDistanceFace(int,float*,float*,boolean&amp;,float&amp;,int&amp;)"></a> <dt> o <b>GetDistanceFace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDistanceFace</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumero</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oPtInput</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oPtOutput</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean&amp;')</script> <td><tt>oDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the description of a point and its orthogonal projection on the result face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumero</tt>
   <dd>    The point number.
   <br><b>Legal values </b>:
   <dl><dt> 0 <= <tt>iNumero</tt> <= Number of points - 1.</dl>
 </dd>
    <dt><tt> oPtInput</tt>
   <dd>    The coordinates of the original point.
 </dd>
    <dt><tt> oPtOutput</tt>
   <dd>    The coordinates of the orthogonal projection of <tt>oPtInput</tt> on the result face.
 </dd>
    <dt><tt> oDirection</tt>
   <dd>    The error's direction.
   <br><b>Legal values </b>:
   <dl><dt> <tt>TRUE</tt> means that the direction (<tt>oPtOutput</tt> -> <tt>oPtInput</tt>) is the same as the normal direction of the result face.</dl>
 </dd>
    <dt><tt> oDistance</tt>
   <dd>    The distance between the two points.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that there was an error in the MakeFace method (no face is computed).</dl></dd>
</dl>
</dl>
</dl>
<a name="GetErrorAboveValue"></a><a name="GetErrorAboveValue(double,int*&amp;,int&amp;,double&amp;,int&amp;)"></a> <dt> o <b>GetErrorAboveValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetErrorAboveValue</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oIdPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oPercent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the points the error of which is greater than a given value.
 <br>Use the GetDistanceFace method in a loop from 0 to (<tt>oNbPoints</tt> - 1) to get the coordinates of each point before and after.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd>    The threshold value of the error.
 </dd>
    <dt><tt> oIdPoints</tt>
   <dd>    The pointer for the result array.
 </dd>
    <dt><tt> oNbPoints</tt>
   <dd>    The number of points of <tt>oIdPoints</tt>.
 </dd>
    <dt><tt> oPercent</tt>
   <dd>    The ratio between <tt>oNbPoints</tt> and the original number of points.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that there was an error in the MakeFace method (no face is computed).</dl></dd>
</dl>
</dl>
</dl>
<a name="GetStatisticError"></a><a name="GetStatisticError(double&amp;,double&amp;,double&amp;,int&amp;)"></a> <dt> o <b>GetStatisticError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStatisticError</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oMaxErr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oMeanErr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oStdDev</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the maximum error, the mean error and the standard deviation.
 <br>The error on one point is the distance between the point and its orthogonal projection on the surface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMaxErr</tt>
   <dd>    The maximum error.
 </dd>
    <dt><tt> oMeanErr</tt>
   <dd>    The mean error.
 </dd>
    <dt><tt> oStdDev</tt>
   <dd>    The standard deviation.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that there was an error in the MakeFace method (no face is computed).</dl></dd>
</dl>
</dl>
</dl>
<a name="MakeFace"></a><a name="MakeFace(CATBody*&amp;,CATFace*&amp;,int&amp;)"></a> <dt> o <b>MakeFace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MakeFace</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*&amp;')</script> <td><tt>oBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFace','CATFace*&amp;')</script> <td><tt>oFace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Runs the algorithm.
 <br>It computes the filling face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBody</tt>
   <dd>    The body that contains the result face.
 </dd>
    <dt><tt> oFace</tt>
   <dd>    The result face.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that the discontinuity G0 in the boundary is greater than the curves tolerance.
       <dt>2<dd>Means that there are not enough constraints, points or curves.
       <dt>3<dd>Means that some points are in counter draft.
       <dt>4<dd>Means that a PlateFe error occurred.
       <dt>5<dd>Means that the quality of the surface is too poor (high frequency). There are probably some bad points in the set of points or some points may be in a not detected counter draft.
       <dt>10<dd>Means that a precedent error occurred while using other methods of this interface.
       <dt>Other<dd>Means that an internal error occurred, no significance for the user.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetCloudOfPoints"></a><a name="SetCloudOfPoints(float*,int,int&amp;)"></a> <dt> o <b>SetCloudOfPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCloudOfPoints</b>(<td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iPoints</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the cloud of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoints</tt>
   <dd>    The coordinates (in float) of the points, 3 coordinates by point.
 </dd>
    <dt><tt> iNbPoints</tt>
   <dd>    Number of points. The minimum size of <tt>iPoints</tt> is (3 * <tt>iNbPoints</tt>).
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iPoints</tt> is not valid or that <tt>iNbPoints</tt> is smaller than zero.
       <dt>2<dd>Means that the allocation of <tt>iPoints</tt> is not possible.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetCurveUse"></a><a name="SetCurveUse(int,int&amp;)"></a> <dt> o <b>SetCurveUse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurveUse</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCurveUse</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the curves'use for the computation.
 <br>If this method is not used, the default value for the computation is 0.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurveUse</tt>
   <dd>    The use of the boundary loaded by SetCurves.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>The surface is computed on the points and the curves. The curves become the edges of the surface.
       <dt>1<dd>The surface is computed on the points. The curves are then projected on the surface to trim it. 
       <dt>1<dd>The surface is computed on the points located inside the curves. The surface is not trimmed.</dl>
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iCurveUse</tt> is not equal to 0, 1 or 2.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetCurves"></a><a name="SetCurves(CATLISTP(CATCell)&amp;,CATLISTP(CATCell)&amp;,CATListOfInt&amp;,double&amp;,int&amp;)"></a> <dt> o <b>SetCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurves</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iListOfEdge</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iListOfFace</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>iListOfContact</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oGapG0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the constrained curves.
 <br>These curves determine the boundary of the result face.
 <br>Only the points inside the boundary are used to compute the surface result.
 <br>Important : See CurveUse for more information on the boundary's use.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfEdge</tt>
   <dd>    The list of the constrained edges.
   <br><b>Note :</b> The edge's order in the <tt>iListOfEdge</tt> is not important.
 </dd>
    <dt><tt> iListOfFace</tt>
   <dd>   In regard with <tt>iListOfEdge</tt>, the list of associated faces, NULL if you have no face.
 </dd>
    <dt><tt> iListOfContact</tt>
   <dd>   In regard with <tt>iListOfEdge</tt>, the nature of contact. 
   <br><b>Legal values </b>:
   <dl><dt>0<dd>If you want a simple passage with the Edge.
       <dt>1<dd>If you want a tangency with the mandatory corresponding Face.</dl>
 </dd>
    <dt><tt> oGapG0</tt>
   <dd>   The biggest hole G0 continuity computed on the <tt>iListOfEdge</tt>
 </dd>
    <dt><tt> oStatus</tt>
   <dd>   Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that there are no edges or that one edge is equal to NULL.
       <dt>2<dd>Means that there is only one edge. A boundary of a face with one edge is not possible.
       <dt>3<dd>Means that one of the contact values is neither equal to 0 nor equal to 1.
       <dt>4<dd>Means that a contact is equal to 1 and there is no Face corresponding.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetDgSpans"></a><a name="SetDgSpans(int,int&amp;)"></a> <dt> o <b>SetDgSpans</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDgSpans</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDgSpans</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the span degree.
 <br>The degree is the same for each span.
 <br>If this method is not used, the default value for the computation is 5 (minimum value for NUBS C2).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDgSpans</tt>
   <dd>    The span degree.
   <br><b>Legal values </b>:
   <dl><dt> 3 <= <tt>iDgSpans</tt> <= 12.</dl>
   <br><b>Note :</b> If the maximum number of spans is equal to 1, the span degree could be equal to 3 or 4.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iDgSpans</tt> is smaller than 2 or higher than 13.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetG0GlobalCurves"></a><a name="SetG0GlobalCurves(double,int&amp;)"></a> <dt> o <b>SetG0GlobalCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetG0GlobalCurves</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTolG0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the tolerance G0 on each Edge.
 <br>If this method is not used, the default value for the computation is 0.1.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTolG0</tt>
   <dd>    The acceptable mean error between the Edge and its image on the result surface.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iTolG0</tt> is smaller than 0.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetG0Points"></a><a name="SetG0Points(double,int&amp;)"></a> <dt> o <b>SetG0Points</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetG0Points</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTolG0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the tolerance on the points.
 <br>If this method is not used, the default value for the computation is 0.5.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTolG0</tt>
   <dd>    The tolerance. It is the acceptable mean error between the points and the result surface.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iTolG0</tt> is smaller than zero.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetG1GlobalCurves"></a><a name="SetG1GlobalCurves(double,int&amp;)"></a> <dt> o <b>SetG1GlobalCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetG1GlobalCurves</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTolG1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the tolerance G1 on each Edge if the tangency constraint is required.
 <br>If this method is not used, the default value for the computation is 2.5 Degree.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTolG1</tt>
   <dd>    The acceptable mean error between the Edge and its image on the result surface.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iTolG1</tt> is smaller than 0.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetNbSpans"></a><a name="SetNbSpans(int,int&amp;)"></a> <dt> o <b>SetNbSpans</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetNbSpans</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbSpans</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the maximum spans number of the NUBS result surface.
 <br>If this method is not used, the default value for the computation is 64.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbSpans</tt>
   <dd>    The maximum number of spans.
   <br><b>Note :</b> The result is a Bezier patch if the maximum number of spans is equal to 1.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iNbSpans</tt> is smaller than zero.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetPipeRadius"></a><a name="SetPipeRadius(double,int&amp;)"></a> <dt> o <b>SetPipeRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPipeRadius</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the radius of the pipe.
 <br>The points inside a circular pipe centered on each curve and defined by its radius are deleted
 in order to minimize the risk of undulations.
 <br>If this method is not used, the default value for the computation is -1.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRadius</tt>
   <dd>    The radius of the pipe.
   If its value is -1, the algorithm, using a heuristic, computes the radius automatically.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.</dl></dd>
</dl>
</dl>
</dl>
<a name="SetSurfaceInit"></a><a name="SetSurfaceInit(CATSurface*,int&amp;)"></a> <dt> o <b>SetSurfaceInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSurfaceInit</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iInitSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the initial surface.
 <br>If this method is not used, the default for the computation is the median plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitSurface</tt>
   <dd>    The initial surface. The parameterization of the result surface is the same as <tt>iInitSurface</tt>.
 </dd>
    <dt><tt> oStatus</tt>
   <dd>    Information.
   <br><b>Legal values </b>:
   <dl><dt>0<dd>Means that everything is OK.
       <dt>1<dd>Means that <tt>iInitSurface</tt> is not valid.</dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIQsrCAAPowerFit.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATCloudQsrCAAItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
