<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ENOVIAPlugIn Class ENOVPublishedBy</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ENOVIAPlugIn.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVPublishedBy','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishedBy','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVPublishedBy','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishedBy','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ENOVIAPlugIn Class ENOVPublishedBy</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_ENOVPublishedBy_17778','ENOVPublishedBy','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>ENOVPublishedBy</b>
</p>
<p>
<b><i> Object used as start-up to generate this publishing stream.</i></b><br>

 <b>Role</b>: 
 
 <br><b>Tags define on "Publishing by" object</b>:
 <ul>
 <li><tt>PrimaryTypeName:</tt> The name of object base type.</li>
 <li><tt>SecondaryTypeName:</tt> The name of final object type.</li>
 <li><tt>TimeStamp:</tt> Date & time of the publishing stream.</li>
 <li><tt>SecondaryTypeOid:</tt> the internal id (Oid) of the object type.</li>
 <li><tt>Oid:</tt> Object internal Id.</li>
 </ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ENOVPublishedBy(ENOVPublishObject*)"><b>ENOVPublishedBy</b></a>(ENOVPublishObject*)
<dd>  Constructs a Publish By object.
 <dt> o 
    <a href="#ENOVPublishedBy(ENOVPublishedBy&amp;)"><b>ENOVPublishedBy</b></a>(ENOVPublishedBy&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~ENOVPublishedBy()"><b>~ENOVPublishedBy</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetOid(unsigned char*&amp;,int&amp;)"><b>GetOid</b></a>(unsigned char*&amp;,int&amp;)
<dd>  Returns the internal id (Oid) of the object instance.
 <dt> o 
    <a href="#GetPrimaryType(char*&amp;)"><b>GetPrimaryType</b></a>(char*&amp;)
<dd>  Returns the name of object base type.
 <dt> o 
    <a href="#GetSecondaryType(char*&amp;)"><b>GetSecondaryType</b></a>(char*&amp;)
<dd>  Returns the name of final object type.
 <dt> o 
    <a href="#GetTimeStamp(char*&amp;)"><b>GetTimeStamp</b></a>(char*&amp;)
<dd>  Returns date & time of the Object node.
 <dt> o 
    <a href="#GetTypeId(unsigned char*&amp;,int&amp;)"><b>GetTypeId</b></a>(unsigned char*&amp;,int&amp;)
<dd>  Returns the internal id (Oid) of the object type.
 <dt> o 
    <a href="#Print(int)"><b>Print</b></a>(int)
<dd>  Print a report on standard output.
 <dt> o 
    <a href="#operator=(ENOVPublishedBy&amp;)"><b>operator=</b></a>(ENOVPublishedBy&amp;)
<dd>  Assignment operator from another object node.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="ENOVPublishedBy"></a><a name="ENOVPublishedBy(ENOVPublishObject*)"></a> <dt> o <b>ENOVPublishedBy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishedBy</b>(<td><script type="text/javascript"> activateLink('ENOVPublishObject','ENOVPublishObject*')</script> <td><tt>ixFather</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a Publish By object.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixFather</tt>
   <dd> Points to the father node for this object.</dd>
</dl>
</dl>
</dl>
<a name="ENOVPublishedBy"></a><a name="ENOVPublishedBy(ENOVPublishedBy&amp;)"></a> <dt> o <b>ENOVPublishedBy</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishedBy</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishedBy','ENOVPublishedBy&amp;')</script> <td><tt>ixPublishBy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixPublishBy</tt>
   <dd> Object to be duplicated.</dd>
</dl>
</dl>
</dl>
<a name="~ENOVPublishedBy"></a><a name="~ENOVPublishedBy()"></a> <dt> o <b>~ENOVPublishedBy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~ENOVPublishedBy</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetOid"></a><a name="GetOid(unsigned char*&amp;,int&amp;)"></a> <dt> o <b>GetOid</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetOid</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*&amp;')</script> <td><tt>obOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onLenOid</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal id (Oid) of the object instance.

 <br><b>Role</b>: Returns the binary value corresponding internal id (Oid)
 of the object instance.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obOid</tt>
   <dd>  Binary string value.
 
 </dd>
    <dt><tt> onLenOid</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="GetPrimaryType"></a><a name="GetPrimaryType(char*&amp;)"></a> <dt> o <b>GetPrimaryType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetPrimaryType</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocPrimaryType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of object base type.

 <br><b>Role</b>: Returns the name of object base type, ie the ENOVIA standard object
 class that will be customized on site. 
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocPrimaryType</tt>
   <dd>  Type Name of the base object.</dd>
</dl>
</dl>
</dl>
<a name="GetSecondaryType"></a><a name="GetSecondaryType(char*&amp;)"></a> <dt> o <b>GetSecondaryType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSecondaryType</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocSecondaryType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of final object type.

 <br><b>Role</b>: Returns the name of object type, ie the real name of 
 ENOVIA object.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocSecondaryType</tt>
   <dd>  Type Name of the object.</dd>
</dl>
</dl>
</dl>
<a name="GetTimeStamp"></a><a name="GetTimeStamp(char*&amp;)"></a> <dt> o <b>GetTimeStamp</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTimeStamp</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocTimeStamp</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns date & time of the Object node.

 <br><b>Role</b>: Enables to know object timestamp at time information has been
 extracted.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocTimeStamp</tt>
   <dd>  Date & time information.
 <br><b>Legal values</b>: Date is expressed using one ISO 8601 format called
 Extended format for ordinal date and time of the day (Application will used
 Coordinated Universal Time UTC)  
 <table>
    <tr><td><b>CCYY-MM-DDThh:mm:ss</b></td> <td>"2000-00-01T00:00:01"</td></tr>
    <tr><td><b>CCYY-MM-DDThh:mm</b></td>    <td>"2000-00-01T00:00"</td></tr>
    <tr><td><b>CCYY-MM-DD</b></td>          <td>"2000-00-01" No time information set to 00:00:00</td></tr>
    <tr><td><b>hh:mm:ss</b></td>            <td>"12:00:00" means today at noon</td></tr>
    <tr><td><b>hh:mm</b></td>               <td>"14:00"  means today at 2 pm</td></tr>
 </table>
 <br>Where:
 <table>
    <tr><td><b>CC</b></td>  <td>represents the century component</td></tr>
    <tr><td><b>YY</b></td>  <td>represents the year within century</td></tr>
    <tr><td><b>MM</b></td>  <td>represents months starting with January [1, 12]</td></tr>
    <tr><td><b>DD</b></td>  <td>represents the day in the month [1, 31]</td></tr>
    <tr><td><b>hh</b></td>  <td>represents hours from beginning of days</td></tr>
    <tr><td><b>mm</b></td>  <td>represents minutes</td></tr>
    <tr><td><b>ss</b></td>  <td>represents seconds</td></tr>
 </table></dd>
</dl>
</dl>
</dl>
<a name="GetTypeId"></a><a name="GetTypeId(unsigned char*&amp;,int&amp;)"></a> <dt> o <b>GetTypeId</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTypeId</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*&amp;')</script> <td><tt>ocSecondaryTypeOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onLength</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal id (Oid) of the object type.

 <br><b>Role</b>: Returns the binary value corresponding internal id (Oid)
 of the object type.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocSecondaryTypeOid</tt>
   <dd>  Binary string value.
 
 </dd>
    <dt><tt> onLength</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="Print"></a><a name="Print(int)"></a> <dt> o <b>Print</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Print</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>nLevel</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Print a report on standard output.

 <br><b>Role</b>: Print the content of this node and its children.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inLevel</tt>
   <dd> Enable to have an indented presentation according to the tree depth of the node.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(ENOVPublishedBy&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('ENOVPublishedBy','const ENOVPublishedBy &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishedBy','ENOVPublishedBy&amp;')</script> <td><tt>ixNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from another object node.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixNode</tt>
   <dd> Object used as reference for the assignment.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVPublishedBy.h</b><br>
If needed, your Imakefile.mk should include the module: <b>ENOVIAPubStream</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
