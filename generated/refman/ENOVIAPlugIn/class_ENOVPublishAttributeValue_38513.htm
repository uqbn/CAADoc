<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ENOVIAPlugIn Class ENOVPublishAttributeValue</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ENOVIAPlugIn.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVPublishAttributeValue','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishAttributeValue','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVPublishAttributeValue','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishAttributeValue','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ENOVIAPlugIn Class ENOVPublishAttributeValue</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_ENOVPublishAttributeValue_38513','ENOVPublishAttributeValue','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>ENOVPublishAttributeValue</b>
</p>
<p>
<b><i> Class enabling to manage value node for a Multi-valuated Attribute node.</i></b><br>


 <b>Role</b>: This class enables to manage attribute values for a Multi-valuated 
 Attribute node.
 <br>
 <br><b>No Tag is defined on Attribute Value</b>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVPublishAttributeNode','');return false">ENOVPublishAttributeNode</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ENOVPublishAttributeValue(ENOVPublishObject*,int)"><b>ENOVPublishAttributeValue</b></a>(ENOVPublishObject*,int)
<dd>  Constructs an Attribute value node.
 <dt> o 
    <a href="#ENOVPublishAttributeValue(ENOVPublishAttributeValue&amp;)"><b>ENOVPublishAttributeValue</b></a>(ENOVPublishAttributeValue&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~ENOVPublishAttributeValue()"><b>~ENOVPublishAttributeValue</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#EncodeValue(char*)"><b>EncodeValue</b></a>(char*)
<dd>   Enables to encode attribute value.
 <dt> o 
    <a href="#GetTimeValue(time_t&amp;)"><b>GetTimeValue</b></a>(time_t&amp;)
<dd>  Returns attribute value for a date & time value Attribute.
 <dt> o 
    <a href="#GetValue(int&amp;)"><b>GetValue</b></a>(int&amp;)
<dd>  Returns attribute value for an integer value.
 <dt> o 
    <a href="#GetValue(char*&amp;)"><b>GetValue</b></a>(char*&amp;)
<dd>  Returns attribute value for string or date & time.
 <dt> o 
    <a href="#GetValue(double&amp;)"><b>GetValue</b></a>(double&amp;)
<dd>  Returns attribute value for a floating point value.
 <dt> o 
    <a href="#GetValue(CATUnicodeString&amp;)"><b>GetValue</b></a>(CATUnicodeString&amp;)
<dd>  Returns attribute value for string.
 <dt> o 
    <a href="#GetValue(unsigned char*&amp;,int&amp;)"><b>GetValue</b></a>(unsigned char*&amp;,int&amp;)
<dd>  Returns attribute value for a binary value.
 <dt> o 
    <a href="#GetValueType(int&amp;)"><b>GetValueType</b></a>(int&amp;)
<dd>  Returns the type value for this attribute.
 <dt> o 
    <a href="#IsModificationAuthorized()"><b>IsModificationAuthorized</b></a>()
<dd>  Returns if attribute modification is authorized.
 <dt> o 
    <a href="#Print(int)"><b>Print</b></a>(int)
<dd>  Print a report on standard output.
 <dt> o 
    <a href="#SetTimeValue(time_t)"><b>SetTimeValue</b></a>(time_t)
<dd>  Sets attribute value for an date & time value.
 <dt> o 
    <a href="#SetValue(int)"><b>SetValue</b></a>(int)
<dd>  Sets attribute value for an integer value.
 <dt> o 
    <a href="#SetValue(char*)"><b>SetValue</b></a>(char*)
<dd>  Sets attribute value for a string or date & time value.
 <dt> o 
    <a href="#SetValue(double)"><b>SetValue</b></a>(double)
<dd>  Sets attribute value for a floating point value.
 <dt> o 
    <a href="#SetValue(unsigned char*,int)"><b>SetValue</b></a>(unsigned char*,int)
<dd>  Sets attribute value for a binary value.
 <dt> o 
    <a href="#SetValue(CATUnicodeString&amp;)"><b>SetValue</b></a>(CATUnicodeString&amp;)
<dd>  Sets attribute value for a string.
 <dt> o 
    <a href="#operator=(ENOVPublishAttributeValue&amp;)"><b>operator=</b></a>(ENOVPublishAttributeValue&amp;)
<dd>  Copy constructor.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="ENOVPublishAttributeValue"></a><a name="ENOVPublishAttributeValue(ENOVPublishObject*,int)"></a> <dt> o <b>ENOVPublishAttributeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishAttributeValue</b>(<td><script type="text/javascript"> activateLink('ENOVPublishObject','ENOVPublishObject*')</script> <td><tt>ixFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValueType</tt><td><tt>= ENOVPublishUnknown </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an Attribute value node.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixFather</tt>
   <dd> Points to the father attribute node (</dd>
<a href="#" onClick="openLink('ENOVPublishAttributeNode','');return false">ENOVPublishAttributeNode</a> ) for this value node. 
 
    <dt><tt> inValueType</tt>
   <dd> Attribute value type
 <br><b>Legal values</b>: It can be set to either:
 <ul>
 <li><tt>ENOVPublishTypeInteger</tt> For integer value</li>
 <li><tt>ENOVPublishTypeReal</tt> For real value</li>
 <li><tt>ENOVPublishTypeString</tt> For character string value</li>
 <li><tt>ENOVPublishTypeBinary</tt> For binary value</li>
 <li><tt>ENOVPublishTypeOid</tt> For Object id value (an hexa-decimal string)</li>
 <li><tt>ENOVPublishTypeUid</tt> For symbolic link value</li>
 <li><tt>ENOVPublishTypeTimestamp</tt> For timestamp value</li>
 <li><tt>ENOVPublishTypeVaultReference</tt> For Vault reference value</li>
 </ul></dd>
</dl>
</dl>
</dl>
<a name="ENOVPublishAttributeValue"></a><a name="ENOVPublishAttributeValue(ENOVPublishAttributeValue&amp;)"></a> <dt> o <b>ENOVPublishAttributeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishAttributeValue','ENOVPublishAttributeValue&amp;')</script> <td><tt>ixNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixNode</tt>
   <dd> Object to be duplicated.</dd>
</dl>
</dl>
</dl>
<a name="~ENOVPublishAttributeValue"></a><a name="~ENOVPublishAttributeValue()"></a> <dt> o <b>~ENOVPublishAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~ENOVPublishAttributeValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="EncodeValue"></a><a name="EncodeValue(char*)"></a> <dt> o <b>EncodeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>EncodeValue</b>(<td><script type="text/javascript"> activateLink('char','char*')</script> <td><tt>ocValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
  Enables to encode attribute value.

 <br><b>Role</b>: Enables to encode current attribute value.
 (This method could be usefull when an Attribute is search by its value)
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocValue</tt>
   <dd>  A character string long enough to get the result.
 <ul>
 <li>10 characters for <tt>ENOVPublishTypeInteger</tt></li>
 <li>16 characters for <tt>ENOVPublishTypeReal</tt></li>
 <li>4 times the number of characters for <tt>ENOVPublishTypeString</tt></li>
 <li>Twice the number of bytes plus 2 <tt>ENOVPublishTypeBinary</tt></li>
 <li>34 characters for <tt>ENOVPublishTypeOid</tt> or <tt>ENOVPublishTypeUid</tt></li>
 <li>18 characters for <tt>ENOVPublishTypeTimestamp</tt></li>
 <li>Twice the number of bytes plus 2 <tt>ENOVPublishTypeVaultReference</tt></li>
 </ul></dd>
</dl>
</dl>
</dl>
<a name="GetTimeValue"></a><a name="GetTimeValue(time_t&amp;)"></a> <dt> o <b>GetTimeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTimeValue</b>(<td><script type="text/javascript"> activateLink('time_t','time_t&amp;')</script> <td><tt>otValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a date & time value Attribute.

 <br><b>Role</b>: Enables to read date & time value of the Attribute value node.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> otValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(int&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for an integer value.

 <br><b>Role</b>: Enables to read integer value of the Attribute value node.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onValue</tt>
   <dd> Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(char*&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for string or date & time.

 <br><b>Role</b>: Enables to read value of the Attribute node for string or date & time.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocValue</tt>
   <dd>  Attribute value.
 <br><b>Legal values</b>: Date is expressed using one ISO 8601 format called
 Extended format for ordinal date and time of the day (Application will used
 Coordinated Universal Time UTC) (cf </dd>
<a href="#" onClick="openLink('ENOVPublishAttributeNode','');return false">ENOVPublishAttributeNode</a> )
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(double&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>odValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a floating point value.

 <br><b>Role</b>: Enables to read floating point value of the Attribute value.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> odValue</tt>
   <dd> Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(CATUnicodeString&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>ocValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for string.

 <br><b>Role</b>: Enables to read value of the Attribute node for string.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(unsigned char*&amp;,int&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*&amp;')</script> <td><tt>obValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onValueLength</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a binary value.

 <br><b>Role</b>: Enables to read binary value of the Attribute value node.
 (This method needs to be invoked for 
 <tt>ENOVPublishTypeOid</tt>, <tt>ENOVPublishTypeUid</tt> and
 <tt>ENOVPublishTypeVaultReference</tt> attributes.)
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obValue</tt>
   <dd>  Binary string value.
 
 </dd>
    <dt><tt> onValueLength</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="GetValueType"></a><a name="GetValueType(int&amp;)"></a> <dt> o <b>GetValueType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValueType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>nAttributeType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the type value for this attribute.

 <br><b>Role</b>: Enables to access to Attribute name information.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onValueType</tt>
   <dd> Attribute value type
 <br><b>Legal values</b>: It can be set to either:
 <ul>
 <li><tt>ENOVPublishTypeInteger</tt> For integer value</li>
 <li><tt>ENOVPublishTypeReal</tt> For real value</li>
 <li><tt>ENOVPublishTypeString</tt> For character string value</li>
 <li><tt>ENOVPublishTypeBinary</tt> For binary value</li>
 <li><tt>ENOVPublishTypeOid</tt> For Object id value (an hexa-decimal string)</li>
 <li><tt>ENOVPublishTypeUid</tt> For symbolic link value</li>
 <li><tt>ENOVPublishTypeTimestamp</tt> For timestamp value</li>
 <li><tt>ENOVPublishTypeVaultReference</tt> For Vault reference value</li>
 </ul></dd>
</dl>
</dl>
</dl>
<a name="IsModificationAuthorized"></a><a name="IsModificationAuthorized()"></a> <dt> o <b>IsModificationAuthorized</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsModificationAuthorized</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if attribute modification is authorized.

 <br><b>Role</b>: Returns if attribute modification is authorized.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Define the access mode for this attribute
 <br><b>Legal values:</b> It can be set to either:
 <ul>
 <li><tt>ENOVPublishNoAccess</tt>  To forbid any access 
 <li><tt>ENOVPublishReadOnly</tt>  To authorize read only access
 <li><tt>ENOVPublishReadWrite</tt> To autorize read and write access
 <ul/>
</dl>
</dl>
<a name="Print"></a><a name="Print(int)"></a> <dt> o <b>Print</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Print</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inLevel</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Print a report on standard output.

 <br><b>Role</b>: Print the content of this node and its children.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inLevel</tt>
   <dd> Enable to have an indented presentation according to the tree depth of the node.</dd>
</dl>
</dl>
</dl>
<a name="SetTimeValue"></a><a name="SetTimeValue(time_t)"></a> <dt> o <b>SetTimeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetTimeValue</b>(<td><script type="text/javascript"> activateLink('time_t','time_t')</script> <td><tt>itValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for an date & time value.

 <br><b>Role</b>: Sets date & time value of the Attribute node in case of 
 mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> itValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(int)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for an integer value.

 <br><b>Role</b>: Sets value of the integer Attribute value node.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValue</tt>
   <dd> Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(char*)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>icValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a string or date & time value.

 <br><b>Role</b>: Sets string or date & time value of the Attribute value node.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>idValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a floating point value.

 <br><b>Role</b>: Sets floating point value of the Attribute value.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> idValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(unsigned char*,int)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*')</script> <td><tt>ibValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValueLength</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a binary value.

 <br><b>Role</b>: Sets binary value of the Attribute value node.
 (This method needs to be invoked for 
 <tt>ENOVPublishTypeOid</tt>, <tt>ENOVPublishTypeUid</tt> and
 <tt>ENOVPublishTypeVaultReference</tt> attributes.)
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibValue</tt>
   <dd>  Attribute value.
 
 </dd>
    <dt><tt> inValueLength</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(CATUnicodeString&amp;)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>icValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a string.

 <br><b>Role</b>: Sets string of the Attribute value node.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(ENOVPublishAttributeValue&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('ENOVPublishAttributeValue','const ENOVPublishAttributeValue &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishAttributeValue','ENOVPublishAttributeValue&amp;')</script> <td><tt>ixNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixNode</tt>
   <dd> Object to be duplicated.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVPublishAttributeValue.h</b><br>
If needed, your Imakefile.mk should include the module: <b>ENOVIAPubStream</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
