<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ENOVIAPlugIn Class ENOVPublishAttributeNode</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ENOVIAPlugIn.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVPublishAttributeNode','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishAttributeNode','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVPublishAttributeNode','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVPublishAttributeNode','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ENOVIAPlugIn Class ENOVPublishAttributeNode</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_ENOVPublishAttributeNode_35679','ENOVPublishAttributeNode','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>ENOVPublishAttributeNode</b>
</p>
<p>
<b><i> Class to manage attribute definition and value.</i></b><br>


 <b>Role</b>: This class enables to manage attribute definition and value
 defined on an Object node. The attribute node can support only one value
 (mono-valuation) or several (multi-valuation). On an attribute, we define its
 name, the type of values (integer, real, character string, binary, Object id,
 symbolic link, timestamp or Vault reference) and the access authorization
 (No access, read only or read/Write).
 <br>
 <br><b>Tags define on Attribute node</b>:
 <ul>
 <li><tt>TypeName</tt> Attribute name.</li>
 <li><tt>ValueType</tt> Attribute value type.</li>
 <li><tt>AccessMode</tt> Access mode.</li>
 <li><tt>Status</tt> Modification Status (Attribute modified or not).</li>
 <li><tt>Mandatory</tt> Indicates if the attribute must to be valuated.</li>
 <li><tt>Key</tt> Indicates if the attribute is involved in uniqueness indentification.</li>
 <li><tt>Multi</tt> Indicates if the attribute support multiple values.</li>
 <li>Or the name of the attribute indicating that the predicate
 deals with the attribute value.</li>
 </ul>
 <br> 
 <br><b>Case of timestamp values:</b> Date is expressed using one ISO 8601 format called
 Extended format for ordinal date and time of the day (Application will used
 Coordinated Universal Time UTC)
 <table>
    <tr><td><b>CCYY-MM-DDThh:mm:ss</b></td> <td>"2000-00-01T00:00:01"</td></tr>
    <tr><td><b>CCYY-MM-DDThh:mm</b></td>    <td>"2000-00-01T00:00"</td></tr>
    <tr><td><b>CCYY-MM-DD</b></td>          <td>"2000-00-01" No time information set to 00:00:00</td></tr>
    <tr><td><b>hh:mm:ss</b></td>            <td>"12:00:00" means today at noon</td></tr>
    <tr><td><b>hh:mm</b></td>               <td>"14:00"  means today at 2 pm</td></tr>
 </table>
 <br>Where:
 <table>
    <tr><td><b>CC</b></td>  <td>represents the century component</td></tr>
    <tr><td><b>YY</b></td>  <td>represents the year within century</td></tr>
    <tr><td><b>MM</b></td>  <td>represents months starting with January [1, 12]</td></tr>
    <tr><td><b>DD</b></td>  <td>represents the day in the month [1, 31]</td></tr>
    <tr><td><b>hh</b></td>  <td>represents hours from beginning of days</td></tr>
    <tr><td><b>mm</b></td>  <td>represents minutes</td></tr>
    <tr><td><b>ss</b></td>  <td>represents seconds</td></tr>
 </table></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ENOVPublishAttributeNode(ENOVPublishAttributeNode&amp;)"><b>ENOVPublishAttributeNode</b></a>(ENOVPublishAttributeNode&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#ENOVPublishAttributeNode(ENOVPublishObject*,char*,int,int)"><b>ENOVPublishAttributeNode</b></a>(ENOVPublishObject*,char*,int,int)
<dd>  Constructs an Attribute object node.
 <dt> o 
    <a href="#~ENOVPublishAttributeNode()"><b>~ENOVPublishAttributeNode</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetName(char*&amp;)"><b>GetName</b></a>(char*&amp;)
<dd>  Returns the attribute name.
 <dt> o 
    <a href="#GetNumberOfValues(int&amp;)"><b>GetNumberOfValues</b></a>(int&amp;)
<dd>  Returns the number of values for this attribute.
 <dt> o 
    <a href="#GetTimeValue(time_t&amp;)"><b>GetTimeValue</b></a>(time_t&amp;)
<dd>  Returns attribute value for a date & time  value.
 <dt> o 
    <a href="#GetValue(int&amp;)"><b>GetValue</b></a>(int&amp;)
<dd>  Returns attribute value for an integer value.
 <dt> o 
    <a href="#GetValue(char*&amp;)"><b>GetValue</b></a>(char*&amp;)
<dd>  Returns attribute value for string or date & time.
 <dt> o 
    <a href="#GetValue(double&amp;)"><b>GetValue</b></a>(double&amp;)
<dd>  Returns attribute value for a floating point value.
 <dt> o 
    <a href="#GetValue(unsigned char*&amp;,int&amp;)"><b>GetValue</b></a>(unsigned char*&amp;,int&amp;)
<dd>  Returns attribute value for a binary value.
 <dt> o 
    <a href="#GetValue(int,ENOVPublishAttributeValue*&amp;)"><b>GetValue</b></a>(int,ENOVPublishAttributeValue*&amp;)
<dd>  Returns one of values for this attribute.
 <dt> o 
    <a href="#GetValueType(int&amp;)"><b>GetValueType</b></a>(int&amp;)
<dd>  Returns the type value for this attribute.
 <dt> o 
    <a href="#IsKeyAttribute()"><b>IsKeyAttribute</b></a>()
<dd>  Returns if attribute participates to uniqueness indentification.
 <dt> o 
    <a href="#IsMandatory()"><b>IsMandatory</b></a>()
<dd>  Returns if attribute must be valuated.
 <dt> o 
    <a href="#IsModificationAuthorized()"><b>IsModificationAuthorized</b></a>()
<dd>  Returns if attribute modification is authorized.
 <dt> o 
    <a href="#IsMultipleValueAuthorized()"><b>IsMultipleValueAuthorized</b></a>()
<dd>  Returns if attribute supports mono-valuation or multi-valuation.
 <dt> o 
    <a href="#Print(int)"><b>Print</b></a>(int)
<dd>  Print a report on standard output.
 <dt> o 
    <a href="#SetTimeValue(time_t)"><b>SetTimeValue</b></a>(time_t)
<dd>  Sets attribute value for an date & time value.
 <dt> o 
    <a href="#SetValue(int)"><b>SetValue</b></a>(int)
<dd>  Sets attribute value for an integer value.
 <dt> o 
    <a href="#SetValue(char*)"><b>SetValue</b></a>(char*)
<dd>  Sets attribute value for a string or date & time value.
 <dt> o 
    <a href="#SetValue(double)"><b>SetValue</b></a>(double)
<dd>  Sets attribute value for a floating point value.
 <dt> o 
    <a href="#SetValue(unsigned char*,int)"><b>SetValue</b></a>(unsigned char*,int)
<dd>  Sets attribute value for a binary value.
 <dt> o 
    <a href="#operator=(ENOVPublishAttributeNode&amp;)"><b>operator=</b></a>(ENOVPublishAttributeNode&amp;)
<dd>  Assignment operator from another object node.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="ENOVPublishAttributeNode"></a><a name="ENOVPublishAttributeNode(ENOVPublishAttributeNode&amp;)"></a> <dt> o <b>ENOVPublishAttributeNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishAttributeNode</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishAttributeNode','ENOVPublishAttributeNode&amp;')</script> <td><tt>ixNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixNode</tt>
   <dd> Object to be duplicated.</dd>
</dl>
</dl>
</dl>
<a name="ENOVPublishAttributeNode"></a><a name="ENOVPublishAttributeNode(ENOVPublishObject*,char*,int,int)"></a> <dt> o <b>ENOVPublishAttributeNode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>ENOVPublishAttributeNode</b>(<td><script type="text/javascript"> activateLink('ENOVPublishObject','ENOVPublishObject*')</script> <td><tt>ixFather</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>icTypeName</tt><td><tt>= NULL </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValueType</tt><td><tt>= ENOVPublishTypeString </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>ilMultiValuated</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an Attribute object node.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixFather</tt>
   <dd> Pointer to the Publish Stream object father for this PublishedBy object.

 </dd>
    <dt><tt> icTypeName</tt>
   <dd> Attribute name (identifier).

 </dd>
    <dt><tt> inValueType</tt>
   <dd> Attribute value type
 <br><b>Legal values</b>: It can be set to either:
 <ul>
 <li><tt>ENOVPublishTypeInteger</tt> For integer value</li>
 <li><tt>ENOVPublishTypeReal</tt> For real value</li>
 <li><tt>ENOVPublishTypeString</tt> For character string value</li>
 <li><tt>ENOVPublishTypeBinary</tt> For binary value</li>
 <li><tt>ENOVPublishTypeOid</tt> For Object id value (an hexa-decimal string)</li>
 <li><tt>ENOVPublishTypeUid</tt> For symbolic link value</li>
 <li><tt>ENOVPublishTypeTimestamp</tt> For timestamp value</li>
 <li><tt>ENOVPublishTypeVaultReference</tt> For Vault reference value</li>
 </ul>
 </dd>
    <dt><tt> ilMultiValuated</tt>
   <dd> Define if the Attribute node is mono-valuated or multi-valuated
 <br><b>Legal values</b>: 0 means mono-valuated (default value)
</dd>
</dl>
</dl>
</dl>
<a name="~ENOVPublishAttributeNode"></a><a name="~ENOVPublishAttributeNode()"></a> <dt> o <b>~ENOVPublishAttributeNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~ENOVPublishAttributeNode</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetName"></a><a name="GetName(char*&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetName</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocTypeName</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the attribute name.

 <br><b>Role</b>: Enables to access to Attribute name information.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocTypeName</tt>
   <dd>  Attribute identifier.</dd>
</dl>
</dl>
</dl>
<a name="GetNumberOfValues"></a><a name="GetNumberOfValues(int&amp;)"></a> <dt> o <b>GetNumberOfValues</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfValues</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onbValues</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of values for this attribute.

 <br><b>Role</b>: Returns the number of values for this attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onbValues</tt>
   <dd> Number of values (0 in case of mono-valuated attribute)</dd>
</dl>
</dl>
</dl>
<a name="GetTimeValue"></a><a name="GetTimeValue(time_t&amp;)"></a> <dt> o <b>GetTimeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTimeValue</b>(<td><script type="text/javascript"> activateLink('time_t','time_t&amp;')</script> <td><tt>otValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a date & time  value.

 <br><b>Role</b>: Enables to read date & time value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 3 if attribute not valuated.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> otValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(int&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for an integer value.

 <br><b>Role</b>: Enables to read integer value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 3 if attribute not valuated.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onValue</tt>
   <dd> Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(char*&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>ocValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for string or date & time.

 <br><b>Role</b>: Enables to read value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 3 if attribute not valuated.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ocValue</tt>
   <dd>  Attribute value.
 <br><b>Legal values</b>: Date is expressed using one ISO 8601 format called
 Extended format for ordinal date and time of the day (Application will used
 Coordinated Universal Time UTC) (cf </dd>
<a href="#" onClick="openLink('ENOVPublishAttributeNode','');return false">ENOVPublishAttributeNode</a> )
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(double&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>odValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a floating point value.

 <br><b>Role</b>: Enables to read floating point value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 3 if attribute not valuated.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> odValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(unsigned char*&amp;,int&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*&amp;')</script> <td><tt>obValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onValueLength</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns attribute value for a binary value.

 <br><b>Role</b>: Enables to read binary value of the Attribute node in case of 
 a mono-valuated attribute. (This method needs to be invoked for 
 <tt>ENOVPublishTypeOid</tt>, <tt>ENOVPublishTypeUid</tt> and
 <tt>ENOVPublishTypeVaultReference</tt> attributes.)
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 3 if attribute not valuated.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> obValue</tt>
   <dd>  Binary string value.
 
 </dd>
    <dt><tt> onValueLength</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(int,ENOVPublishAttributeValue*&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValuePos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVPublishAttributeValue','ENOVPublishAttributeValue*&amp;')</script> <td><tt>oxValue</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns one of values for this attribute.

 <br><b>Role</b>: Access to attribute values per value position.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValuePos</tt>
   <dd> Value indices.
 
 </dd>
    <dt><tt> oxValue</tt>
   <dd> Attribute value object corresponding to the attribute at 
 <tt>inValuePos</tt> position.</dd>
</dl>
</dl>
</dl>
<a name="GetValueType"></a><a name="GetValueType(int&amp;)"></a> <dt> o <b>GetValueType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetValueType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>onValueType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the type value for this attribute.

 <br><b>Role</b>: Enables to access to Attribute name information.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>: Returns 0 if operation runs well. 
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> onValueType</tt>
   <dd> Attribute value type
 <br><b>Legal values</b>: It can be set to either:
 <ul>
 <li><tt>ENOVPublishTypeInteger</tt> For integer value</li>
 <li><tt>ENOVPublishTypeReal</tt> For real value</li>
 <li><tt>ENOVPublishTypeString</tt> For character string value</li>
 <li><tt>ENOVPublishTypeBinary</tt> For binary value</li>
 <li><tt>ENOVPublishTypeOid</tt> For Object id value (an hexa-decimal string)</li>
 <li><tt>ENOVPublishTypeUid</tt> For symbolic link value</li>
 <li><tt>ENOVPublishTypeTimestamp</tt> For timestamp value</li>
 <li><tt>ENOVPublishTypeVaultReference</tt> For Vault reference value</li>
 </ul></dd>
</dl>
</dl>
</dl>
<a name="IsKeyAttribute"></a><a name="IsKeyAttribute()"></a> <dt> o <b>IsKeyAttribute</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsKeyAttribute</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if attribute participates to uniqueness indentification.
 <br><b>Role</b>: Returns if attribute participates to uniqueness indentification.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Defines if the Attribute is a key attribute or not.
 <br><b>Legal values</b>: 0 means that this attribute is not a key attribute.
</dl>
</dl>
<a name="IsMandatory"></a><a name="IsMandatory()"></a> <dt> o <b>IsMandatory</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsMandatory</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if attribute must be valuated.

 <br><b>Role</b>: Returns if attribute must be valuated at creation time.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Defines if the Attribute must be valuated.
 <br><b>Legal values</b>: 0 means optional valuation for this attribute.
</dl>
</dl>
<a name="IsModificationAuthorized"></a><a name="IsModificationAuthorized()"></a> <dt> o <b>IsModificationAuthorized</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsModificationAuthorized</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if attribute modification is authorized.

 <br><b>Role</b>: Returns if attribute modification is authorized.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Define the access mode for this attribute
 <br><b>Legal values:</b> It can be set to either:
 <ul>
 <li><tt>ENOVPublishNoAccess</tt>  To forbid any access 
 <li><tt>ENOVPublishReadOnly</tt>  To authorize read only access
 <li><tt>ENOVPublishReadWrite</tt> To autorize Read and write access
 <ul/>
</dl>
</dl>
<a name="IsMultipleValueAuthorized"></a><a name="IsMultipleValueAuthorized()"></a> <dt> o <b>IsMultipleValueAuthorized</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsMultipleValueAuthorized</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns if attribute supports mono-valuation or multi-valuation.

 <br><b>Role</b>: Returns if attribute supports mono-valuation or multi-valuation.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Defines if the Attribute node is mono-valuated or multi-valuated
 <br><b>Legal values</b>: 0 means mono-valuated
</dl>
</dl>
<a name="Print"></a><a name="Print(int)"></a> <dt> o <b>Print</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Print</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inLevel</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Print a report on standard output.

 <br><b>Role</b>: Print the content of this node and its children.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inLevel</tt>
   <dd> Enable to have an indented presentation according to the tree depth of the node.</dd>
</dl>
</dl>
</dl>
<a name="SetTimeValue"></a><a name="SetTimeValue(time_t)"></a> <dt> o <b>SetTimeValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetTimeValue</b>(<td><script type="text/javascript"> activateLink('time_t','time_t')</script> <td><tt>itValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for an date & time value.

 <br><b>Role</b>: Sets date & time value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 <li>Returns 5 if attribute modification could not be done.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> itValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(int)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for an integer value.

 <br><b>Role</b>: Sets value of the integer Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 <li>Returns 5 if attribute modification could not be done.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValue</tt>
   <dd> Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(char*)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>icValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a string or date & time value.

 <br><b>Role</b>: Sets string or date & time value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 <li>Returns 5 if attribute modification could not be done.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> inValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>idValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a floating point value.

 <br><b>Role</b>: Sets floating point value of the Attribute node in case of 
 a mono-valuated attribute.
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 <li>Returns 5 if attribute modification could not be done.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> idValue</tt>
   <dd>  Attribute value.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(unsigned char*,int)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('unsigned char','unsigned char*')</script> <td><tt>ibValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>inValueLength</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets attribute value for a binary value.

 <br><b>Role</b>: Sets binary value of the Attribute node in case of 
 a mono-valuated attribute. (This method needs to be invoked for 
 <tt>ENOVPublishTypeOid</tt>, <tt>ENOVPublishTypeUid</tt> and
 <tt>ENOVPublishTypeVaultReference</tt> attributes.)
 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Method return code 
 <br><b>Legal values</b>:
 <ul>
 <li>Returns 0 if operation runs well.</li>
 <li>Returns 1 if attribute has not a requested type.</li>
 <li>Returns 2 if attribute multi-valuated.</li>
 <li>Returns 4 if attribute modification not authorized.</li>
 <li>Returns 5 if attribute modification could not be done.</li>
 </ul>
 
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ibValue</tt>
   <dd>  Attribute value.
 
 </dd>
    <dt><tt> inValueLength</tt>
   <dd>  Binary string length.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(ENOVPublishAttributeNode&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('ENOVPublishAttributeNode','const ENOVPublishAttributeNode &')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('ENOVPublishAttributeNode','ENOVPublishAttributeNode&amp;')</script> <td><tt>ixNode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from another object node.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ixNode</tt>
   <dd> Object used as reference for the assignment.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVPublishAttributeNode.h</b><br>
If needed, your Imakefile.mk should include the module: <b>ENOVIAPubStream</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
