<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectSpecsModeler Interface CATISpecAttrAccess</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ObjectSpecsModeler.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISpecAttrAccess','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISpecAttrAccess','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISpecAttrAccess','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISpecAttrAccess','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ObjectSpecsModeler Interface CATISpecAttrAccess</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISpecAttrAccess_34865','CATISpecAttrAccess','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISpecAttrAccess</b>
</p>
<p>
<b><i> Provides access to the value(s) of an attribute.</i></b><br>

 <br><b>Role</b>:This interface is implemented on a feature.
 It allows you to access ( get and set ) to attribute values 
 and type via a CATISpecAttrKey obtained by GetAttrKey.

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecAttrKey','');return false">CATISpecAttrKey</a>, <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAccess(CATISpecAttrKey*)"><b>GetAccess</b></a>(CATISpecAttrKey*)
<dd>  Returns the access mode.
 <dt> o 
    <a href="#GetAttrKey(char*)"><b>GetAttrKey</b></a>(char*)
<dd>  Returns the key allowing access to an attribute value.
 <dt> o 
    <a href="#GetBoolean(CATISpecAttrKey*,int)"><b>GetBoolean</b></a>(CATISpecAttrKey*,int)
<dd>  Retrieves the CATBoolean value of an attribute by key.
 <dt> o 
    <a href="#GetDouble(CATISpecAttrKey*,int)"><b>GetDouble</b></a>(CATISpecAttrKey*,int)
<dd>  Retrieves the double value of an attribute by key.
 <dt> o 
    <a href="#GetExternalObject(CATISpecAttrKey*,CATFlavorParam,CATILinkableObject**,int)"><b>GetExternalObject</b></a>(CATISpecAttrKey*,CATFlavorParam,CATILinkableObject**,int)
<dd>  Retrieves the object pointed via the specified tk_external attribute.
 <dt> o 
    <a href="#GetFinalSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"><b>GetFinalSpecAttribute</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,int)
<dd>  Returns the key of the final attribute in an attribute-attribute link (or chain of links).
 <dt> o 
    <a href="#GetInteger(CATISpecAttrKey*,int)"><b>GetInteger</b></a>(CATISpecAttrKey*,int)
<dd>  Retrieves the integer value of an attribute by key.
 <dt> o 
    <a href="#GetListDouble(CATISpecAttrKey*)"><b>GetListDouble</b></a>(CATISpecAttrKey*)
<dd>  Retrieves the list of values of an attribute of type tk_double by key.
 <dt> o 
    <a href="#GetListInteger(CATISpecAttrKey*)"><b>GetListInteger</b></a>(CATISpecAttrKey*)
<dd>  Retrieves the list of values of an attribute of type tk_integer by key.
 <dt> o 
    <a href="#GetListOctet(CATISpecAttrKey*)"><b>GetListOctet</b></a>(CATISpecAttrKey*)
<dd>  Retrieves the list of values of an attribute of type tk_octet by key.
 <dt> o 
    <a href="#GetListSize(CATISpecAttrKey*)"><b>GetListSize</b></a>(CATISpecAttrKey*)
<dd>  Returns the size of the list valuating an attribute.
 <dt> o 
    <a href="#GetListString(CATISpecAttrKey*)"><b>GetListString</b></a>(CATISpecAttrKey*)
<dd>  Retrieves the list of values of an attribute of type tk_string by key.
 <dt> o 
    <a href="#GetListType(CATISpecAttrKey*)"><b>GetListType</b></a>(CATISpecAttrKey*)
<dd>  Returns the type of the list valuating an attribute.
 <dt> o 
    <a href="#GetLiteral(CATISpecAttrKey*,IID&amp;)"><b>GetLiteral</b></a>(CATISpecAttrKey*,IID&amp;)
<dd>  Returns the CATBaseUnknown* corresponding to a new literal.
 <dt> o 
    <a href="#GetOctet(CATISpecAttrKey*,int)"><b>GetOctet</b></a>(CATISpecAttrKey*,int)
<dd>  Retrieves the octet value of an attribute by key.
 <dt> o 
    <a href="#GetPosition(CATISpecAttrKey*,CATISpecObject_var&amp;)"><b>GetPosition</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;)
<dd>  On a list of tk_specobject or tk_compo, returns the index of a given object.
 <dt> o 
    <a href="#GetQuality(CATISpecAttrKey*)"><b>GetQuality</b></a>(CATISpecAttrKey*)
<dd>  Returns the quality of the Attribute.
 <dt> o 
    <a href="#GetSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"><b>GetSpecAttribute</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,int)
<dd>  In the case of an attr-attr link, retrieves the "real" attribute, the one whose value is pointed by the link.
 <dt> o 
    <a href="#GetSpecObject(CATISpecAttrKey*,int)"><b>GetSpecObject</b></a>(CATISpecAttrKey*,int)
<dd>       access key to attribute.
 <dt> o 
    <a href="#GetString(CATISpecAttrKey*,int)"><b>GetString</b></a>(CATISpecAttrKey*,int)
<dd>  Retrieves the string value of an attribute by key.
 <dt> o 
    <a href="#GetTimeStamp(CATISpecAttrKey*)"><b>GetTimeStamp</b></a>(CATISpecAttrKey*)
<dd>  
 <dt> o 
    <a href="#InsertAtPosition(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"><b>InsertAtPosition</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,int)
<dd>  Insert feature iValue at position i in a list attribute.
 <dt> o 
    <a href="#IsOfType(CATISpecAttrKey*)"><b>IsOfType</b></a>(CATISpecAttrKey*)
<dd>  
 <dt> o 
    <a href="#IsUpToDate(CATISpecAttrKey*)"><b>IsUpToDate</b></a>(CATISpecAttrKey*)
<dd>  Returns the update status of the attribute.
 <dt> o 
    <a href="#ListAttrKeys(CATListValCATISpecAttrKey_var&amp;)"><b>ListAttrKeys</b></a>(CATListValCATISpecAttrKey_var&amp;)
<dd>  Returns a list of keys to access values of attributes.
 <dt> o 
    <a href="#ListAttrNames()"><b>ListAttrNames</b></a>()
<dd>  Returns the list of the names of the attributes belonging to the feature.
 <dt> o 
    <a href="#ListPointingObjects(IID&amp;,CATISpecAttrKey*,CATISpecAttrKey*)"><b>ListPointingObjects</b></a>(IID&amp;,CATISpecAttrKey*,CATISpecAttrKey*)
<dd>  Lists all objects pointing this feature.
 <dt> o 
    <a href="#ListSpecObjects(CATISpecAttrKey*,IID&amp;)"><b>ListSpecObjects</b></a>(CATISpecAttrKey*,IID&amp;)
<dd>  Lists SpecObjects referred to by the attribute.
 <dt> o 
    <a href="#ListSpecObjects(CATISpecAttrKey*,CATClassId)"><b>ListSpecObjects</b></a>(CATISpecAttrKey*,CATClassId)
<dd>  Lists SpecObjects referred to by the attribute.
 <dt> o 
    <a href="#MoveInPosition(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"><b>MoveInPosition</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,int)
<dd>  Modifies the position in the list of a value of the list valuating attribute.
 <dt> o 
    <a href="#RemoveAll(CATISpecAttrKey*)"><b>RemoveAll</b></a>(CATISpecAttrKey*)
<dd>  Deletes all values in the attribute iName.
 <dt> o 
    <a href="#RemovePosition(CATISpecAttrKey*,int)"><b>RemovePosition</b></a>(CATISpecAttrKey*,int)
<dd>  Deletes the value at index iIndex in the attribute iName.
 <dt> o 
    <a href="#RemoveSpecObject(CATISpecAttrKey*,CATISpecObject_var&amp;)"><b>RemoveSpecObject</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;)
<dd>  Removes an element of the list valuating an attribute.
 <dt> o 
    <a href="#SetAccess(CATISpecAttrKey*,CATAttrAccess)"><b>SetAccess</b></a>(CATISpecAttrKey*,CATAttrAccess)
<dd>  
 <dt> o 
    <a href="#SetBoolean(CATISpecAttrKey*,CATBoolean,int)"><b>SetBoolean</b></a>(CATISpecAttrKey*,CATBoolean,int)
<dd>  Assigns a value of CATBoolean type to an attribute.
 <dt> o 
    <a href="#SetDouble(CATISpecAttrKey*,double,int)"><b>SetDouble</b></a>(CATISpecAttrKey*,double,int)
<dd>  Assigns a value of double type to an attribute.
 <dt> o 
    <a href="#SetExternalObject(CATISpecAttrKey*,CATILinkableObject_var&amp;,int,CATBoolean)"><b>SetExternalObject</b></a>(CATISpecAttrKey*,CATILinkableObject_var&amp;,int,CATBoolean)
<dd>  Assigns a value to a tk_external attribute.
 <dt> o 
    <a href="#SetInteger(CATISpecAttrKey*,int,int)"><b>SetInteger</b></a>(CATISpecAttrKey*,int,int)
<dd>  Assigns a value of integer type to an attribute.
 <dt> o 
    <a href="#SetListDouble(CATISpecAttrKey*,CATRawColldouble&amp;)"><b>SetListDouble</b></a>(CATISpecAttrKey*,CATRawColldouble&amp;)
<dd>  Assigns a list of doubles to an attribute of tk_list(tk_double) type.
 <dt> o 
    <a href="#SetListInteger(CATISpecAttrKey*,CATRawCollint&amp;)"><b>SetListInteger</b></a>(CATISpecAttrKey*,CATRawCollint&amp;)
<dd>  Assigns a list of integers to an attribute of tk_list(tk_integer) type.
 <dt> o 
    <a href="#SetListOctet(CATISpecAttrKey*,SEQUENCE(octet)&amp;)"><b>SetListOctet</b></a>(CATISpecAttrKey*,SEQUENCE(octet)&amp;)
<dd>  Assigns a list of octet to an attribute of tk_list(tk_octet) type.
 <dt> o 
    <a href="#SetListString(CATISpecAttrKey*,CATListValCATUnicodeString&amp;)"><b>SetListString</b></a>(CATISpecAttrKey*,CATListValCATUnicodeString&amp;)
<dd>  Assigns a list of strings to an attribute of tk_list(tk_string) type.
 <dt> o 
    <a href="#SetOctet(CATISpecAttrKey*,octet,int)"><b>SetOctet</b></a>(CATISpecAttrKey*,octet,int)
<dd>  Assigns a value of octet type to an attribute.
 <dt> o 
    <a href="#SetPrivate(CATISpecAttrKey*)"><b>SetPrivate</b></a>(CATISpecAttrKey*)
<dd>  Marks the component (or list of components) of this object, pointed by the given attribute, as private.
 <dt> o 
    <a href="#SetQuality(CATISpecAttrKey*,CATAttrInOut)"><b>SetQuality</b></a>(CATISpecAttrKey*,CATAttrInOut)
<dd>  Sets the quality of the Attribute.
 <dt> o 
    <a href="#SetSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,CATISpecAttrKey*,int)"><b>SetSpecAttribute</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,CATISpecAttrKey*,int)
<dd>  Creates an attribute-attribute link.
 <dt> o 
    <a href="#SetSpecObject(CATISpecAttrKey*,CATISpecObject_var&amp;,int,CATBoolean,int)"><b>SetSpecObject</b></a>(CATISpecAttrKey*,CATISpecObject_var&amp;,int,CATBoolean,int)
<dd>  Assigns a value of SpecObject type to an attribute.
 <dt> o 
    <a href="#SetString(CATISpecAttrKey*,CATUnicodeString&amp;,int)"><b>SetString</b></a>(CATISpecAttrKey*,CATUnicodeString&amp;,int)
<dd>  Assigns a value of string type to an attribute.
 <dt> o 
    <a href="#Synchronize(CATListValCATBaseUnknown_var*)"><b>Synchronize</b></a>(CATListValCATBaseUnknown_var*)
<dd>  Synchronizes instance with its reference : missing components are added, extraneous components are removed.
 <dt> o 
    <a href="#SynchronizeAllInstances(CATListValCATBaseUnknown_var*,CATListValCATISpecObject_var*)"><b>SynchronizeAllInstances</b></a>(CATListValCATBaseUnknown_var*,CATListValCATISpecObject_var*)
<dd>  Recursively synchronizes all specified attributes on all instances of the calling feature.
 <dt> o 
    <a href="#TestAttrKey(CATISpecAttrKey*)"><b>TestAttrKey</b></a>(CATISpecAttrKey*)
<dd>  Determines whether the key exists on this feature.
 <dt> o 
    <a href="#TestAttributeValue(CATISpecAttrKey*)"><b>TestAttributeValue</b></a>(CATISpecAttrKey*)
<dd>  Determines whether the attribute is assigned a value.
 <dt> o 
    <a href="#TestFinalAttributeValue(CATISpecAttrKey*,int)"><b>TestFinalAttributeValue</b></a>(CATISpecAttrKey*,int)
<dd>  Tests if the attribute at the end of an attribute-attribute link (or chain of links) is valuated.
 <dt> o 
    <a href="#UnsetAttributeValue(CATISpecAttrKey*)"><b>UnsetAttributeValue</b></a>(CATISpecAttrKey*)
<dd>  Unsets the attribute value.
 <dt> o 
    <a href="#UnsetPrivate(CATISpecAttrKey*)"><b>UnsetPrivate</b></a>(CATISpecAttrKey*)
<dd>  Marks the component (or lists of components) of this object, pointed by the given attribute, as public.
 <dt> o 
    <a href="#Update(CATISpecAttrKey*)"><b>Update</b></a>(CATISpecAttrKey*)
<dd>  Update the content of attribute iKey according to its quality and update rules.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAccess"></a><a name="GetAccess(CATISpecAttrKey*)"></a> <dt> o <b>GetAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATAttrAccess','CATAttrAccess')</script>  <b>GetAccess</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the access mode. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAttrAccess','');return false">CATAttrAccess</a>
</dl>
</dl>
<a name="GetAttrKey"></a><a name="GetAttrKey(char*)"></a> <dt> o <b>GetAttrKey</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script>  <b>GetAttrKey</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the key allowing access to an attribute value.
 <br>WARNING: key is not synonymous with name. A key may be applied on all 
 instances inheriting the same attribute; it may NOT be applied for attributes 
 with the same name on another startup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>      name of the attribute to get a key from.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a CATISpecAttrKey* corresponding to the requested key, or NULL if the key could not be found.
</dl>
</dl>
<a name="GetBoolean"></a><a name="GetBoolean(CATISpecAttrKey*,int)"></a> <dt> o <b>GetBoolean</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GetBoolean</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the CATBoolean value of an attribute by key.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  attribute value or 0 if the value could not be retrieved.
</dl>
</dl>
<a name="GetDouble"></a><a name="GetDouble(CATISpecAttrKey*,int)"></a> <dt> o <b>GetDouble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetDouble</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the double value of an attribute by key.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  attribute value or 0 if the value could not be retrieved.
</dl>
</dl>
<a name="GetExternalObject"></a><a name="GetExternalObject(CATISpecAttrKey*,CATFlavorParam,CATILinkableObject**,int)"></a> <dt> o <b>GetExternalObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternalObject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFlavorParam','CATFlavorParam')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATILinkableObject','CATILinkableObject**')</script> <td><tt>oObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the object pointed via the specified tk_external attribute. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iParam</tt>
   <dd>      bind parameter of the link resolution <br>
				ANYWHERE : resolution will be attempted even in non loaded documents (pointed document may be loaded) <br>
				IN_SESSION : resolution will be attempted only in loaded documents (pointed document will not be loaded but pointed container may be loaded) <br>
				DONT_BIND : no resolution will be attempted, only cache data is read (pointed document and container will not be loaded)
 </dd>
    <dt><tt> oObj</tt>
   <dd>			the pointed object
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd> 			S_OK if pointed object has been found <br>
			S_FALSE if link is unset or valuated with NULL, so oObj is NULL <br>
			E_INVALIDARG if failed because iKey is invalid on pointing object or iIndex is out of range <br>
			E_ACCESSDENIED if failed because iParam does not allow to find the pointed object <br>
      Other hresults can occur if the set pointed document could not be loaded or the pointed object does not exist in the pointed document any more. These hresults can be tested using the FAILED() macro.
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="GetFinalSpecAttribute"></a><a name="GetFinalSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"></a> <dt> o <b>GetFinalSpecAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script>  <b>GetFinalSpecAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the key of the final attribute in an attribute-attribute link (or chain of links).
 <br>If iKey is not an attr-attr link, this method will return iKey and oObj will be the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      key of the attribute.
 </dd>
    <dt><tt> oObj</tt>
   <dd>      SpecObject held by the final attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        the key of the final attribute.
</dl>
</dl>
<a name="GetInteger"></a><a name="GetInteger(CATISpecAttrKey*,int)"></a> <dt> o <b>GetInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetInteger</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the integer value of an attribute by key.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  attribute value or 0 if the value could not be retrieved.
</dl>
</dl>
<a name="GetListDouble"></a><a name="GetListDouble(CATISpecAttrKey*)"></a> <dt> o <b>GetListDouble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATRawColldouble','CATRawColldouble*')</script>  <b>GetListDouble</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of values of an attribute of type tk_double by key. The caller is reponsible for
 deletion of the list.
 <br>WARNING : use of GetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="GetListInteger"></a><a name="GetListInteger(CATISpecAttrKey*)"></a> <dt> o <b>GetListInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATRawCollint','CATRawCollint*')</script>  <b>GetListInteger</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of values of an attribute of type tk_integer by key. The caller is reponsible for
 deletion of the list.
 <br>WARNING : use of GetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="GetListOctet"></a><a name="GetListOctet(CATISpecAttrKey*)"></a> <dt> o <b>GetListOctet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('SEQUENCE(octet)','SEQUENCE(octet)*')</script>  <b>GetListOctet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of values of an attribute of type tk_octet by key. The caller is reponsible for
 deletion of the list.
 <br>WARNING : use of GetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="GetListSize"></a><a name="GetListSize(CATISpecAttrKey*)"></a> <dt> o <b>GetListSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetListSize</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the size of the list valuating an attribute.
  <br><b>Role: </b> done recursively on attributes valuating attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        addition of all intermediate sizes of lists.
</dl>
</dl>
<a name="GetListString"></a><a name="GetListString(CATISpecAttrKey*)"></a> <dt> o <b>GetListString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString*')</script>  <b>GetListString</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of values of an attribute of type tk_string by key. The caller is reponsible for
 deletion of the list.
 <br>WARNING : use of GetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="GetListType"></a><a name="GetListType(CATISpecAttrKey*)"></a> <dt> o <b>GetListType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATAttrKind','CATAttrKind')</script>  <b>GetListType</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of the list valuating an attribute. Possible values are tk_integer, tk_double,
 tk_string, tk_external, tk_specobject, tk_component, etc.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="GetLiteral"></a><a name="GetLiteral(CATISpecAttrKey*,IID&amp;)"></a> <dt> o <b>GetLiteral</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script>  <b>GetLiteral</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIntfIID</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATBaseUnknown* corresponding to a new literal. See New Literals CAA documentation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIntfIID</tt>
   <dd>       filter to specialize the handle on the referred SpecObject.</dd>
</dl>
</dl>
</dl>
<a name="GetOctet"></a><a name="GetOctet(CATISpecAttrKey*,int)"></a> <dt> o <b>GetOctet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('octet','octet')</script>  <b>GetOctet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the octet value of an attribute by key.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  attribute value or 0 if the value could not be retrieved.
</dl>
</dl>
<a name="GetPosition"></a><a name="GetPosition(CATISpecAttrKey*,CATISpecObject_var&amp;)"></a> <dt> o <b>GetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetPosition</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObj</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 On a list of tk_specobject or tk_compo, returns the index of a given object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute. Must be a list of tk_spec or tk_compo. (Returns 0 otherwise).
 </dd>
    <dt><tt> iObj</tt>
   <dd>      SpecObject to search for in the list.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the index of the object if found (in the range 1 to size of list), or 0 if not found / not applicable.
</dl>
</dl>
<a name="GetQuality"></a><a name="GetQuality(CATISpecAttrKey*)"></a> <dt> o <b>GetQuality</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATAttrInOut','CATAttrInOut')</script>  <b>GetQuality</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the quality of the Attribute. Possible values (in/out/neutral) are mutually exclusive.
 <br><b>Role:</b>The attribute quality is a parameter that allows to specify 
 the role played by an attribute in the Update mechanism ( in DS 
 default Update mechanism ).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      attribute key
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <ul><li>sp_IN: These attributes are those which are usually required 
                  to define or specify a feature.
     <li>sp_OUT: These attributes are those whose values result from 
                  a Build operation and may be used as input parameters 
                  for other features.
     <li>sp_NEUTRAL: Attributes of sp_NEUTRAL quality are ignored by 
                     the default Update mechanism.
 </ul>

 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAttrInOut','');return false">CATAttrInOut</a>, <a href="#" onClick="openLink('CATIBuild','');return false">CATIBuild</a>, <a href="#" onClick="openLink('CATIOsmUpdate','');return false">CATIOsmUpdate</a>
</dl>
</dl>
<a name="GetSpecAttribute"></a><a name="GetSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"></a> <dt> o <b>GetSpecAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script>  <b>GetSpecAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 In the case of an attr-attr link, retrieves the "real" attribute, the one whose value is pointed by the link.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> oObj</tt>
   <dd>      attribute object retrieved.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','SetSpecAttribute');return false">SetSpecAttribute</a>, <a href="#" onClick="openLink('','GetFinalSpecAttr');return false">GetFinalSpecAttr</a>
</dl>
</dl>
<a name="GetSpecObject"></a><a name="GetSpecObject(CATISpecAttrKey*,int)"></a> <dt> o <b>GetSpecObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script>  <b>GetSpecObject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
      access key to attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a CATISpecObject* to the relevant SpecObject, or NULL if the object could not be retrieved.
</dl>
</dl>
<a name="GetString"></a><a name="GetString(CATISpecAttrKey*,int)"></a> <dt> o <b>GetString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>GetString</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the string value of an attribute by key.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  attribute value or an empty string if the value could not be retrieved.
</dl>
</dl>
<a name="GetTimeStamp"></a><a name="GetTimeStamp(CATISpecAttrKey*)"></a> <dt> o <b>GetTimeStamp</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATOldTimeStamp','CATOldTimeStamp')</script>  <b>GetTimeStamp</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R19 Stop using it !
 <br>Returns the modification TimeStamp of the attribute.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.

 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATOldTimeStamp','');return false">CATOldTimeStamp</a>
</dl>
</dl>
<a name="InsertAtPosition"></a><a name="InsertAtPosition(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"></a> <dt> o <b>InsertAtPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertAtPosition</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Insert feature iValue at position i in a list attribute. Following objects are moved from 
 their current index to index+1.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>       access key to modify.
 </dd>
    <dt><tt> iValue</tt>
   <dd>       Value to put in the attribute.
 </dd>
    <dt><tt> iPosition</tt>
   <dd>       Position at which the value must be inserted.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL if iPosition is out of range or object can't be set in this attribute.
</dl>
</dl>
<a name="IsOfType"></a><a name="IsOfType(CATISpecAttrKey*)"></a> <dt> o <b>IsOfType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>IsOfType</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R19 Use GetType and GetListType instead.
 <br>Returns type of the attribute.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.</dd>
</dl>
</dl>
</dl>
<a name="IsUpToDate"></a><a name="IsUpToDate(CATISpecAttrKey*)"></a> <dt> o <b>IsUpToDate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsUpToDate</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the update status of the attribute.
 <br>Relies on 
<a href="#" onClick="openLink('CATIUpdateProvider','');return false">CATIUpdateProvider</a>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>    The attribute key.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK if the content of the attribute (if the attribute points objects)
 is up to date and if the attribute is synchronized. Here we call 
 synchronization the following: If the last update of this attribute 
 (or the whole feature) has been done after the update of the content.<br>
      S_FALSE if the content is not up to date or has been updated after this
 attribute has been updated.<br>
 E_FAIL if iKey is not valid.
</dl>
</dl>
<a name="ListAttrKeys"></a><a name="ListAttrKeys(CATListValCATISpecAttrKey_var&amp;)"></a> <dt> o <b>ListAttrKeys</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListAttrKeys</b>(<td><script type="text/javascript"> activateLink('CATListValCATISpecAttrKey_var','CATListValCATISpecAttrKey_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a list of keys to access values of attributes.
 <br>For performance reasons, this method is recommended over 
<a href="#" onClick="openLink('','ListAttrNames');return false">ListAttrNames</a>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oList</tt>
   <dd>      list of attribute keys
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK successful
</dl>
</dl>
<a name="ListAttrNames"></a><a name="ListAttrNames()"></a> <dt> o <b>ListAttrNames</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString*')</script>  <b>ListAttrNames</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of the names of the attributes belonging to the feature.
</dl>
<a name="ListPointingObjects"></a><a name="ListPointingObjects(IID&amp;,CATISpecAttrKey*,CATISpecAttrKey*)"></a> <dt> o <b>ListPointingObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var*')</script>  <b>ListPointingObjects</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIntfIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iFromKey</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iToKey</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Lists all objects pointing this feature.
 <br>If iFromKey is specified, lists only objects pointing this feature via their iFromKey attribute.
 <br>If iToKey is specified, lists only objects pointing the attribute iToKey on this feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntfIID</tt>
   <dd>       filter to specialize the handle on the referred SpecObject.
 </dd>
    <dt><tt> iFromKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iToKey</tt>
   <dd>      access to attribute's value.</dd>
</dl>
</dl>
</dl>
<a name="ListSpecObjects"></a><a name="ListSpecObjects(CATISpecAttrKey*,IID&amp;)"></a> <dt> o <b>ListSpecObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var*')</script>  <b>ListSpecObjects</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIntfIID</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Lists SpecObjects referred to by the attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIntfIID</tt>
   <dd>      identifier of the interface filtering the kind of objects to find.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        list of SpecObjects referred to by the attribute. If no iIntfIID, it is a list of CATISpecObject.
</dl>
</dl>
<a name="ListSpecObjects"></a><a name="ListSpecObjects(CATISpecAttrKey*,CATClassId)"></a> <dt> o <b>ListSpecObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATListValCATBaseUnknown','CATListValCATBaseUnknown_var*')</script>  <b>ListSpecObjects</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iIntfName</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Lists SpecObjects referred to by the attribute.
 <br><b>Note:</b> Do not use.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIntfName</tt>
   <dd>      name of the interface filtering the kind of objects to find.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        list of SpecObjects refered by the attribute. If no iIntfName, it is a list of CATISpecObject.
</dl>
</dl>
<a name="MoveInPosition"></a><a name="MoveInPosition(CATISpecAttrKey*,CATISpecObject_var&amp;,int)"></a> <dt> o <b>MoveInPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>MoveInPosition</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNewPos</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the position in the list of a value of the list valuating attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iObj</tt>
   <dd>      concerned specObject referenced.
 </dd>
    <dt><tt> iNewPos</tt>
   <dd>      the new position of iObj.
	<br>For instance:
 <pre>
 List is " A B C D E ";
 MoveInPosition(D,2) List becomes " A D B C E " : D is moved in position 2.
 </pre>
 whereas
 <pre>
 MoveInPosition(B,4) List becomes " A C D B E " : B is moved in position 4.
 </pre>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  1 if succeeded 0 if failed or was useless.
</dl>
</dl>
<a name="RemoveAll"></a><a name="RemoveAll(CATISpecAttrKey*)"></a> <dt> o <b>RemoveAll</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAll</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes all values in the attribute iName. The attribute is not marked unset afterwards, unlike UnsetAttributeValue.
 <br>Subsequent Gets on the attribute will return 0.
 <br>NB : DO NOT USE ON SINGLE VALUES !
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>
</dl>
</dl>
<a name="RemovePosition"></a><a name="RemovePosition(CATISpecAttrKey*,int)"></a> <dt> o <b>RemovePosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePosition</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Deletes the value at index iIndex in the attribute iName. The attribute must be a list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      position of the element to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="RemoveSpecObject"></a><a name="RemoveSpecObject(CATISpecAttrKey*,CATISpecObject_var&amp;)"></a> <dt> o <b>RemoveSpecObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveSpecObject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObj</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes an element of the list valuating an attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iObj</tt>
   <dd>      SpecObject valuating the attribute, concerned value to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>
</dl>
</dl>
<a name="SetAccess"></a><a name="SetAccess(CATISpecAttrKey*,CATAttrAccess)"></a> <dt> o <b>SetAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAccess</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAttrAccess','CATAttrAccess')</script> <td><tt>iPubPriv</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R19 Use CATfctEditorAssistant tool instead. 
 <br>Modifies public/private status.
 <br>Private attributes exist only on this feature; if the feature is instanciated, instances
 will not have these attributes.</br>
 Public attributes exist on this feature and all its instances.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iPubPriv</tt>
   <dd>      access mode. 

 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAttrAccess','');return false">CATAttrAccess</a>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_NOLOCALVALUE','');return false">E_NOLOCALVALUE</a> <br/>      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>
</dl>
</dl>
<a name="SetBoolean"></a><a name="SetBoolean(CATISpecAttrKey*,CATBoolean,int)"></a> <dt> o <b>SetBoolean</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBoolean</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iBool</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of CATBoolean type to an attribute.
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iBool</tt>
   <dd>      value to assign to the tk_boolean attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetDouble"></a><a name="SetDouble(CATISpecAttrKey*,double,int)"></a> <dt> o <b>SetDouble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDouble</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>d</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of double type to an attribute. 
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 <br><b>Note:</b> This is the preferred method for better performance. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> d</tt>
   <dd>      value to assign to the tk_double attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetExternalObject"></a><a name="SetExternalObject(CATISpecAttrKey*,CATILinkableObject_var&amp;,int,CATBoolean)"></a> <dt> o <b>SetExternalObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExternalObject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATILinkableObject_var','CATILinkableObject_var&amp;')</script> <td><tt>iObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iNeedToSave</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value to a tk_external attribute. 
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 <br> <br><b>Role: </b> Creates a symbolic link between the feature (pointing object) owning 
 the <tt>tk_external</tt> attribute and the (pointed) object specified in argument.
 This method is the same as SetSpecObject, but allows to refer any LinkableObject (  SetSpecObject refers
 only CATISpecObjects ). 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iObj</tt>
   <dd>      value to assign to the tk_external attribute. iObj must be a valid CATILinkableObject. NULL_var is not an allowed value.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
    <dt><tt> iNeedToSave</tt>
   <dd>      If TRUE, means that save of document containing the feature with valuated attribute will
      call save of document containing the referred object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK if succeeded <br>
      E_INVALIDARG if failed because iKey is invalid on pointing object or iIndex is out of range, or iObj is NULL_var or is not a valid CATILinkableObject <br>
      Other hresults can occur if the set cannot be done, which can be tested using the FAILED() macro.
 
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>      
<a href="#" onClick="openLink('E_CANNOTLOAD','');return false">E_CANNOTLOAD</a> <br/>
</dl>
</dl>
<a name="SetInteger"></a><a name="SetInteger(CATISpecAttrKey*,int,int)"></a> <dt> o <b>SetInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetInteger</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>s</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of integer type to an attribute.
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 <br><b>Note:</b> This is the preferred methods for better performance. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> s</tt>
   <dd>      value to assign to the tk_integer attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetListDouble"></a><a name="SetListDouble(CATISpecAttrKey*,CATRawColldouble&amp;)"></a> <dt> o <b>SetListDouble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetListDouble</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATRawColldouble','CATRawColldouble&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a list of doubles to an attribute of tk_list(tk_double) type.
 <br>WARNING : use of SetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iList</tt>
   <dd>      list of doubles values to assign to the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetListInteger"></a><a name="SetListInteger(CATISpecAttrKey*,CATRawCollint&amp;)"></a> <dt> o <b>SetListInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetListInteger</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATRawCollint','CATRawCollint&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a list of integers to an attribute of tk_list(tk_integer) type.
 <br>WARNING : use of SetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iList</tt>
   <dd>      list of integer values to assign to the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetListOctet"></a><a name="SetListOctet(CATISpecAttrKey*,SEQUENCE(octet)&amp;)"></a> <dt> o <b>SetListOctet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetListOctet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('SEQUENCE(octet)','SEQUENCE(octet)&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a list of octet to an attribute of tk_list(tk_octet) type.
 <br>WARNING : use of SetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iList</tt>
   <dd>      list of octet values to assign to the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetListString"></a><a name="SetListString(CATISpecAttrKey*,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>SetListString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetListString</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a list of strings to an attribute of tk_list(tk_string) type.
 <br>WARNING : use of SetListX on an attribute of type list(Y) WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iList</tt>
   <dd>      list of strings values to assign to the attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetOctet"></a><a name="SetOctet(CATISpecAttrKey*,octet,int)"></a> <dt> o <b>SetOctet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOctet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('octet','octet')</script> <td><tt>iOct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of octet type to an attribute.
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iOct</tt>
   <dd>      value to assign to the tk_octet attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="SetPrivate"></a><a name="SetPrivate(CATISpecAttrKey*)"></a> <dt> o <b>SetPrivate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPrivate</b>(<td><script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Marks the component (or list of components) of this object, pointed by the given attribute, as private.
 <br>Private components are not instanciated when the feature that aggregates them is
 instanciated.
 <br>NB : calling GetSpecObject on an instance that does not have the requested component
 (because it is marked private on its reference) will return the component on its reference.
 <br>WARNING : use of this method is discouraged as it may cause severe side effects.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_NOLOCALVALUE','');return false">E_NOLOCALVALUE</a> <br/>      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/> 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','UnsetPrivate');return false">UnsetPrivate</a>
</dl>
</dl>
<a name="SetQuality"></a><a name="SetQuality(CATISpecAttrKey*,CATAttrInOut)"></a> <dt> o <b>SetQuality</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetQuality</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAttrInOut','CATAttrInOut')</script> <td><tt>iInOut</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the quality of the Attribute. Possible values (in/out/neutral) are mutually exclusive.
 <br><b>Role:</b>The attribute quality is a parameter that allows to specify 
 the role played by an attribute in the Update mechanism ( in DS 
 default Update mechanism ).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      attribute key
 </dd>
    <dt><tt> iInOut</tt>
   <dd> <ul><li>sp_IN: These attributes are those which are usually required 
                  to define or specify a feature.
     <li>sp_OUT: These attributes are those whose values result from 
                  a Build operation and may be used as input parameters 
                  for other features.
     <li>sp_NEUTRAL: Attributes of sp_NEUTRAL quality are ignored by 
                     the default Update mechanism.
 </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_NOLOCALVALUE','');return false">E_NOLOCALVALUE</a> <br/>      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/> 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAttrInOut','');return false">CATAttrInOut</a>, <a href="#" onClick="openLink('CATIBuild','');return false">CATIBuild</a>, <a href="#" onClick="openLink('CATIOsmUpdate','');return false">CATIOsmUpdate</a>
</dl>
</dl>
<a name="SetSpecAttribute"></a><a name="SetSpecAttribute(CATISpecAttrKey*,CATISpecObject_var&amp;,CATISpecAttrKey*,int)"></a> <dt> o <b>SetSpecAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpecAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObj2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iAtt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an attribute-attribute link. The given attribute will not have its own value but will instead refer
 to another attribute of the same type.
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iObj2</tt>
   <dd>      feature holding the refered attribute.
 </dd>
    <dt><tt> iAtt2</tt>
   <dd>      access key to attribute refered.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>      
<a href="#" onClick="openLink('E_CANNOTLOAD','');return false">E_CANNOTLOAD</a> <br/> 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','GetSpecAttribute');return false">GetSpecAttribute</a>
</dl>
</dl>
<a name="SetSpecObject"></a><a name="SetSpecObject(CATISpecAttrKey*,CATISpecObject_var&amp;,int,CATBoolean,int)"></a> <dt> o <b>SetSpecObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpecObject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iObj</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iNeedToSave</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>relative</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of SpecObject type to an attribute. 
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 <br><b>Role: </b> the referred SpecObject is shareable ( note that it is not the tk_specobject attribute 
 which is shared, but the feature which is assigned as a value to this attribute ), so it
 can be referenced by several features. A referenced feature does not belong to any other feature. 
 A referenced feature just lives on its own. Its life cyle is completely independent of the features
 which use it as a reference. 
 
 <br><b>Note:</b> This is the preferred method for better performance. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iObj</tt>
   <dd>      value to assign to the tk_specobject attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
    <dt><tt> iNeedToSave</tt>
   <dd>      When an attribute is valuated with a specobject, a link is created on the referred CATISpecObject.
      If TRUE, means that save of document containing the feature with valuated attribute will
      call save of document containing the referred SpecObject.
 </dd>
    <dt><tt> relative</tt>
   <dd>      No longer supported. Do not use.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   
      S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>      
<a href="#" onClick="openLink('E_CANNOTLOAD','');return false">E_CANNOTLOAD</a> <br/>
</dl>
</dl>
<a name="SetString"></a><a name="SetString(CATISpecAttrKey*,CATUnicodeString&amp;,int)"></a> <dt> o <b>SetString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetString</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iString</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Assigns a value of string type to an attribute.
 <br>WARNING : use of SetX on an attribute of type Y WILL cause unpredictable behaviour.
 <br><b>Note:</b> This is the preferred method for better performance. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
    <dt><tt> iString</tt>
   <dd>      value to assign to the tk_string attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1; 0 adds to the end of the list. Unused on single values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>      
<a href="#" onClick="openLink('E_OUTOFBOUND','');return false">E_OUTOFBOUND</a> <br/>      
<a href="#" onClick="openLink('E_NOTALIST','');return false">E_NOTALIST</a> <br/>      
<a href="#" onClick="openLink('E_TYPEMISMATCH','');return false">E_TYPEMISMATCH</a> <br/>
</dl>
</dl>
<a name="Synchronize"></a><a name="Synchronize(CATListValCATBaseUnknown_var*)"></a> <dt> o <b>Synchronize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Synchronize</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>lstKeys</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Synchronizes instance with its reference : missing components are added, extraneous components are removed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> lstKeys</tt>
   <dd>       list of attributes to synchronize.
       <br>if NULL, all attributes will be synchronized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      E_FAIL an error is decteted
      
<a href="#" onClick="openLink('S_NOSTATUS','');return false">S_NOSTATUS</a> status cannot be given
</dl>
</dl>
<a name="SynchronizeAllInstances"></a><a name="SynchronizeAllInstances(CATListValCATBaseUnknown_var*,CATListValCATISpecObject_var*)"></a> <dt> o <b>SynchronizeAllInstances</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SynchronizeAllInstances</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>iLstKeys</tt><td><tt>=0 </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATISpecObject_var','CATListValCATISpecObject_var*')</script> <td><tt>oListObj</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Recursively synchronizes all specified attributes on all instances of the calling feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLstKeys</tt>
   <dd>       list of attributes to synchronize
       <br>if NULL, all attributes will be synchronized.
 </dd>
    <dt><tt> oListObj</tt>
   <dd>       list of all instances of the feature found ( synchronised or not ).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      E_FAIL an error is decteted
      
<a href="#" onClick="openLink('S_NOSTATUS','');return false">S_NOSTATUS</a> status cannot be given
</dl>
</dl>
<a name="TestAttrKey"></a><a name="TestAttrKey(CATISpecAttrKey*)"></a> <dt> o <b>TestAttrKey</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>TestAttrKey</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Determines whether the key exists on this feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>     access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      TRUE if an attribute with the given key belongs to the feature.
</dl>
</dl>
<a name="TestAttributeValue"></a><a name="TestAttributeValue(CATISpecAttrKey*)"></a> <dt> o <b>TestAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>TestAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Determines whether the attribute is assigned a value.
 <br>NB: for lists, the list is valuated as soon as a single value is assigned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      TRUE if the attribute has been valuated.
</dl>
</dl>
<a name="TestFinalAttributeValue"></a><a name="TestFinalAttributeValue(CATISpecAttrKey*,int)"></a> <dt> o <b>TestFinalAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>TestFinalAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Tests if the attribute at the end of an attribute-attribute link (or chain of links) is valuated.
 <br>NB : this is NOT a version of TestAttribute for lists. Using this on an attribute of type list
 that does not contain an attr-attr link at the provided index is equivalent to TestAttribute(iKey),
 i.e. it will only tell you if the list as a whole is valuated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      key of the attribute.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>      index in the list. Lists start at 1.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        TRUE if it is valuated.
</dl>
</dl>
<a name="UnsetAttributeValue"></a><a name="UnsetAttributeValue(CATISpecAttrKey*)"></a> <dt> o <b>UnsetAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the attribute value. The attribute is then marked as unset, unlike RemoveAll.
 <br>Subsequent Gets on the attribute will return 0.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_NOLOCALVALUE','');return false">E_NOLOCALVALUE</a> <br/>      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/>
</dl>
</dl>
<a name="UnsetPrivate"></a><a name="UnsetPrivate(CATISpecAttrKey*)"></a> <dt> o <b>UnsetPrivate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnsetPrivate</b>(<td><script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Marks the component (or lists of components) of this object, pointed by the given attribute, as public.
 <br>This is the default state of a component; there is no need to explicitely mark
 a component as public if you have not made it private before.
 <br>WARNING : use of this method is discouraged as it may cause severe side effects.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>      access key to attribute.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>        S_OK successful<br/>
      S_FALSE successful does not change the model<br/>
      
<a href="#" onClick="openLink('E_NOLOCALVALUE','');return false">E_NOLOCALVALUE</a> <br/>      
<a href="#" onClick="openLink('E_KEYNOTFOUND','');return false">E_KEYNOTFOUND</a> <br/> 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','SetPrivate');return false">SetPrivate</a>
</dl>
</dl>
<a name="Update"></a><a name="Update(CATISpecAttrKey*)"></a> <dt> o <b>Update</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Update</b>(<td> const <script type="text/javascript"> activateLink('CATISpecAttrKey','CATISpecAttrKey*')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Update the content of attribute iKey according to its quality and update rules.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd>    The attribute key.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if update succeeded.<br> E_FAIL if update failed.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIOsmUpdate','');return false">CATIOsmUpdate</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISpecAttrAccess.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectSpecsModeler</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
