<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSmaInterfaces Interface CATIStmJoggle</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATSmaInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIStmJoggle','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIStmJoggle','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIStmJoggle','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIStmJoggle','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATSmaInterfaces Interface CATIStmJoggle</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIStmJoggle_23775','CATIStmJoggle','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIStmJoggle</b>
</p>
<p>
<b><i> Interface to manage the aerospace sheet metal <b>joggle</b> feature.</i></b><br>

 <b>Role</b>: Provides the basic methods to access data of a sheet metal
 <b>joggle</b> feature.

 <br>A <b>joggle</b> is a local deformation of a <b>surfacic flange</b> or a <b>Web</b>.
      <br><b>A <b>joggle</b> is defined by</b> : 
      <ul>
      <li> <b>support</b>      : a <b>surfacic flange</b> or the <b>web</b>,</li>
      <li> <b>plane</b>        : a <b>CATPlane</b> or a planar face,</li>
      <li> <b>depth</b>        : the offset value of the joggle support surface,</li>
      <li> <b>runout</b>       : the length of the joggle,</li>
      <li> <b>start radius</b> : the value of the start fillet radius of the joggle,</li>
      <li> <b>end radius</b>   : the value of the end fillet radius of the joggle.</li>
      </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetClearance(CATICkeParm**)"><b>GetClearance</b></a>(CATICkeParm**)
<dd>  <br><b>Role</b>: This method retrieves the clearance length of the Joggle.
 <dt> o 
    <a href="#GetDepth(CATICkeParm**)"><b>GetDepth</b></a>(CATICkeParm**)
<dd>  <br><b>Role</b>: This method retrieves the depth length parameter of to the joggle.
 <dt> o 
    <a href="#GetDepthOrient(CATOrientation&amp;)"><b>GetDepthOrient</b></a>(CATOrientation&amp;)
<dd>  <br><b>Role</b>: This method retrieves the relative orientation of the depth compared to the joggle support.
 <dt> o 
    <a href="#GetEndRadius(CATICkeParm**)"><b>GetEndRadius</b></a>(CATICkeParm**)
<dd>  <br><b>Role</b>: This method retrieves the radius of the end fillet of the Joggle.
 <dt> o 
    <a href="#GetPlane(CATISpecObject**)"><b>GetPlane</b></a>(CATISpecObject**)
<dd>  <br><b>Role</b>: This method retrieves the start plane of the joggle.
 <dt> o 
    <a href="#GetRunout(CATICkeParm**)"><b>GetRunout</b></a>(CATICkeParm**)
<dd>  <br><b>Role</b>: This method retrieves the runout length parameter of the joggle.
 <dt> o 
    <a href="#GetRunoutOrient(CATOrientation&amp;)"><b>GetRunoutOrient</b></a>(CATOrientation&amp;)
<dd>  <br><b>Role</b>: This method retrieves the relative orientation of the runout compared to the joggle plane.
 <dt> o 
    <a href="#GetRunoutType(int&amp;)"><b>GetRunoutType</b></a>(int&amp;)
<dd>  <br><b>Role</b>: This method retrieves the runout definition type of the joggle.
 <dt> o 
    <a href="#GetStartRadius(CATICkeParm**)"><b>GetStartRadius</b></a>(CATICkeParm**)
<dd>  <br><b>Role</b>: This method retrieves the radius of the start fillet of the Joggle.
 <dt> o 
    <a href="#GetSupport(CATISpecObject**)"><b>GetSupport</b></a>(CATISpecObject**)
<dd>  <br><b>Role</b>: This method retrieves the support of the joggle.
 <dt> o 
    <a href="#ManageOnSupport(CATISpecObject*,CATISpecObject*)"><b>ManageOnSupport</b></a>(CATISpecObject*,CATISpecObject*)
<dd>  <b>Role</b>: Method to manage Joggle internal specifications.
 <dt> o 
    <a href="#SetDepthOrient(CATOrientation&amp;)"><b>SetDepthOrient</b></a>(CATOrientation&amp;)
<dd>  <br><b>Role</b>: This method sets the relative orientation of the depth compared to the joggle support.
 <dt> o 
    <a href="#SetPlane(CATISpecObject*)"><b>SetPlane</b></a>(CATISpecObject*)
<dd>  <br><b>Role</b>: This method sets the start plane of the joggle.
 <dt> o 
    <a href="#SetRunoutOrient(CATOrientation&amp;)"><b>SetRunoutOrient</b></a>(CATOrientation&amp;)
<dd>  <br><b>Role</b>: This method sets the relative orientation of the runout compared to the joggle plane.
 <dt> o 
    <a href="#SetSupport(CATISpecObject*)"><b>SetSupport</b></a>(CATISpecObject*)
<dd>  <br><b>Role</b>: This method sets the support of the joggle.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetClearance"></a><a name="GetClearance(CATICkeParm**)"></a> <dt> o <b>GetClearance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetClearance</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>opiClearanceParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the clearance length of the Joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiClearanceParam</tt>
   <dd>    a CATICkeParm : use the method <b>Valuate</b> to modify the Clearance length. @see CATICkeParm.</dd>
</dl>
</dl>
</dl>
<a name="GetDepth"></a><a name="GetDepth(CATICkeParm**)"></a> <dt> o <b>GetDepth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetDepth</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>opiDepthParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the depth length parameter of to the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiDepth</tt>
   <dd>    a CATICkeParm : use the method <b>Valuate</b> to modify the depth length. @see CATICkeParm.</dd>
</dl>
</dl>
</dl>
<a name="GetDepthOrient"></a><a name="GetDepthOrient(CATOrientation&amp;)"></a> <dt> o <b>GetDepthOrient</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetDepthOrient</b>(<td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation&amp;')</script> <td><tt>oDepthOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the relative orientation of the depth compared to the joggle support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDepthOrient</tt>
   <dd>       A reference to a <b>CATOrientation</b> instance.
      <br><b>Legal values</b>: 
      <ul>
      <li> <b>CATOrientationNegative</b>: The orientations are opposite,</li>
      <li> <b>CATOrientationPositive</b>: The orientations are the same,</li>
      <li> <b>CATOrientationUnknown</b> : The orientation is unknown.</li>
      </ul></dd>
</dl>
</dl>
</dl>
<a name="GetEndRadius"></a><a name="GetEndRadius(CATICkeParm**)"></a> <dt> o <b>GetEndRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetEndRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>opiRadiusParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the radius of the end fillet of the Joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiRadiusParam</tt>
   <dd>    a CATICkeParm : use the method <b>Valuate</b> to modify the radius length. @see CATICkeParm.</dd>
</dl>
</dl>
</dl>
<a name="GetPlane"></a><a name="GetPlane(CATISpecObject**)"></a> <dt> o <b>GetPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetPlane</b>(<td><script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject**')</script> <td><tt>opiPlaneSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the start plane of the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiPlaneSpec</tt>
   <dd>    a plane or a planar face.
</dd>
</dl>
</dl>
</dl>
<a name="GetRunout"></a><a name="GetRunout(CATICkeParm**)"></a> <dt> o <b>GetRunout</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetRunout</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>opiRunoutParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the runout length parameter of the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Runout</tt>
   <dd>    a CATICkeParm : use the method <b>Valuate</b> to modify the runout length. @see CATICkeParm.</dd>
</dl>
</dl>
</dl>
<a name="GetRunoutOrient"></a><a name="GetRunoutOrient(CATOrientation&amp;)"></a> <dt> o <b>GetRunoutOrient</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetRunoutOrient</b>(<td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation&amp;')</script> <td><tt>oRunoutOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the relative orientation of the runout compared to the joggle plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRunoutOrient</tt>
   <dd>       A reference to a <b>CATOrientation</b> instance.
      <br><b>Legal values</b>: 
      <ul>
      <li> <b>CATOrientationNegative</b>: The orientations are opposite,</li>
      <li> <b>CATOrientationPositive</b>: The orientations are the same,</li>
      <li> <b>CATOrientationUnknown</b> : The orientation is unknown.</li>
      </ul></dd>
</dl>
</dl>
</dl>
<a name="GetRunoutType"></a><a name="GetRunoutType(int&amp;)"></a> <dt> o <b>GetRunoutType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetRunoutType</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>RunoutType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the runout definition type of the joggle.
                  This definition is set by the <b>sheet metal parameters</b> for all the
                  joggles created in the current Part.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> RunoutType</tt>
   <dd>   an integer 
      <br><b>Legal values</b>: 
      <ul>
      <li> <b>1</b> : the runout length includes the joggle fillets,</li>
      <li> <b>2</b> : the runout length excludes partially the joggle fillets.</li>
      </ul></dd>
</dl>
</dl>
</dl>
<a name="GetStartRadius"></a><a name="GetStartRadius(CATICkeParm**)"></a> <dt> o <b>GetStartRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetStartRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>opiRadiusParam</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the radius of the start fillet of the Joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiRadiusParam</tt>
   <dd>    a CATICkeParm : use the method <b>Valuate</b> to modify the radius length. @see CATICkeParm.</dd>
</dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject**)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject**')</script> <td><tt>opiSupportSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method retrieves the support of the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opiSupportSpec</tt>
   <dd>    Specification of the support : a surfacic flange or a Web.
</dd>
</dl>
</dl>
</dl>
<a name="ManageOnSupport"></a><a name="ManageOnSupport(CATISpecObject*,CATISpecObject*)"></a> <dt> o <b>ManageOnSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>ManageOnSupport</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>ipiPrtPartSpec</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>ipiPrevSupportSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <b>Role</b>: Method to manage Joggle internal specifications.

              A call to this method is mandatory BEFORE updating the Joggle.
                 - if the Support has been modified : 
                   the Joggle will be removed from its Previous Support (if any).
                 - if the Joggle Plane has been modified : 
                   the Joggle will be inserted on the Support according with other Joggles (if any).
                 - a new OFFSET Surface of the Support will be created if necessary.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiPrtPartSpec</tt>
   <dd>    Part Feature
 </dd>
    <dt><tt> ipiPrevSupportSpec</tt>
   <dd>    Suppport of the Joggle BEFORE any Joggle modification ( is NULL if NEW Joggle ).</dd>
</dl>
</dl>
</dl>
<a name="SetDepthOrient"></a><a name="SetDepthOrient(CATOrientation&amp;)"></a> <dt> o <b>SetDepthOrient</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>SetDepthOrient</b>(<td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation&amp;')</script> <td><tt>iDepthOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method sets the relative orientation of the depth compared to the joggle support.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDepthOrient</tt>
   <dd>       A reference to a <b>CATOrientation</b> instance.
      <br><b>Legal values</b>: 
      <ul>
      <li> <b>CATOrientationNegative</b>: The orientations are opposite,</li>
      <li> <b>CATOrientationPositive</b>: The orientations are the same,</li>
      <li> <b>CATOrientationUnknown</b> : The orientation is unknown.</li>
      </ul></dd>
</dl>
</dl>
</dl>
<a name="SetPlane"></a><a name="SetPlane(CATISpecObject*)"></a> <dt> o <b>SetPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>SetPlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>ipiPlaneSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method sets the start plane of the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiPlaneSpec</tt>
   <dd>    a plane or a planar face.
</dd>
</dl>
</dl>
</dl>
<a name="SetRunoutOrient"></a><a name="SetRunoutOrient(CATOrientation&amp;)"></a> <dt> o <b>SetRunoutOrient</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>SetRunoutOrient</b>(<td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation&amp;')</script> <td><tt>iRunoutOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method sets the relative orientation of the runout compared to the joggle plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRunoutOrient</tt>
   <dd>       A reference to a <b>CATOrientation</b> instance.
      <br><b>Legal values</b>: 
      <ul>
      <li> <b>CATOrientationNegative</b>: The orientations are opposite,</li>
      <li> <b>CATOrientationPositive</b>: The orientations are the same,</li>
      <li> <b>CATOrientationUnknown</b> : The orientation is unknown.</li>
      </ul></dd>
</dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject*)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>SetSupport</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>ipiSupportSpec</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 <br><b>Role</b>: This method sets the support of the joggle.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipiSupportSpec</tt>
   <dd>    Specification of the support : a surfacic flange or a Web.
</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIStmJoggle.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSmaInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
