<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATCGMPickOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMModelInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATCGMPickOperator','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCGMPickOperator','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATCGMPickOperator','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCGMPickOperator','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMModelInterfaces Interface CATCGMPickOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATCGMPickOperator_33337','CATCGMPickOperator','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATCGMPickOperator</b>
</p>
<p>
<b><i> Picking operator.</i></b><br>
  
 Given one or more <code>CATBody</code>s and a ray defined by a view point and a direction, the picking
 operator finds the CATBody and the geometry (<code>CATGeometry</code>) intersected by the ray.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddAnotherInstanceOfPreviousBody(CATMathTransformation&amp;,void*)"><b>AddAnotherInstanceOfPreviousBody</b></a>(CATMathTransformation&amp;,void*)
<dd>  This method can be called any number of times, after any/every call to AddBody().
 <dt> o 
    <a href="#AddBody(CATBody&amp;,CATMathTransformation&amp;,void*,double,double,double)"><b>AddBody</b></a>(CATBody&amp;,CATMathTransformation&amp;,void*,double,double,double)
<dd>  Adds a body to the picking operator.
 <dt> o 
    <a href="#GetApertureRadius(double&amp;)"><b>GetApertureRadius</b></a>(double&amp;)
<dd>  Gets the currently set aperture radius of picking.
 <dt> o 
    <a href="#GetOnlyFirstHit(CATBoolean&amp;)"><b>GetOnlyFirstHit</b></a>(CATBoolean&amp;)
<dd>  Gets the current state of the "OnlyFirstHit" option
 Refer "SetOnlyFirstHit" for more details on this option
 
 <dt> o 
    <a href="#GetResult(CATCGMPickOperatorResultIterator*&amp;)"><b>GetResult</b></a>(CATCGMPickOperatorResultIterator*&amp;)
<dd>  Returns the results of picking.
 <dt> o 
    <a href="#Run(CATMathPoint&amp;,CATMathDirection&amp;)"><b>Run</b></a>(CATMathPoint&amp;,CATMathDirection&amp;)
<dd>  Runs the picking operator.
 <dt> o 
    <a href="#SetApertureRadius(double)"><b>SetApertureRadius</b></a>(double)
<dd>  Sets the aperture radius of picking.
 <dt> o 
    <a href="#SetOnlyFirstHit(CATBoolean)"><b>SetOnlyFirstHit</b></a>(CATBoolean)
<dd>  Enables or disables the pick operator to pick only the first hit object(s).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddAnotherInstanceOfPreviousBody"></a><a name="AddAnotherInstanceOfPreviousBody(CATMathTransformation&amp;,void*)"></a> <dt> o <b>AddAnotherInstanceOfPreviousBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddAnotherInstanceOfPreviousBody</b>(<td> const <script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iTransform</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iPartId</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method can be called any number of times, after any/every call to AddBody().
 It adds another instance of the previous added body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTransform</tt>
   <dd>   Transformation matrix corresponding to the positioning in global coordinates
   of this instance of the previously added body.
 </dd>
    <dt><tt> iPartId</tt>
   <dd>   Void pointer that the caller can use to identify another instance 
   of the previously added body, for its own reference. Multiple iPartId's can be 
   associated with the same body (e.g. when there are multiple instances 
   of the same part in an assembly. This PartId is returned back in the
   results, so that the caller can identify which instance of the body
   got picked.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if the instance is added successfully.
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="AddBody"></a><a name="AddBody(CATBody&amp;,CATMathTransformation&amp;,void*,double,double,double)"></a> <dt> o <b>AddBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddBody</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody&amp;')</script> <td><tt>iPartBody</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iTransform</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iPartId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSag</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStep</tt><td><tt>= CATMathInfinite</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMaxAngle</tt><td><tt>= 0.25* CATPI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a body to the picking operator.
 The last three parameters are the tessellation settings that are used should the operator
 need to tessellate partly or fully the body for picking.
 This function can be called multiple times for different bodies.
 In order that an end user does not see any discrepancy during picking, the client may use the same
 tessellation settings as it has used for visualization.
 But note that, tighter the tessellation settings, higher will be the computation cost of the 
 pick operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPartBody</tt>
   <dd>   The body from the part that is added to the operator.
 </dd>
    <dt><tt> iTransform</tt>
   <dd>   The transformation matrix corresponding to the positioning 
   of this body in global coordinates.
 </dd>
    <dt><tt> iPartId</tt>
   <dd>   Void pointer that the caller can use to identify the given
   body with a part for its own reference. Multiple iPartId's can be 
   associated with the same body (e.g. when there are multiple instances 
   of the same part in an assembly). This PartId is returned back in the
   results, so that the caller can identify which instance of the body
   got picked.
 </dd>
    <dt><tt> iSag</tt>
   <dd>   Tessellation parameter: Sag.
 </dd>
    <dt><tt> iStep</tt>
   <dd>   Tessellation parameter: An optional step size parameter not to be exceeded.  
 </dd>
    <dt><tt> iMaxAngle</tt>
   <dd>   Tessellation parameter: An optional angle parameter not to be exceeded.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if the <code>CATBody</code> is added successfully.
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="GetApertureRadius"></a><a name="GetApertureRadius(double&amp;)"></a> <dt> o <b>GetApertureRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApertureRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oApertureRadius</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the currently set aperture radius of picking.
 Refer "SetApertureRadius" for more details on aperture radius
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oApertureRadius</tt>
   <dd>   Currently set aperture radius of picking
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> on success.
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="GetOnlyFirstHit"></a><a name="GetOnlyFirstHit(CATBoolean&amp;)"></a> <dt> o <b>GetOnlyFirstHit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOnlyFirstHit</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOnlyFirstHit</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the current state of the "OnlyFirstHit" option
 Refer "SetOnlyFirstHit" for more details on this option
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOnlyFirstHit</tt>
   <dd>   Current state of the "OnlyFirstHit" option
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> on success.
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult(CATCGMPickOperatorResultIterator*&amp;)"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetResult</b>(<td><script type="text/javascript"> activateLink('CATCGMPickOperatorResultIterator','CATCGMPickOperatorResultIterator*&amp;')</script> <td><tt>oResultIterator</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the results of picking. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResultIterator</tt>
   <dd>   Iterator that can be used to iterate through picked objects.
   This returned iterator is owned by caller, i.e. the caller will need to delete it after use.
   It can be deleted using regular C++ delete.
   Note that the returned iterator is invalid after the next "Run" or if the operator is deleted.
   The returned iterator should be deleted before the next Run or before the operator is deleted, whichever is earlier
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if an iterator is successfully returned.
   <code>S_FALSE</code> if no iterator is returned (no picked object.) ?
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<a name="Run"></a><a name="Run(CATMathPoint&amp;,CATMathDirection&amp;)"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iViewPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iViewDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Runs the picking operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewPoint</tt>
   <dd>   The start of the picking ray.
 </dd>
    <dt><tt> iViewDirection</tt>
   <dd>   The direction of the picking ray.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     0 if the picking operator runs successfully and 1 otherwise.
</dl>
</dl>
<a name="SetApertureRadius"></a><a name="SetApertureRadius(double)"></a> <dt> o <b>SetApertureRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetApertureRadius</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iApertureRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the aperture radius of picking.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApertureRadius</tt>
   <dd>   Aperture radius to be used for picking of vertices and edges.
   If this is too low, then picking of vertices and edges may become problematic.
   By default, this value is 0.0, but it is recommended not to use this default value,
   It is recommended that aperture radius be larger than tessellation sag.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> on success.
   <code>E_FAIL</code> if iApertureRadius is less than 0.
</dl>
</dl>
<a name="SetOnlyFirstHit"></a><a name="SetOnlyFirstHit(CATBoolean)"></a> <dt> o <b>SetOnlyFirstHit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOnlyFirstHit</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOnlyFirstHit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Enables or disables the pick operator to pick only the first hit object(s).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnlyFirstHit</tt>
   <dd>   If this is TRUE, then the pick operator will pick only the first hit object(s).
      Note that there could be multiple objects picked in the first hit, if the ray 
      simultaneously hits multiple objects (within aperture radius).
   If this is FALSE, then the operator will pick all hit objects.

   By default value of this option is TRUE.
   Setting this to TRUE would give better performance than FALSE.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> on success.
   <code>E_FAIL</code> otherwise.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCGMPickOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
