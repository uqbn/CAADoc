<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMIntersectionCrvCrv</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMModelInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMIntersectionCrvCrv','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMIntersectionCrvCrv','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMIntersectionCrvCrv','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMIntersectionCrvCrv','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMModelInterfaces Interface CATICGMIntersectionCrvCrv</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMIntersectionCrvCrv_48297','CATICGMIntersectionCrvCrv','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMIntersectionCrvCrv</b>
</p>
<p>
<b><i> Class defining the operator of the intersection of two curves.</i></b><br>

 <br>The operator outputs the isolated solutions (points) and the
 overlapping solutions (curves).
 <ul>
 <li>The CATICGMIntersectionCrvCrv operator is created with the <tt>CATCGMCreateIntersection</tt> method and 
 directly released with the <tt>Release</tt> method.
 It is is not streamable. 
 <li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. The advanced mode also allows you to
 run the same operator with different curves.
 <li>In both cases, the result is accessed with two specific interators, one for the solution points,
 the other for the solution curves.
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginningCurve()"><b>BeginningCurve</b></a>()
<dd>  Initializes the iterator of the solution curves.
 <dt> o 
    <a href="#BeginningPoint()"><b>BeginningPoint</b></a>()
<dd>  Initializes the iterator of the resulting points.
 <dt> o 
    <a href="#GetCartesianPoint()"><b>GetCartesianPoint</b></a>()
<dd>  Creates the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#GetCurveLimits(CATCurve*,CATCrvLimits&amp;)"><b>GetCurveLimits</b></a>(CATCurve*,CATCrvLimits&amp;)
<dd>  Returns the domain of the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#GetCurveParam(CATCurve*,CATCrvParam&amp;,CATLONG32)"><b>GetCurveParam</b></a>(CATCurve*,CATCrvParam&amp;,CATLONG32)
<dd>  Retrieves the parameter of the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#GetEdgeCurve(CATPointOnEdgeCurve*&amp;,CATPointOnEdgeCurve*&amp;)"><b>GetEdgeCurve</b></a>(CATPointOnEdgeCurve*&amp;,CATPointOnEdgeCurve*&amp;)
<dd>  Creates the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator as an edge curve.
 <dt> o 
    <a href="#GetNumberOfCurves()"><b>GetNumberOfCurves</b></a>()
<dd>  Returns the number of solution curves of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  Returns the number of isolated resulting points of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#GetPointOnCurve(CATCurve*,CATLONG32)"><b>GetPointOnCurve</b></a>(CATCurve*,CATLONG32)
<dd>  Creates the next solution point on curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#NextCurve()"><b>NextCurve</b></a>()
<dd>  Skips to the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#NextPoint()"><b>NextPoint</b></a>()
<dd>  Skips to the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <dt> o 
    <a href="#SetCurve(CATCurve*)"><b>SetCurve</b></a>(CATCurve*)
<dd>  Defines the intersection with another second curve (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#UseLimits(CATCrvLimits*,CATCrvLimits*)"><b>UseLimits</b></a>(CATCrvLimits*,CATCrvLimits*)
<dd>  Modifies the curve domain to take into account for <tt>this</tt>
 CATICGMIntersectionCrvCrv operator (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BeginningCurve"></a><a name="BeginningCurve()"></a> <dt> o <b>BeginningCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the solution curves.
 <br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="BeginningPoint"></a><a name="BeginningPoint()"></a> <dt> o <b>BeginningPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the resulting points.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="GetCartesianPoint"></a><a name="GetCartesianPoint()"></a> <dt> o <b>GetCartesianPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCartesianPoint','CATCartesianPoint *')</script>  <b>GetCartesianPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetCurveLimits"></a><a name="GetCurveLimits(CATCurve*,CATCrvLimits&amp;)"></a> <dt> o <b>GetCurveLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetCurveLimits</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iCurve</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>ioLimits</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the domain of the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd> The first or the second operand of the operator, on which the domain is output.
 </dd>
    <dt><tt> ioLimits</tt>
   <dd> The domain of the solution curve.</dd>
</dl>
</dl>
</dl>
<a name="GetCurveParam"></a><a name="GetCurveParam(CATCurve*,CATCrvParam&amp;,CATLONG32)"></a> <dt> o <b>GetCurveParam</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetCurveParam</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iCurve</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioCrvParam</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iIndex</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the parameter of the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd> The pointer to the first or second curve which are intersected. 
 </dd>
    <dt><tt> ioCrvParam</tt>
   <dd> The parameter.
 </dd>
    <dt><tt> iIndex</tt>
   <dd> Internal use.</dd>
</dl>
</dl>
</dl>
<a name="GetEdgeCurve"></a><a name="GetEdgeCurve(CATPointOnEdgeCurve*&amp;,CATPointOnEdgeCurve*&amp;)"></a> <dt> o <b>GetEdgeCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATEdgeCurve','CATEdgeCurve *')</script>  <b>GetEdgeCurve</b>(<td><script type="text/javascript"> activateLink('CATPointOnEdgeCurve','CATPointOnEdgeCurve*&amp;')</script> <td><tt>oStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPointOnEdgeCurve','CATPointOnEdgeCurve*&amp;')</script> <td><tt>oEnd</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator as an edge curve.
 <br>The edge curve is composed of parts of each inital curve. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStart</tt>
   <dd> The pointer to the created point representing the first extremity of the solution curve.
 A new point is created each time this method is called.
 If you do not want to keep the created point, use the </dd>
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method. 
    <dt><tt> oEnd</tt>
   <dd> The pointer to the created point representing the last extremity of the solution curve.
 A new point is created each time this method is called.
 If you do not want to keep the created point, use the </dd>
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method. 
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created edge curve, <tt>NULL</tt> if it cannot be created.
 A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method. and the POEC extremities oStart and oEnd on this edgecurve.
</dl>
</dl>
</dl>
<a name="GetNumberOfCurves"></a><a name="GetNumberOfCurves()"></a> <dt> o <b>GetNumberOfCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfCurves</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of solution curves of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of resulting curves.
</dl>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of isolated resulting points of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of isolated points.
</dl>
</dl>
<a name="GetPointOnCurve"></a><a name="GetPointOnCurve(CATCurve*,CATLONG32)"></a> <dt> o <b>GetPointOnCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPointOnCurve','CATPointOnCurve *')</script>  <b>GetPointOnCurve</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iIndex</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution point on curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd> The pointer to the first or second curve which are intersected.
 </dd>
    <dt><tt> iIndex</tt>
   <dd> Internal use.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point on curve. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="NextCurve"></a><a name="NextCurve()"></a> <dt> o <b>NextCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution curve of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
 <br>After <tt>BeginningCurve</tt>, it skips to the first curve. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
 <dl><dt><tt>TRUE</tt> <dd>if there is a solution curve
    <dt><tt>FALSE</tt> <dd>no more solution curve.</dl>
</dl>
</dl>
<a name="NextPoint"></a><a name="NextPoint()"></a> <dt> o <b>NextPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution point of <tt>this</tt> CATICGMIntersectionCrvCrv operator.
<br>After <tt>BeginningPoint</tt>, it skips to the first point. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="SetCurve"></a><a name="SetCurve(CATCurve*)"></a> <dt> o <b>SetCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCurve</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iNewSecondCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the intersection with another second curve (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewSecondCurve</tt>
   <dd> The pointer to the new second curve.</dd>
</dl>
</dl>
</dl>
<a name="UseLimits"></a><a name="UseLimits(CATCrvLimits*,CATCrvLimits*)"></a> <dt> o <b>UseLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UseLimits</b>(<td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits*')</script> <td><tt>iLimitsForCurve1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits*')</script> <td><tt>iLimitsForCurve2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the curve domain to take into account for <tt>this</tt>
 CATICGMIntersectionCrvCrv operator (<tt>ADVANCED</tt> mode).
 <br> It does not change the current curve limitations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimitsForCurve1</tt>
   <dd> The pointer to the new domain of the first curve. If <tt>NULL</tt>, the current limitation of the first
 curve is used.
 </dd>
    <dt><tt> iLimitsForCurve2</tt>
   <dd> The pointer to the new domain of the second curve. If <tt>NULL</tt>, the current limitation of the second
 curve is used.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMIntersectionCrvCrv.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
