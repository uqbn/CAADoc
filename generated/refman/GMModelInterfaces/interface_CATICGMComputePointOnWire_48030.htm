<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMModelInterfaces Interface CATICGMComputePointOnWire</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMModelInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMComputePointOnWire','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMComputePointOnWire','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMComputePointOnWire','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMComputePointOnWire','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMModelInterfaces Interface CATICGMComputePointOnWire</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMComputePointOnWire_48030','CATICGMComputePointOnWire','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMComputePointOnWire</b>
</p>
<p>
<b><i> Class defining the operator that computes mathematical points on a wire.</i></b><br>

<br> This operator follows the general scheme of the topological operators:
<ul>
<li> Create the operator with the global function <tt>CATCGMCreateComputePointOnWire</tt>
<li> Set parameters if necessary
<li> Run with the <tt>Run</tt> method
<li> Get the result mathematical point with the <tt>GetMathPoint</tt> method.
 Here, the <tt>GetResult</tt> method will always return <tt>NULL</tt>, and there is no associated
 journal, because the operator does not create any body. 
<li> Release the operator with the <tt>Release</tt> method.
</ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetMathPoint(CATMathPoint&amp;)"><b>GetMathPoint</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the corresponding mathematical point.
 <dt> o 
    <a href="#GetValue(double&amp;)"><b>GetValue</b></a>(double&amp;)
<dd>  Retrieves the corresponding value for the computation.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetMathPoint(CATMathPoint&amp;)"><b>SetMathPoint</b></a>(CATMathPoint&amp;)
<dd>  Defines the mathematical point.
 <dt> o 
    <a href="#SetValue(double)"><b>SetValue</b></a>(double)
<dd>  Defines the ratio between the point to be computed 
 and the wire length.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetMathPoint"></a><a name="GetMathPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetMathPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetMathPoint</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioResultPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the corresponding mathematical point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioResultPoint</tt>
   <dd> The result as a CATMathPoint.</dd>
</dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(double&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oResultValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the corresponding value for the computation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResultValue</tt>
   <dd> The value, according to the computation mode.</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  Not <tt>NULL</tt> in case of error.
</dl>
</dl>
<a name="SetMathPoint"></a><a name="SetMathPoint(CATMathPoint&amp;)"></a> <dt> o <b>SetMathPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMathPoint</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the mathematical point. The ratio between the length of wire portion defined by 
 the CATMathPoint and the total wire length is then 
 retrieved by using <tt>GetValue</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The CATMathPoint.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the ratio between the point to be computed 
 and the wire length. The computed CATMathpoint is then retrieved by using <tt>GetMathPoint</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd> The value, according to the computation mode.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMComputePointOnWire.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMModelInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
