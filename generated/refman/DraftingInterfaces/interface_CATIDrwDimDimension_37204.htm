<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDrwDimDimension</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDrwDimDimension','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwDimDimension','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDrwDimDimension','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwDimDimension','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDrwDimDimension</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDrwDimDimension_37204','CATIDrwDimDimension','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDrwDimDimension</b>
</p>
<p>
<b><i> Manages the dimension object.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddTolerance(double,double,int,int)"><b>AddTolerance</b></a>(double,double,int,int)
<dd>  Add a numerical tolerance.
 <dt> o 
    <a href="#AddTolerance(CATUnicodeString,CATUnicodeString,int,int)"><b>AddTolerance</b></a>(CATUnicodeString,CATUnicodeString,int,int)
<dd>  Add an alphanumerical tolerance.
 <dt> o 
    <a href="#GetAngleSector(CATDrwDimAngleSector&amp;)"><b>GetAngleSector</b></a>(CATDrwDimAngleSector&amp;)
<dd>  Gets angle sector (in case of angle dimension).
 <dt> o 
    <a href="#GetAutoMode(int*)"><b>GetAutoMode</b></a>(int*)
<dd>  Gets auto positioning mode of dimension value.
 <dt> o 
    <a href="#GetClip(CATMathPoint2D&amp;,int&amp;)"><b>GetClip</b></a>(CATMathPoint2D&amp;,int&amp;)
<dd>   Retrieves the clipping information through the clipping point.
 <dt> o 
    <a href="#GetClipSide(int&amp;)"><b>GetClipSide</b></a>(int&amp;)
<dd>   Returns the kept side of a clipped dimension.
 <dt> o 
    <a href="#GetConstraint()"><b>GetConstraint</b></a>()
<dd>  
 <dt> o 
    <a href="#GetDimType()"><b>GetDimType</b></a>()
<dd>  Gets the dimension type (angle, length, and so on).
 <dt> o 
    <a href="#GetDimensionLine()"><b>GetDimensionLine</b></a>()
<dd>  Gets the dimension line.
 <dt> o 
    <a href="#GetDimensionStatus(CATListOfInt&amp;)"><b>GetDimensionStatus</b></a>(CATListOfInt&amp;)
<dd>  Retrieve the status of the dimension.
 <dt> o 
    <a href="#GetDimensionalData(CATBaseUnknown*&amp;)"><b>GetDimensionalData</b></a>(CATBaseUnknown*&amp;)
<dd>  Retrieve the data pointed by the dimension.
 <dt> o 
    <a href="#GetExtensionLine()"><b>GetExtensionLine</b></a>()
<dd>  Gets the extension line.
 <dt> o 
    <a href="#GetInOutMode(int*)"><b>GetInOutMode</b></a>(int*)
<dd>  This method is available even if the dimension has 1 extremity symbol.
 <dt> o 
    <a href="#GetSymmetryMode()"><b>GetSymmetryMode</b></a>()
<dd>  Gets the symmetry mode.
 <dt> o 
    <a href="#GetValue()"><b>GetValue</b></a>()
<dd>  Gets the dimension value.
 <dt> o 
    <a href="#GetValuePosition(CATMathPoint2D&amp;,int)"><b>GetValuePosition</b></a>(CATMathPoint2D&amp;,int)
<dd>  Returns the default value position.
 <dt> o 
    <a href="#GetView()"><b>GetView</b></a>()
<dd>  Gets the view in which the dimension is.
 <dt> o 
    <a href="#GetViewMode()"><b>GetViewMode</b></a>()
<dd>  Gets the dimension positionning mode (free or forced).
 <dt> o 
    <a href="#HideDualValue()"><b>HideDualValue</b></a>()
<dd>  Hide dual value.
 <dt> o 
    <a href="#IsAutoModeAble(boolean*)"><b>IsAutoModeAble</b></a>(boolean*)
<dd>  Check if above two methods are available.
 <dt> o 
    <a href="#IsInOutModeAble(boolean*)"><b>IsInOutModeAble</b></a>(boolean*)
<dd>  Check if above two methods are available.
 <dt> o 
    <a href="#Move(double*)"><b>Move</b></a>(double*)
<dd>  Moves the dimension line according to a given offset value.
 <dt> o 
    <a href="#Move(CATIView_var)"><b>Move</b></a>(CATIView_var)
<dd>  Transfers the dimension into a given view.
 <dt> o 
    <a href="#Move(double,double)"><b>Move</b></a>(double,double)
<dd>  Moves the dimension value according to a given (dx,dy) offset value.
 <dt> o 
    <a href="#MoveDimLineSecondaryPart(CATMathPoint2D)"><b>MoveDimLineSecondaryPart</b></a>(CATMathPoint2D)
<dd>  Moves the second part of dimension line at a given point.
 <dt> o 
    <a href="#MoveDimensionLine(CATMathPoint2D,int)"><b>MoveDimensionLine</b></a>(CATMathPoint2D,int)
<dd>  Moves the dimension line at a given point.
 <dt> o 
    <a href="#MoveValue(CATMathPoint2D,int,int)"><b>MoveValue</b></a>(CATMathPoint2D,int,int)
<dd>  Moves the dimension value at a given point.
 <dt> o 
    <a href="#RemoveTolerance()"><b>RemoveTolerance</b></a>()
<dd>  Remove tolerance.
 <dt> o 
    <a href="#ResetValuePosition()"><b>ResetValuePosition</b></a>()
<dd>  Sets the value position to the default-one.
 <dt> o 
    <a href="#SetAngleSector(CATDrwDimAngleSector)"><b>SetAngleSector</b></a>(CATDrwDimAngleSector)
<dd>  Sets angle sector (in case of angle dimension).
 <dt> o 
    <a href="#SetAutoMode(int)"><b>SetAutoMode</b></a>(int)
<dd>  Sets auto positioning mode of dimension value.
 <dt> o 
    <a href="#SetClip(CATMathPoint2D,int)"><b>SetClip</b></a>(CATMathPoint2D,int)
<dd>   Creates a clip on the dimension at the given point, with respect to the side given by iKeptSide.
 <dt> o 
    <a href="#SetConstraint(CATIDimCst_var&amp;)"><b>SetConstraint</b></a>(CATIDimCst_var&amp;)
<dd>  
 <dt> o 
    <a href="#SetInOutMode(int)"><b>SetInOutMode</b></a>(int)
<dd>  This method is available even if the dimension has 1 extremity symbol.
 <dt> o 
    <a href="#SetPosition(double*)"><b>SetPosition</b></a>(double*)
<dd>  Sets the dimension position.
 <dt> o 
    <a href="#SetSymmetryMode(int)"><b>SetSymmetryMode</b></a>(int)
<dd>  Sets the symmetry mode.
 <dt> o 
    <a href="#SetViewMode(CATDrwDimViewMode)"><b>SetViewMode</b></a>(CATDrwDimViewMode)
<dd>  Sets the dimension positionning mode (free or forced).
 <dt> o 
    <a href="#ShowDualValue()"><b>ShowDualValue</b></a>()
<dd>  Show dual value.
 <dt> o 
    <a href="#UnClip()"><b>UnClip</b></a>()
<dd>  Removes the clipping if existing.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddTolerance"></a><a name="AddTolerance(double,double,int,int)"></a> <dt> o <b>AddTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddTolerance</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iUpperValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLowerValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMainModeDisplay</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDualModeDisplay</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a numerical tolerance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpperValue</tt>
   <dd>    Tolerance upper value.
   </dd>
    <dt><tt> iLowerValue</tt>
   <dd>    Tolerance lower value.
   </dd>
    <dt><tt> iMainModeDisplay</tt>
   <dd>    Main value display (0=Unresolved 1= Resolved).
   </dd>
    <dt><tt> iDualModeDisplay</tt>
   <dd>    Dual value display (0=Unresolved 1= Resolved).</dd>
</dl>
</dl>
</dl>
<a name="AddTolerance"></a><a name="AddTolerance(CATUnicodeString,CATUnicodeString,int,int)"></a> <dt> o <b>AddTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddTolerance</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iUpperValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iLowerValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMainModeDisplay</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDualModeDisplay</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add an alphanumerical tolerance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUpperValue</tt>
   <dd>    Tolerance upper value.
   </dd>
    <dt><tt> iLowerValue</tt>
   <dd>    Tolerance lower value.
   </dd>
    <dt><tt> iMainModeDisplay</tt>
   <dd>    Main value display (0=SideBySide 1= Fractional).
   </dd>
    <dt><tt> iDualModeDisplay</tt>
   <dd>    Dual value display (0=SideBySide 1= Fractional).</dd>
</dl>
</dl>
</dl>
<a name="GetAngleSector"></a><a name="GetAngleSector(CATDrwDimAngleSector&amp;)"></a> <dt> o <b>GetAngleSector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAngleSector</b>(<td><script type="text/javascript"> activateLink('CATDrwDimAngleSector','CATDrwDimAngleSector&amp;')</script> <td><tt>sector</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets angle sector (in case of angle dimension).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> sector</tt>
   <dd>    Angle sector. (see enum definition file)</dd>
</dl>
</dl>
</dl>
<a name="GetAutoMode"></a><a name="GetAutoMode(int*)"></a> <dt> o <b>GetAutoMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAutoMode</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets auto positioning mode of dimension value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    Mode
     <br>  1 = Not auto mode.
               Dimension value is always between two symbols at the creation.
     <br>  2 = Auto mode.
               Dimension value is out of two symbols if distance of 
               two symbols is shorter than length of value characters.</dd>
</dl>
</dl>
</dl>
<a name="GetClip"></a><a name="GetClip(CATMathPoint2D&amp;,int&amp;)"></a> <dt> o <b>GetClip</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClip</b>(<td><script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D&amp;')</script> <td><tt>oClipPt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oKeptSide</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the clipping information through the clipping point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClipPt</tt>
   <dd> [out]   Clipping point
 </dd>
    <dt><tt> oKeptSide</tt>
   <dd> [out]   Kept side of the dimension. The value of this parameter can be 0 (if the dimension isn't clipped), 1 or 2. Side 1 (resp. 2) is the
   side of ptldc1 (resp. ptldc2) which is defined by the SetPoints and GetPoints methods on the CATIDrwDimDimensionLine interface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul><li><code>S_OK</code> if everything ran ok and the dimension is clipped</li>
   <li><code>S_FALSE</code> if everything ran ok, but the clipping isn't clipped</li>
   <li><code>E_FAIL</code> if something went wrong</li></ul>
</dl>
</dl>
<a name="GetClipSide"></a><a name="GetClipSide(int&amp;)"></a> <dt> o <b>GetClipSide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClipSide</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oKeptSide</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Returns the kept side of a clipped dimension.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oKeptSide</tt>
   <dd> [out]   Kept side of the dimension. The value of this parameter can be 0 (dimension not clipped), 1 or 2. Side 1 (resp. 2) is the side of ptldc1
   (resp. ptldc2) which is defined by the SetPoints and GetPoints methods on the CATIDrwDimDimensionLine interface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul><li><code>S_OK</code> if everything ran</li>
   <li><code>E_FAIL</code> otherwise</li></ul>
</dl>
</dl>
<a name="GetConstraint"></a><a name="GetConstraint()"></a> <dt> o <b>GetConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDimCst','CATIDimCst_var')</script>  <b>GetConstraint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 
 Gets the constraint dressed up by the dimension.
   
  <dt> <b>Returns:</b> 
  <dd>     The constraint.
</dl>
</dl>
<a name="GetDimType"></a><a name="GetDimType()"></a> <dt> o <b>GetDimType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDrwDimType','CATDrwDimType')</script>  <b>GetDimType</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dimension type (angle, length, and so on).
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The type (see enum definition file).
</dl>
</dl>
<a name="GetDimensionLine"></a><a name="GetDimensionLine()"></a> <dt> o <b>GetDimensionLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimDimensionLine','CATIDrwDimDimensionLine_var')</script>  <b>GetDimensionLine</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dimension line.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The dimension line.
</dl>
</dl>
<a name="GetDimensionStatus"></a><a name="GetDimensionStatus(CATListOfInt&amp;)"></a> <dt> o <b>GetDimensionStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDimensionStatus</b>(<td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oListOfDimStatus</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve the status of the dimension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfDimStatus</tt>
   <dd> The list of the dimension status. the return values are defined in CATDrwDimAnalysisType
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if the operation succeeded,
 <dt><tt>E_FAIL</tt> <dd>if an unspecified failure occurred.
 </dl>
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATDrwDimAnalysisType','');return false">CATDrwDimAnalysisType</a>
</dl>
</dl>
<a name="GetDimensionalData"></a><a name="GetDimensionalData(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetDimensionalData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDimensionalData</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oDimData</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve the data pointed by the dimension.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDimData</tt>
   <dd>    Return a handler on the data</dd>
</dl>
</dl>
</dl>
<a name="GetExtensionLine"></a><a name="GetExtensionLine()"></a> <dt> o <b>GetExtensionLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimExtensionLine','CATIDrwDimExtensionLine_var')</script>  <b>GetExtensionLine</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the extension line.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The extension line.
</dl>
</dl>
<a name="GetInOutMode"></a><a name="GetInOutMode(int*)"></a> <dt> o <b>GetInOutMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInOutMode</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method is available even if the dimension has 1 extremity symbol.
 except for cumurate dimension.
 Gets inside\outside mode of dimension value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    Mode
     <br>  1 = Inside mode.
     <br>  2 = Outside mode.</dd>
</dl>
</dl>
</dl>
<a name="GetSymmetryMode"></a><a name="GetSymmetryMode()"></a> <dt> o <b>GetSymmetryMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSymmetryMode</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the symmetry mode.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The symmetry mode (1=yes, 0=no).
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue()"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimValue','CATIDrwDimValue_var')</script>  <b>GetValue</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dimension value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The dimension value.
</dl>
</dl>
<a name="GetValuePosition"></a><a name="GetValuePosition(CATMathPoint2D&amp;,int)"></a> <dt> o <b>GetValuePosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetValuePosition</b>(<td><script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D&amp;')</script> <td><tt>pos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>config</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the default value position.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> pos</tt>
   <dd>    Default position for dim value
   </dd>
    <dt><tt> config</tt>
   <dd>    =0: Current value position.
    =1: Default value position.</dd>
</dl>
</dl>
</dl>
<a name="GetView"></a><a name="GetView()"></a> <dt> o <b>GetView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIView','CATIView_var')</script>  <b>GetView</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view in which the dimension is.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The view.
</dl>
</dl>
<a name="GetViewMode"></a><a name="GetViewMode()"></a> <dt> o <b>GetViewMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDrwDimViewMode','CATDrwDimViewMode')</script>  <b>GetViewMode</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dimension positionning mode (free or forced).
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The dimension positionning mode (see enum definition file).
</dl>
</dl>
<a name="HideDualValue"></a><a name="HideDualValue()"></a> <dt> o <b>HideDualValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>HideDualValue</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Hide dual value.
</dl>
<a name="IsAutoModeAble"></a><a name="IsAutoModeAble(boolean*)"></a> <dt> o <b>IsAutoModeAble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAutoModeAble</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>bMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Check if above two methods are available.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> bMode</tt>
   <dd>     <br>  true  = Auto mode is available.
     <br>  false = Otherwise.</dd>
</dl>
</dl>
</dl>
<a name="IsInOutModeAble"></a><a name="IsInOutModeAble(boolean*)"></a> <dt> o <b>IsInOutModeAble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsInOutModeAble</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>bMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Check if above two methods are available.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> bMode</tt>
   <dd>     <br>  true  = Inside\Outside mode is available.
     <br>  false = Otherwise.</dd>
</dl>
</dl>
</dl>
<a name="Move"></a><a name="Move(double*)"></a> <dt> o <b>Move</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Move</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves the dimension line according to a given offset value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosition</tt>
   <dd>    Offset value (positive or negative).</dd>
</dl>
</dl>
</dl>
<a name="Move"></a><a name="Move(CATIView_var)"></a> <dt> o <b>Move</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Move</b>(<td><script type="text/javascript"> activateLink('CATIView','CATIView_var')</script> <td><tt>iView</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Transfers the dimension into a given view.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd>    View in which the dimension should be transfered.</dd>
</dl>
</dl>
</dl>
<a name="Move"></a><a name="Move(double,double)"></a> <dt> o <b>Move</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Move</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>dx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>dy</tt><td><tt>=0.0 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Moves the dimension value according to a given (dx,dy) offset value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    error returned code
    If the modification of the dy value can not be performed because 
    the parameter is locked in the current standard, the method return  HRESULT = S_READ_ONLY.
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> dx</tt>
   <dd>    x offset value (positive or negative).
   </dd>
    <dt><tt> dy</tt>
   <dd>    y offset value (positive or negative).</dd>
</dl>
</dl>
</dl>
<a name="MoveDimLineSecondaryPart"></a><a name="MoveDimLineSecondaryPart(CATMathPoint2D)"></a> <dt> o <b>MoveDimLineSecondaryPart</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>MoveDimLineSecondaryPart</b>(<td><script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D')</script> <td><tt>ptPos</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Moves the second part of dimension line at a given point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ptPos</tt>
   <dd>    Point on which the second part of dimension line must be positionned.</dd>
</dl>
</dl>
</dl>
<a name="MoveDimensionLine"></a><a name="MoveDimensionLine(CATMathPoint2D,int)"></a> <dt> o <b>MoveDimensionLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>MoveDimensionLine</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D')</script> <td><tt>ptPos</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDimAngleBehavior</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves the dimension line at a given point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ptPos</tt>
   <dd>    Point on which the dimension line must be positionned.
   </dd>
    <dt><tt> iDimAnglBehavior</tt>
   <dd>    Defines angle dimension line behavior.
    <br>  0 = Sector angle is switched when ptPos is in opposite sector (Default).
    <br>  1 = Sector angle is kept what ever ptPos placement.</dd>
</dl>
</dl>
</dl>
<a name="MoveValue"></a><a name="MoveValue(CATMathPoint2D,int,int)"></a> <dt> o <b>MoveValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MoveValue</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D')</script> <td><tt>ptPos</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSubPart</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDimAngleBehavior</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Moves the dimension value at a given point.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    error returned code
    If the modification of the vertical offset value can not be performed because 
    the parameter is locked in the current standard, the method return  HRESULT = S_READ_ONLY. 
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ptPos</tt>
   <dd>    Point on which the dimension value will be positionned.
   </dd>
    <dt><tt> iSubPart</tt>
   <dd>    Defines which part of the dimension should be moved 
    <br> -1 = Value (vertical move is take account according ptPos coordinates)
    <br>  0 = Both dimension line and value
    <br>  1 = Value
    <br>  2 = Dimension line 
    <br>  3 = Secondary part
    <br>  4 = Secondary part and value
    <br>  5 = Secondary part and dimension line
    <br>  6 = Secondary part, dimension line and value
    <br>  7 = Value leader (for dimension line with leader one part or two parts)
   </dd>
    <dt><tt> iDimAnglBehavior</tt>
   <dd>    Defines angle dimension line behavior.
    <br>  0 = Sector angle is switched when ptPos is in opposite sector (Default)
    <br>  1 =  Sector angle is kept what ever ptPos placement</dd>
</dl>
</dl>
</dl>
<a name="RemoveTolerance"></a><a name="RemoveTolerance()"></a> <dt> o <b>RemoveTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveTolerance</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Remove tolerance.
</dl>
<a name="ResetValuePosition"></a><a name="ResetValuePosition()"></a> <dt> o <b>ResetValuePosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetValuePosition</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value position to the default-one.
</dl>
<a name="SetAngleSector"></a><a name="SetAngleSector(CATDrwDimAngleSector)"></a> <dt> o <b>SetAngleSector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAngleSector</b>(<td><script type="text/javascript"> activateLink('CATDrwDimAngleSector','CATDrwDimAngleSector')</script> <td><tt>sector</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets angle sector (in case of angle dimension).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> sector</tt>
   <dd>    Angle sector. (see enum definition file)</dd>
</dl>
</dl>
</dl>
<a name="SetAutoMode"></a><a name="SetAutoMode(int)"></a> <dt> o <b>SetAutoMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAutoMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets auto positioning mode of dimension value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    Mode
     <br>  1 = Not auto mode.
               Dimension value is always between two symbols at the creation.
     <br>  2 = Auto mode.
               Dimension value is out of two symbols if distance of 
               two symbols is shorter than length of value characters.</dd>
</dl>
</dl>
</dl>
<a name="SetClip"></a><a name="SetClip(CATMathPoint2D,int)"></a> <dt> o <b>SetClip</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClip</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D')</script> <td><tt>iClipPt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKeptSide</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Creates a clip on the dimension at the given point, with respect to the side given by iKeptSide.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClipPt</tt>
   <dd> [in]   Point where to apply the clipping
 </dd>
    <dt><tt> iKeptSide</tt>
   <dd> [in]   Side of the dimension to be kept. The value of this parameter can be 1 or 2. Side 1 (resp. 2) is the side of ptldc1
   (resp. ptldc2) which is defined by the SetPoints and GetPoints methods on the CATIDrwDimDimensionLine interface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok, <code>E_FAIL</code> otherwise
</dl>
</dl>
<a name="SetConstraint"></a><a name="SetConstraint(CATIDimCst_var&amp;)"></a> <dt> o <b>SetConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetConstraint</b>(<td><script type="text/javascript"> activateLink('CATIDimCst_var','CATIDimCst_var&amp;')</script> <td><tt>iCst</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 
 Sets the constraint to dress up.
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCst</tt>
   <dd>    Constraint to set.</dd>
</dl>
</dl>
</dl>
<a name="SetInOutMode"></a><a name="SetInOutMode(int)"></a> <dt> o <b>SetInOutMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetInOutMode</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method is available even if the dimension has 1 extremity symbol.
 except for cumurate dimension.
 Sets inside\outside mode of dimension value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     error returned code
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    Mode
     <br>  1 = Inside mode.
     <br>  2 = Outside mode.</dd>
</dl>
</dl>
</dl>
<a name="SetPosition"></a><a name="SetPosition(double*)"></a> <dt> o <b>SetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPosition</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the dimension position.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosition</tt>
   <dd>    Position to set.</dd>
</dl>
</dl>
</dl>
<a name="SetSymmetryMode"></a><a name="SetSymmetryMode(int)"></a> <dt> o <b>SetSymmetryMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSymmetryMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSymmetryMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the symmetry mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymmetryMode</tt>
   <dd>    Symmetry mode to set (1=yes, 0=no).</dd>
</dl>
</dl>
</dl>
<a name="SetViewMode"></a><a name="SetViewMode(CATDrwDimViewMode)"></a> <dt> o <b>SetViewMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetViewMode</b>(<td> const <script type="text/javascript"> activateLink('CATDrwDimViewMode','CATDrwDimViewMode')</script> <td><tt>iViewMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the dimension positionning mode (free or forced).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewMode</tt>
   <dd>    Positionning mode to set (see enum definition file).</dd>
</dl>
</dl>
</dl>
<a name="ShowDualValue"></a><a name="ShowDualValue()"></a> <dt> o <b>ShowDualValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ShowDualValue</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Show dual value.
</dl>
<a name="UnClip"></a><a name="UnClip()"></a> <dt> o <b>UnClip</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnClip</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes the clipping if existing.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul><li><code>S_OK</code> if everything ran ok and the dimension was clipped,</li>
   <li><code>S_FALSE</code> if the dimension wasn't clipped,</li>
   <li><code>E_FAIL</code> otherwise.</li></ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDrwDimDimension.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
