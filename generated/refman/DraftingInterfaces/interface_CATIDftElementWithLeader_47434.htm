<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftElementWithLeader</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDftElementWithLeader','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftElementWithLeader','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDftElementWithLeader','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftElementWithLeader','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDftElementWithLeader</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftElementWithLeader_47434','CATIDftElementWithLeader','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftElementWithLeader</b>
</p>
<p>
<b><i> Interface on Leader list management.</i></b><br>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDftLeader','');return false">CATIDftLeader</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddLeader(int,double[2],CATIDftLeader**,SymbolType)"><b>AddLeader</b></a>(int,double[2],CATIDftLeader**,SymbolType)
<dd>  Add a leader to the element.
 <dt> o 
    <a href="#GetAnchorDelta(int,double*)"><b>GetAnchorDelta</b></a>(int,double*)
<dd>  Get the leader anchor delta without view scale.
 <dt> o 
    <a href="#GetAnchorPoint(int,double [2])"><b>GetAnchorPoint</b></a>(int,double [2])
<dd>  Returns the position of a particular anchor point for leader.
 <dt> o 
    <a href="#GetAnchorPoints(int*,double**,int**,double**)"><b>GetAnchorPoints</b></a>(int*,double**,int**,double**)
<dd>  Returns all possible anchor points for leaders on the element.
 <dt> o 
    <a href="#GetLeader(int,CATIDftLeader**)"><b>GetLeader</b></a>(int,CATIDftLeader**)
<dd>  Returns a particular leader.
 <dt> o 
    <a href="#GetLeadersVisualization(int*)"><b>GetLeadersVisualization</b></a>(int*)
<dd>  Returns the visualization mode.
 <dt> o 
    <a href="#GetNbLeader(int*)"><b>GetNbLeader</b></a>(int*)
<dd>   Returns the number of leader on the element.
 <dt> o 
    <a href="#GetStandardBehavior(boolean*)"><b>GetStandardBehavior</b></a>(boolean*)
<dd>  Returns the standard obligation.
 <dt> o 
    <a href="#RemoveLeader(int)"><b>RemoveLeader</b></a>(int)
<dd>  Removes a leader.
 <dt> o 
    <a href="#SetAnchorDelta(int,double)"><b>SetAnchorDelta</b></a>(int,double)
<dd>  Set the leader anchor delta without view scale.
 <dt> o 
    <a href="#SetLeadersVisualization(int)"><b>SetLeadersVisualization</b></a>(int)
<dd>  Set the visualization mode for leaders.
 <dt> o 
    <a href="#SetStandardBehavior(boolean)"><b>SetStandardBehavior</b></a>(boolean)
<dd>  Set the standard obligation.
 <dt> o 
    <a href="#SlideAlongLeader(double,double)"><b>SlideAlongLeader</b></a>(double,double)
<dd>  Slide the text along its leaders.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddLeader"></a><a name="AddLeader(int,double[2],CATIDftLeader**,SymbolType)"></a> <dt> o <b>AddLeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddLeader</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAnchorOnElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iEndPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftLeader','CATIDftLeader**')</script> <td><tt>oLeader</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SymbolType','SymbolType')</script> <td><tt>iSymbolType</tt><td><tt>= NOTUSED</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a leader to the element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAnchorOnElement</tt>
   <dd>   The rank of the point in the list returned by GetAnchorPoints
 </dd>
    <dt><tt> iEndPoint</tt>
   <dd>   The point of the arrow
 </dd>
    <dt><tt> oLeader</tt>
   <dd>   A pointer on the leader added.
 </dd>
    <dt><tt> iSymbolType</tt>
   <dd>   The type of the symbol (can be automaticly overriden by some annotations)</dd>
</dl>
</dl>
</dl>
<a name="GetAnchorDelta"></a><a name="GetAnchorDelta(int,double*)"></a> <dt> o <b>GetAnchorDelta</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorDelta</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoLeader</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oDelta</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the leader anchor delta without view scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDelta</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="GetAnchorPoint"></a><a name="GetAnchorPoint(int,double [2])"></a> <dt> o <b>GetAnchorPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorPoint</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double [2','double [2]')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the position of a particular anchor point for leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoPoints</tt>
   <dd>  Rank of the point in the possible list of anchor point. The list start to 1 to number 
  of points returned by GetAnchorPoints method.
 </dd>
    <dt><tt> oPoint</tt>
   <dd>   The point.</dd>
</dl>
</dl>
</dl>
<a name="GetAnchorPoints"></a><a name="GetAnchorPoints(int*,double**,int**,double**)"></a> <dt> o <b>GetAnchorPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnchorPoints</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oPointListe</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int**')</script> <td><tt>oPointIsValid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oDeltaListe</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns all possible anchor points for leaders on the element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbPoints</tt>
   <dd>   Number of possible points to anchor leader.
 </dd>
    <dt><tt> oPointListe</tt>
   <dd>   Liste of points, X1,Y1,X2,Y2,...
 </dd>
    <dt><tt> oPointIsValid</tt>
   <dd>   Liste of usable points rank in the previous list.
 </dd>
    <dt><tt> oDeltaListe</tt>
   <dd>   Liste of delta for anchor point</dd>
</dl>
</dl>
</dl>
<a name="GetLeader"></a><a name="GetLeader(int,CATIDftLeader**)"></a> <dt> o <b>GetLeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLeader</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoLeader</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDftLeader','CATIDftLeader**')</script> <td><tt>oLeader</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a particular leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoLeader</tt>
   <dd>   The rank of the leader. Start to 1 to number of leader returned by GetNbLeader method.
 </dd>
    <dt><tt> oLeader</tt>
   <dd>   A pointer on the leader.</dd>
</dl>
</dl>
</dl>
<a name="GetLeadersVisualization"></a><a name="GetLeadersVisualization(int*)"></a> <dt> o <b>GetLeadersVisualization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLeadersVisualization</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oShowMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the visualization mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ShowMode</tt>
   <dd>   if ShowMode = 0, leaders aren't visible.</dd>
</dl>
</dl>
</dl>
<a name="GetNbLeader"></a><a name="GetNbLeader(int*)"></a> <dt> o <b>GetNbLeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbLeader</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oNbLeader</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Returns the number of leader on the element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbLeader</tt>
   <dd>   The number of leader on the element.</dd>
</dl>
</dl>
</dl>
<a name="GetStandardBehavior"></a><a name="GetStandardBehavior(boolean*)"></a> <dt> o <b>GetStandardBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStandardBehavior</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oStd</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the standard obligation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStd</tt>
   <dd>   if oStd = TRUE  ->  the leader anchor point will respect the current standard 
                   (either ISO/JIS/ANSI)
   if oStd = FALSE -> the leader anchor point doeas not respect any standard</dd>
</dl>
</dl>
</dl>
<a name="RemoveLeader"></a><a name="RemoveLeader(int)"></a> <dt> o <b>RemoveLeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveLeader</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoLeader</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a leader.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNoLeader</tt>
   <dd>   Rank of leader to delete. If <tt>iNoLeader</tt> is equal to -1, all leaders will
   be deleted.</dd>
</dl>
</dl>
</dl>
<a name="SetAnchorDelta"></a><a name="SetAnchorDelta(int,double)"></a> <dt> o <b>SetAnchorDelta</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAnchorDelta</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNoLeader</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDelta</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the leader anchor delta without view scale.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDelta</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="SetLeadersVisualization"></a><a name="SetLeadersVisualization(int)"></a> <dt> o <b>SetLeadersVisualization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLeadersVisualization</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShowMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the visualization mode for leaders.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ShowMode</tt>
   <dd>   if ShowMode = 0, leaders won't be visible.</dd>
</dl>
</dl>
</dl>
<a name="SetStandardBehavior"></a><a name="SetStandardBehavior(boolean)"></a> <dt> o <b>SetStandardBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStandardBehavior</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iStd</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the standard obligation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStd</tt>
   <dd>   if iStd = TRUE  ->  the leader anchor point will respect the current standard 
                   (either ISO/JIS/ANSI)
   if iStd = FALSE -> the leader anchor point doeas not respect any standard</dd>
</dl>
</dl>
</dl>
<a name="SlideAlongLeader"></a><a name="SlideAlongLeader(double,double)"></a> <dt> o <b>SlideAlongLeader</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SlideAlongLeader</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDeltaX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDeltaY</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Slide the text along its leaders.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDeltaX</tt>
   <dd> </dd>
    <dt><tt> iDeltaY</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftElementWithLeader.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
