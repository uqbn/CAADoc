<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftGenView</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDftGenView','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftGenView','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDftGenView','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftGenView','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDftGenView</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftGenView_28630','CATIDftGenView','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftGenView</b>
</p>
<p>
<b><i> Interface to retrieve attributs dedicated to generative drawing views.</i></b><br>

 <b>Role</b>: This interface to retrieve informations dedicated to generative drawing views.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBox3D(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)"><b>GetBox3D</b></a>(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)
<dd>  Retrieves box mathematical definition.
 <dt> o 
    <a href="#GetBox3DOptions(CATDrwGenBox3DType&amp;,CATDrwGenBox3DMode&amp;)"><b>GetBox3DOptions</b></a>(CATDrwGenBox3DType&amp;,CATDrwGenBox3DMode&amp;)
<dd>  Gets parameters on a box operator.
 <dt> o 
    <a href="#GetProjectionPlane(CATMathPlane**)"><b>GetProjectionPlane</b></a>(CATMathPlane**)
<dd>  Returns the projection plane on the Generative View.
 <dt> o 
    <a href="#IsBox3DModifiable(CATBoolean*)"><b>IsBox3DModifiable</b></a>(CATBoolean*)
<dd>  Used to know if the Box3D definition comes from an external object (i.
 <dt> o 
    <a href="#IsGenerative(boolean*)"><b>IsGenerative</b></a>(boolean*)
<dd>  Used to know if the view is generative.
 <dt> o 
    <a href="#IsShowHidden(boolean*)"><b>IsShowHidden</b></a>(boolean*)
<dd>  Gets the generative view hidden line representation.
 <dt> o 
    <a href="#IsShowSmooth(boolean*)"><b>IsShowSmooth</b></a>(boolean*)
<dd>  Gets the generative view smooth edges representation.
 <dt> o 
    <a href="#RemoveBox3D()"><b>RemoveBox3D</b></a>()
<dd>  Removes a box3D operator in the view.
 <dt> o 
    <a href="#SetBox3D(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)"><b>SetBox3D</b></a>(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)
<dd>  Sets or create a clipping box (not available if a DMUBox already exists on the view).
 <dt> o 
    <a href="#SetBox3DOptions(CATDrwGenBox3DType,CATDrwGenBox3DMode)"><b>SetBox3DOptions</b></a>(CATDrwGenBox3DType,CATDrwGenBox3DMode)
<dd>  Sets parameters on a box operator.
 <dt> o 
    <a href="#SetProjectionPlane(CATMathPlane*)"><b>SetProjectionPlane</b></a>(CATMathPlane*)
<dd>  Sets the projection plane on the Generative View.
 <dt> o 
    <a href="#SetShowHidden(boolean)"><b>SetShowHidden</b></a>(boolean)
<dd>  Sets the generative view hidden line representation.
 <dt> o 
    <a href="#SetShowSmooth(boolean)"><b>SetShowSmooth</b></a>(boolean)
<dd>  Sets the generative view smooth edges representation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBox3D"></a><a name="GetBox3D(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)"></a> <dt> o <b>GetBox3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBox3D</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>oPointA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>oPointB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>oPointC</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>oPointD</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves box mathematical definition.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBox</tt>
   <dd>      The box as xmin, xmax, ymin, ymax, zmin, zmax</dd>
</dl>
</dl>
</dl>
<a name="GetBox3DOptions"></a><a name="GetBox3DOptions(CATDrwGenBox3DType&amp;,CATDrwGenBox3DMode&amp;)"></a> <dt> o <b>GetBox3DOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBox3DOptions</b>(<td><script type="text/javascript"> activateLink('CATDrwGenBox3DType','CATDrwGenBox3DType&amp;')</script> <td><tt>oClippingType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDrwGenBox3DMode','CATDrwGenBox3DMode&amp;')</script> <td><tt>oClippingMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets parameters on a box operator.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClippingType</tt>
   <dd> (box, slice or back clipping plane)   </dd>
    <dt><tt> oClippingMode</tt>
   <dd> ** NOT IMPLEMENTED **  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if operation succeeded.
 <dt><tt>E_FAIL</tt> <dd>if a box does not exist on the view
</dl>
</dl>
<a name="GetProjectionPlane"></a><a name="GetProjectionPlane(CATMathPlane**)"></a> <dt> o <b>GetProjectionPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProjectionPlane</b>(<td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane**')</script> <td><tt>oPlane</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the projection plane on the Generative View.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPlane</tt>
   <dd>    the CATMathPlane wich describes the projection plane of the view</dd>
</dl>
</dl>
</dl>
<a name="IsBox3DModifiable"></a><a name="IsBox3DModifiable(CATBoolean*)"></a> <dt> o <b>IsBox3DModifiable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsBox3DModifiable</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBoxModifiable</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the Box3D definition comes from an external object (i.e. DMUBOX).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBoxModifiable</tt>
   <dd>   TRUE  = standalone box
   FALSE = box created with an external link (i.e. DMUBOX)</dd>
</dl>
</dl>
</dl>
<a name="IsGenerative"></a><a name="IsGenerative(boolean*)"></a> <dt> o <b>IsGenerative</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsGenerative</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oGenStatus</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the view is generative.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGenStatus</tt>
   <dd>   <br>  TRUE = A result is generated from 3D
   <br>  FALSE = The view isn't generative</dd>
</dl>
</dl>
</dl>
<a name="IsShowHidden"></a><a name="IsShowHidden(boolean*)"></a> <dt> o <b>IsShowHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsShowHidden</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oShowHidden</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the generative view hidden line representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oShowHidden</tt>
   <dd>   <br> TRUE = Hidden lines are show 
   <br>  FALSE = Hidden lines are not show</dd>
</dl>
</dl>
</dl>
<a name="IsShowSmooth"></a><a name="IsShowSmooth(boolean*)"></a> <dt> o <b>IsShowSmooth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsShowSmooth</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oShowSmooth</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the generative view smooth edges representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oShowSmooth</tt>
   <dd>   <br> TRUE = Smooth edges are show
   <br> FALSE = Smooth edges are not show</dd>
</dl>
</dl>
</dl>
<a name="RemoveBox3D"></a><a name="RemoveBox3D()"></a> <dt> o <b>RemoveBox3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveBox3D</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes a box3D operator in the view.
</dl>
<a name="SetBox3D"></a><a name="SetBox3D(CATMathPoint*,CATMathPoint*,CATMathPoint*,CATMathPoint*)"></a> <dt> o <b>SetBox3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBox3D</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>iPointA</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>iPointB</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>iPointC</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>iPointD</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets or create a clipping box (not available if a DMUBox already exists on the view).
 The view may own only one box
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBox</tt>
   <dd>      The box as xmin, xmax, ymin, ymax, zmin, zmax
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if operation succeeded.
 <dt><tt>E_FAIL</tt> <dd>if A DMUBox exists on the view
</dl>
</dl>
<a name="SetBox3DOptions"></a><a name="SetBox3DOptions(CATDrwGenBox3DType,CATDrwGenBox3DMode)"></a> <dt> o <b>SetBox3DOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBox3DOptions</b>(<td> const <script type="text/javascript"> activateLink('CATDrwGenBox3DType','CATDrwGenBox3DType')</script> <td><tt>iClippingType</tt><td><tt>=ClippingByBox</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATDrwGenBox3DMode','CATDrwGenBox3DMode')</script> <td><tt>iClippingMode</tt><td><tt>=Relimit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets parameters on a box operator.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClippingType</tt>
   <dd> (box, slice or back clipping plane)   </dd>
    <dt><tt> iClippingMode</tt>
   <dd> ** NOT IMPLEMENTED **  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if operation succeeded.
 <dt><tt>E_FAIL</tt> <dd>if a box does not exist on the view
</dl>
</dl>
<a name="SetProjectionPlane"></a><a name="SetProjectionPlane(CATMathPlane*)"></a> <dt> o <b>SetProjectionPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProjectionPlane</b>(<td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane*')</script> <td><tt>iPlane</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the projection plane on the Generative View.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>    the CATMathPlane wich describes the projection plane of the view</dd>
</dl>
</dl>
</dl>
<a name="SetShowHidden"></a><a name="SetShowHidden(boolean)"></a> <dt> o <b>SetShowHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetShowHidden</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iShowHidden</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the generative view hidden line representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowHidden</tt>
   <dd>   <br>  TRUE = Hidden lines are show 
   <br>  FALSE = Hidden lines are not show</dd>
</dl>
</dl>
</dl>
<a name="SetShowSmooth"></a><a name="SetShowSmooth(boolean)"></a> <dt> o <b>SetShowSmooth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetShowSmooth</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iShowSmooth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the generative view smooth edges representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowSmooth</tt>
   <dd>   <br>  TRUE = Smooth edges are show 
   <br>  FALSE = Smooth edges are not show</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftGenView.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
