<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftText</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDftText','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftText','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDftText','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftText','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDftText</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftText_25197','CATIDftText','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftText</b>
</p>
<p>
<b><i> Manage texts by selection in this text.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetString(wchar_t**)"><b>GetString</b></a>(wchar_t**)
<dd>  Get the text of the current selection.
 <dt> o 
    <a href="#GetSubSet(wchar_t*,IID,IUnknown**)"><b>GetSubSet</b></a>(wchar_t*,IID,IUnknown**)
<dd>  Returns an interface on a subset of the text.
 <dt> o 
    <a href="#GetTextWidth(double*)"><b>GetTextWidth</b></a>(double*)
<dd>  Read the text Wrapping width.
 <dt> o 
    <a href="#GetWrappingMode(DftWrappingMode*)"><b>GetWrappingMode</b></a>(DftWrappingMode*)
<dd>  Read the text Wrapping Mode.
 <dt> o 
    <a href="#SetString(wchar_t*)"><b>SetString</b></a>(wchar_t*)
<dd>  Modify the current selection with a new string.
 <dt> o 
    <a href="#SetTextWidth(double)"><b>SetTextWidth</b></a>(double)
<dd>  Set the Wrapping Width.
 <dt> o 
    <a href="#SetWrappingMode(DftWrappingMode)"><b>SetWrappingMode</b></a>(DftWrappingMode)
<dd>  Set or Unset the Wrapping Mode.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetString"></a><a name="GetString(wchar_t**)"></a> <dt> o <b>GetString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetString</b>(<td><script type="text/javascript"> activateLink('wchar_t','wchar_t**')</script> <td><tt>oStg</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the text of the current selection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ostg</tt>
   <dd>   The returned text</dd>
</dl>
</dl>
</dl>
<a name="GetSubSet"></a><a name="GetSubSet(wchar_t*,IID,IUnknown**)"></a> <dt> o <b>GetSubSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSubSet</b>(<td> const <script type="text/javascript"> activateLink('wchar_t','wchar_t*')</script> <td><tt>iSubSetName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('IID','IID')</script> <td><tt>iItfName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oSubSet</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns an interface on a subset of the text.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSubSetName</tt>
   <dd> Can be for Texts :<BR>
 "Global","Text","Selection","Leaders","WholeFrame"
 </dd>
    <dt><tt> iItfName</tt>
   <dd> The interface id
 </dd>
    <dt><tt> oSubSet</tt>
   <dd> The pointer on the asked interface. Can be NULL if the adhesion doesn't exists.</dd>
</dl>
</dl>
</dl>
<a name="GetTextWidth"></a><a name="GetTextWidth(double*)"></a> <dt> o <b>GetTextWidth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTextWidth</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oWidth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Read the text Wrapping width.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWidth</tt>
   <dd>      Wrapping width
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT     S_OK : Operation is successful.
     E_FAIL or E_NOIMPL : the text cannot be wrapped.
</dl>
</dl>
<a name="GetWrappingMode"></a><a name="GetWrappingMode(DftWrappingMode*)"></a> <dt> o <b>GetWrappingMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetWrappingMode</b>(<td><script type="text/javascript"> activateLink('DftWrappingMode','DftWrappingMode*')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Read the text Wrapping Mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>      Wrapping Mode
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT     S_OK : Operation is successful.
     E_FAIL or E_NOIMPL : the text cannot be wrapped.
</dl>
</dl>
<a name="SetString"></a><a name="SetString(wchar_t*)"></a> <dt> o <b>SetString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetString</b>(<td> const <script type="text/javascript"> activateLink('wchar_t','wchar_t*')</script> <td><tt>iStg</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modify the current selection with a new string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStg</tt>
   <dd>    Text to insert/replace.<BR>
   If the selection is a cursor, the text will be inserted.<BR>
   If not the slection will be replaced.</dd>
</dl>
</dl>
</dl>
<a name="SetTextWidth"></a><a name="SetTextWidth(double)"></a> <dt> o <b>SetTextWidth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTextWidth</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iWidth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the Wrapping Width.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidth</tt>
   <dd>  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    S_OK : the text can be wrapped.
    E_FAIL or E_NOIMPL : the text cannot be wrapped.
</dl>
</dl>
<a name="SetWrappingMode"></a><a name="SetWrappingMode(DftWrappingMode)"></a> <dt> o <b>SetWrappingMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetWrappingMode</b>(<td><script type="text/javascript"> activateLink('DftWrappingMode','DftWrappingMode')</script> <td><tt>imode</tt><td><tt>= DftWrappingAuto</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set or Unset the Wrapping Mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> imode</tt>
   <dd>  wrapping calculation mode 
        = DftWrappingOn   : set the wrapping width to iWidth
        = DftWrappingOff  : unset the wrapping width
        = DftWrappingAuto : set the wrapping width to the longest text line (default)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    S_OK : the text can be wrapped.
    E_FAIL or E_NOIMPL : the text cannot be wrapped.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftText.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
