<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDrwConstructionLines</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDrwConstructionLines','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwConstructionLines','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDrwConstructionLines','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwConstructionLines','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDrwConstructionLines</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDrwConstructionLines_48695','CATIDrwConstructionLines','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDrwConstructionLines</b>
</p>
<p>
<b><i>   Interface implemented by views.</i></b><br>
 
 <b>Role</b>: It allows to build or destroy construction lines between views.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddAuxElem(CATBaseUnknown_var&amp;,int)"><b>AddAuxElem</b></a>(CATBaseUnknown_var&amp;,int)
<dd>  Builds construction lines between a view and a single element.
 <dt> o 
    <a href="#AddAuxView(CATIView_var&amp;)"><b>AddAuxView</b></a>(CATIView_var&amp;)
<dd>  Builds all construction lines between a view and an other one.
 <dt> o 
    <a href="#GetListOfAuxiliaryViews(CATLISTV(CATBaseUnknown_var)&amp;)"><b>GetListOfAuxiliaryViews</b></a>(CATLISTV(CATBaseUnknown_var)&amp;)
<dd>   Retrieves the auxiliary views which provide the construction lines.
 <dt> o 
    <a href="#GetListOfElems(CATIView_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;)"><b>GetListOfElems</b></a>(CATIView_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;)
<dd>   Retrieves the list of elements belonging to a view which provide the construction lines.
 <dt> o 
    <a href="#GetMyView(CATIView_var&amp;)"><b>GetMyView</b></a>(CATIView_var&amp;)
<dd>  Retrieves the main view.
 <dt> o 
    <a href="#RemoveAuxElem(CATBaseUnknown_var&amp;,int)"><b>RemoveAuxElem</b></a>(CATBaseUnknown_var&amp;,int)
<dd>  Removes construction lines coming from a single element.
 <dt> o 
    <a href="#RemoveAuxView(CATIView_var&amp;)"><b>RemoveAuxView</b></a>(CATIView_var&amp;)
<dd>  Removes all construction lines between a view and an other.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddAuxElem"></a><a name="AddAuxElem(CATBaseUnknown_var&amp;,int)"></a> <dt> o <b>AddAuxElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddAuxElem</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>update</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Builds construction lines between a view and a single element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd> [in] the single element (a geometry)  </dd>
    <dt><tt> update</tt>
   <dd> [in] if you have several elem to compute together , use update = 0 for all  the elems except the last one. (That must be more efficient) 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed. (iElem not correct).
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','GetMyView');return false">GetMyView</a>
</dl>
</dl>
<a name="AddAuxView"></a><a name="AddAuxView(CATIView_var&amp;)"></a> <dt> o <b>AddAuxView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddAuxView</b>(<td> const <script type="text/javascript"> activateLink('CATIView_var','CATIView_var&amp;')</script> <td><tt>iView</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Builds all construction lines between a view and an other one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd> [in] the "other" view </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed. (iView same as GetMyView() or not correct).
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','GetMyView');return false">GetMyView</a>
</dl>
</dl>
<a name="GetListOfAuxiliaryViews"></a><a name="GetListOfAuxiliaryViews(CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>GetListOfAuxiliaryViews</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAuxiliaryViews</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the auxiliary views which provide the construction lines.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oList</tt>
   <dd> [out] the list of other views that have construction lines   with the main view 
	note :the objects contained in the returned list are in fact CATIView_var.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed. 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','GetMyView');return false">GetMyView</a>
</dl>
</dl>
<a name="GetListOfElems"></a><a name="GetListOfElems(CATIView_var&amp;,CATLISTV(CATBaseUnknown_var)&amp;)"></a> <dt> o <b>GetListOfElems</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfElems</b>(<td> const <script type="text/javascript"> activateLink('CATIView_var','CATIView_var&amp;')</script> <td><tt>iView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the list of elements belonging to a view which provide the construction lines.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd> [in] the view that contains the elements </dd>
    <dt><tt> oList</tt>
   <dd> [out] the list of elements (geometry) that provide construction lines 	note :the objects contained in the returned list are in fact CATI2DWFGeomtry_var.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed.
</dl>
</dl>
<a name="GetMyView"></a><a name="GetMyView(CATIView_var&amp;)"></a> <dt> o <b>GetMyView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMyView</b>(<td><script type="text/javascript"> activateLink('CATIView_var','CATIView_var&amp;')</script> <td><tt>oView</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the main view. (should be the view that implements this interface).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oView</tt>
   <dd> [out] the main view</dd>
</dl>
</dl>
</dl>
<a name="RemoveAuxElem"></a><a name="RemoveAuxElem(CATBaseUnknown_var&amp;,int)"></a> <dt> o <b>RemoveAuxElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAuxElem</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>update</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes construction lines coming from a single element.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd> [in] the single element (a geometry)  </dd>
    <dt><tt> update</tt>
   <dd> [in] if you have several elem to compute together , use update = 0 for all  the elems except the last one. (That must be more efficient) 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed. (iElem not correct).
</dl>
</dl>
<a name="RemoveAuxView"></a><a name="RemoveAuxView(CATIView_var&amp;)"></a> <dt> o <b>RemoveAuxView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAuxView</b>(<td> const <script type="text/javascript"> activateLink('CATIView_var','CATIView_var&amp;')</script> <td><tt>iView</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes all construction lines between a view and an other.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd> [in] the "other" view </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK : Method correctly executed. 
   E_FAIL : Method execution failed. (iView not already added).
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','GetMyView');return false">GetMyView</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDrwConstructionLines.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
