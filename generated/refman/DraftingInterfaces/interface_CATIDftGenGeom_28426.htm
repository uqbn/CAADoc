<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftGenGeom</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDftGenGeom','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftGenGeom','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDftGenGeom','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftGenGeom','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDftGenGeom</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftGenGeom_28426','CATIDftGenGeom','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftGenGeom</b>
</p>
<p>
<b><i> Interface to manage generated geometry in a generative View.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBody(CATBody**)"><b>GetBody</b></a>(CATBody**)
<dd>   Gets the body of origin.
 <dt> o 
    <a href="#GetGeometryOfOrigin(CATLISTP(CATCell)**)"><b>GetGeometryOfOrigin</b></a>(CATLISTP(CATCell)**)
<dd>  Gets the 3D geometry of origin.
 <dt> o 
    <a href="#GetProduct(IID&amp;,IUnknown**)"><b>GetProduct</b></a>(IID&amp;,IUnknown**)
<dd>   Gets the product of origin.
 <dt> o 
    <a href="#GetShowMode(DftGenShowMode&amp;)"><b>GetShowMode</b></a>(DftGenShowMode&amp;)
<dd>   Gets the mode of visualisation.
 <dt> o 
    <a href="#GetTransformation(CATMathTransformation**)"><b>GetTransformation</b></a>(CATMathTransformation**)
<dd>  Gets the transformation of the generated geometry.
 <dt> o 
    <a href="#GetUnderlyingGeometry(CATCurve**)"><b>GetUnderlyingGeometry</b></a>(CATCurve**)
<dd>   Gets the underlying 2D geometry.
 <dt> o 
    <a href="#IsCut(CATBoolean*)"><b>IsCut</b></a>(CATBoolean*)
<dd>  Used to know if the generated geometry is cut by the section plane.
 <dt> o 
    <a href="#SetShowMode(DftGenShowMode)"><b>SetShowMode</b></a>(DftGenShowMode)
<dd>   Sets the mode of visualisation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBody"></a><a name="GetBody(CATBody**)"></a> <dt> o <b>GetBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBody</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody**')</script> <td><tt>oBody</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the body of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBody</tt>
   <dd>    The "coming from" body in the part.
		Don't forget to RELEASE the resulting body after use.</dd>
</dl>
</dl>
</dl>
<a name="GetGeometryOfOrigin"></a><a name="GetGeometryOfOrigin(CATLISTP(CATCell)**)"></a> <dt> o <b>GetGeometryOfOrigin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGeometryOfOrigin</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)**')</script> <td><tt>oListPtrCATCell</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the 3D geometry of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListPtrCATCell</tt>
   <dd>    List of pointers on CATCells.
    After use, it must be DELETED and each cell RELEASED.</dd>
</dl>
</dl>
</dl>
<a name="GetProduct"></a><a name="GetProduct(IID&amp;,IUnknown**)"></a> <dt> o <b>GetProduct</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProduct</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown**')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the product of origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIID</tt>
   <dd>     the IID of the returned interface
 </dd>
    <dt><tt> oProduct</tt>
   <dd>		the "coming from" product in the assembly.
		Don't forget to RELEASE the resulting product after use.</dd>
</dl>
</dl>
</dl>
<a name="GetShowMode"></a><a name="GetShowMode(DftGenShowMode&amp;)"></a> <dt> o <b>GetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetShowMode</b>(<td><script type="text/javascript"> activateLink('DftGenShowMode','DftGenShowMode&amp;')</script> <td><tt>oShowMode</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the mode of visualisation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oShowMode</tt>
   <dd>    see above for definition of ShowMode</dd>
</dl>
</dl>
</dl>
<a name="GetTransformation"></a><a name="GetTransformation(CATMathTransformation**)"></a> <dt> o <b>GetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTransformation</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation**')</script> <td><tt>oTransformation</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the transformation of the generated geometry.
 It takes into account all the 3D transformations from the original geometry
 to the resulting geometry. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransformation</tt>
   <dd>    Mathematical transformation made up of translations and rotations.
		After use, it must be DELETED.</dd>
</dl>
</dl>
</dl>
<a name="GetUnderlyingGeometry"></a><a name="GetUnderlyingGeometry(CATCurve**)"></a> <dt> o <b>GetUnderlyingGeometry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUnderlyingGeometry</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve**')</script> <td><tt>oCurve</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the underlying 2D geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurve</tt>
   <dd>		Don't forget to RELEASE the resulting curve after use</dd>
</dl>
</dl>
</dl>
<a name="IsCut"></a><a name="IsCut(CATBoolean*)"></a> <dt> o <b>IsCut</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsCut</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oCutInfo</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if the generated geometry is cut by the section plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCutInfo</tt>
   <dd>   <br>  TRUE = The genItem is cut by the section plane
   <br>  FALSE = The genItem is not cut by the section plane
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dt><tt>S_OK</tt> <dd>if the operation succeeded,
 <dt><tt>E_INVALIDARG</tt> <dd>if argument pointer NULL,
 <dt><tt>E_FAIL</tt> <dd>if an unspecified failure occurred.
 </dl>
</dl>
</dl>
<a name="SetShowMode"></a><a name="SetShowMode(DftGenShowMode)"></a> <dt> o <b>SetShowMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetShowMode</b>(<td> const <script type="text/javascript"> activateLink('DftGenShowMode','DftGenShowMode')</script> <td><tt>iShowMode</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the mode of visualisation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShowMode</tt>
   <dd>    see above for definition of ShowMode</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftGenGeom.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
