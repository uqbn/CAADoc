<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATISheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISheet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISheet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISheet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISheet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATISheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISheet_23176','CATISheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISheet</b>
</p>
<p>
<b><i> Interface of the drawing sheet object.</i></b><br>

 <b>Role</b>: The sheets represents the paper sheets used in manual
 drawing works.
 The main role of the sheets is to manage formats and display views.
 An empty sheet contains 2 views :
    The background view which is used for frames and title blocks
    The main view which contains the geometry directly created in the sheet.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddView(CATIView_var,double[2])"><b>AddView</b></a>(CATIView_var,double[2])
<dd>  This method is used to add a view in the sheet.
 <dt> o 
    <a href="#AddView(CATIDftViewMakeUp*,boolean)"><b>AddView</b></a>(CATIDftViewMakeUp*,boolean)
<dd>  This method is used to add a view in the sheet
 Use the CATIDrwFactory interface to create the view and view make-up.
 <dt> o 
    <a href="#GetBackgroundView()"><b>GetBackgroundView</b></a>()
<dd>  Gets the background view.
 <dt> o 
    <a href="#GetCurrentView()"><b>GetCurrentView</b></a>()
<dd>  Gets the current view.
 <dt> o 
    <a href="#GetCurrentViewMakeUp(CATIDftViewMakeUp**)"><b>GetCurrentViewMakeUp</b></a>(CATIDftViewMakeUp**)
<dd>  Gets the make up of the current view.
 <dt> o 
    <a href="#GetDrawing()"><b>GetDrawing</b></a>()
<dd>  Gets the drawing containing this sheet.
 <dt> o 
    <a href="#GetFramePoints(double&amp;,double&amp;,double&amp;,double&amp;)"><b>GetFramePoints</b></a>(double&amp;,double&amp;,double&amp;,double&amp;)
<dd>  Gets the coordinates of the sheet frame.
 <dt> o 
    <a href="#GetMainView()"><b>GetMainView</b></a>()
<dd>  Gets the main view.
 <dt> o 
    <a href="#GetProjectionMethod()"><b>GetProjectionMethod</b></a>()
<dd>  Gets the projection method for the sheet.
 <dt> o 
    <a href="#GetScale()"><b>GetScale</b></a>()
<dd>  Gets the global scale associated to the sheet.
 <dt> o 
    <a href="#GetViewList()"><b>GetViewList</b></a>()
<dd>  Returns the views referenced by the sheet.
 <dt> o 
    <a href="#IsCurrent()"><b>IsCurrent</b></a>()
<dd>  This method is used to know if the sheet is the current one in the drawing.
 <dt> o 
    <a href="#IsUpdated()"><b>IsUpdated</b></a>()
<dd>  This method is used to know if the sheet is up to date.
 <dt> o 
    <a href="#ReorderViews(CATLISTV(CATISpecObject_var)&amp;)"><b>ReorderViews</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Change the positions of the views in a sheet according to the given 
 ordered list.
 <dt> o 
    <a href="#SetCurrentView(CATIView_var)"><b>SetCurrentView</b></a>(CATIView_var)
<dd>  Sets a view as the current view.
 <dt> o 
    <a href="#SetCurrentView(CATIDftViewMakeUp*)"><b>SetCurrentView</b></a>(CATIDftViewMakeUp*)
<dd>  Sets a view as the current view.
 <dt> o 
    <a href="#SetProjectionMethod(CatSheetProjectionMethod)"><b>SetProjectionMethod</b></a>(CatSheetProjectionMethod)
<dd>  Sets the projection method for the sheet.
 <dt> o 
    <a href="#SetScale(double&amp;)"><b>SetScale</b></a>(double&amp;)
<dd>  Sets the global scale associated to the sheet.
 <dt> o 
    <a href="#ValidateViewOrder(CATLISTV(CATISpecObject_var)&amp;)"><b>ValidateViewOrder</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Validates that the given ordered list can be used as an input
 for ReorderViews.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddView"></a><a name="AddView(CATIView_var,double[2])"></a> <dt> o <b>AddView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddView</b>(<td><script type="text/javascript"> activateLink('CATIView','CATIView_var')</script> <td><tt>iView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method is used to add a view in the sheet.
 Use the CATIDrwFactory interface to create the view
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDrwFactory','');return false">CATIDrwFactory</a>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd>    The view to be added
 </dd>
    <dt><tt> iPosition[2]</tt>
   <dd>    The view position in the sheet</dd>
</dl>
</dl>
</dl>
<a name="AddView"></a><a name="AddView(CATIDftViewMakeUp*,boolean)"></a> <dt> o <b>AddView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddView</b>(<td> const <script type="text/javascript"> activateLink('CATIDftViewMakeUp','CATIDftViewMakeUp*')</script> <td><tt>iViewMU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iEmbedView</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method is used to add a view in the sheet
 Use the CATIDrwFactory interface to create the view and view make-up.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDrwFactory','');return false">CATIDrwFactory</a>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewMU</tt>
   <dd>     The view make-up to be added
 </dd>
    <dt><tt> iEmbedView</tt>
   <dd>    Not used yet.</dd>
</dl>
</dl>
</dl>
<a name="GetBackgroundView"></a><a name="GetBackgroundView()"></a> <dt> o <b>GetBackgroundView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIView','CATIView_var')</script>  <b>GetBackgroundView</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the background view.
 The background view is the view in the background of the sheet.
 This view contains in general the frames and title blocks.
 There is a background view per sheet.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The background view.
</dl>
</dl>
<a name="GetCurrentView"></a><a name="GetCurrentView()"></a> <dt> o <b>GetCurrentView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIView','CATIView_var')</script>  <b>GetCurrentView</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the current view.
 The current view is the view in edition when the sheet is current.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The current view.
</dl>
</dl>
<a name="GetCurrentViewMakeUp"></a><a name="GetCurrentViewMakeUp(CATIDftViewMakeUp**)"></a> <dt> o <b>GetCurrentViewMakeUp</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrentViewMakeUp</b>(<td><script type="text/javascript"> activateLink('CATIDftViewMakeUp','CATIDftViewMakeUp**')</script> <td><tt>oViewMU</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the make up of the current view.
 The current view is the view in edition when the sheet is current.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The current view make up.
</dl>
</dl>
<a name="GetDrawing"></a><a name="GetDrawing()"></a> <dt> o <b>GetDrawing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrawing','CATIDrawing_var')</script>  <b>GetDrawing</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the drawing containing this sheet.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The drawing containing this sheet.
</dl>
</dl>
<a name="GetFramePoints"></a><a name="GetFramePoints(double&amp;,double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>GetFramePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetFramePoints</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oBLx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oBLy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oTRx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oTRy</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the coordinates of the sheet frame.
 The sheet frame is the graphical representation of the sheet format (A0, A1, ...)..
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBLx</tt>
   <dd>   The bottom left x coordinate
 </dd>
    <dt><tt> oBLy</tt>
   <dd>   The bottom left y coordinate
 </dd>
    <dt><tt> oTRx</tt>
   <dd>   The top right x coordinate
 </dd>
    <dt><tt> oTRy</tt>
   <dd>   The top right y coordinate</dd>
</dl>
</dl>
</dl>
<a name="GetMainView"></a><a name="GetMainView()"></a> <dt> o <b>GetMainView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIView','CATIView_var')</script>  <b>GetMainView</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the main view.
 The main view is the view suporting geometries and annotations for a sheet.
 In other words, the main view is the default view of a sheet.
 There is a main view per sheet.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The main view.
</dl>
</dl>
<a name="GetProjectionMethod"></a><a name="GetProjectionMethod()"></a> <dt> o <b>GetProjectionMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CatSheetProjectionMethod','CatSheetProjectionMethod')</script>  <b>GetProjectionMethod</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the projection method for the sheet.
 The projection method may be first or third angle.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The projection method.
 <br><b>Legal values</b>: Possible values are catFirstAngle or catThirdAngle
</dl>
</dl>
<a name="GetScale"></a><a name="GetScale()"></a> <dt> o <b>GetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetScale</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the global scale associated to the sheet.
 This scale is applied on the sheet views.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The global sheet scale.
   <br><b>Legal values</b>:
   <dl> 
     <dt>The scale is greater than 0.</dt> 
   </dl>
</dl>
</dl>
<a name="GetViewList"></a><a name="GetViewList()"></a> <dt> o <b>GetViewList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)')</script>  <b>GetViewList</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the views referenced by the sheet.
 The list includes the background and main views.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The view list.
</dl>
</dl>
<a name="IsCurrent"></a><a name="IsCurrent()"></a> <dt> o <b>IsCurrent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsCurrent</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method is used to know if the sheet is the current one in the drawing.
 The current sheet is the sheet containing the view in edition.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The status
   <br><b>Legal values</b>: 
   <dl> 
     <dt>0</dt> The sheet is not the current one
     <dt>1</dt> The sheet is the current one
   </dl>
</dl>
</dl>
<a name="IsUpdated"></a><a name="IsUpdated()"></a> <dt> o <b>IsUpdated</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsUpdated</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method is used to know if the sheet is up to date.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
</dl>
<a name="ReorderViews"></a><a name="ReorderViews(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ReorderViews</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReorderViews</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iOrderedViews</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Change the positions of the views in a sheet according to the given 
 ordered list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> CATLISTV(CATISpecObject_var) &iOrderedViews</tt> [in] The ordered list of the views in this sheet.
 <b>Preconditions<b>:
 <dl>
 <dt> ValidateViewOrder(iOrderedViews) must succeed. @see ValidateViewOrder.  
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  A <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>         <dd> Views were reordered.
 <dt> <tt>E_UNEXPECTED</tt> <dd> Preconditions not met.
 <dt> <tt>E_FAIL</tt>       <dd> Internal error.
 </dl>
</dl>
</dl>
<a name="SetCurrentView"></a><a name="SetCurrentView(CATIView_var)"></a> <dt> o <b>SetCurrentView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCurrentView</b>(<td><script type="text/javascript"> activateLink('CATIView','CATIView_var')</script> <td><tt>iView</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a view as the current view.
 This view  become in edition when the sheet is current.
 <br><b>Precondition</b>: The view have to be added to the sheet before calling this method.
 <br><b>Note</b>:  Do not use this service to activate the background view in UI context, because
 the command will be canceled by the background workshop activation. 
 Only, in this particular case, it is recommended to edit the sketch by using Openedition and 
 CloseEdition methods defined in CATISketchEditor interface implemented by the view.
 These methods allow to manage geometry creation or modification in a view when it is not the
 active view of a drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iView</tt>
   <dd>   The view to be current.</dd>
</dl>
</dl>
</dl>
<a name="SetCurrentView"></a><a name="SetCurrentView(CATIDftViewMakeUp*)"></a> <dt> o <b>SetCurrentView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurrentView</b>(<td> const <script type="text/javascript"> activateLink('CATIDftViewMakeUp','CATIDftViewMakeUp*')</script> <td><tt>iViewMU</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a view as the current view.
 This view  become in edition when the sheet is current.
 <br><b>Precondition</b>: The view have to be added to the sheet before calling this method.
 <br><b>Note</b>:  Do not use this service to activate the background view in UI context, because
 the command will be canceled by the background workshop activation. 
 Only, in this particular case, it is recommended to edit the sketch by using Openedition and 
 CloseEdition methods defined in CATISketchEditor interface implemented by the view.
 These methods allow to manage geometry creation or modification in a view when it is not the
 active view of a drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewMU</tt>
   <dd>   The view make up pointing the view.</dd>
</dl>
</dl>
</dl>
<a name="SetProjectionMethod"></a><a name="SetProjectionMethod(CatSheetProjectionMethod)"></a> <dt> o <b>SetProjectionMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetProjectionMethod</b>(<td><script type="text/javascript"> activateLink('CatSheetProjectionMethod','CatSheetProjectionMethod')</script> <td><tt>iProjMethod</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the projection method for the sheet.
 The projection method may be first or third angle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProjMethod</tt>
   <dd>   The projection method
 <br><b>Legal values</b>: Possible values are catFirstAngle or catThirdAngle</dd>
</dl>
</dl>
</dl>
<a name="SetScale"></a><a name="SetScale(double&amp;)"></a> <dt> o <b>SetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetScale</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the global scale associated to the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScale</tt>
   <dd>   The sheet global scale.
   <br><b>Legal Values</b>: The scale is greater than 0.</dd>
</dl>
</dl>
</dl>
<a name="ValidateViewOrder"></a><a name="ValidateViewOrder(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ValidateViewOrder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateViewOrder</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iOrderedViews</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Validates that the given ordered list can be used as an input
 for ReorderViews.
 i.e. validates that:
 iOrderedViews is the result of a permutation applied to 
 the list of <b>all</b> the views of this sheet with the following
 constraint: iOrderedViews[1] and iOrderedViews[2] must be 
 respectively the sheet's mainview and background view. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrderedSheets</tt>
   <dd> The list of views to validate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An <tt>HRESULT</tt> value.
 <br><b>Legal values</b>:
 <dl>
 <dt> <tt>S_OK</tt>     <dd> iOrderedViews is a valid input.
 <dt> <tt>E_XXX</tt>    <dd> iOrderedViews is not a valid input.
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
