<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDrwDimValue</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDrwDimValue','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwDimValue','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDrwDimValue','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDrwDimValue','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDrwDimValue</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDrwDimValue_30094','CATIDrwDimValue','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDrwDimValue</b>
</p>
<p>
<b><i> Manages the dimension value.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngle()"><b>GetAngle</b></a>()
<dd>  Gets the angle.
 <dt> o 
    <a href="#GetDualComponent()"><b>GetDualComponent</b></a>()
<dd>  Gets the dual value.
 <dt> o 
    <a href="#GetDualValueDisplay()"><b>GetDualValueDisplay</b></a>()
<dd>  Gets the dual value display mode.
 <dt> o 
    <a href="#GetFaceComponent()"><b>GetFaceComponent</b></a>()
<dd>  Gets the main value.
 <dt> o 
    <a href="#GetFakeComponent()"><b>GetFakeComponent</b></a>()
<dd>  Gets the fake value.
 <dt> o 
    <a href="#GetOffsets(double&amp;,double&amp;)"><b>GetOffsets</b></a>(double&amp;,double&amp;)
<dd>  Gets value position by offsets.
 <dt> o 
    <a href="#GetOrientation()"><b>GetOrientation</b></a>()
<dd>  Gets the orientation.
 <dt> o 
    <a href="#GetOrientationReference()"><b>GetOrientationReference</b></a>()
<dd>  Gets the orientation reference.
 <dt> o 
    <a href="#GetPosition(double*)"><b>GetPosition</b></a>(double*)
<dd>  Gets the value position.
 <dt> o 
    <a href="#GetStringValue(CATUnicodeString&amp;)"><b>GetStringValue</b></a>(CATUnicodeString&amp;)
<dd>  Gets the string of the dimension.
 <dt> o 
    <a href="#GetValue()"><b>GetValue</b></a>()
<dd>  Gets the numerical value measured by the dimension.
 <dt> o 
    <a href="#SetAngle(double)"><b>SetAngle</b></a>(double)
<dd>  Sets the angle.
 <dt> o 
    <a href="#SetDualComponent(CATIDrwDimValueComponent_var)"><b>SetDualComponent</b></a>(CATIDrwDimValueComponent_var)
<dd>  Sets the dual value.
 <dt> o 
    <a href="#SetDualValueDisplay(int)"><b>SetDualValueDisplay</b></a>(int)
<dd>  Sets the dual value display mode.
 <dt> o 
    <a href="#SetFaceComponent(CATIDrwDimValueComponent_var)"><b>SetFaceComponent</b></a>(CATIDrwDimValueComponent_var)
<dd>  Sets the main value.
 <dt> o 
    <a href="#SetOffsets(double,double)"><b>SetOffsets</b></a>(double,double)
<dd>  Sets value position by offsets.
 <dt> o 
    <a href="#SetOrientation(int)"><b>SetOrientation</b></a>(int)
<dd>  Sets the orientation.
 <dt> o 
    <a href="#SetOrientationReference(int)"><b>SetOrientationReference</b></a>(int)
<dd>  Sets the orientation reference.
 <dt> o 
    <a href="#SetPosition(double*)"><b>SetPosition</b></a>(double*)
<dd>  
 <dt> o 
    <a href="#SetValue(double)"><b>SetValue</b></a>(double)
<dd>  Sets the value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngle"></a><a name="GetAngle()"></a> <dt> o <b>GetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetAngle</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the angle.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Angle of value orientation in case of user defined orientation.
</dl>
</dl>
<a name="GetDualComponent"></a><a name="GetDualComponent()"></a> <dt> o <b>GetDualComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimValueComponent','CATIDrwDimValueComponent_var')</script>  <b>GetDualComponent</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dual value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Value.
</dl>
</dl>
<a name="GetDualValueDisplay"></a><a name="GetDualValueDisplay()"></a> <dt> o <b>GetDualValueDisplay</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetDualValueDisplay</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the dual value display mode.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Display mode.
    <br>Legal values are: (see define definition file)
    <dl>
    <dt><tt>CATDrwDimDualNone</tt> <dd>Do not display dual value.</dd>
    <dt><tt>CATDrwDimDualBellow</tt> <dd>Display dual value bellow main value.</dd>
    <dt><tt>CATDrwDimDualFractional</tt> <dd>Display dual value bellow main value with fractionnal display.</dd>
    <dt><tt>CATDrwDimDualSideBySide</tt> <dd>Display dual value and main value side by side.</dd>
    </dl>
</dl>
</dl>
<a name="GetFaceComponent"></a><a name="GetFaceComponent()"></a> <dt> o <b>GetFaceComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimValueComponent','CATIDrwDimValueComponent_var')</script>  <b>GetFaceComponent</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the main value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Value.
</dl>
</dl>
<a name="GetFakeComponent"></a><a name="GetFakeComponent()"></a> <dt> o <b>GetFakeComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDrwDimFakeComponent','CATIDrwDimFakeComponent_var')</script>  <b>GetFakeComponent</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the fake value.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Value.
</dl>
</dl>
<a name="GetOffsets"></a><a name="GetOffsets(double&amp;,double&amp;)"></a> <dt> o <b>GetOffsets</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOffsets</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>dc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>dy</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets value position by offsets.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    error returned code
    If the getting of the vertical offset value can not be performed because 
    the parameter is locked in the current standard, the method return  HRESULT = S_READ_ONLY.
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> dc</tt>
   <dd>    X offset.
   </dd>
    <dt><tt> dy</tt>
   <dd>    Y offset.</dd>
</dl>
</dl>
</dl>
<a name="GetOrientation"></a><a name="GetOrientation()"></a> <dt> o <b>GetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the orientation.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Orientation.
     = 0 : Parallel to the dimension line or Horizontal View or Screen
     = 1  : Perpandicular to the dimensionline or Vertical View or Screen
     = 2 : User defined,  GetAngle method has to be used to get angle value.
</dl>
</dl>
<a name="GetOrientationReference"></a><a name="GetOrientationReference()"></a> <dt> o <b>GetOrientationReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetOrientationReference</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the orientation reference.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Orientation reference.
    <br>Legal values are: (see define definition file)
    <dl>
    <dt><tt>CATDrwDimRefScreen</tt> <dd>Reference is the screen.</dd>
    <dt><tt>CATDrwDimRefView</tt> <dd>Reference is the view.</dd>
    <dt><tt>CATDrwDimRefDimLine</tt> <dd>Reference is the dimension line.</dd>
    </dl>
</dl>
</dl>
<a name="GetPosition"></a><a name="GetPosition(double*)"></a> <dt> o <b>GetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPosition</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>position</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the value position.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> position</tt>
   <dd>    Position point.</dd>
</dl>
</dl>
</dl>
<a name="GetStringValue"></a><a name="GetStringValue(CATUnicodeString&amp;)"></a> <dt> o <b>GetStringValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStringValue</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oStringValue</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the string of the dimension.value
 For feature dimension (see 
<a href="#" onClick="openLink('CATIDrwDimDimension','GetAnalysisType)');return false">CATIDrwDimDimension.GetAnalysisType)</a> like thread dimension, the value can be a string This string, if it exists and if the fake mode is not activated, is always displayed on dimension value.
 In this case, the numerical value (accessible by GetValue) is hidden.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStringValue</tt>
   <dd> [out]    String value.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_READONLY</tt>  <dd> Method correctly executed (the string value is read-only)
 <dt> <tt>E_FAIL</tt>      <dd> The value of the dimension is not a string
 </dl>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue()"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetValue</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the numerical value measured by the dimension.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Value.
</dl>
</dl>
<a name="SetAngle"></a><a name="SetAngle(double)"></a> <dt> o <b>SetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAngle</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>angle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the angle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> angle</tt>
   <dd>    Angle of value orientation in case of user defined orientation.</dd>
</dl>
</dl>
</dl>
<a name="SetDualComponent"></a><a name="SetDualComponent(CATIDrwDimValueComponent_var)"></a> <dt> o <b>SetDualComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDualComponent</b>(<td> const <script type="text/javascript"> activateLink('CATIDrwDimValueComponent','CATIDrwDimValueComponent_var')</script> <td><tt>iDualComponent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the dual value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDualComponent</tt>
   <dd>    Value.</dd>
</dl>
</dl>
</dl>
<a name="SetDualValueDisplay"></a><a name="SetDualValueDisplay(int)"></a> <dt> o <b>SetDualValueDisplay</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDualValueDisplay</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>value</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the dual value display mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> value</tt>
   <dd>    Display mode.
    <br>Legal values are: (see define definition file)
    <dl>
    <dt><tt>CATDrwDimDualNone</tt> <dd>Do not display dual value.</dd>
    <dt><tt>CATDrwDimDualBellow</tt> <dd>Display dual value bellow main value.</dd>
    <dt><tt>CATDrwDimDualFractional</tt> <dd>Display dual value bellow main value with fractionnal display.</dd>
    <dt><tt>CATDrwDimDualSideBySide</tt> <dd>Display dual value and main value side by side.</dd>
    </dl></dd>
</dl>
</dl>
</dl>
<a name="SetFaceComponent"></a><a name="SetFaceComponent(CATIDrwDimValueComponent_var)"></a> <dt> o <b>SetFaceComponent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFaceComponent</b>(<td> const <script type="text/javascript"> activateLink('CATIDrwDimValueComponent','CATIDrwDimValueComponent_var')</script> <td><tt>iMainComponent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the main value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMainComponent</tt>
   <dd>    Value.</dd>
</dl>
</dl>
</dl>
<a name="SetOffsets"></a><a name="SetOffsets(double,double)"></a> <dt> o <b>SetOffsets</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOffsets</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>dx</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>dy</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets value position by offsets.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  HRESULT    error returned code
    If the setting of the vertical offset value can not be performed because 
    the parameter is locked in the current standard, the method return  HRESULT = S_READ_ONLY.
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> dx</tt>
   <dd>    X offset.
   </dd>
    <dt><tt> dy</tt>
   <dd>    Y offset.</dd>
</dl>
</dl>
</dl>
<a name="SetOrientation"></a><a name="SetOrientation(int)"></a> <dt> o <b>SetOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetOrientation</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the orientation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>    Orientation.
     = 0 : Parallel to the dimension line or Horizontal View or Screen
     = 1  : Perpandicular to the dimensionline or Vertical View or Screen
     = 2 : User defined,  SetAngle method has to be used to set angle value.</dd>
</dl>
</dl>
</dl>
<a name="SetOrientationReference"></a><a name="SetOrientationReference(int)"></a> <dt> o <b>SetOrientationReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetOrientationReference</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iReference</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the orientation reference.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReference</tt>
   <dd>    Orientation reference.
    <br>Legal values are: (see define definition file)
    <dl>
    <dt><tt>CATDrwDimRefScreen</tt> <dd>Reference is the screen.</dd>
    <dt><tt>CATDrwDimRefView</tt> <dd>Reference is the view.</dd>
    <dt><tt>CATDrwDimRefDimLine</tt> <dd>Reference is the dimension line.</dd>
    </dl></dd>
</dl>
</dl>
</dl>
<a name="SetPosition"></a><a name="SetPosition(double*)"></a> <dt> o <b>SetPosition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPosition</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>pos</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd> , use CATIDrwDimDimension#MoveValue instead.
 Sets the value position.
   
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> pos</tt>
   <dd>    Position point.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>value</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> value</tt>
   <dd>    Value.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDrwDimValue.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
