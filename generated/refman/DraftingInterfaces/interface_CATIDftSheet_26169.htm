<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces Interface CATIDftSheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDftSheet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftSheet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDftSheet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDftSheet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DraftingInterfaces Interface CATIDftSheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDftSheet_26169','CATIDftSheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDftSheet</b>
</p>
<p>
<b><i> Interface of the Sheet object.</i></b><br>

 <b>Role</b>: The Sheet aggregates view objects</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddView(CATIDftView*,double[2])"><b>AddView</b></a>(CATIDftView*,double[2])
<dd>  Adds a view in the sheet.
 <dt> o 
    <a href="#AddView(CATIDftViewMakeUp*,boolean)"><b>AddView</b></a>(CATIDftViewMakeUp*,boolean)
<dd>  Adds a view in the sheet.
 <dt> o 
    <a href="#GetBackgroundView(CATIDftView**)"><b>GetBackgroundView</b></a>(CATIDftView**)
<dd>  Gets the background view in the sheet.
 <dt> o 
    <a href="#GetDefaultActiveView(CATIDftView**)"><b>GetDefaultActiveView</b></a>(CATIDftView**)
<dd>  Gets the view which have to be activated in the sheet.
 <dt> o 
    <a href="#GetDrawing(CATIDftDrawing**)"><b>GetDrawing</b></a>(CATIDftDrawing**)
<dd>  Gets the drawing containing this sheet.
 <dt> o 
    <a href="#GetGenViewsPosMode(CATDftGenViewsPosMode&amp;)"><b>GetGenViewsPosMode</b></a>(CATDftGenViewsPosMode&amp;)
<dd>  Gets the stability mode for the position of generative views inside the sheet.
 <dt> o 
    <a href="#GetMainView(CATIDftView**)"><b>GetMainView</b></a>(CATIDftView**)
<dd>  Gets the main view in the sheet.
 <dt> o 
    <a href="#GetProjectionMethod(CATDftProjectionMethod*)"><b>GetProjectionMethod</b></a>(CATDftProjectionMethod*)
<dd>  Gets the projection method in this sheet.
 <dt> o 
    <a href="#GetScale(double*)"><b>GetScale</b></a>(double*)
<dd>  Gets the global scale associated to the sheet.
 <dt> o 
    <a href="#GetSheetFrame(int)"><b>GetSheetFrame</b></a>(int)
<dd>  
 <dt> o 
    <a href="#GetViewMakeUps(CATIUnknownList**)"><b>GetViewMakeUps</b></a>(CATIUnknownList**)
<dd>  Returns the view make-ups referenced by the drawing.
 <dt> o 
    <a href="#IsDetail(boolean*)"><b>IsDetail</b></a>(boolean*)
<dd>  Used to know if a sheet can be used to as a detail sheet.
 <dt> o 
    <a href="#ReorderViews(CATLISTV(CATISpecObject_var)&amp;)"><b>ReorderViews</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Change the positions of the views in a sheet according to the given 
 ordered list.
 <dt> o 
    <a href="#SetAsDetail()"><b>SetAsDetail</b></a>()
<dd>  
 <dt> o 
    <a href="#SetDefaultActiveView(CATIDftView*)"><b>SetDefaultActiveView</b></a>(CATIDftView*)
<dd> Sets the view which have to be activated in the sheet.
 <dt> o 
    <a href="#SetGenViewsPosMode(CATDftGenViewsPosMode)"><b>SetGenViewsPosMode</b></a>(CATDftGenViewsPosMode)
<dd>  Changes the stability mode for the position of generative views inside the sheet.
 <dt> o 
    <a href="#SetPrintArea(double*)"><b>SetPrintArea</b></a>(double*)
<dd>  Sets a set of coordinates to define a rectangle print area.
 <dt> o 
    <a href="#SetPrintAreaActivationState(boolean)"><b>SetPrintAreaActivationState</b></a>(boolean)
<dd>  Activates or deactivates the print area.
 <dt> o 
    <a href="#SetProjectionMethod(CATDftProjectionMethod)"><b>SetProjectionMethod</b></a>(CATDftProjectionMethod)
<dd>  Sets the projection method in this sheet.
 <dt> o 
    <a href="#SetScale(double)"><b>SetScale</b></a>(double)
<dd>  Sets the global scale associated to the sheet.
 <dt> o 
    <a href="#ValidateViewOrder(CATLISTV(CATISpecObject_var)&amp;)"><b>ValidateViewOrder</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Validates that the given ordered list can be used as an input
 for ReorderViews.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddView"></a><a name="AddView(CATIDftView*,double[2])"></a> <dt> o <b>AddView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddView</b>(<td> const <script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>iView</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iPosition</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a view in the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> CATIDftView *iView The view to be added.
 </dd>
    <dt><tt> const</tt>
   <dd> double iPosition[2]  The view position in the sheet.</dd>
</dl>
</dl>
</dl>
<a name="AddView"></a><a name="AddView(CATIDftViewMakeUp*,boolean)"></a> <dt> o <b>AddView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddView</b>(<td> const <script type="text/javascript"> activateLink('CATIDftViewMakeUp','CATIDftViewMakeUp*')</script> <td><tt>iViewMU</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iEmbedView</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a view in the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> CATIDftViewMakeUp *iViewMU   The view make-up to be added.
 </dd>
    <dt><tt> const</tt>
   <dd> boolean iEmbedView Embed or not the view in the sheet:
                        TRUE for basic views.
                        FALSE for Details and twin views.</dd>
</dl>
</dl>
</dl>
<a name="GetBackgroundView"></a><a name="GetBackgroundView(CATIDftView**)"></a> <dt> o <b>GetBackgroundView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBackgroundView</b>(<td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oView</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the background view in the sheet. The background view contains the frame and title-blocks.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATIDftView</tt>
   <dd> **oView The background view in the sheet.</dd>
</dl>
</dl>
</dl>
<a name="GetDefaultActiveView"></a><a name="GetDefaultActiveView(CATIDftView**)"></a> <dt> o <b>GetDefaultActiveView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultActiveView</b>(<td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oView</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the view which have to be activated in the sheet. By default, the active view is the view in edition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATIDftView</tt>
   <dd> **oView The default active view in the sheet.</dd>
</dl>
</dl>
</dl>
<a name="GetDrawing"></a><a name="GetDrawing(CATIDftDrawing**)"></a> <dt> o <b>GetDrawing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDrawing</b>(<td><script type="text/javascript"> activateLink('CATIDftDrawing','CATIDftDrawing**')</script> <td><tt>oDrawing</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the drawing containing this sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATIDftDrawing</tt>
   <dd> **oDrawing   The father drawing.</dd>
</dl>
</dl>
</dl>
<a name="GetGenViewsPosMode"></a><a name="GetGenViewsPosMode(CATDftGenViewsPosMode&amp;)"></a> <dt> o <b>GetGenViewsPosMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGenViewsPosMode</b>(<td><script type="text/javascript"> activateLink('CATDftGenViewsPosMode','CATDftGenViewsPosMode&amp;')</script> <td><tt>oPosMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the stability mode for the position of generative views inside the sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDftSheet','SetGenViewsPosMode');return false">CATIDftSheet.SetGenViewsPosMode</a>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATDftGenViewsPosMode</tt>
   <dd> &oPosMode</tt> [out] the stability mode.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>E_FAIL</tt>   <dd> Failure.
 </dl>
</dl>
</dl>
<a name="GetMainView"></a><a name="GetMainView(CATIDftView**)"></a> <dt> o <b>GetMainView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMainView</b>(<td><script type="text/javascript"> activateLink('CATIDftView','CATIDftView**')</script> <td><tt>oView</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the main view in the sheet. The main view contains geometry associated to the sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATIDftView</tt>
   <dd> **oView The main view in the sheet.</dd>
</dl>
</dl>
</dl>
<a name="GetProjectionMethod"></a><a name="GetProjectionMethod(CATDftProjectionMethod*)"></a> <dt> o <b>GetProjectionMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProjectionMethod</b>(<td><script type="text/javascript"> activateLink('CATDftProjectionMethod','CATDftProjectionMethod*')</script> <td><tt>oProjMethod</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the projection method in this sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATDftProjectionMethod</tt>
   <dd> *oProjMethod  The projection method: 
  - CATFirstAngle: First angle standard.
  - CATThirdAngle: Third angle standard.</dd>
</dl>
</dl>
</dl>
<a name="GetScale"></a><a name="GetScale(double*)"></a> <dt> o <b>GetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScale</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oScale</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the global scale associated to the sheet. This scale is applied on the sheet views.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> double</tt>
   <dd> *oScale The global scale of the sheet</dd>
</dl>
</dl>
</dl>
<a name="GetSheetFrame"></a><a name="GetSheetFrame(int)"></a> <dt> o <b>GetSheetFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSheetFrame</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>DisplaySheetFrame</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R18 Use 
<a href="#" onClick="openLink('CATIDftSheetFormat','GetSheetDisplayMode');return false">CATIDftSheetFormat.GetSheetDisplayMode</a> Gets the sheet frame.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> int</tt>
   <dd> DisplaySheetFrame  = 0 Sheet frame is not displayed.
  = 1 Sheet frame is displayed.</dd>
</dl>
</dl>
</dl>
<a name="GetViewMakeUps"></a><a name="GetViewMakeUps(CATIUnknownList**)"></a> <dt> o <b>GetViewMakeUps</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetViewMakeUps</b>(<td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oLstResult</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the view make-ups referenced by the drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATIUnknownList</tt>
   <dd> *oLstResult Founded Make-ups are added to the list.</dd>
</dl>
</dl>
</dl>
<a name="IsDetail"></a><a name="IsDetail(boolean*)"></a> <dt> o <b>IsDetail</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsDetail</b>(<td><script type="text/javascript"> activateLink('boolean','boolean*')</script> <td><tt>oDetSheet</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Used to know if a sheet can be used to as a detail sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> boolean</tt>
   <dd> *oDetSheet TRUE if it is a detail sheet</dd>
</dl>
</dl>
</dl>
<a name="ReorderViews"></a><a name="ReorderViews(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ReorderViews</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReorderViews</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iOrderedViews</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Change the positions of the views in a sheet according to the given 
 ordered list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> CATLISTV(CATISpecObject_var) &iOrderedViews</tt> [in] The ordered list of the views in the sheet.
 <b>Preconditions<b>:
 <dl>
 <dt> ValidateViewOrder(iOrderedViews) must succeed. @see ValidateViewOrder.  
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  A <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>         <dd> Views were reordered.
 <dt> <tt>E_UNEXPECTED</tt> <dd> Preconditions not met.
 <dt> <tt>E_FAIL</tt>       <dd> Internal error.
 </dl>
</dl>
</dl>
<a name="SetAsDetail"></a><a name="SetAsDetail()"></a> <dt> o <b>SetAsDetail</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAsDetail</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R20 Use 
<a href="#" onClick="openLink('CATIDftDrawing','AddSheet');return false">CATIDftDrawing.AddSheet</a> Sets the sheet as a detail sheet. All the views in this sheet will be details.
</dl>
</dl>
<a name="SetDefaultActiveView"></a><a name="SetDefaultActiveView(CATIDftView*)"></a> <dt> o <b>SetDefaultActiveView</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultActiveView</b>(<td> const <script type="text/javascript"> activateLink('CATIDftView','CATIDftView*')</script> <td><tt>iView</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
Sets the view which have to be activated in the sheet.
  By default:
               - The view have to be added in the sheet before.
               - The active view is the view in edition.
 <br><b>Note</b>: Do not use this service to activate the background view in UI context, because
 the command will be canceled by the background workshop activation. 
 Only, in this particular case, it is recommended to edit the sketch by using Openedition and 
 CloseEdition methods defined in CATISketchEditor interface implemented by the view.
 These methods allow to manage geometry creation or modification in a view when it is not the
 active view of a drawing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> CATIDftView *iView   The default active view in the sheet.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISketchEditor','OpenEdition');return false">CATISketchEditor.OpenEdition</a>
</dl>
</dl>
<a name="SetGenViewsPosMode"></a><a name="SetGenViewsPosMode(CATDftGenViewsPosMode)"></a> <dt> o <b>SetGenViewsPosMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGenViewsPosMode</b>(<td><script type="text/javascript"> activateLink('CATDftGenViewsPosMode','CATDftGenViewsPosMode')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Changes the stability mode for the position of generative views inside the sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATDftGenViewsPosMode</tt>
   <dd> iMode</tt> [in] the stability mode for generative views.
 <dl>
 <dt> <tt>CATFixedCG  </tt>   <dd> the image of the center of gravity of the 3D data remains at the same position after an update.
 <dt> <tt>CATFixedAxis</tt>   <dd> the image of the center of gravity of the 3D data moves after an update so that existing and
                                   unmodified geometries remain at the same position.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> Success.
 <dt> <tt>S_FALSE</tt>  <dd> Success. Nothing was modified since the mode requested was the current mode.
 <dt> <tt>E_FAIL</tt>   <dd> Failure.
 </dl>
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATDftGenViewsPosMode','');return false">CATDftGenViewsPosMode</a>
</dl>
</dl>
<a name="SetPrintArea"></a><a name="SetPrintArea(double*)"></a> <dt> o <b>SetPrintArea</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPrintArea</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iAreaData</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a set of coordinates to define a rectangle print area. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>const</tt>
   <dd> double * iAreaData</tt> [in] A four double table describing the parameters of the area box:
 <dl>
 <dt> iAreaData[0] as the low x coordinate of the area.
 <dt> iAreaData[1] as the low y coordinate of the area.
 <dt> iAreaData[2] as the width of the area. The value must be strictly positive.
 <dt> iAreaData[3] as the heigth of the area. The value must be strictly positive.
 <dt> All the values in the table are given in mm.
 </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>         <dd> The print area was successfully defined.
 <dt> <tt>E_INVALIDARG</tt> <dd> The input arguments do not match with specified.
 <dt> <tt>E_FAIL</tt>       <dd> No print area could be defined.
 </dl>
</dl>
</dl>
<a name="SetPrintAreaActivationState"></a><a name="SetPrintAreaActivationState(boolean)"></a> <dt> o <b>SetPrintAreaActivationState</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPrintAreaActivationState</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iActivated</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Activates or deactivates the print area.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>in</tt>
   <dd> boolean iActivated</tt> [in] The activation state of the print area (TRUE means activated, FALSE means deactivated).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Un <tt>HRESULT</tt>
 <dl>
 <dt> <tt>S_OK</tt>     <dd> The activation state could be valuated.
 <dt> <tt>E_FAIL</tt>   <dd> No activation or deactivation possible.
 </dl>
</dl>
</dl>
<a name="SetProjectionMethod"></a><a name="SetProjectionMethod(CATDftProjectionMethod)"></a> <dt> o <b>SetProjectionMethod</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProjectionMethod</b>(<td> const <script type="text/javascript"> activateLink('CATDftProjectionMethod','CATDftProjectionMethod')</script> <td><tt>oProjMethod</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the projection method in this sheet. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> CATDftProjectionMethod oProjMethod  The projection method: 
  - CATFirstAngle: First angle standard.
  - CATThirdAngle: Third angle standard.</dd>
</dl>
</dl>
</dl>
<a name="SetScale"></a><a name="SetScale(double)"></a> <dt> o <b>SetScale</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScale</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the global scale associated to the sheet. This scale is applied on the sheet views.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> const</tt>
   <dd> double iScale The global scale of the sheet</dd>
</dl>
</dl>
</dl>
<a name="ValidateViewOrder"></a><a name="ValidateViewOrder(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ValidateViewOrder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateViewOrder</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iOrderedViews</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Validates that the given ordered list can be used as an input
 for ReorderViews.
 i.e. validates that:
 iOrderedViews is the result of a permutation applied to 
 the list of <b>all</b> the views of this sheet with the following
 constraint: iOrderedViews[1] and iOrderedViews[2] must be 
 respectively the sheet's mainview and background view. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrderedSheets</tt>
   <dd> The list of views to validate.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An <tt>HRESULT</tt> value.
 <br><b>Legal values</b>:
 <dl>
 <dt> <tt>S_OK</tt>     <dd> iOrderedViews is a valid input.
 <dt> <tt>E_XXX</tt>    <dd> iOrderedViews is not a valid input.
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDftSheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDraftingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
