<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface CATIVpmLongTransaction</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIVpmLongTransaction','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIVpmLongTransaction','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIVpmLongTransaction','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIVpmLongTransaction','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface CATIVpmLongTransaction</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIVpmLongTransaction_35857','CATIVpmLongTransaction','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIVpmLongTransaction</b>
</p>
<p>
<b><i> Interface to implement to participate in the LCA 2 phase commit protocol.</i></b><br>

 <b>Role</b>: This transaction interface is implemented by middleware components. 
        A transactional component has to register itself to the loginSession
        to participate to the current transaction. Customers can implement their
        own transaction component in order to participate in the LCA 2 phase commit.
        The login session will call back all registered components during
        the event transaction management.

 onAbort is called when the LCA LoginSession is aborted.
 onPrepareSave is called in the prepare phase of the LCA 2 phase commit.
 onConfirmSave is called in the commit phase of the LCA 2 phase commit, if the prepare
      phase has been successful.
 onUnconfirmSave is called in the commit phase of the LCA 2 phase commit, if the prepare
      phase has not been successful. 
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#onAbort()"><b>onAbort</b></a>()
<dd>  This method is called when the LCA transaction is aborted.
 <dt> o 
    <a href="#onConfirmSave()"><b>onConfirmSave</b></a>()
<dd>  Confirm what has been done in the PrepareSave method.
 <dt> o 
    <a href="#onPrepareSave()"><b>onPrepareSave</b></a>()
<dd>  Prepare the Save procedure.
 <dt> o 
    <a href="#onUnconfirmSave()"><b>onUnconfirmSave</b></a>()
<dd>  Undo what has been done in the PreparseSave method.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="onAbort"></a><a name="onAbort()"></a> <dt> o <b>onAbort</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onAbort</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 This method is called when the LCA transaction is aborted.
 The transaction component must roll back everything that has been done since the
 last Save (or since the beginning if no Save has been done).

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value

   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Undo is successful</dd>
     <dt>S_FALSE</dt>
     <dd>nothing to undo</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred during processing</dd>
   </dl>
</dl>
</dl>
<a name="onConfirmSave"></a><a name="onConfirmSave()"></a> <dt> o <b>onConfirmSave</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onConfirmSave</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Confirm what has been done in the PrepareSave method.
 The LCA LoginSession calls each registered components to effectively commit the transaction
 in the commit phase of the LCA 2 phase commit.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value

   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>commit is successful </dd>
     <dt>S_FALSE</dt>
     <dd>nothing to commit</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred during processing</dd>
   </dl>
</dl>
</dl>
<a name="onPrepareSave"></a><a name="onPrepareSave()"></a> <dt> o <b>onPrepareSave</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onPrepareSave</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Prepare the Save procedure.
 The LCA LoginSession calls each component registered in the LCA transaction,
 in the prepare phase of the LCA 2 phase commit. Returning a value other than S_OK will block the LCA commit.
 Note that a component that returns S_OK in the prepare phase is not allowed to fail in the
 commit phase.

 Prepare the Save procedure

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value

   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>prepare is successful</dd>
     <dt>S_FALSE</dt>
     <dd>nothing to prepare</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred during processing</dd>
   </dl>
</dl>
</dl>
<a name="onUnconfirmSave"></a><a name="onUnconfirmSave()"></a> <dt> o <b>onUnconfirmSave</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onUnconfirmSave</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Undo what has been done in the PreparseSave method.
 This is called by the LCA LoginSession when one (possibly the same) component has blocked the
 commit by returning a failure code in the prepare phase, so that components can revert any changes made during
 that phase. For instance if a transaction
 component has performed database modifications, the onUnconfirmSave should roll back the
 database, while the onConfirmSave should commit it.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value

   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>UnConfirm is successful</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred during processing</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVpmLongTransaction.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
