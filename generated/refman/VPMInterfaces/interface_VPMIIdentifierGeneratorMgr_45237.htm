<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface VPMIIdentifierGeneratorMgr</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('VPMIIdentifierGeneratorMgr','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('VPMIIdentifierGeneratorMgr','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('VPMIIdentifierGeneratorMgr','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('VPMIIdentifierGeneratorMgr','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface VPMIIdentifierGeneratorMgr</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_VPMIIdentifierGeneratorMgr_45237','VPMIIdentifierGeneratorMgr','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>VPMIIdentifierGeneratorMgr</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#end()"><b>end</b></a>()
<dd>  free the resources.
 <dt> o 
    <a href="#getIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"><b>getIdentifier</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)
<dd>  get an identifier guaranteed to be unique.
 <dt> o 
    <a href="#getIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"><b>getIdentifier</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)
<dd>  get an identifier guaranteed to be unique.
 <dt> o 
    <a href="#getIdentifierSuffix(CATUnicodeString&amp;,int&amp;,CATUnicodeString&amp;)"><b>getIdentifierSuffix</b></a>(CATUnicodeString&amp;,int&amp;,CATUnicodeString&amp;)
<dd>  For a given (Prefix,separator) , return an unique int identifier.
 <dt> o 
    <a href="#getIdentifier_pad(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"><b>getIdentifier_pad</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)
<dd>  get an identifier guaranteed to be unique.
 <dt> o 
    <a href="#getNConsecutiveIdentifier(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"><b>getNConsecutiveIdentifier</b></a>(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)
<dd>  get N consecutive identifiers guaranteed to be unique.
 <dt> o 
    <a href="#getNConsecutiveIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"><b>getNConsecutiveIdentifier</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)
<dd>  get N consecutive identifiers guaranteed to be unique.
 <dt> o 
    <a href="#getNConsecutiveIdentifierSuffix(CATUnicodeString&amp;,int,int&amp;,CATUnicodeString&amp;)"><b>getNConsecutiveIdentifierSuffix</b></a>(CATUnicodeString&amp;,int,int&amp;,CATUnicodeString&amp;)
<dd>  For a given (prefix, separator) , return N Consecutive int Identifiers.
 <dt> o 
    <a href="#getNConsecutiveIdentifier_pad(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"><b>getNConsecutiveIdentifier_pad</b></a>(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)
<dd>  get N consecutive identifiers guaranteed to be unique.
 <dt> o 
    <a href="#init(int)"><b>init</b></a>(int)
<dd>  initialize the IdentifierGenerator.
 <dt> o 
    <a href="#setPrefixValue(CATUnicodeString&amp;,int,int,int)"><b>setPrefixValue</b></a>(CATUnicodeString&amp;,int,int,int)
<dd>  setPrefix.
 <dt> o 
    <a href="#setPrefixValue(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int,int,int)"><b>setPrefixValue</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int,int,int)
<dd>  setPrefix.
 <dt> o 
    <a href="#setPrefixValue_pad(CATUnicodeString&amp;,int,int,int,int)"><b>setPrefixValue_pad</b></a>(CATUnicodeString&amp;,int,int,int,int)
<dd>  setPrefix_pad.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="end"></a><a name="end()"></a> <dt> o <b>end</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>end</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 free the resources.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>the initial value is set</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getIdentifier"></a><a name="getIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"></a> <dt> o <b>getIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getIdentifier</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oIdentifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt><td><tt>=230</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForce</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get an identifier guaranteed to be unique.
 this identifier is the concatenation of a string, a separator ":",
 and a integer.
 the separator is ":".
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> oIdentifier</tt>
   <dd> [out] the identifier generated
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce = 0 : if the size of oIdentifier is greater than iMaxSize
 then return S_FALSE and nothing is done.
 iForce = 1 : deprecated. return S_FALSE.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifier generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate a greater identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getIdentifier"></a><a name="getIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"></a> <dt> o <b>getIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getIdentifier</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSeparator</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oIdentifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get an identifier guaranteed to be unique.
 this identifier is the concatenation of a string, a separator ,
 and an integer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> iSeparator</tt>
   <dd> [in] character separating the Prefix from the integer counter.
 string size = 1. [0..9] are forbidden values.
 </dd>
    <dt><tt> oIdentifier</tt>
   <dd> [out] the identifier generated
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce = 0 : if the size of oIdentifier is greater than iMaxSize
 then return S_FALSE and nothing is done.
 iForce = 1 : deprecated . return S_FALSE.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifier generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate a greater identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getIdentifierSuffix"></a><a name="getIdentifierSuffix(CATUnicodeString&amp;,int&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>getIdentifierSuffix</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getIdentifierSuffix</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oIdentifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSeparator</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 For a given (Prefix,separator) , return an unique int identifier.
 the identifier returned is an int.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. 
 </dd>
    <dt><tt> oIdentifier</tt>
   <dd> [out] the suffixe value returned.
 </dd>
    <dt><tt> iSeparator</tt>
   <dd> [in] character separating the Prefix from the integer counter.
 string size = 1. [0..9] are forbidden values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifier generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate a greater identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getIdentifier_pad"></a><a name="getIdentifier_pad(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"></a> <dt> o <b>getIdentifier_pad</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getIdentifier_pad</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oIdentifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get an identifier guaranteed to be unique.
 this identifier is the concatenation of a string, a separator ,
 and an integer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> oIdentifier</tt>
   <dd> [out] the identifier generated
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifier generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate a greater identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getNConsecutiveIdentifier"></a><a name="getNConsecutiveIdentifier(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"></a> <dt> o <b>getNConsecutiveIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getNConsecutiveIdentifier</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>cPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbSuffix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>olIdentifiers</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt><td><tt>=230</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForce</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get N consecutive identifiers guaranteed to be unique.
 these identifiers are the concatenation of a string, a separator ":",
 and a integer.
 the separator is ":"
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> iNbIdentifiers</tt>
   <dd> [in] the number of identifiers to be generated.
 </dd>
    <dt><tt> olIdentifiers</tt>
   <dd> [out] a list containing the identifiers returned.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce = 0 : if the size of oIdentifier is greater than iMaxSize
 then return S_FALSE and nothing is done.
 iForce = 1 : deprecated . return S_FALSE.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifiers generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate an identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getNConsecutiveIdentifier"></a><a name="getNConsecutiveIdentifier(CATUnicodeString&amp;,CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"></a> <dt> o <b>getNConsecutiveIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getNConsecutiveIdentifier</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSeparator</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbIdentifiers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>olIdentifiers</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get N consecutive identifiers guaranteed to be unique.
 these identifiers are the concatenation of a string, a separator ,
 and an integer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> iSeparator</tt>
   <dd> [in] character separating the Prefix from the integer counter.
 string size = 1. [0..9] are forbidden values.
 </dd>
    <dt><tt> iNbIdentifiers</tt>
   <dd> [in] the number of identifiers to be generated.
 </dd>
    <dt><tt> olIdentifiers</tt>
   <dd> [out] a list containing the identifiers returned.
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifiers generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate an identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getNConsecutiveIdentifierSuffix"></a><a name="getNConsecutiveIdentifierSuffix(CATUnicodeString&amp;,int,int&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>getNConsecutiveIdentifierSuffix</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getNConsecutiveIdentifierSuffix</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbIdentifiers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oIdentifiers</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSeparator</tt><td><tt>=":"</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 For a given (prefix, separator) , return N Consecutive int Identifiers.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier.
 </dd>
    <dt><tt> iNbIdentifiers</tt>
   <dd> [in] the number of identifiers to be generated.
 </dd>
    <dt><tt> oIdentifier</tt>
   <dd> [out] The first identifier.
 </dd>
    <dt><tt> iSeparator</tt>
   <dd> [in] character separating the Prefix from the integer counter.
 string size = 1. [0..9] are forbidden values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifiers generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate an identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="getNConsecutiveIdentifier_pad"></a><a name="getNConsecutiveIdentifier_pad(CATUnicodeString&amp;,int,CATListOfCATUnicodeString&amp;,int,int)"></a> <dt> o <b>getNConsecutiveIdentifier_pad</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>getNConsecutiveIdentifier_pad</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbIdentifiers</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>olIdentifiers</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get N consecutive identifiers guaranteed to be unique.
 these identifiers are the concatenation of a string, a separator ,
 and an integer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] prefixes the identifier. his Size cannot be greater than xxx.
 </dd>
    <dt><tt> iNbIdentifiers</tt>
   <dd> [in] the number of identifiers to be generated.
 </dd>
    <dt><tt> olIdentifiers</tt>
   <dd> [out] a list containing the identifiers returned.
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] the maximum size in byte of the identifier.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>identifiers generated successfully</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot generate an identifier</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="init"></a><a name="init(int)"></a> <dt> o <b>init</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>init</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 initialize the IdentifierGenerator.called by the VPMSession.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> [in] not used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>initialization is successful </dd>
 <dt>E_FAIL</dt>
 <dd>failure. (Database connection or settings pb)</dd>
 </dl>
</dl>
</dl>
<a name="setPrefixValue"></a><a name="setPrefixValue(CATUnicodeString&amp;,int,int,int)"></a> <dt> o <b>setPrefixValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>setPrefixValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iValue</tt><td><tt>=0 </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt><td><tt>=230</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForce</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 setPrefix. used to set the initial value for a prefix. 
 the separator is supposed to be ":".
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] the prefix of the identifier to set.
 </dd>
    <dt><tt> iValue</tt>
   <dd> [in] the value for the next given suffixe.
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] size overflow.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce=0 : if the current value for iPrefix is greater
 than iValue return S_FALSE.                
 if there is no current value or the current value is less 
 than iValue the next given value will be iValue.
 iForce=1 : set the value without controls
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>the initial value is set</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot set the initial value</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="setPrefixValue"></a><a name="setPrefixValue(CATUnicodeString&amp;,CATUnicodeString&amp;,int,int,int,int)"></a> <dt> o <b>setPrefixValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>setPrefixValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSeparator</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForce</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 setPrefix. used to set the initial value for a prefix. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] the prefix of the identifier to set.
 </dd>
    <dt><tt> iSeparator</tt>
   <dd> [in] character separating the Prefix from the integer counter.
 string size = 1. [0..9] are forbidden values.
 </dd>
    <dt><tt> iValue</tt>
   <dd> [in] the value for the next given suffixe.
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done. 
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] size overflow.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce=0 : if the current value for iPrefix is greater
 than iValue return S_FALSE.                
 if there is no current value or the current value is less 
 than iValue the next given value will be iValue.
 iForce=1 : set the value without controls
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>the initial value is set</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot set the initial value</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<a name="setPrefixValue_pad"></a><a name="setPrefixValue_pad(CATUnicodeString&amp;,int,int,int,int)"></a> <dt> o <b>setPrefixValue_pad</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>setPrefixValue_pad</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPrefix</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPadding</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxSize</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForce</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 setPrefix_pad. used to set the initial value for a prefix. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrefix</tt>
   <dd> [in] the prefix of the identifier to set.
 </dd>
    <dt><tt> iValue</tt>
   <dd> [in] the value for the next given suffixe.
 </dd>
    <dt><tt> iPadding</tt>
   <dd> [in] pad (left side ) the integer part with 0. 
 iPadding > 0:the size in char of the integer part is equal to iPadding.
 iPadding =-1:no pad done. 
 </dd>
    <dt><tt> iMaxSize</tt>
   <dd> [in] size overflow.
 </dd>
    <dt><tt> iForce</tt>
   <dd> [in] iForce=0 : if the current value for iPrefix is greater
 than iValue return S_FALSE.                
 if there is no current value or the current value is less 
 than iValue the next given value will be iValue.
 iForce=1 : set the value without controls
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  An HRESULT value.
 <br><b>Legal values</b>
 <dl>
 <dt>S_OK</dt>
 <dd>the initial value is set</dd>
 <dt>S_FALSE</dt>
 <dd>illegal parameters or cannot set the initial value</dd>
 <dt>E_FAIL</dt>
 <dd>system failure.</dd>
 </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>VPMIIdentifierGeneratorMgr.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
