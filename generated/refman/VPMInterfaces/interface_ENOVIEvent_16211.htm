<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIEvent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVIEvent','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVIEvent','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVIEvent','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVIEvent','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface ENOVIEvent</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ENOVIEvent_16211','ENOVIEvent','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>ENOVIEvent</b>
</p>
<p>
<b><i> Interface to manipulate instances of event raised by ENOVIA objects.</i></b><br>

 <b>Role</b>: an ENOVIEvent carries information about the raised event between Publisher and subscribers. 
 name of event.<br>  publisher identity <a href="#" onClick="openLink('ENOVIPublisher','');return false">ENOVIPublisher</a>  <br>date of raise <br> associated data from publisher 
<a href="#" onClick="openLink('ENOVIStream','');return false">ENOVIStream</a>.<br> a client or subscriber can also fill put information in the ENOVIEvent.
 This interface is implemented  and ready to be used.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIStream','');return false">ENOVIStream</a>, <a href="#" onClick="openLink('ENOVIPublisher','');return false">ENOVIPublisher</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetClientData(ENOVIStream_var&amp;)"><b>GetClientData</b></a>(ENOVIStream_var&amp;)
<dd>   Gets the client Data stream.
 <dt> o 
    <a href="#GetCookieSession(CATUnicodeString&amp;)"><b>GetCookieSession</b></a>(CATUnicodeString&amp;)
<dd>   gives the cookie (identity) of the Session in which is event is raised.
 <dt> o 
    <a href="#GetCurrentStep(VPMEventFireMode&amp;)"><b>GetCurrentStep</b></a>(VPMEventFireMode&amp;)
<dd>    Get the current step of the event.
 <dt> o 
    <a href="#GetDataEvent(ENOVIStream_var&amp;)"><b>GetDataEvent</b></a>(ENOVIStream_var&amp;)
<dd>  Get Input Data Stream associated with the current emitted event.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>  Name of the instance of event.
 <dt> o 
    <a href="#GetPublishDate(CATTime&amp;)"><b>GetPublishDate</b></a>(CATTime&amp;)
<dd>    Get the most recent date when the event was raised.
 <dt> o 
    <a href="#GetPublishDate(CORBAAny&amp;)"><b>GetPublishDate</b></a>(CORBAAny&amp;)
<dd>    Get the most recent date when the event was raised.
 <dt> o 
    <a href="#GetPublisher(ENOVIPublisher_var&amp;)"><b>GetPublisher</b></a>(ENOVIPublisher_var&amp;)
<dd>    Get the publisher Id which raised event.
 <dt> o 
    <a href="#GetSourceObject(CATBaseUnknown_var&amp;)"><b>GetSourceObject</b></a>(CATBaseUnknown_var&amp;)
<dd>   gives the real object for which the event is raised.
 <dt> o 
    <a href="#SetClientData(ENOVIStream_var&amp;)"><b>SetClientData</b></a>(ENOVIStream_var&amp;)
<dd>   Sets the client data stream in the event.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#VPMEventFireMode"><b>VPMEventFireMode</b></a>
<dd>  Enumeration to precise the steps in raising an event.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetClientData"></a><a name="GetClientData(ENOVIStream_var&amp;)"></a> <dt> o <b>GetClientData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClientData</b>(<td><script type="text/javascript"> activateLink('ENOVIStream_var','ENOVIStream_var&amp;')</script> <td><tt>oAssociatedStream</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the client Data stream.
 <br><b>Role</b>: Streams in an event. <br>
  - EventData is given by the publisher to transmit information to Subscribers<br>
  - ClientData is filled by the subscribers to give back Publisher information<br>
  NB : The client data have a format defined by the Publisher, in order to be able to read it.
       If many clients want to store information, this information is added sequentially at the
       end of the stream.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAssociatedStream</tt>
   <dd>  the client stream.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIStream','');return false">ENOVIStream</a>
</dl>
</dl>
<a name="GetCookieSession"></a><a name="GetCookieSession(CATUnicodeString&amp;)"></a> <dt> o <b>GetCookieSession</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCookieSession</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oCookie</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  gives the cookie (identity) of the Session in which is event is raised.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCookie</tt>
   <dd>   a string giving the identity of the current session.</dd>
</dl>
</dl>
</dl>
<a name="GetCurrentStep"></a><a name="GetCurrentStep(VPMEventFireMode&amp;)"></a> <dt> o <b>GetCurrentStep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrentStep</b>(<td><script type="text/javascript"> activateLink('VPMEventFireMode','VPMEventFireMode&amp;')</script> <td><tt>oCurrentStep</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the current step of the event.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCurrentStep</tt>
   <dd>   the current step of the event life : Before/After or Standard.</dd>
</dl>
</dl>
</dl>
<a name="GetDataEvent"></a><a name="GetDataEvent(ENOVIStream_var&amp;)"></a> <dt> o <b>GetDataEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataEvent</b>(<td><script type="text/javascript"> activateLink('ENOVIStream_var','ENOVIStream_var&amp;')</script> <td><tt>oDataEvent</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get Input Data Stream associated with the current emitted event.
 <br><b>Role</b>: Streams in an event. <br>
  - EventData is given by the publisher to transmit information to Subscribers<br>
  - ClientData is filled by the subscribers to give back Publisher information<br>
  NB : The ClientData has a format defined by the Publisher, in order to be able to read it.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDataEvent</tt>
   <dd> the associated stream.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIStream','');return false">ENOVIStream</a>
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oEventName</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Name of the instance of event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEventName</tt>
   <dd> the name of Event (ex: Lock, Create, Delete, ChangeStatus ...)</dd>
</dl>
</dl>
</dl>
<a name="GetPublishDate"></a><a name="GetPublishDate(CATTime&amp;)"></a> <dt> o <b>GetPublishDate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPublishDate</b>(<td><script type="text/javascript"> activateLink('CATTime','CATTime&amp;')</script> <td><tt>oPublishDate</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the most recent date when the event was raised.  
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPublishDate</tt>
   <dd>   the publish date under a classical format</dd>
</dl>
</dl>
</dl>
<a name="GetPublishDate"></a><a name="GetPublishDate(CORBAAny&amp;)"></a> <dt> o <b>GetPublishDate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPublishDate</b>(<td><script type="text/javascript"> activateLink('CORBAAny','CORBAAny&amp;')</script> <td><tt>oPDate</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the most recent date when the event was raised.  
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPDate</tt>
   <dd>   the publish date under a CORBAAny Format</dd>
</dl>
</dl>
</dl>
<a name="GetPublisher"></a><a name="GetPublisher(ENOVIPublisher_var&amp;)"></a> <dt> o <b>GetPublisher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPublisher</b>(<td><script type="text/javascript"> activateLink('ENOVIPublisher_var','ENOVIPublisher_var&amp;')</script> <td><tt>oPublisher</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
   Get the publisher Id which raised event.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPublisher</tt>
   <dd>   the Object which raises the event.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIPublisher','');return false">ENOVIPublisher</a>
</dl>
</dl>
<a name="GetSourceObject"></a><a name="GetSourceObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetSourceObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSourceObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oSource</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  gives the real object for which the event is raised.
 <br><b>Role</b>: A publisher can raise an event for another object. In that
 case, the object for which the event was raised is given here.
 In normal cases, GetPublisher and GetSourceObject give the same result.

 May be used only in the creation case.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSource</tt>
   <dd> the object for which the event is raised.</dd>
</dl>
</dl>
</dl>
<a name="SetClientData"></a><a name="SetClientData(ENOVIStream_var&amp;)"></a> <dt> o <b>SetClientData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClientData</b>(<td> const <script type="text/javascript"> activateLink('ENOVIStream_var','ENOVIStream_var&amp;')</script> <td><tt>iAssociatedStream</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the client data stream in the event.
 <br><b>Role</b>: Streams in an event. <br>
  - EventData is given by the publisher to transmit information to Subscribers<br>
  - ClientData is filled by the subscribers to give back Publisher information<br>
  NB : The client data have a format defined by the Publisher, in order to be able to read it.
       If many clients want to store information, this information is added sequentially at the
       end of the stream.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAssociatedStream</tt>
   <dd>  the stream filled by the client.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIStream','');return false">ENOVIStream</a>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="VPMEventFireMode"> <dt> o <b>VPMEventFireMode</b>
<dl>
  <dd>
<pre>
enum <b>VPMEventFireMode</b> {
  EventFireBefore,
  EventFireAfter,
  EventFireStandard
}
</pre>
 Enumeration to precise the steps in raising an event.
 <br><b>Role:</b> an Event can be raised in 2 steps( Before at the beginning of the method,
 After at the end of the method), or in one single step (standard). The first way may be
 used generally.
</dl>
<hr>
 This object is included in the file: <b>ENOVIEvent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
