<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVIEventDefinition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVIEventDefinition','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVIEventDefinition','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVIEventDefinition','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVIEventDefinition','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface ENOVIEventDefinition</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ENOVIEventDefinition_31435','ENOVIEventDefinition','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>ENOVIEventDefinition</b>
</p>
<p>
<b><i>  Interface to get the definitions of events that a publisher (type or instance) can raise.</i></b><br>

  <b>Role</b>: <br> All information about events are stored: the event name, the root type for 
  which this event was registered, the package it belongs to,
  if there is an associated data stream, what are the associated callback interfaces, etc.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAssociatedData(CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"><b>GetAssociatedData</b></a>(CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)
<dd>  Gets the data stream associated to the event.
 <dt> o 
    <a href="#GetCallBackInterfaceNames(CATListOfCATUnicodeString&amp;)"><b>GetCallBackInterfaceNames</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Gets the list of callback interfaces associated to the event.
 <dt> o 
    <a href="#GetEventName(CATUnicodeString&amp;)"><b>GetEventName</b></a>(CATUnicodeString&amp;)
<dd>  Gets the event name.
 <dt> o 
    <a href="#GetSourcePublisher(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;)"><b>GetSourcePublisher</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;)
<dd>  Gets the type publishing the event.
 <dt> o 
    <a href="#GetTypeOfArgument(CATUnicodeString&amp;,ENOVEvtArgType&amp;)"><b>GetTypeOfArgument</b></a>(CATUnicodeString&amp;,ENOVEvtArgType&amp;)
<dd>  Gets the type of a stream argument.
 <dt> o 
    <a href="#GetVisibility(ENOVEvtType&amp;)"><b>GetVisibility</b></a>(ENOVEvtType&amp;)
<dd>  Gets the visibility of the event.
 <dt> o 
    <a href="#HasAssociatedData()"><b>HasAssociatedData</b></a>()
<dd>  Checks if there is a data stream associated to the event.
 <dt> o 
    <a href="#IsBeforeAfterMode()"><b>IsBeforeAfterMode</b></a>()
<dd>  Checks if the event has two steps.
 <dt> o 
    <a href="#IsInstanceSubscribable()"><b>IsInstanceSubscribable</b></a>()
<dd>  Checks if the event is subscribe-able as far as instance objects are concerned.
 <dt> o 
    <a href="#IsPersistentEvent()"><b>IsPersistentEvent</b></a>()
<dd>  Checks if the event is persistent.
 <dt> o 
    <a href="#IsVetoAble()"><b>IsVetoAble</b></a>()
<dd>  Checks if the event is veto-able.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAssociatedData"></a><a name="GetAssociatedData(CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetAssociatedData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAssociatedData</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oStreamName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oArgumentNames</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the data stream associated to the event.
 <br><b>Role</b> : Retrieves the characteristics of an event stream.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStreamName</tt>
   <dd>   string giving the name of the event stream
 </dd>
    <dt><tt> oArgumentNames</tt>
   <dd>   list of strings giving the names of the stream arguments</dd>
</dl>
</dl>
</dl>
<a name="GetCallBackInterfaceNames"></a><a name="GetCallBackInterfaceNames(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetCallBackInterfaceNames</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCallBackInterfaceNames</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oInterfaceNames</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the list of callback interfaces associated to the event.
 <br><b>Role</b> : Retrieves the names of the callback interfaces.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInterfaceNames</tt>
   <dd>   list of strings giving the names of the callback interfaces</dd>
</dl>
</dl>
</dl>
<a name="GetEventName"></a><a name="GetEventName(CATUnicodeString&amp;)"></a> <dt> o <b>GetEventName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEventName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oEventName</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the event name.
 <br><b>Role</b> : Retrieves the name of the event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEventName</tt>
   <dd>   string giving the name of the event</dd>
</dl>
</dl>
</dl>
<a name="GetSourcePublisher"></a><a name="GetSourcePublisher(CATUnicodeString&amp;,CATUnicodeString&amp;,int&amp;)"></a> <dt> o <b>GetSourcePublisher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSourcePublisher</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oPublisherType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oBelongingPackage</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oWhichLevel</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the type publishing the event.
 <br><b>Role</b> : Retrieves the type of the publishing object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPublisherType</tt>
   <dd>   string giving the type of the publishing object
 </dd>
    <dt><tt> oBelongingPackage</tt>
   <dd>   string giving the name of the package declaring the event
 </dd>
    <dt><tt> oWhichLevel</tt>
   <dd>   level of inheritance of the type</dd>
</dl>
</dl>
</dl>
<a name="GetTypeOfArgument"></a><a name="GetTypeOfArgument(CATUnicodeString&amp;,ENOVEvtArgType&amp;)"></a> <dt> o <b>GetTypeOfArgument</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTypeOfArgument</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgumentName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ENOVEvtArgType','ENOVEvtArgType&amp;')</script> <td><tt>oArgumentType</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the type of a stream argument.
 <br><b>Role</b> : Retrieves the name of the event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oArgumentName</tt>
   <dd>   string giving the name of the stream argument
 </dd>
    <dt><tt> oArgumentType</tt>
   <dd>   enum value giving the type of the stream argument</dd>
</dl>
</dl>
</dl>
<a name="GetVisibility"></a><a name="GetVisibility(ENOVEvtType&amp;)"></a> <dt> o <b>GetVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVisibility</b>(<td><script type="text/javascript"> activateLink('ENOVEvtType','ENOVEvtType&amp;')</script> <td><tt>oVisibility</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the visibility of the event.
 <br><b>Role</b> : Retrieves the type of the event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVisibility</tt>
   <dd>   enum value giving the visibility of the event</dd>
</dl>
</dl>
</dl>
<a name="HasAssociatedData"></a><a name="HasAssociatedData()"></a> <dt> o <b>HasAssociatedData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>HasAssociatedData</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if there is a data stream associated to the event.
 <br><b>Role</b> : Allows to know if the event has an associated stream of data.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    TRUE if there is a data stream
</dl>
</dl>
<a name="IsBeforeAfterMode"></a><a name="IsBeforeAfterMode()"></a> <dt> o <b>IsBeforeAfterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsBeforeAfterMode</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if the event has two steps.
 <br><b>Role</b> : Allows to know if the event is fired twice inside the scope of the corresponding method.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    TRUE if the event has two steps
</dl>
</dl>
<a name="IsInstanceSubscribable"></a><a name="IsInstanceSubscribable()"></a> <dt> o <b>IsInstanceSubscribable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsInstanceSubscribable</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if the event is subscribe-able as far as instance objects are concerned.
 <br><b>Role</b> : Allows to know if the event can be subscribed to on instances.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    TRUE if the event is subscribe-able
</dl>
</dl>
<a name="IsPersistentEvent"></a><a name="IsPersistentEvent()"></a> <dt> o <b>IsPersistentEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsPersistentEvent</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if the event is persistent.
 <br><b>Role</b> : Allows to know if the event is stored in the database.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    TRUE if the event is persistent
</dl>
</dl>
<a name="IsVetoAble"></a><a name="IsVetoAble()"></a> <dt> o <b>IsVetoAble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsVetoAble</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Checks if the event is veto-able.
 <br><b>Role</b> : Allows to know if the event can be vetoed by a subscriber.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    TRUE if the event is veto-able
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVIEventDefinition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
