<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface VPMIAdmin</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('VPMIAdmin','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('VPMIAdmin','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('VPMIAdmin','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('VPMIAdmin','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface VPMIAdmin</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_VPMIAdmin_15223','VPMIAdmin','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>VPMIAdmin</b>
</p>
<p>
<b><i> This class supplies methods to manage administration data
 <b>role</b>: This class enables to create/delete/modify administration data</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Abort()"><b>Abort</b></a>()
<dd>  Cancel of all the modifications which have been done since the last Save.
 <dt> o 
    <a href="#AddBusinessDomain(VPMIBusinessDomain*)"><b>AddBusinessDomain</b></a>(VPMIBusinessDomain*)
<dd>  Aggregate a businessdomain.
 <dt> o 
    <a href="#AddDataDomain(VPMIDataDomain*)"><b>AddDataDomain</b></a>(VPMIDataDomain*)
<dd>  Aggregate a datadomain.
 <dt> o 
    <a href="#AddDomain(VPMIDomain*)"><b>AddDomain</b></a>(VPMIDomain*)
<dd>  Aggregate a domain.
 <dt> o 
    <a href="#AddExternSite(VPMIExternSite*)"><b>AddExternSite</b></a>(VPMIExternSite*)
<dd>  Aggregate an externsite.
 <dt> o 
    <a href="#AddHost(VPMIHost*)"><b>AddHost</b></a>(VPMIHost*)
<dd>  Aggregate a host.
 <dt> o 
    <a href="#AddProject(VPMIProject*)"><b>AddProject</b></a>(VPMIProject*)
<dd>  Aggregate a project.
 <dt> o 
    <a href="#AddReplPackageDefinition(VPMIReplPackageDefinition*)"><b>AddReplPackageDefinition</b></a>(VPMIReplPackageDefinition*)
<dd>  Aggregate a replication package definition.
 <dt> o 
    <a href="#AddReplSubscribingTarget(VPMIReplSubscribingTarget*)"><b>AddReplSubscribingTarget</b></a>(VPMIReplSubscribingTarget*)
<dd>  Aggregate a replication target.
 <dt> o 
    <a href="#AddReplSubscription(VPMIReplSubscription*)"><b>AddReplSubscription</b></a>(VPMIReplSubscription*)
<dd>  Aggregate a Subscription.
 <dt> o 
    <a href="#AddServer(VPMIServer*)"><b>AddServer</b></a>(VPMIServer*)
<dd>  Aggregate a server.
 <dt> o 
    <a href="#BeginModifications()"><b>BeginModifications</b></a>()
<dd>  Enable modifications.
 <dt> o 
    <a href="#CreateBusinessDomain(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)"><b>CreateBusinessDomain</b></a>(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)
<dd>  Create the business domain identified by iOid.
 <dt> o 
    <a href="#CreateDataRDB(CATDbBinary&amp;,VPMIDataRDB*&amp;)"><b>CreateDataRDB</b></a>(CATDbBinary&amp;,VPMIDataRDB*&amp;)
<dd>  Create the dataRDB identified by iOid.
 <dt> o 
    <a href="#CreateDataServer(CATDbBinary&amp;,VPMIDataServer*&amp;)"><b>CreateDataServer</b></a>(CATDbBinary&amp;,VPMIDataServer*&amp;)
<dd>  Create the dataserver identified by iOid.
 <dt> o 
    <a href="#CreateDomain(CATDbBinary&amp;,VPMIDomain*&amp;)"><b>CreateDomain</b></a>(CATDbBinary&amp;,VPMIDomain*&amp;)
<dd>  Create the domain identified by iOid.
 <dt> o 
    <a href="#CreateExternSite(CATDbBinary&amp;,VPMIExternSite*&amp;)"><b>CreateExternSite</b></a>(CATDbBinary&amp;,VPMIExternSite*&amp;)
<dd>  Create the site identified by iOid.
 <dt> o 
    <a href="#CreateExternSite(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIExternSite*&amp;)"><b>CreateExternSite</b></a>(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIExternSite*&amp;)
<dd>  Create a new known site.
 <dt> o 
    <a href="#CreateHost(CATDbBinary&amp;,VPMIHost*&amp;)"><b>CreateHost</b></a>(CATDbBinary&amp;,VPMIHost*&amp;)
<dd>  Create the host identified by iOid.
 <dt> o 
    <a href="#CreateLocalSite(CATDbBinary&amp;,VPMILocalSite*&amp;)"><b>CreateLocalSite</b></a>(CATDbBinary&amp;,VPMILocalSite*&amp;)
<dd>  Create the local installation definition.
 <dt> o 
    <a href="#CreateObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"><b>CreateObject</b></a>(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)
<dd>  Method for parsing purpose: create object.
 <dt> o 
    <a href="#CreateProject(CATDbBinary&amp;,VPMIProject*&amp;)"><b>CreateProject</b></a>(CATDbBinary&amp;,VPMIProject*&amp;)
<dd>  Create the project identified by iOid.
 <dt> o 
    <a href="#CreateReplApplyStatus(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)"><b>CreateReplApplyStatus</b></a>(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)
<dd>  Create applystatus identified by iOid.
 <dt> o 
    <a href="#CreateReplCaptureStatus(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)"><b>CreateReplCaptureStatus</b></a>(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)
<dd>  Create capturestatus identified by iOid.
 <dt> o 
    <a href="#CreateReplMedia(CATDbBinary&amp;,VPMIReplMedia*&amp;)"><b>CreateReplMedia</b></a>(CATDbBinary&amp;,VPMIReplMedia*&amp;)
<dd>  Create a new definition to store the media for replication.
 <dt> o 
    <a href="#CreateReplPackageDefinition(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)"><b>CreateReplPackageDefinition</b></a>(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)
<dd>  Create the replication package identified by iOid.
 <dt> o 
    <a href="#CreateReplPackageDefinition(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*&amp;)"><b>CreateReplPackageDefinition</b></a>(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*&amp;)
<dd>  Create a new replication package.
 <dt> o 
    <a href="#CreateReplSubscribingTarget(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)"><b>CreateReplSubscribingTarget</b></a>(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)
<dd>  Create the replication target identified by iOid.
 <dt> o 
    <a href="#CreateReplSubscribingTarget(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscribingTarget*&amp;)"><b>CreateReplSubscribingTarget</b></a>(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscribingTarget*&amp;)
<dd>  Create a new definition to replicate data for a site.
 <dt> o 
    <a href="#CreateReplSubscription(CATDbBinary&amp;,VPMIReplSubscription*&amp;)"><b>CreateReplSubscription</b></a>(CATDbBinary&amp;,VPMIReplSubscription*&amp;)
<dd>  Create the replication Subscription identified by iOid.
 <dt> o 
    <a href="#CreateReplSubscription(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscription*&amp;)"><b>CreateReplSubscription</b></a>(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscription*&amp;)
<dd>  Create a replication subscription.
 <dt> o 
    <a href="#CreateServer(CATDbBinary&amp;,VPMIServer*&amp;)"><b>CreateServer</b></a>(CATDbBinary&amp;,VPMIServer*&amp;)
<dd>  Create the server identified by iOid.
 <dt> o 
    <a href="#End()"><b>End</b></a>()
<dd>  Release of the allocated resources.
 <dt> o 
    <a href="#GenerateSubscription(VPMIReplSubscribingTarget*,CATUnicodeString&amp;)"><b>GenerateSubscription</b></a>(VPMIReplSubscribingTarget*,CATUnicodeString&amp;)
<dd>  Generate a subscription string for a given target.
 <dt> o 
    <a href="#GetAllExternSite(CATLISTP(IUnknown)&amp;)"><b>GetAllExternSite</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all external site objects.
 <dt> o 
    <a href="#GetAllReplPackageDefinition(CATLISTP(IUnknown)&amp;)"><b>GetAllReplPackageDefinition</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all package definition objects.
 <dt> o 
    <a href="#GetAllReplSubscribingTarget(CATLISTP(IUnknown)&amp;)"><b>GetAllReplSubscribingTarget</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get all subscribing targets known by the site.
 <dt> o 
    <a href="#GetAllReplSubscription(CATLISTP(IUnknown)&amp;)"><b>GetAllReplSubscription</b></a>(CATLISTP(IUnknown)&amp;)
<dd>  Get the list of all Subscription objects.
 <dt> o 
    <a href="#GetAppServer(CATUnicodeString&amp;,VPMIAppServer**)"><b>GetAppServer</b></a>(CATUnicodeString&amp;,VPMIAppServer**)
<dd>  Get an application server object named iName.
 <dt> o 
    <a href="#GetBusinessDomain(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)"><b>GetBusinessDomain</b></a>(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)
<dd>  Get the business domain identified by iOid.
 <dt> o 
    <a href="#GetBusinessDomain(CATUnicodeString&amp;,VPMIBusinessDomain**)"><b>GetBusinessDomain</b></a>(CATUnicodeString&amp;,VPMIBusinessDomain**)
<dd>  Get a business domain object named iName.
 <dt> o 
    <a href="#GetDataDomain(CATDbBinary*,VPMIDataDomain**)"><b>GetDataDomain</b></a>(CATDbBinary*,VPMIDataDomain**)
<dd>  Get a DataDomain object from its OID.
 <dt> o 
    <a href="#GetDataDomain(CATDbBinary&amp;,VPMIDataDomain*&amp;)"><b>GetDataDomain</b></a>(CATDbBinary&amp;,VPMIDataDomain*&amp;)
<dd>  Get the dataRDB identified by iOid.
 <dt> o 
    <a href="#GetDataDomain(CATUnicodeString&amp;,VPMIDataDomain**)"><b>GetDataDomain</b></a>(CATUnicodeString&amp;,VPMIDataDomain**)
<dd>  Get a data domain object named iName.
 <dt> o 
    <a href="#GetDataServer(CATDbBinary&amp;,VPMIDataServer*&amp;)"><b>GetDataServer</b></a>(CATDbBinary&amp;,VPMIDataServer*&amp;)
<dd>  Get the dataserver identified by iOid.
 <dt> o 
    <a href="#GetDataServer(CATUnicodeString&amp;,VPMIDataServer**)"><b>GetDataServer</b></a>(CATUnicodeString&amp;,VPMIDataServer**)
<dd>  Get a data server object named iName.
 <dt> o 
    <a href="#GetDomain(CATDbBinary&amp;,VPMIDomain*&amp;)"><b>GetDomain</b></a>(CATDbBinary&amp;,VPMIDomain*&amp;)
<dd>  Get the domain identified by iOid.
 <dt> o 
    <a href="#GetDomain(CATUnicodeString&amp;,VPMIDomain**)"><b>GetDomain</b></a>(CATUnicodeString&amp;,VPMIDomain**)
<dd>  Get a domain object named iDomainName.
 <dt> o 
    <a href="#GetExternSite(CATDbBinary&amp;,VPMIExternSite*&amp;)"><b>GetExternSite</b></a>(CATDbBinary&amp;,VPMIExternSite*&amp;)
<dd>  Get the site identified by iOid.
 <dt> o 
    <a href="#GetExternSite(CATUnicodeString&amp;,VPMIExternSite*&amp;)"><b>GetExternSite</b></a>(CATUnicodeString&amp;,VPMIExternSite*&amp;)
<dd>  Get the extern site named iName.
 <dt> o 
    <a href="#GetHost(CATDbBinary&amp;,VPMIHost*&amp;)"><b>GetHost</b></a>(CATDbBinary&amp;,VPMIHost*&amp;)
<dd>  Get the host identified by iOid.
 <dt> o 
    <a href="#GetHost(CATUnicodeString&amp;,VPMIHost**)"><b>GetHost</b></a>(CATUnicodeString&amp;,VPMIHost**)
<dd>  get a host object from its name.
 <dt> o 
    <a href="#GetListOfAppServers(CATLISTP(IUnknown)*)"><b>GetListOfAppServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all application server objects.
 <dt> o 
    <a href="#GetListOfBusinessDomains(CATLISTP(IUnknown)*)"><b>GetListOfBusinessDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all business domain objects.
 <dt> o 
    <a href="#GetListOfDataDomains(CATLISTP(IUnknown)*)"><b>GetListOfDataDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all data domain objects.
 <dt> o 
    <a href="#GetListOfDataServers(CATLISTP(IUnknown)*)"><b>GetListOfDataServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all data server objects.
 <dt> o 
    <a href="#GetListOfDomains(CATLISTP(IUnknown)*)"><b>GetListOfDomains</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all domain objects.
 <dt> o 
    <a href="#GetListOfHosts(CATLISTP(IUnknown)*)"><b>GetListOfHosts</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all host objects.
 <dt> o 
    <a href="#GetListOfProjects(CATLISTP(IUnknown)*)"><b>GetListOfProjects</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all project objects.
 <dt> o 
    <a href="#GetListOfProjects(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"><b>GetListOfProjects</b></a>(CATUnicodeString&amp;,CATLISTP(IUnknown)*)
<dd>  Get the list of all projects.
 <dt> o 
    <a href="#GetListOfRelatedBusinessDomains(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"><b>GetListOfRelatedBusinessDomains</b></a>(CATUnicodeString&amp;,CATLISTP(IUnknown)*)
<dd>  Get the list of all business domains objects related to a given schema.
 <dt> o 
    <a href="#GetListOfVaultServers(CATLISTP(IUnknown)*)"><b>GetListOfVaultServers</b></a>(CATLISTP(IUnknown)*)
<dd>  Get the list of all vault server objects.
 <dt> o 
    <a href="#GetLocalSite(VPMILocalSite*&amp;)"><b>GetLocalSite</b></a>(VPMILocalSite*&amp;)
<dd>  Get the local site definition.
 <dt> o 
    <a href="#GetMasterBusinessDomain(CATUnicodeString&amp;,VPMIBusinessDomain**)"><b>GetMasterBusinessDomain</b></a>(CATUnicodeString&amp;,VPMIBusinessDomain**)
<dd>  Get the master business domain object for a given schema.
 <dt> o 
    <a href="#GetObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"><b>GetObject</b></a>(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)
<dd>  Method for parsing purpose: get object.
 <dt> o 
    <a href="#GetProject(CATDbBinary&amp;,VPMIProject*&amp;)"><b>GetProject</b></a>(CATDbBinary&amp;,VPMIProject*&amp;)
<dd>  Get the project identified by iOid.
 <dt> o 
    <a href="#GetProject(CATUnicodeString&amp;,VPMIProject**)"><b>GetProject</b></a>(CATUnicodeString&amp;,VPMIProject**)
<dd>  Get a project object named iName.
 <dt> o 
    <a href="#GetReplApplyStatus(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)"><b>GetReplApplyStatus</b></a>(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)
<dd>  Get the apply status identified by iOid.
 <dt> o 
    <a href="#GetReplCaptureStatus(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)"><b>GetReplCaptureStatus</b></a>(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)
<dd>  Get the capture status identified by iOid.
 <dt> o 
    <a href="#GetReplMedia(CATDbBinary&amp;,VPMIReplMedia*&amp;)"><b>GetReplMedia</b></a>(CATDbBinary&amp;,VPMIReplMedia*&amp;)
<dd>  Get the media identified by iOid.
 <dt> o 
    <a href="#GetReplPackageDefinition(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)"><b>GetReplPackageDefinition</b></a>(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)
<dd>  Get the package definition identified by iOid.
 <dt> o 
    <a href="#GetReplSubscribingTarget(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)"><b>GetReplSubscribingTarget</b></a>(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)
<dd>  Get the subscribing target named iName.
 <dt> o 
    <a href="#GetReplSubscribingTarget(CATUnicodeString&amp;,VPMIReplSubscribingTarget*&amp;)"><b>GetReplSubscribingTarget</b></a>(CATUnicodeString&amp;,VPMIReplSubscribingTarget*&amp;)
<dd>  Get the subscribing target named iName.
 <dt> o 
    <a href="#GetReplSubscription(CATDbBinary&amp;,VPMIReplSubscription*&amp;)"><b>GetReplSubscription</b></a>(CATDbBinary&amp;,VPMIReplSubscription*&amp;)
<dd>  Get the subscription from its iOid.
 <dt> o 
    <a href="#GetServer(CATDbBinary&amp;,VPMIServer*)"><b>GetServer</b></a>(CATDbBinary&amp;,VPMIServer*)
<dd>  Get the server identified by iOid.
 <dt> o 
    <a href="#GetVaultServer(CATUnicodeString&amp;,VPMIVaultServer**)"><b>GetVaultServer</b></a>(CATUnicodeString&amp;,VPMIVaultServer**)
<dd>  Get a vault server object named iName.
 <dt> o 
    <a href="#Init(CATUnicodeString&amp;,CATUnicodeString&amp;,int)"><b>Init</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,int)
<dd>  Initialization.
 <dt> o 
    <a href="#RemoveAllInstances()"><b>RemoveAllInstances</b></a>()
<dd>  mark all instances aggregated by the VPMIAdmin to be deleted.
 <dt> o 
    <a href="#Save()"><b>Save</b></a>()
<dd>  Save of all the modifications which have been done during the current logical unit of work.
 <dt> o 
    <a href="#SetLocalSite(VPMILocalSite*)"><b>SetLocalSite</b></a>(VPMILocalSite*)
<dd>  set the local site of the current installation.
 <dt> o 
    <a href="#Subscribe(CATUnicodeString&amp;,VPMIReplSubscription*&amp;)"><b>Subscribe</b></a>(CATUnicodeString&amp;,VPMIReplSubscription*&amp;)
<dd>  Update the Admin with a new subscription.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ADMINTYPE"><b>ADMINTYPE</b></a>
<dd>  Enum of admin types.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Abort"></a><a name="Abort()"></a> <dt> o <b>Abort</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Abort</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Cancel of all the modifications which have been done since the last Save.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddBusinessDomain"></a><a name="AddBusinessDomain(VPMIBusinessDomain*)"></a> <dt> o <b>AddBusinessDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddBusinessDomain</b>(<td> const <script type="text/javascript"> activateLink('VPMIBusinessDomain','VPMIBusinessDomain*')</script> <td><tt>pBusinessDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a businessdomain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBusinessDomain</tt>
   <dd> the BusinessDomain to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddDataDomain"></a><a name="AddDataDomain(VPMIDataDomain*)"></a> <dt> o <b>AddDataDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddDataDomain</b>(<td> const <script type="text/javascript"> activateLink('VPMIDataDomain','VPMIDataDomain*')</script> <td><tt>iDataDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a datadomain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDataDomain</tt>
   <dd> the DataDomain to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddDomain"></a><a name="AddDomain(VPMIDomain*)"></a> <dt> o <b>AddDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddDomain</b>(<td> const <script type="text/javascript"> activateLink('VPMIDomain','VPMIDomain*')</script> <td><tt>pDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a domain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBusinessDomain</tt>
   <dd> the BusinessDomain to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddExternSite"></a><a name="AddExternSite(VPMIExternSite*)"></a> <dt> o <b>AddExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddExternSite</b>(<td> const <script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*')</script> <td><tt>iExternSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate an externsite.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExternSite</tt>
   <dd> the Site to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddHost"></a><a name="AddHost(VPMIHost*)"></a> <dt> o <b>AddHost</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddHost</b>(<td> const <script type="text/javascript"> activateLink('VPMIHost','VPMIHost*')</script> <td><tt>pHost</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a host.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBusinessDomain</tt>
   <dd> the BusinessDomain to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddProject"></a><a name="AddProject(VPMIProject*)"></a> <dt> o <b>AddProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddProject</b>(<td> const <script type="text/javascript"> activateLink('VPMIProject','VPMIProject*')</script> <td><tt>iProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a project.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProject</tt>
   <dd> the Project to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddReplPackageDefinition"></a><a name="AddReplPackageDefinition(VPMIReplPackageDefinition*)"></a> <dt> o <b>AddReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddReplPackageDefinition</b>(<td> const <script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*')</script> <td><tt>iPackageDefinition</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a replication package definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPackage</tt>
   <dd> the replication package to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddReplSubscribingTarget"></a><a name="AddReplSubscribingTarget(VPMIReplSubscribingTarget*)"></a> <dt> o <b>AddReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddReplSubscribingTarget</b>(<td> const <script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*')</script> <td><tt>iTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a replication target.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd> the replication target to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddReplSubscription"></a><a name="AddReplSubscription(VPMIReplSubscription*)"></a> <dt> o <b>AddReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddReplSubscription</b>(<td> const <script type="text/javascript"> activateLink('VPMIReplSubscription','VPMIReplSubscription*')</script> <td><tt>iSubscription</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a Subscription.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSubscription</tt>
   <dd> the replication Subscription to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="AddServer"></a><a name="AddServer(VPMIServer*)"></a> <dt> o <b>AddServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddServer</b>(<td> const <script type="text/javascript"> activateLink('VPMIServer','VPMIServer*')</script> <td><tt>iServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Aggregate a server.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iServer</tt>
   <dd> the server to aggregate
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="BeginModifications"></a><a name="BeginModifications()"></a> <dt> o <b>BeginModifications</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BeginModifications</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Enable modifications.  
 =>Do not use it during the VPMSession.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateBusinessDomain"></a><a name="CreateBusinessDomain(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)"></a> <dt> o <b>CreateBusinessDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateBusinessDomain</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIBusinessDomain','VPMIBusinessDomain*&amp;')</script> <td><tt>oBusinessDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the business domain identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oBusinessDomain</tt>
   <dd> the business domain to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: business domain created
  <tt>S_FALSE</tt>:business domain not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateDataRDB"></a><a name="CreateDataRDB(CATDbBinary&amp;,VPMIDataRDB*&amp;)"></a> <dt> o <b>CreateDataRDB</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDataRDB</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataRDB','VPMIDataRDB*&amp;')</script> <td><tt>oRDB</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the dataRDB identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDataServer</tt>
   <dd> the dataserver to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain created
  <tt>S_FALSE</tt>:domain not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateDataServer"></a><a name="CreateDataServer(CATDbBinary&amp;,VPMIDataServer*&amp;)"></a> <dt> o <b>CreateDataServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDataServer</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataServer','VPMIDataServer*&amp;')</script> <td><tt>oDataServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the dataserver identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDataServer</tt>
   <dd> the dataserver to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain created
  <tt>S_FALSE</tt>:domain not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateDomain"></a><a name="CreateDomain(CATDbBinary&amp;,VPMIDomain*&amp;)"></a> <dt> o <b>CreateDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDomain</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDomain','VPMIDomain*&amp;')</script> <td><tt>oDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the domain identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDomain</tt>
   <dd> the domain to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain created
  <tt>S_FALSE</tt>:domain not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateExternSite"></a><a name="CreateExternSite(CATDbBinary&amp;,VPMIExternSite*&amp;)"></a> <dt> o <b>CreateExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateExternSite</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*&amp;')</script> <td><tt>oDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the site identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDomain</tt>
   <dd> the domain to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: site created
  <tt>S_FALSE</tt>:site not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateExternSite"></a><a name="CreateExternSite(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIExternSite*&amp;)"></a> <dt> o <b>CreateExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateExternSite</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*&amp;')</script> <td><tt>oSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create a new known site.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> iName</tt>
   <dd> this string is not an identifier.<BR>
 but is required to be unique for all site definition.
 </dd>
    <dt><tt> oSite</tt>
   <dd> a new site
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site created
  <tt>S_FALSE</tt>:the identifier iOid already exists.
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateHost"></a><a name="CreateHost(CATDbBinary&amp;,VPMIHost*&amp;)"></a> <dt> o <b>CreateHost</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateHost</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIHost','VPMIHost*&amp;')</script> <td><tt>oHost</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the host identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oHost</tt>
   <dd> the host to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain created
  <tt>S_FALSE</tt>:domain not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateLocalSite"></a><a name="CreateLocalSite(CATDbBinary&amp;,VPMILocalSite*&amp;)"></a> <dt> o <b>CreateLocalSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateLocalSite</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iBin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMILocalSite','VPMILocalSite*&amp;')</script> <td><tt>oSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the local installation definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBin</tt>
   <dd>  the identifier of the localSite.
 but is required to be unique for all site definition.
 </dd>
    <dt><tt> oSite</tt>
   <dd> a new site
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site created
  <tt>S_FALSE</tt>:the site already exists
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateObject"></a><a name="CreateObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"></a> <dt> o <b>CreateObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateObject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIAdmin::ADMINTYPE','VPMIAdmin::ADMINTYPE')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Method for parsing purpose: create object.
</dl>
<a name="CreateProject"></a><a name="CreateProject(CATDbBinary&amp;,VPMIProject*&amp;)"></a> <dt> o <b>CreateProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateProject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject*&amp;')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the project identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> the project to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: project not created
  <tt>S_FALSE</tt>:project not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplApplyStatus"></a><a name="CreateReplApplyStatus(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)"></a> <dt> o <b>CreateReplApplyStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplApplyStatus</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplApplyStatus','VPMIReplApplyStatus*&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create applystatus identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> the project to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: project not created
  <tt>S_FALSE</tt>:project not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplCaptureStatus"></a><a name="CreateReplCaptureStatus(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)"></a> <dt> o <b>CreateReplCaptureStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplCaptureStatus</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplCaptureStatus','VPMIReplCaptureStatus*&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create capturestatus identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> the project to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: status not created
  <tt>S_FALSE</tt>:status not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplMedia"></a><a name="CreateReplMedia(CATDbBinary&amp;,VPMIReplMedia*&amp;)"></a> <dt> o <b>CreateReplMedia</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplMedia</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplMedia','VPMIReplMedia*&amp;')</script> <td><tt>oMedia</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Create a new definition to store the media for replication.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oMedia</tt>
   <dd> the media object created.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:media created
  <tt>S_FALSE</tt>:the identifier iOid already exists. 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateReplPackageDefinition"></a><a name="CreateReplPackageDefinition(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)"></a> <dt> o <b>CreateReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplPackageDefinition</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*&amp;')</script> <td><tt>oReplPackage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the replication package identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oReplPackage</tt>
   <dd> the replication package to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplPackageDefinition"></a><a name="CreateReplPackageDefinition(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*&amp;)"></a> <dt> o <b>CreateReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplPackageDefinition</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*&amp;')</script> <td><tt>oPackage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create a new replication package. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> iName</tt>
   <dd> this string is not an identifier.<BR>
 but is required to be unique for all package definition
 </dd>
    <dt><tt> oPackage</tt>
   <dd> a new package
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:package created
  <tt>S_FALSE</tt>:the identifier iOid already exists.
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateReplSubscribingTarget"></a><a name="CreateReplSubscribingTarget(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)"></a> <dt> o <b>CreateReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplSubscribingTarget</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*&amp;')</script> <td><tt>oReplTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the replication target identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oReplTarget</tt>
   <dd> the replication target to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplSubscribingTarget"></a><a name="CreateReplSubscribingTarget(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscribingTarget*&amp;)"></a> <dt> o <b>CreateReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplSubscribingTarget</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*')</script> <td><tt>iPackage</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*')</script> <td><tt>iSite</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*&amp;')</script> <td><tt>oTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create a new definition to replicate data for a site.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> iName</tt>
   <dd> this string is not an identifier.<BR>
 but is required to be unique for all target definition.
 </dd>
    <dt><tt> iPackage</tt>
   <dd> the package to send.
 </dd>
    <dt><tt> iSite</tt>
   <dd> the site where data will be send.
 </dd>
    <dt><tt> oTarget</tt>
   <dd> the subscribing target created.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:target created
  <tt>S_FALSE</tt>:the identifier iOid already exists. 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateReplSubscription"></a><a name="CreateReplSubscription(CATDbBinary&amp;,VPMIReplSubscription*&amp;)"></a> <dt> o <b>CreateReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplSubscription</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscription','VPMIReplSubscription*&amp;')</script> <td><tt>oReplSubscription</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the replication Subscription identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oReplSubscription</tt>
   <dd> the replication Subscription to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="CreateReplSubscription"></a><a name="CreateReplSubscription(CATDbBinary&amp;,CATUnicodeString&amp;,VPMIReplPackageDefinition*,VPMIExternSite*,VPMIReplSubscription*&amp;)"></a> <dt> o <b>CreateReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateReplSubscription</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*')</script> <td><tt>iPackage</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*')</script> <td><tt>iSite</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscription','VPMIReplSubscription*&amp;')</script> <td><tt>oSubscription</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create a replication subscription.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> iName</tt>
   <dd> this string is not an identifier.<BR>
 but is required to be unique for all subscription.
 </dd>
    <dt><tt> iPackage</tt>
   <dd> the package defining the data received
 </dd>
    <dt><tt> iSite</tt>
   <dd> the site from which the data are coming.
 </dd>
    <dt><tt> oSubscription</tt>
   <dd> the replication subscription created.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:subscription created
  <tt>S_FALSE</tt>:the identifier iOid already exists. 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="CreateServer"></a><a name="CreateServer(CATDbBinary&amp;,VPMIServer*&amp;)"></a> <dt> o <b>CreateServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateServer</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIServer','VPMIServer*&amp;')</script> <td><tt>oServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create the server identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oServer</tt>
   <dd> the server to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: server not created
  <tt>S_FALSE</tt>: server not created
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="End"></a><a name="End()"></a> <dt> o <b>End</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>End</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Release of the allocated resources.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GenerateSubscription"></a><a name="GenerateSubscription(VPMIReplSubscribingTarget*,CATUnicodeString&amp;)"></a> <dt> o <b>GenerateSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GenerateSubscription</b>(<td> const <script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*')</script> <td><tt>iTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oBuf</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Generate a subscription string for a given target.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd> the target where the string will be send.
 </dd>
    <dt><tt> oBuf</tt>
   <dd> the string containing the subscription
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:
  <tt>S_FALSE</tt>:subscription refused
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetAllExternSite"></a><a name="GetAllExternSite(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllExternSite</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>lExternSite</tt>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all external site objects.
</dl>
<a name="GetAllReplPackageDefinition"></a><a name="GetAllReplPackageDefinition(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplPackageDefinition</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>olReplPackageDefinition</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all package definition objects.
</dl>
<a name="GetAllReplSubscribingTarget"></a><a name="GetAllReplSubscribingTarget(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplSubscribingTarget</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>oSubscribingTargets</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get all subscribing targets known by the site.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSubscribingTargets</tt>
   <dd> the list required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetAllReplSubscription"></a><a name="GetAllReplSubscription(CATLISTP(IUnknown)&amp;)"></a> <dt> o <b>GetAllReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllReplSubscription</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)&amp;')</script> <td><tt>oSubscription</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all Subscription objects.
</dl>
<a name="GetAppServer"></a><a name="GetAppServer(CATUnicodeString&amp;,VPMIAppServer**)"></a> <dt> o <b>GetAppServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAppServer</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIAppServer','VPMIAppServer**')</script> <td><tt>oServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get an application server object named iName.
</dl>
<a name="GetBusinessDomain"></a><a name="GetBusinessDomain(CATDbBinary&amp;,VPMIBusinessDomain*&amp;)"></a> <dt> o <b>GetBusinessDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBusinessDomain</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIBusinessDomain','VPMIBusinessDomain*&amp;')</script> <td><tt>oBusinessDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the business domain identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oBusinessDomain</tt>
   <dd> the business domain required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: business domain found
  <tt>S_FALSE</tt>:business domain not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetBusinessDomain"></a><a name="GetBusinessDomain(CATUnicodeString&amp;,VPMIBusinessDomain**)"></a> <dt> o <b>GetBusinessDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBusinessDomain</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIBusinessDomain','VPMIBusinessDomain**')</script> <td><tt>oBusinessDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a business domain object named iName.
</dl>
<a name="GetDataDomain"></a><a name="GetDataDomain(CATDbBinary*,VPMIDataDomain**)"></a> <dt> o <b>GetDataDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataDomain</b>(<td><script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary*')</script> <td><tt>iOID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataDomain','VPMIDataDomain**')</script> <td><tt>oDataDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a DataDomain object from its OID.
</dl>
<a name="GetDataDomain"></a><a name="GetDataDomain(CATDbBinary&amp;,VPMIDataDomain*&amp;)"></a> <dt> o <b>GetDataDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataDomain</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataDomain','VPMIDataDomain*&amp;')</script> <td><tt>oDataRDB</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the dataRDB identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDataServer</tt>
   <dd> the dataserver required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain found
  <tt>S_FALSE</tt>:domain not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetDataDomain"></a><a name="GetDataDomain(CATUnicodeString&amp;,VPMIDataDomain**)"></a> <dt> o <b>GetDataDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataDomain</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataDomain','VPMIDataDomain**')</script> <td><tt>oDataRDB</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a data domain object named iName.
</dl>
<a name="GetDataServer"></a><a name="GetDataServer(CATDbBinary&amp;,VPMIDataServer*&amp;)"></a> <dt> o <b>GetDataServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataServer</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataServer','VPMIDataServer*&amp;')</script> <td><tt>oDataServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the dataserver identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDataServer</tt>
   <dd> the dataserver required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain found
  <tt>S_FALSE</tt>:domain not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetDataServer"></a><a name="GetDataServer(CATUnicodeString&amp;,VPMIDataServer**)"></a> <dt> o <b>GetDataServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDataServer</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDataServer','VPMIDataServer**')</script> <td><tt>oServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a data server object named iName.
</dl>
<a name="GetDomain"></a><a name="GetDomain(CATDbBinary&amp;,VPMIDomain*&amp;)"></a> <dt> o <b>GetDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDomain</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDomain','VPMIDomain*&amp;')</script> <td><tt>oDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the domain identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDomain</tt>
   <dd> the domain required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain found
  <tt>S_FALSE</tt>:domain not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetDomain"></a><a name="GetDomain(CATUnicodeString&amp;,VPMIDomain**)"></a> <dt> o <b>GetDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDomain</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iDomainName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIDomain','VPMIDomain**')</script> <td><tt>oDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a domain object named iDomainName.
</dl>
<a name="GetExternSite"></a><a name="GetExternSite(CATDbBinary&amp;,VPMIExternSite*&amp;)"></a> <dt> o <b>GetExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternSite</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*&amp;')</script> <td><tt>oDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the site identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oDomain</tt>
   <dd> the domain required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetExternSite"></a><a name="GetExternSite(CATUnicodeString&amp;,VPMIExternSite*&amp;)"></a> <dt> o <b>GetExternSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternSite</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIExternSite','VPMIExternSite*&amp;')</script> <td><tt>oSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the extern site named iName.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> the name of the site looked for.
 </dd>
    <dt><tt> oSite</tt>
   <dd> the looked for site.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetHost"></a><a name="GetHost(CATDbBinary&amp;,VPMIHost*&amp;)"></a> <dt> o <b>GetHost</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHost</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIHost','VPMIHost*&amp;')</script> <td><tt>oHost</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the host identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oHost</tt>
   <dd> the host required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: domain found
  <tt>S_FALSE</tt>:domain not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetHost"></a><a name="GetHost(CATUnicodeString&amp;,VPMIHost**)"></a> <dt> o <b>GetHost</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHost</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIHost','VPMIHost**')</script> <td><tt>oHost</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 get a host object from its name.
</dl>
<a name="GetListOfAppServers"></a><a name="GetListOfAppServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfAppServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfAppServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfAppServers</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all application server objects.
</dl>
<a name="GetListOfBusinessDomains"></a><a name="GetListOfBusinessDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfBusinessDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfBusinessDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfBusinessDomains</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all business domain objects.
</dl>
<a name="GetListOfDataDomains"></a><a name="GetListOfDataDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDataDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDataDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDataDomains</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all data domain objects.
</dl>
<a name="GetListOfDataServers"></a><a name="GetListOfDataServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDataServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDataServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDataServers</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all data server objects.
</dl>
<a name="GetListOfDomains"></a><a name="GetListOfDomains(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDomains</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfDomains</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all domain objects.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfHosts"></a><a name="GetListOfHosts(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfHosts</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfHosts</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfHosts</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all host objects.
</dl>
<a name="GetListOfProjects"></a><a name="GetListOfProjects(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfProjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfProjects</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfProjects</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all project objects.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfProjects"></a><a name="GetListOfProjects(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfProjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfProjects</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUserName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfProjects</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all projects.
    N.B.: input user name parameter is not used.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetListOfRelatedBusinessDomains"></a><a name="GetListOfRelatedBusinessDomains(CATUnicodeString&amp;,CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfRelatedBusinessDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfRelatedBusinessDomains</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSchemaName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all business domains objects related to a given schema.
</dl>
<a name="GetListOfVaultServers"></a><a name="GetListOfVaultServers(CATLISTP(IUnknown)*)"></a> <dt> o <b>GetListOfVaultServers</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfVaultServers</b>(<td><script type="text/javascript"> activateLink('CATLISTP(IUnknown)','CATLISTP(IUnknown)*')</script> <td><tt>oListOfVaultServers</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the list of all vault server objects.
</dl>
<a name="GetLocalSite"></a><a name="GetLocalSite(VPMILocalSite*&amp;)"></a> <dt> o <b>GetLocalSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLocalSite</b>(<td><script type="text/javascript"> activateLink('VPMILocalSite','VPMILocalSite*&amp;')</script> <td><tt>oSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the local site definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSite</tt>
   <dd> the looked for site.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetMasterBusinessDomain"></a><a name="GetMasterBusinessDomain(CATUnicodeString&amp;,VPMIBusinessDomain**)"></a> <dt> o <b>GetMasterBusinessDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMasterBusinessDomain</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSchemaName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIBusinessDomain','VPMIBusinessDomain**')</script> <td><tt>oBusinessDomain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the master business domain object for a given schema.
</dl>
<a name="GetObject"></a><a name="GetObject(CATDbBinary&amp;,VPMIAdmin::ADMINTYPE,IUnknown*&amp;)"></a> <dt> o <b>GetObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('VPMIAdmin::ADMINTYPE','VPMIAdmin::ADMINTYPE')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('IUnknown','IUnknown*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Method for parsing purpose: get object.
</dl>
<a name="GetProject"></a><a name="GetProject(CATDbBinary&amp;,VPMIProject*&amp;)"></a> <dt> o <b>GetProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProject</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject*&amp;')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the project identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> the project required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: project not found
  <tt>S_FALSE</tt>:project not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetProject"></a><a name="GetProject(CATUnicodeString&amp;,VPMIProject**)"></a> <dt> o <b>GetProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProject</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIProject','VPMIProject**')</script> <td><tt>oProject</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a project object named iName.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplApplyStatus"></a><a name="GetReplApplyStatus(CATDbBinary&amp;,VPMIReplApplyStatus*&amp;)"></a> <dt> o <b>GetReplApplyStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplApplyStatus</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplApplyStatus','VPMIReplApplyStatus*&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the apply status identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oStatus</tt>
   <dd> the status looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:status found
  <tt>S_FALSE</tt>:status not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplCaptureStatus"></a><a name="GetReplCaptureStatus(CATDbBinary&amp;,VPMIReplCaptureStatus*&amp;)"></a> <dt> o <b>GetReplCaptureStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplCaptureStatus</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplCaptureStatus','VPMIReplCaptureStatus*&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the capture status identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oStatus</tt>
   <dd> the status looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:status found
  <tt>S_FALSE</tt>:status not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplMedia"></a><a name="GetReplMedia(CATDbBinary&amp;,VPMIReplMedia*&amp;)"></a> <dt> o <b>GetReplMedia</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplMedia</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplMedia','VPMIReplMedia*&amp;')</script> <td><tt>oMedia</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the media identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oMedia</tt>
   <dd> the media looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:media found
  <tt>S_FALSE</tt>:media not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplPackageDefinition"></a><a name="GetReplPackageDefinition(CATDbBinary&amp;,VPMIReplPackageDefinition*&amp;)"></a> <dt> o <b>GetReplPackageDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplPackageDefinition</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplPackageDefinition','VPMIReplPackageDefinition*&amp;')</script> <td><tt>oPackage</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the package definition identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oPackage</tt>
   <dd> the package looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:package found
  <tt>S_FALSE</tt>:package not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplSubscribingTarget"></a><a name="GetReplSubscribingTarget(CATDbBinary&amp;,VPMIReplSubscribingTarget*&amp;)"></a> <dt> o <b>GetReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplSubscribingTarget</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*&amp;')</script> <td><tt>oTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the subscribing target named iName.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oSite</tt>
   <dd> the site looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplSubscribingTarget"></a><a name="GetReplSubscribingTarget(CATUnicodeString&amp;,VPMIReplSubscribingTarget*&amp;)"></a> <dt> o <b>GetReplSubscribingTarget</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplSubscribingTarget</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscribingTarget','VPMIReplSubscribingTarget*&amp;')</script> <td><tt>oTarget</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the subscribing target named iName.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd> the name of the target looked for. 
 </dd>
    <dt><tt> oSite</tt>
   <dd> the site looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetReplSubscription"></a><a name="GetReplSubscription(CATDbBinary&amp;,VPMIReplSubscription*&amp;)"></a> <dt> o <b>GetReplSubscription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReplSubscription</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscription','VPMIReplSubscription*&amp;')</script> <td><tt>oSubscription</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the subscription from its iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oSite</tt>
   <dd> the site looked for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:site found
  <tt>S_FALSE</tt>:site not found
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="GetServer"></a><a name="GetServer(CATDbBinary&amp;,VPMIServer*)"></a> <dt> o <b>GetServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetServer</b>(<td> const <script type="text/javascript"> activateLink('CATDbBinary','CATDbBinary&amp;')</script> <td><tt>iOid</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIServer','VPMIServer*')</script> <td><tt>oServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get the server identified by iOid.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOid</tt>
   <dd> <br> <b>Legal values</b>: a 16-bytes identifier. 
 </dd>
    <dt><tt> oProject</tt>
   <dd> the project required
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: server not found
  <tt>S_FALSE</tt>: server not found
  <tt>E_FAIL</tt>:system error
</dl>
</dl>
<a name="GetVaultServer"></a><a name="GetVaultServer(CATUnicodeString&amp;,VPMIVaultServer**)"></a> <dt> o <b>GetVaultServer</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVaultServer</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIVaultServer','VPMIVaultServer**')</script> <td><tt>oServer</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Get a vault server object named iName.
</dl>
<a name="Init"></a><a name="Init(CATUnicodeString&amp;,CATUnicodeString&amp;,int)"></a> <dt> o <b>Init</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Init</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iUserName</tt><td><tt>=""</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPassword</tt><td><tt>=""</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLoadAdmin</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Initialization.
 Default Authentication is System
 N.B.: iLoadAdmin > 0 in the LoadAdmin load only.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="RemoveAllInstances"></a><a name="RemoveAllInstances()"></a> <dt> o <b>RemoveAllInstances</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllInstances</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 mark all instances aggregated by the VPMIAdmin to be deleted.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:
  <tt>S_FALSE</tt>:
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="Save"></a><a name="Save()"></a> <dt> o <b>Save</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Save</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Save of all the modifications which have been done during the current logical unit of work.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="SetLocalSite"></a><a name="SetLocalSite(VPMILocalSite*)"></a> <dt> o <b>SetLocalSite</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLocalSite</b>(<td> const <script type="text/javascript"> activateLink('VPMILocalSite','VPMILocalSite*')</script> <td><tt>iSite</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 set the local site of the current installation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSite</tt>
   <dd> the local site.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>: 
  <tt>S_FALSE</tt>: 
  <tt>E_FAIL</tt>:
</dl>
</dl>
<a name="Subscribe"></a><a name="Subscribe(CATUnicodeString&amp;,VPMIReplSubscription*&amp;)"></a> <dt> o <b>Subscribe</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Subscribe</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBuf</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('VPMIReplSubscription','VPMIReplSubscription*&amp;')</script> <td><tt>oSubscription</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Update the Admin with a new subscription.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBuf</tt>
   <dd> the string containing the subscription definition
 </dd>
    <dt><tt> oSubscription</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  an HRESULT value.
 <br> <b>Legal values</b>:
  <tt>S_OK</tt>:
  <tt>S_FALSE</tt>:subscription refused
  <tt>E_FAIL</tt>:
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ADMINTYPE"> <dt> o <b>ADMINTYPE</b>
<dl>
  <dd>
<pre>
enum <b>ADMINTYPE</b> {
  ADMINAPPLYSTATUS,
  ADMINAPPSERVER,
  ADMINCAPTURESTATUS,
  ADMINBUSINESSDOMAIN,
  ADMINDATAFILE,
  ADMINDATARDB,
  ADMINDATASERVER,
  ADMINDOMAIN,
  ADMINEXTERNSITE,
  ADMINHOST,
  ADMINLOCALSITE,
  ADMINMEDIA,
  ADMINPACKAGEDEFINITION,
  ADMINPROJECT,
  ADMINSERVER,
  ADMINSUBSCRIBINGTARGET,
  ADMINSUBSCRIPTION,
  ADMINVAULTSERVER
}
</pre>
 Enum of admin types.
</dl>
<hr>
 This object is included in the file: <b>VPMIAdmin.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
