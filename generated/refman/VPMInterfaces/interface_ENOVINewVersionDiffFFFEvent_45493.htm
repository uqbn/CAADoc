<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VPMInterfaces Interface ENOVINewVersionDiffFFFEvent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VPMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ENOVINewVersionDiffFFFEvent','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVINewVersionDiffFFFEvent','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ENOVINewVersionDiffFFFEvent','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ENOVINewVersionDiffFFFEvent','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VPMInterfaces Interface ENOVINewVersionDiffFFFEvent</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ENOVINewVersionDiffFFFEvent_45493','ENOVINewVersionDiffFFFEvent','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>ENOVINewVersionDiffFFFEvent</b>
</p>
<p>
<b><i> Class to be implemented by a client who wants to subscribe to event NewVersionDiffFFF which may be raised .</i></b><br>

 CallBack Interface : when the publisher raises an event NewVersionDiffFFF, the subscriber is called back on methods
 of this interface.
 <br><b>Role</b>: the Subscriber gives a pointer on the implementation of this interface for subscription.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#onAfterNewVersionDiffFFF(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onAfterNewVersionDiffFFF</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called after a NewVersionDiffFFF action was done.
 <dt> o 
    <a href="#onBeforeNewVersionDiffFFF(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onBeforeNewVersionDiffFFF</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   Method called before a NewVersionDiffFFF action is done .
 <dt> o 
    <a href="#onKo(ENOVIEvent_var&amp;,HRESULT&amp;)"><b>onKo</b></a>(ENOVIEvent_var&amp;,HRESULT&amp;)
<dd>   CallBack method when something was wrong for another subscriber.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="onAfterNewVersionDiffFFF"></a><a name="onAfterNewVersionDiffFFF(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onAfterNewVersionDiffFFF</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onAfterNewVersionDiffFFF</b>(<td> const <script type="text/javascript"> activateLink('ENOVIEvent_var','ENOVIEvent_var&amp;')</script> <td><tt>iRaisedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('HRESULT','HRESULT&amp;')</script> <td><tt>ioNotifyReturnCode</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Method called after a NewVersionDiffFFF action was done.
 <br><b>Role</b>: to call back clients which subscribed to NewVersionDiffFFF event -step after -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIEvent','');return false">ENOVIEvent</a>
</dl>
</dl>
<a name="onBeforeNewVersionDiffFFF"></a><a name="onBeforeNewVersionDiffFFF(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onBeforeNewVersionDiffFFF</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onBeforeNewVersionDiffFFF</b>(<td> const <script type="text/javascript"> activateLink('ENOVIEvent_var','ENOVIEvent_var&amp;')</script> <td><tt>iRaisedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('HRESULT','HRESULT&amp;')</script> <td><tt>ioNotifyReturnCode</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  Method called before a NewVersionDiffFFF action is done .
 <br><b>Role</b>: to call back clients which subscribed to NewVersionDiffFFF event - step before -
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRaisedEvent</tt>
   <dd>   the instance of event which is currently raised.
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status to be returned by the method : <br>
   E_FAIL if there was a problem <br>
   E_ACCESSDENIED if the subscriber wants to put a veto . This code will be taken into account
   only if the event on the object type was declared veto able.
   S_OK   if everything was right<br>
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIEvent','');return false">ENOVIEvent</a>
</dl>
</dl>
<a name="onKo"></a><a name="onKo(ENOVIEvent_var&amp;,HRESULT&amp;)"></a> <dt> o <b>onKo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>onKo</b>(<td> const <script type="text/javascript"> activateLink('ENOVIEvent_var','ENOVIEvent_var&amp;')</script> <td><tt>iRaisedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('HRESULT','HRESULT&amp;')</script> <td><tt>ioNotifyReturnCode</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
  CallBack method when something was wrong for another subscriber.
 <br><b>Role</b>: this method is called by the event manager
  when a next subscriber returns a failure code from it's callback method.
  In that case, all the previous subscribers are called on their onKo() method.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd>   the instance of event which is currently raised
  </dd>
    <dt><tt> ioNotifyReturnCode</tt>
   <dd>   the status of the onKo callback action
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('ENOVIEvent','');return false">ENOVIEvent</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>ENOVINewVersionDiffFFFEvent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>GUIDVPMInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
