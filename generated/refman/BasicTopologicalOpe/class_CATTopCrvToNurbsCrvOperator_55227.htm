<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>BasicTopologicalOpe Class CATTopCrvToNurbsCrvOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../BasicTopologicalOpe.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTopCrvToNurbsCrvOperator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopCrvToNurbsCrvOperator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTopCrvToNurbsCrvOperator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopCrvToNurbsCrvOperator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>BasicTopologicalOpe Class CATTopCrvToNurbsCrvOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopCrvToNurbsCrvOperator_55227','CATTopCrvToNurbsCrvOperator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopCrvToNurbsCrvOperator</b>
</p>
<p>
<b><i> Class defining a topological operator that converts the geometry of an edge into a NURBS curve.</i></b><br>

 This operator follows the general scheme of the topological operators
 <ul>
<li> Create the operator with the global function <tt>CATCreateTopCrvToNurbsCrvOperator</tt>, which defines
 the edge to transform using a wire body
<li> Set the parameters
<li> Run
<li> Get the resulting body
<li> Delete the operator with the usual C++ <tt>delete</tt> operator.
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopCrvToNurbsCrvOperator()"><b>~CATTopCrvToNurbsCrvOperator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#IsExactTransformation(CATLONG32&amp;)"><b>IsExactTransformation</b></a>(CATLONG32&amp;)
<dd>  Retrieves whether the created curve has been approximated.
 <dt> o 
    <a href="#Set3DOutputDimension(CATBoolean)"><b>Set3DOutputDimension</b></a>(CATBoolean)
<dd>  Defines whether the resulting curve must be defined as a PCurve or not.
 <dt> o 
    <a href="#SetMaxArcs(CATLONG32)"><b>SetMaxArcs</b></a>(CATLONG32)
<dd>  Defines the maximum number of arcs allowed for the NURBS curve.
 <dt> o 
    <a href="#SetMaxDegree(CATLONG32)"><b>SetMaxDegree</b></a>(CATLONG32)
<dd>  Defines the maximum degree for the created NURBS.
 <dt> o 
    <a href="#SetRationalAbility(CATLONG32)"><b>SetRationalAbility</b></a>(CATLONG32)
<dd>  Defines whether the resulting curve is rational.
 <dt> o 
    <a href="#SetSurface(CATSurface*)"><b>SetSurface</b></a>(CATSurface*)
<dd>  Defines the underlying surface on which the PCurves must be computed.
 <dt> o 
    <a href="#SetTolerance(double)"><b>SetTolerance</b></a>(double)
<dd>  Defines the fitting tolerance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopCrvToNurbsCrvOperator"></a><a name="~CATTopCrvToNurbsCrvOperator()"></a> <dt> o <b>~CATTopCrvToNurbsCrvOperator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTopCrvToNurbsCrvOperator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="IsExactTransformation"></a><a name="IsExactTransformation(CATLONG32&amp;)"></a> <dt> o <b>IsExactTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsExactTransformation</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32&amp;')</script> <td><tt>ioIsExact</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves whether the created curve has been approximated.
 <br>To be called after the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioIsExact</tt>
   <dd> <tt>0</tt> if there is an approximation, not null otherwise.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="Set3DOutputDimension"></a><a name="Set3DOutputDimension(CATBoolean)"></a> <dt> o <b>Set3DOutputDimension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>Set3DOutputDimension</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>i3DOutputDimension</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the resulting curve must be defined as a PCurve or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOutputDimension</tt>
   <dd> The dimension of the output curve.
 <br><b>Legal values</b>: <tt>TRUE</tt> to force the created curve to be a NURBS curve (and not a PNurbsCurve), 
 <tt>FALSE</tt> (default value) to force the created curve to be a PNurbs curve. 
 If the resulting curve must be PCurve, a surface must be defined using the <tt>SetSurface</tt> method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetMaxArcs"></a><a name="SetMaxArcs(CATLONG32)"></a> <dt> o <b>SetMaxArcs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetMaxArcs</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxArcs</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum number of arcs allowed for the NURBS curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxArcs</tt>
   <dd> The maximum number of arcs allowed for the NURBS curve.
 In case of both <tt>SetMaxDegree</tt> and <tt>SetMaxArcs</tt> methods are used, 
 the priority is given to the maximum degree.
 Default value is 3.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetMaxDegree"></a><a name="SetMaxDegree(CATLONG32)"></a> <dt> o <b>SetMaxDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetMaxDegree</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxDegree</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum degree for the created NURBS.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxDegree</tt>
   <dd> The maximum degree allowed for the created NURBS curve.
 In case of both <tt>SetMaxDegree</tt> and <tt>SetMaxArcs</tt> methods are used, the
 priority is given to the maximum degree.
 Default value is 5.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetRationalAbility"></a><a name="SetRationalAbility(CATLONG32)"></a> <dt> o <b>SetRationalAbility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetRationalAbility</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iRationalAbility</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the resulting curve is rational. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRationalAbility</tt>
   <dd> <br><b>Legal values</b>:
 <tt>0</tt> to convert the curve to a non rational curve, <tt>1</tt>
 to convert the curve to a rational curve.
 Some canonic curves are transformed into rational CATNurbsCurve,
 but setting <tt>iRationalAbility = 0</tt> forces the conversion to a non rational curve.
 The default mode is the conversion into rational (equivalent to <tt>iRationalAbility = 1</tt>).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetSurface"></a><a name="SetSurface(CATSurface*)"></a> <dt> o <b>SetSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetSurface</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iSurface</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the underlying surface on which the PCurves must be computed.
 <br>In case of <tt>iOutputDimension = FALSE</tt> in the <tt>Set3DOutputDimension</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> The pointer to the surface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetTolerance"></a><a name="SetTolerance(double)"></a> <dt> o <b>SetTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetTolerance</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTolerance</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the fitting tolerance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTolerance</tt>
   <dd> The tolerance value. By default, set to the factory resolution.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopCrvToNurbsCrvOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATBasicTopologicalOpe</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
