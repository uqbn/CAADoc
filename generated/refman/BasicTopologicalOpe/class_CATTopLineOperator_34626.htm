<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>BasicTopologicalOpe Class CATTopLineOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../BasicTopologicalOpe.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTopLineOperator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopLineOperator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTopLineOperator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopLineOperator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>BasicTopologicalOpe Class CATTopLineOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopLineOperator_34626','CATTopLineOperator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopLineOperator</b>
</p>
<p>
<b><i> Class defining a topological operator that builds a line body.</i></b><br>

 <br> The definition of the line can be:
 <ul><li> passing by two points,
 <li> passing by a point and with a given direction,
 <li> tangent to a wire at a given point,
 <li> angled to the tangent to a wire at a given point, round the shell normal at this point 
 <li> normal to a shell at a point.
</ul>
<br> This operator follows the general scheme of the topological operators.
 For a basic use, use the functions <tt>CATCreateTopLineXXX</tt>
 that directly returns a line body.
 If you need to tune specific parameters, use the advanced scheme:
<ul>
<li> Create the operator with one of the functions <tt>CATCreateTopLineOperatorXXX</tt>
<li> Set parameters: for example, use the </tt>SetFirstLimit</tt>
 </tt>SetSecondLimit</tt> methods to tune the line limits
<li> Run
<li> Get the resulting body 
<li> Delete the operator with the usual C++ <tt>delete</tt> operator.
</ul>
<br>The created body can be removed from the factory with the 
 <a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method as any CATICGMObject.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopLineOperator()"><b>~CATTopLineOperator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFirstLimit(double&amp;)"><b>GetFirstLimit</b></a>(double&amp;)
<dd>  Reads the first limitation, set for <tt>this</tt> CATTopLineOperator.
 <dt> o 
    <a href="#GetSecondLimit(double&amp;)"><b>GetSecondLimit</b></a>(double&amp;)
<dd>  Reads the second limitation, set for <tt>this</tt> CATTopLineOperator.
 <dt> o 
    <a href="#SetFirstLimit(double)"><b>SetFirstLimit</b></a>(double)
<dd>   Defines the first limitation of the Line Body.
 <dt> o 
    <a href="#SetSecondLimit(double)"><b>SetSecondLimit</b></a>(double)
<dd>   Defines the second limitation of the Line Body.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopLineOperator"></a><a name="~CATTopLineOperator()"></a> <dt> o <b>~CATTopLineOperator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTopLineOperator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFirstLimit"></a><a name="GetFirstLimit(double&amp;)"></a> <dt> o <b>GetFirstLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetFirstLimit</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioFirstLength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Reads the first limitation, set for <tt>this</tt> CATTopLineOperator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFirstLength</tt>
   <dd> The length from the origin of the line to define the first limitation.</dd>
</dl>
</dl>
</dl>
<a name="GetSecondLimit"></a><a name="GetSecondLimit(double&amp;)"></a> <dt> o <b>GetSecondLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSecondLimit</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioSecondLength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Reads the second limitation, set for <tt>this</tt> CATTopLineOperator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSecondLength</tt>
   <dd> The length from the origin of the line to define the second limitation.</dd>
</dl>
</dl>
</dl>
<a name="SetFirstLimit"></a><a name="SetFirstLimit(double)"></a> <dt> o <b>SetFirstLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFirstLimit</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFirstLength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Defines the first limitation of the Line Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstLength</tt>
   <dd> The length from the origin of the line to define the first limitation.</dd>
</dl>
</dl>
</dl>
<a name="SetSecondLimit"></a><a name="SetSecondLimit(double)"></a> <dt> o <b>SetSecondLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSecondLimit</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSecondLength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Defines the second limitation of the Line Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondLength</tt>
   <dd> The length from the origin of the line to define the second limitation.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopLineOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATBasicTopologicalOpe</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
