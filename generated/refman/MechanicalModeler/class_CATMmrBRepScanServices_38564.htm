<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MechanicalModeler Class CATMmrBRepScanServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../MechanicalModeler.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMmrBRepScanServices','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMmrBRepScanServices','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMmrBRepScanServices','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMmrBRepScanServices','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>MechanicalModeler Class CATMmrBRepScanServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMmrBRepScanServices_38564','CATMmrBRepScanServices','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMmrBRepScanServices</b>
</p>
<p>
<b><i>    Class providing services which allow the traversal of a part through selecting objects.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#FindDualBRepAccess(CATISpecObject*,CATISpecObject*,CATIBRepAccess**,CATIBRepAccess**)"><b>FindDualBRepAccess</b></a>(CATISpecObject*,CATISpecObject*,CATIBRepAccess**,CATIBRepAccess**)
<dd>     Retrieves the corresponding selecting object in the copied or reference feature.
 <dt> o 
    <a href="#ListAncestorsSinceGenerationFeature(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)"><b>ListAncestorsSinceGenerationFeature</b></a>(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)
<dd>     Retrieves all the ancestors since the generation feature from a selecting object.
 <dt> o 
    <a href="#ListFeaturesForGeometry(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)"><b>ListFeaturesForGeometry</b></a>(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)
<dd>     Retrieves from a selecting object all the ancestors since the generation feature that modified the geometry.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="FindDualBRepAccess"></a><a name="FindDualBRepAccess(CATISpecObject*,CATISpecObject*,CATIBRepAccess**,CATIBRepAccess**)"></a> <dt> o <b>FindDualBRepAccess</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FindDualBRepAccess</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iRefSpecObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iCopySpecObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIBRepAccess','CATIBRepAccess**')</script> <td><tt>ioRefBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIBRepAccess','CATIBRepAccess**')</script> <td><tt>ioCopyBRepAccess</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the corresponding selecting object in the copied or reference feature.<br>
  <br>
  <b>Role</b>: This method retrieves the corresponding selecting object in the copied/reference feature, when given a selecting object in the reference/copied feature respectively.<br>
  It succeeds in finding the dual selecting object only in the <b><tt>Paste As Result With Link</tt></b> and <b><tt>Paste As Result</tt></b> cases. This service does not work in the case of <b><tt>Paste As Spec</tt></b>.<br>
  <br>
  The reference feature should be copied using a constructor of <tt>CATMmrInterPartCopy</tt>.<br>
  Subsequently, the method presented here may be called right after the copy-paste operation.<br>
  Note:<br>
       <ul>          
         <li>The results are not guaranteed if an action on the model such as <b><tt>Save</tt></b> has been done before calling the method presented here.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iRefSpecObject</tt>
   <dd>         The reference feature.<br>
         This is a mechanical feature, which can be a surfacic element (curve, line) or a sketch, or a solid body (PartBody, Body).<br>
         see </dd>
<a href="#" onClick="openLink('CATMmrInterPartCopy','CATMmrInterPartCopy');return false">CATMmrInterPartCopy.CATMmrInterPartCopy</a>.<br>         Note:<br>
         <ul>
           <li>This parameter can be NULL in the case of a <b><tt>Paste As Result with Link</tt></b>, in which case the reference feature is internally retrieved by using <tt>iCopySpecObject</tt>.</li>
           <li>This parameter must not be omitted in the case of <b><tt>Paste As Result</tt></b>.</li>
         </ul>
         <br>
  <br>
  
    <dt><tt>   iCopySpecObject</tt>
   <dd>         The copied feature.<br>
         This feature results from a copy-paste operation (except <b><tt>Paste As Spec</tt></b>) of the reference feature <tt>iRefSpecObject</tt>.<br>
         Note:<br>
         <ul>
           <li>This parameter must not be NULL.</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>  ioRefBRepAccess</tt>
   <dd>         The input or output selecting object.<br>
         <ul> 
           <li>When this parameter is NULL, it is used as the output corresponding to the input in the copied feature: <tt>ioCopyBRepAccess</tt>.</li>
           <li>When this parameter is not NULL, it is used as an input in order to get the corresponding output in the copy: <tt>ioCopyBRepAccess</tt>.</li>
         </ul>
         Note:<br>
         <ul>
           <li>When this parameter is NULL, <tt>ioCopyBRepAccess</tt> must not be NULL.</li>
           <li>This parameter must not be NULL when <tt>ioCopyBRepAccess</tt> is NULL.</li>
         </ul>
         <br>
  <br> 
  </dd>
    <dt><tt>   ioCopyBRepAccess</tt>
   <dd>         The input or output selecting object.<br>
         <ul> 
           <li>When this parameter is NULL, it is used as the output corresponding to the input in the reference feature: <tt>ioRefBRepAccess</tt>.</li>
           <li>When this parameter is not NULL, it is used as an input in order to get the corresponding output in the reference: <tt>ioRefBRepAccess</tt>.</li>
         </ul>
         Note:<br>
         <ul>
           <li>When this parameter is NULL, <tt>ioRefBRepAccess</tt> must not be NULL.</li>
           <li>This parameter must not be NULL when <tt>ioRefBRepAccess</tt> is NULL.</li>
         </ul>
         <br>
  <br>                 
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the interface <tt>CATIBRepAccess</tt> of the dual selecting object has been found.</li>
           <li>E_FAIL if the interface to the dual selecting object has not been found.</li>
           <li>E_INVALIDARG if <tt>iCopySpecObject</tt> is NULL.</li>
           <li>E_INVALIDARG if <tt>iRefSpecObject</tt> is NULL and no reference feature could be retrieved by <tt>iCopySpecObject</tt> (e.g. in the case of a <tt>Paste As Result</tt>).</li>
           <li>E_INVALIDARG if <tt>iRefSpecObject</tt> is not NULL and the feature does not match the one referred to by <tt>iCopySpecObject</tt>.</li>
           <li>E_INVALIDARG if <tt>ioRefBRepAccess</tt> is NULL and <tt>ioCopyBRepAccess</tt> is NULL too.</li>
           <li>E_INVALIDARG if <tt>ioRefBRepAccess</tt> is not NULL and <tt>ioCopyBRepAccess</tt> is not NULL either.</li>
           <li>E_UNEXPECTED in case an unexpected internal error occurs.
         </ul>
</dl>
</dl>
<a name="ListAncestorsSinceGenerationFeature"></a><a name="ListAncestorsSinceGenerationFeature(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ListAncestorsSinceGenerationFeature</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListAncestorsSinceGenerationFeature</b>(<td> const <script type="text/javascript"> activateLink('CATIBRepAccess','CATIBRepAccess*')</script> <td><tt>iBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ioAncestorsFeatures</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
    Retrieves all the ancestors since the generation feature from a selecting object.<br>
  <br>
  <b>Role</b>: This method retrieves all the ancestors features since the generation feature from a selecting object.<br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iBRepAccess</tt>
   <dd>         The selecting object.<br>
  <br>
  </dd>
    <dt><tt>   ioAncestorsFeatures</tt>
   <dd>         The method appends the list of ancestors features of the selecting object to the input list.<br>
         The features are ordered from the most recent feature to the oldest feature.<br> 
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the list of ancestors features of the selecting object has been found.</li>
           <li>E_FAIL if the list of ancestors features of the selecting object has not been found.</li>
           <li>E_INVALIDARG  if <tt>iBRepAccess</tt> is NULL.</li>
         </ul>
</dl>
</dl>
<a name="ListFeaturesForGeometry"></a><a name="ListFeaturesForGeometry(CATIBRepAccess*,CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>ListFeaturesForGeometry</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListFeaturesForGeometry</b>(<td> const <script type="text/javascript"> activateLink('CATIBRepAccess','CATIBRepAccess*')</script> <td><tt>iBRepAccess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ioAncestorsFeatures</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
    Retrieves from a selecting object all the ancestors since the generation feature that modified the geometry.<br>
  <br>
  <b>Role</b>: This method retrieves from a selecting object all the ancestors features since the generation feature that modified the geometry of the selecting object.<br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iBRepAccess</tt>
   <dd>         The selecting object.<br>
  <br>
  </dd>
    <dt><tt>   ioAncestorsFeatures</tt>
   <dd>         The method appends the list of ancestors features of the selecting object to the input list.<br>
         The features are ordered from the most recent feature to the oldest feature.<br> 
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the list of ancestors features of the selecting object has been found.</li>
           <li>E_FAIL if the list of ancestors features of the selecting object has not been found.</li>
           <li>E_INVALIDARG  if <tt>iBRepAccess</tt> is NULL.</li>
         </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMmrBRepScanServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMechanicalModeler</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
