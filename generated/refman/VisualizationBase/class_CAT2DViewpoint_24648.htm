<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT2DViewpoint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CAT2DViewpoint','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT2DViewpoint','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CAT2DViewpoint','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT2DViewpoint','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VisualizationBase Class CAT2DViewpoint</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT2DViewpoint_24648','CAT2DViewpoint','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT2DViewpoint</b>
</p>
<p>
<b><i>  Class that represents the way the 2D scene is seen.</i></b><br>

 <b>Role</b>:
 A 2D viewpoint describes a list of 2D representations of a scene 
 seen by an observer position (point-of-view) through a 
 viewer's graphic window.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT2DViewpoint()"><b>CAT2DViewpoint</b></a>()
<dd>  Creates a non-initialized viewpoint.
 <dt> o 
    <a href="#CAT2DViewpoint(CAT2DViewpoint&amp;)"><b>CAT2DViewpoint</b></a>(CAT2DViewpoint&amp;)
<dd>  Creates a new viewpoint by copying geometrical values.
 <dt> o 
    <a href="#CAT2DViewpoint(CATMathPoint2Df&amp;,float)"><b>CAT2DViewpoint</b></a>(CATMathPoint2Df&amp;,float)
<dd>  Creates a new viewpoint with main characteristics.
 <dt> o 
    <a href="#~CAT2DViewpoint()"><b>~CAT2DViewpoint</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddFurtiveRep(CAT2DRep*)"><b>AddFurtiveRep</b></a>(CAT2DRep*)
<dd>  Adds a furtive representation in the scene the observator may seen.
 <dt> o 
    <a href="#AddRep(CAT2DRep*)"><b>AddRep</b></a>(CAT2DRep*)
<dd>  Adds a representation in the scene the observator may seen.
 <dt> o 
    <a href="#ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"><b>ComputeModelFromPixel</b></a>(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)
<dd>   Computes the point laying under a given pixel position.
 <dt> o 
    <a href="#ComputeModelFromPixel(float,float,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)"><b>ComputeModelFromPixel</b></a>(float,float,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)
<dd>   Computes the point laying under a given pixel position.
 <dt> o 
    <a href="#GetAnchor()"><b>GetAnchor</b></a>()
<dd>  Gets the Anchor type.
 <dt> o 
    <a href="#GetDepth()"><b>GetDepth</b></a>()
<dd>  Gets the Depth mode.
 <dt> o 
    <a href="#GetOrigin()"><b>GetOrigin</b></a>()
<dd>  Gets the origin.
 <dt> o 
    <a href="#GetTranslationBounds(float&amp;,float&amp;,float&amp;,float&amp;)"><b>GetTranslationBounds</b></a>(float&amp;,float&amp;,float&amp;,float&amp;)
<dd>  Gets the limits between which the viewpoint can move.
 <dt> o 
    <a href="#GetZoomType()"><b>GetZoomType</b></a>()
<dd>   Gets the zoom type.
 <dt> o 
    <a href="#Is3D()"><b>Is3D</b></a>()
<dd>  Retrieves whether viewpoint is a three dimensional one or not.
 <dt> o 
    <a href="#Reframe(float,float,float,float)"><b>Reframe</b></a>(float,float,float,float)
<dd>  Reframes the model in the window.
 <dt> o 
    <a href="#ReframeOn(float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)"><b>ReframeOn</b></a>(float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)
<dd>  Reframes the model in the window.
 <dt> o 
    <a href="#RemoveFurtiveRep(CAT2DRep*)"><b>RemoveFurtiveRep</b></a>(CAT2DRep*)
<dd>  Removes the representation from the furtive list.
 <dt> o 
    <a href="#RemoveRep(CAT2DRep*)"><b>RemoveRep</b></a>(CAT2DRep*)
<dd>  Removes the representation from the furtive list.
 <dt> o 
    <a href="#SetAnchor(Anchor)"><b>SetAnchor</b></a>(Anchor)
<dd>  Sets the Anchor type.
 <dt> o 
    <a href="#SetDepth(int)"><b>SetDepth</b></a>(int)
<dd>  Sets the Depth mode.
 <dt> o 
    <a href="#SetOrigin(CATMathPoint2Df&amp;)"><b>SetOrigin</b></a>(CATMathPoint2Df&amp;)
<dd>   Sets the origin.
 <dt> o 
    <a href="#SetTranslationBounds(float,float,float,float)"><b>SetTranslationBounds</b></a>(float,float,float,float)
<dd>   Sets the limits between which the viewpoint can move.
 <dt> o 
    <a href="#SetZoom(float&amp;)"><b>SetZoom</b></a>(float&amp;)
<dd>  Sets the zoom value.
 <dt> o 
    <a href="#SetZoomType(CATViewpointZoomType)"><b>SetZoomType</b></a>(CATViewpointZoomType)
<dd>  Sets the zoom type.
 <dt> o 
    <a href="#operator *=(CAT3x3Matrix&amp;)"><b>operator *=</b></a>(CAT3x3Matrix&amp;)
<dd>  Applies a geometic transformation to the viewpoint.
 <dt> o 
    <a href="#operator =(CAT2DViewpoint&amp;)"><b>operator =</b></a>(CAT2DViewpoint&amp;)
<dd>  Copies the geometric definition of a CAT3DViewpoint.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Anchor"><b>Anchor</b></a>
<dd>  Anchor types.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT2DViewpoint"></a><a name="CAT2DViewpoint()"></a> <dt> o <b>CAT2DViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DViewpoint</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a non-initialized viewpoint. 
 <br><b>Role</b>:At the first display (when the viewer will appear)
 a reframe will automatically been done on the viewpoint.
</dl>
<a name="CAT2DViewpoint"></a><a name="CAT2DViewpoint(CAT2DViewpoint&amp;)"></a> <dt> o <b>CAT2DViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DViewpoint</b>(<td> const <script type="text/javascript"> activateLink('CAT2DViewpoint','CAT2DViewpoint&amp;')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a new viewpoint by copying geometrical values.
 <ul>
 <li>Eye position and orientation (Origin, Zoom, ZoomType)
 <li>Dynamic behaviour (Anchor, Bounds)
 </ul>
</dl>
<a name="CAT2DViewpoint"></a><a name="CAT2DViewpoint(CATMathPoint2Df&amp;,float)"></a> <dt> o <b>CAT2DViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DViewpoint</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>iEye</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iZoom</tt><td><tt>=1.</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a new viewpoint with main characteristics.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEye</tt>
   <dd> Position of the Eye </dd>
    <dt><tt> iZoom</tt>
   <dd> Zoom factor)</dd>
</dl>
</dl>
</dl>
<a name="~CAT2DViewpoint"></a><a name="~CAT2DViewpoint()"></a> <dt> o <b>~CAT2DViewpoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CAT2DViewpoint</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddFurtiveRep"></a><a name="AddFurtiveRep(CAT2DRep*)"></a> <dt> o <b>AddFurtiveRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddFurtiveRep</b>(<td><script type="text/javascript"> activateLink('CAT2DRep','CAT2DRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a furtive representation in the scene the observator may seen.
 <p> Pixels of Furtive representations may not be in the expected color but can
 be displayed and hidden without re-drawind the whole scene. Must be used for 
 temporary displays
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Representation 2D</dd>
</dl>
</dl>
</dl>
<a name="AddRep"></a><a name="AddRep(CAT2DRep*)"></a> <dt> o <b>AddRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddRep</b>(<td><script type="text/javascript"> activateLink('CAT2DRep','CAT2DRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a representation in the scene the observator may seen.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>    Representation 2D</dd>
</dl>
</dl>
</dl>
<a name="ComputeModelFromPixel"></a><a name="ComputeModelFromPixel(float,float,CATMathPointf&amp;,CATMathPointf&amp;,float,float,float,float)"></a> <dt> o <b>ComputeModelFromPixel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeModelFromPixel</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>x</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>y</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>neard</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathPointf','CATMathPointf&amp;')</script> <td><tt>fard</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Computes the point laying under a given pixel position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> x</tt>
   <dd>               Position in X of the point  </dd>
    <dt><tt> y</tt>
   <dd>               Position in Y of the point  </dd>
    <dt><tt> neard</tt>
   <dd>           Nearest point in the viewpoint under the given position  </dd>
    <dt><tt> fard</tt>
   <dd>            farest point in the viewpoint under the given position  </dd>
    <dt><tt> width</tt>
   <dd>           Width in pixels of the window  </dd>
    <dt><tt> height</tt>
   <dd>          Height in pixels of the window  </dd>
    <dt><tt> mmInSupportunit</tt>
   <dd> Inverse of the size(height) of a pixel in millimeter  </dd>
    <dt><tt> ratioWH</tt>
   <dd>         Ratio Height of a pixel / Width of a pixel
 The neard and fard CATMathPointf are 3D point. Ignore the z coordinate.</dd>
</dl>
</dl>
</dl>
<a name="ComputeModelFromPixel"></a><a name="ComputeModelFromPixel(float,float,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)"></a> <dt> o <b>ComputeModelFromPixel</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeModelFromPixel</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iXPixel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iYPixel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oXModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oYModel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Computes the point laying under a given pixel position.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXPixel</tt>
   <dd>               Position in X of the point  </dd>
    <dt><tt> iYPixel</tt>
   <dd>               Position in Y of the point  </dd>
    <dt><tt> oXModel</tt>
   <dd>           X coordinate of the model point nder the given position  </dd>
    <dt><tt> oYModel</tt>
   <dd>           Y coordinate of the model point nder the given position  </dd>
    <dt><tt> width</tt>
   <dd>           Width in pixels of the window  </dd>
    <dt><tt> height</tt>
   <dd>          Height in pixels of the window  </dd>
    <dt><tt> mmInSupportunit</tt>
   <dd> Inverse of the size(height) of a pixel in millimeter  </dd>
    <dt><tt> ratioWH</tt>
   <dd>         Ratio Height of a pixel / Width of a pixel</dd>
</dl>
</dl>
</dl>
<a name="GetAnchor"></a><a name="GetAnchor()"></a> <dt> o <b>GetAnchor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('Anchor','Anchor')</script>  <b>GetAnchor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets the Anchor type.
</dl>
<a name="GetDepth"></a><a name="GetDepth()"></a> <dt> o <b>GetDepth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetDepth</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets the Depth mode.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The Depth mode.
</dl>
</dl>
<a name="GetOrigin"></a><a name="GetOrigin()"></a> <dt> o <b>GetOrigin</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df')</script>  <b>GetOrigin</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Gets the origin.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The eye position.
</dl>
</dl>
<a name="GetTranslationBounds"></a><a name="GetTranslationBounds(float&amp;,float&amp;,float&amp;,float&amp;)"></a> <dt> o <b>GetTranslationBounds</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTranslationBounds</b>(<td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>XMinModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>XMaxModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>YMinModel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>YMaxModel</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Gets the limits between which the viewpoint can move.
</dl>
<a name="GetZoomType"></a><a name="GetZoomType()"></a> <dt> o <b>GetZoomType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATViewpointZoomType','CATViewpointZoomType')</script>  <b>GetZoomType</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Gets the zoom type.
</dl>
<a name="Is3D"></a><a name="Is3D()"></a> <dt> o <b>Is3D</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>Is3D</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves whether viewpoint is a three dimensional one or not. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The value is always <tt>FALSE</tt>.
</dl>
</dl>
<a name="Reframe"></a><a name="Reframe(float,float,float,float)"></a> <dt> o <b>Reframe</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Reframe</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iWidth</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iHeight</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reframes the model in the window.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidth</tt>
   <dd> Wight of the window (in pixel) </dd>
    <dt><tt> iHeight</tt>
   <dd> Height of the window (in pixel) </dd>
    <dt><tt> mmInSupportUnit</tt>
   <dd> Inverse of the size(height) of a pixel in millimeter </dd>
    <dt><tt> ratioWH</tt>
   <dd> Ratio Height of a pixel / Width of a pixel</dd>
</dl>
</dl>
</dl>
<a name="ReframeOn"></a><a name="ReframeOn(float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;,float&amp;)"></a> <dt> o <b>ReframeOn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ReframeOn</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>XMinModel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>XMaxModel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>YMinModel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>YMaxModel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>mmInSupportUnit</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>ratioWH</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reframes the model in the window.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> XMinModel</tt>
   <dd>        Leftmost coordinate to be seen </dd>
    <dt><tt> XMaxModel</tt>
   <dd>        Rightmost coordinate to be seen </dd>
    <dt><tt> YMinModel</tt>
   <dd>        Bottommost coordinate to be seen </dd>
    <dt><tt> YMaxModel</tt>
   <dd>        Topmost corrrdinate to be seen </dd>
    <dt><tt> width</tt>
   <dd>            Wight of the window (in pixel) </dd>
    <dt><tt> height</tt>
   <dd>           Height of the window (in pixel) </dd>
    <dt><tt> mmInSupportUnit</tt>
   <dd>  Inverse of the size(height) of a pixel in millimeter </dd>
    <dt><tt> ratioWH</tt>
   <dd>          Ratio Height of a pixel / Width of a pixel</dd>
</dl>
</dl>
</dl>
<a name="RemoveFurtiveRep"></a><a name="RemoveFurtiveRep(CAT2DRep*)"></a> <dt> o <b>RemoveFurtiveRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveFurtiveRep</b>(<td><script type="text/javascript"> activateLink('CAT2DRep','CAT2DRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes the representation from the furtive list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Representation 2D</dd>
</dl>
</dl>
</dl>
<a name="RemoveRep"></a><a name="RemoveRep(CAT2DRep*)"></a> <dt> o <b>RemoveRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveRep</b>(<td><script type="text/javascript"> activateLink('CAT2DRep','CAT2DRep*')</script> <td><tt>iRep</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes the representation from the furtive list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd> Representation 2D</dd>
</dl>
</dl>
</dl>
<a name="SetAnchor"></a><a name="SetAnchor(Anchor)"></a> <dt> o <b>SetAnchor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAnchor</b>(<td> const <script type="text/javascript"> activateLink('Anchor','Anchor')</script> <td><tt>iAnchor</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the Anchor type. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAnchor</tt>
   <dd>    Usually <tt>Center</tt> or <tt>UpLeft</tt></dd>
</dl>
</dl>
</dl>
<a name="SetDepth"></a><a name="SetDepth(int)"></a> <dt> o <b>SetDepth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDepth</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDepthMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the Depth mode. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDepthMode</tt>
   <dd> The Depth mode   <br><b> Legal values</b>:<ul>
   <li><tt>1</tt> the draw priority is the same as the selection priority</li>
   <li><tt>0</tt> otherwise (default value)</li>.</ul>
 The priority of each element attached to the viewpoint is retrieval
 with the </dd>
<a href="#" onClick="openLink('CATGraphicAttributeSet','GetPriority');return false">CATGraphicAttributeSet.GetPriority</a> method.
</dl>
</dl>
</dl>
<a name="SetOrigin"></a><a name="SetOrigin(CATMathPoint2Df&amp;)"></a> <dt> o <b>SetOrigin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetOrigin</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2Df','CATMathPoint2Df&amp;')</script> <td><tt>iEye</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the origin.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEye</tt>
   <dd> The eye posision</dd>
</dl>
</dl>
</dl>
<a name="SetTranslationBounds"></a><a name="SetTranslationBounds(float,float,float,float)"></a> <dt> o <b>SetTranslationBounds</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTranslationBounds</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>XMinModel</tt><td><tt>=-1.e+10</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>XMaxModel</tt><td><tt>=1.e+10</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>YMinModel</tt><td><tt>=-1.e+10</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>YMaxModel</tt><td><tt>=1.e+10</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the limits between which the viewpoint can move.
</dl>
<a name="SetZoom"></a><a name="SetZoom(float&amp;)"></a> <dt> o <b>SetZoom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetZoom</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iZoom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the zoom value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iZoom</tt>
   <dd>  Value meaning depends of the zoom type.</dd>
</dl>
</dl>
</dl>
<a name="SetZoomType"></a><a name="SetZoomType(CATViewpointZoomType)"></a> <dt> o <b>SetZoomType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetZoomType</b>(<td> const <script type="text/javascript"> activateLink('CATViewpointZoomType','CATViewpointZoomType')</script> <td><tt>iZoomType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the zoom type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iZoomType</tt>
   <dd>  The zoom type</dd>
</dl>
</dl>
</dl>
<a name="operator *="></a><a name="operator *=(CAT3x3Matrix&amp;)"></a> <dt> o <b>operator *=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT2DViewpoint','CAT2DViewpoint &')</script>  <b>operator *=</b>(<td> const <script type="text/javascript"> activateLink('CAT3x3Matrix','CAT3x3Matrix&amp;')</script> <td><tt>iMatrix</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Applies a geometic transformation to the viewpoint.
 That transformation is defined by the CAT3x3matrix
</dl>
<a name="operator ="></a><a name="operator =(CAT2DViewpoint&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT2DViewpoint','CAT2DViewpoint &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CAT2DViewpoint','CAT2DViewpoint&amp;')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copies the geometric definition of a CAT3DViewpoint.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Anchor"> <dt> o <b>Anchor</b>
<dl>
  <dd>
<pre>
enum <b>Anchor</b> {
  UpLeft,
  Up,
  UpRight,
  Left,
  Center,
  Right,
  DownLeft,
  Down,
  DownRight
}
</pre>
 Anchor types. 
 <br><b>Role</b>:The anchor type gives the location in the window
 where the origin is projected. When zooming, this point will stay
 invariant.
</dl>
<hr>
 This object is included in the file: <b>CAT2DViewpoint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
