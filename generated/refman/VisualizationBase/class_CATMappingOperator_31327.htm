<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CATMappingOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMappingOperator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMappingOperator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMappingOperator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMappingOperator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VisualizationBase Class CATMappingOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMappingOperator_31327','CATMappingOperator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMappingOperator</b>
</p>
<p>
<b><i> Base class to create a mapping operator to apply textures.</i></b><br>
 Derive from this class and overload the method ComputeTextureCoordinates.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMappingOperator()"><b>CATMappingOperator</b></a>()
<dd>  Constructs an empty mapping operator.
 <dt> o 
    <a href="#CATMappingOperator(CATMappingOperator&amp;)"><b>CATMappingOperator</b></a>(CATMappingOperator&amp;)
<dd>  Copy contructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddReference()"><b>AddReference</b></a>()
<dd>  Increments the reference counter of the mapping operator.
 <dt> o 
    <a href="#ComputeTextureCoordinates(float[],int,float[],int,float[],int,float[])"><b>ComputeTextureCoordinates</b></a>(float[],int,float[],int,float[],int,float[])
<dd>  Computes the texture coordinates for all vertices.
 <dt> o 
    <a href="#ComputeTextureCoordinates(float[],int,float[],int,float[],int,float[],CATBaseUnknown*)"><b>ComputeTextureCoordinates</b></a>(float[],int,float[],int,float[],int,float[],CATBaseUnknown*)
<dd>  Computes the texture coordinates for all vertices.
 <dt> o 
    <a href="#Destroy()"><b>Destroy</b></a>()
<dd>  Deletes the mapping operator.
 <dt> o 
    <a href="#GetId()"><b>GetId</b></a>()
<dd>  Return the id of the mapping operator.
 <dt> o 
    <a href="#GetReferenceNumber()"><b>GetReferenceNumber</b></a>()
<dd>  Returns the reference counter value of the mapping operator.
 <dt> o 
    <a href="#NeedUVMesh()"><b>NeedUVMesh</b></a>()
<dd>  Indicates the need for surface parameters array <tt>iTuv</tt>.
 <dt> o 
    <a href="#SubReference()"><b>SubReference</b></a>()
<dd>  IDecrements the reference counter of the mapping operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMappingOperator"></a><a name="CATMappingOperator()"></a> <dt> o <b>CATMappingOperator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMappingOperator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty mapping operator.
</dl>
<a name="CATMappingOperator"></a><a name="CATMappingOperator(CATMappingOperator&amp;)"></a> <dt> o <b>CATMappingOperator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMappingOperator</b>(<td> const <script type="text/javascript"> activateLink('CATMappingOperator','CATMappingOperator&amp;')</script> <td><tt>iOper</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy contructor
</dl>
 <h2>Methods</h2> <br>
<a name="AddReference"></a><a name="AddReference()"></a> <dt> o <b>AddReference</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddReference</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Increments the reference counter of the mapping operator.
</dl>
<a name="ComputeTextureCoordinates"></a><a name="ComputeTextureCoordinates(float[],int,float[],int,float[],int,float[])"></a> <dt> o <b>ComputeTextureCoordinates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeTextureCoordinates</b>(<td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iVertex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbVertex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iNormals</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbNormals</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iTuv</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbuv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>oTexture</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Computes the texture coordinates for all vertices. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVertex</tt>
   <dd> Array containing the coordinates of every vertices,as a succession
 of (x,y,z) sets.
 </dd>
    <dt><tt> iNbVertex</tt>
   <dd> Number of vertices in <tt>iVertex</tt>.
 </dd>
    <dt><tt> iNormals</tt>
   <dd> Array containing the coordinates of the normals at every vertices, as
 a succession of (Nx,Ny,Nz) sets.
 If the surface is plane, the only given set is valid for all vertices.
 </dd>
    <dt><tt> iNormals</tt>
   <dd> Number of normal sets in <tt>iNormals</tt>.
 </dd>
    <dt><tt> iTuv</tt>
   <dd> Array containing the parameters in of every vertices in the surface parametrization space,
 as a succession of (u,v) sets.
 This array must be required by the mapping operator through the method <tt>NeedUVMesh</tt>.
 </dd>
    <dt><tt> iNbuv</tt>
   <dd> Number of parameter sets in <tt>iNbuv</tt>.
 </dd>
    <dt><tt> oTexture</tt>
   <dd> Array containing the coordinates of texture coordinates for every vertices,
 as a succession of (s,t,0) sets. <br>
 (0,0,0) always indicates the lower-left corner of the texture image. <br>
 (1,1,0) always indicates the upper-right corner of the texture image.</dd>
</dl>
</dl>
</dl>
<a name="ComputeTextureCoordinates"></a><a name="ComputeTextureCoordinates(float[],int,float[],int,float[],int,float[],CATBaseUnknown*)"></a> <dt> o <b>ComputeTextureCoordinates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeTextureCoordinates</b>(<td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iVertex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbVertex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iNormals</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbNormals</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>iTuv</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbuv</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float[]')</script> <td><tt>oTexture</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iCell</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Computes the texture coordinates for all vertices. Overload this method only if you need access to the topological cell. Otherwise, use other method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVertex</tt>
   <dd> Array containing the coordinates of every vertices,as a succession
 of (x,y,z) sets.
 </dd>
    <dt><tt> iNbVertex</tt>
   <dd> Number of vertices in <tt>iVertex</tt>.
 </dd>
    <dt><tt> iNormals</tt>
   <dd> Array containing the coordinates of the normals at every vertices, as
 a succession of (Nx,Ny,Nz) sets.
 If the surface is plane, the only given set is valid for all vertices.
 </dd>
    <dt><tt> iNormals</tt>
   <dd> Number of normal sets in <tt>iNormals</tt>.
 </dd>
    <dt><tt> iTuv</tt>
   <dd> Array containing the parameters in of every vertices in the surface parametrization space,
 as a succession of (u,v) sets.
 This array must be required by the mapping operator through the method <tt>NeedUVMesh</tt>.
 </dd>
    <dt><tt> iNbuv</tt>
   <dd> Number of parameter sets in <tt>iNbuv</tt>.
 </dd>
    <dt><tt> oTexture</tt>
   <dd> Array containing the coordinates of texture coordinates for every vertices,
 as a succession of (s,t,0) sets. <br>
 (0,0,0) always indicates the lower-left corner of the texture image. <br>
 (1,1,0) always indicates the upper-right corner of the texture image.
 </dd>
    <dt><tt> iCell</tt>
   <dd> Topological cell for which we are calculating the textures coordinates.</dd>
</dl>
</dl>
</dl>
<a name="Destroy"></a><a name="Destroy()"></a> <dt> o <b>Destroy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Destroy</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deletes the mapping operator.
</dl>
<a name="GetId"></a><a name="GetId()"></a> <dt> o <b>GetId</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('short','inline unsigned short')</script>  <b>GetId</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Return the id of the mapping operator. This id is not persistent. It only serves to index different sets
 of mapping coordinates on CATGraphicPrimitives.
</dl>
<a name="GetReferenceNumber"></a><a name="GetReferenceNumber()"></a> <dt> o <b>GetReferenceNumber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetReferenceNumber</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the reference counter value of the mapping operator.
</dl>
<a name="NeedUVMesh"></a><a name="NeedUVMesh()"></a> <dt> o <b>NeedUVMesh</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>NeedUVMesh</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Indicates the need for surface parameters array <tt>iTuv</tt>. <ul>
 <li>0 : no need for surface parameters. </li>
 <li>1 : require calculation of surface parameters. </li>
 </ul>
</dl>
<a name="SubReference"></a><a name="SubReference()"></a> <dt> o <b>SubReference</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SubReference</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 IDecrements the reference counter of the mapping operator.
</dl>
<hr>
 This object is included in the file: <b>CATMappingOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
