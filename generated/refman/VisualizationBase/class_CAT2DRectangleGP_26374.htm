<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT2DRectangleGP</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CAT2DRectangleGP','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT2DRectangleGP','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CAT2DRectangleGP','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT2DRectangleGP','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VisualizationBase Class CAT2DRectangleGP</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT2DRectangleGP_26374','CAT2DRectangleGP','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT2DRectangleGP</b>
</p>
<p>
<b><i> Class to create a dynamic graphic primitive of a 2D rectangle.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CAT2DRectangleGP()"><b>CAT2DRectangleGP</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CAT2DRectangleGP(float[2],float[2],int)"><b>CAT2DRectangleGP</b></a>(float[2],float[2],int)
<dd>  Constructs a 2D rectangle dynamic graphic primitive.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Draw(CATRender&amp;)"><b>Draw</b></a>(CATRender&amp;)
<dd>  Draws the dynamic graphic primitive with a render.
 <dt> o 
    <a href="#Get(float**,float**,int*)"><b>Get</b></a>(float**,float**,int*)
<dd>  Retrieves data about the 2D rectangle.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CAT2DRectangleGP"></a><a name="CAT2DRectangleGP()"></a> <dt> o <b>CAT2DRectangleGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DRectangleGP</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CAT2DRectangleGP"></a><a name="CAT2DRectangleGP(float[2],float[2],int)"></a> <dt> o <b>CAT2DRectangleGP</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CAT2DRectangleGP</b>(<td> const <script type="text/javascript"> activateLink('float[2','float[2]')</script> <td><tt>iBottomLeft</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float[2','float[2]')</script> <td><tt>iTopRight</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFill</tt><td><tt>=NOFILL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a 2D rectangle dynamic graphic primitive.
 <pre>
                          +----------------------x topRight Point
                          |                      |
          bottoLeft point x----------------------+
 </pre>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBottomLeft</tt>
   <dd>	the bottom-left 2D point of the 2D rectangle (XY).
 </dd>
    <dt><tt> iTopRight</tt>
   <dd>	the top-right 2D point of the 2D rectangle (XY).
 </dd>
    <dt><tt> iFill</tt>
   <dd>	the integer which allows to construct a 2D rectangle
	just with edges or filled with graphic attributes.
	<br><b>legal values</b>: 
		<br>NOFILL : just edges are drawn.
		<br>FILL : the 2D rectangle is filled
				with graphic attributes.
	<br> By default, the 2D rectangle is not filled.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Draw"></a><a name="Draw(CATRender&amp;)"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Draw</b>(<td><script type="text/javascript"> activateLink('CATRender','CATRender&amp;')</script> <td><tt>iRender</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Draws the dynamic graphic primitive with a render.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRender</tt>
   <dd>	the render used to draw the dynamic graphic primitive.</dd>
</dl>
</dl>
</dl>
<a name="Get"></a><a name="Get(float**,float**,int*)"></a> <dt> o <b>Get</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>Get</b>(<td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oBottomLeft</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oTopRight</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oFill</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves data about the 2D rectangle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBottomLeft</tt>
   <dd>	the bottom-left 2D point of the 2D rectangle (XY).
 </dd>
    <dt><tt> oTopRight</tt>
   <dd>	the top-right 2D point of the 2D rectangle (XY).
 </dd>
    <dt><tt> oFill</tt>
   <dd>	the integer which allows to construct a 2D rectangle
	just with edges or filled with graphic attributes.
	<br><b>legal values</b>: 
		<br>NOFILL : just edges are drawn.
		<br>FILL : the 2D rectangle is filled
				with graphic attributes.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT2DRectangleGP.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
