<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CAT3DViewport</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CAT3DViewport','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT3DViewport','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CAT3DViewport','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CAT3DViewport','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VisualizationBase Class CAT3DViewport</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CAT3DViewport_23314','CAT3DViewport','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CAT3DViewport</b>
</p>
<p>
<b><i>
 Class that defines a 2D clipping area.</i></b><br>

</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CAT3DViewport()"><b>~CAT3DViewport</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Clone()"><b>Clone</b></a>()
<dd>   Duplicates the Viewport.
 <dt> o 
    <a href="#Clone(CATViewport**)"><b>Clone</b></a>(CATViewport**)
<dd>  Duplicate a Viewport.
 <dt> o 
    <a href="#GetNbPlanes()"><b>GetNbPlanes</b></a>()
<dd>  Get the number of planes.
 <dt> o 
    <a href="#GetPlanes(float**,float**,float**,float**)"><b>GetPlanes</b></a>(float**,float**,float**,float**)
<dd>  Get the clipping planes equations.
 <dt> o 
    <a href="#IsInside(float[3])"><b>IsInside</b></a>(float[3])
<dd>  Determine wether or not a given point lies inside the CAT2DViewport.
 <dt> o 
    <a href="#IsInside(float*,float)"><b>IsInside</b></a>(float*,float)
<dd>  Determine wether or not a given sphere lies inside the CAT2DViewport.
 <dt> o 
    <a href="#IsInside(CAT3DBoundingSphere&amp;,float)"><b>IsInside</b></a>(CAT3DBoundingSphere&amp;,float)
<dd>  Determine wether or not a given CAT3DBoundingSphere lies inside the CAT3DViewport.
 <dt> o 
    <a href="#IsOutside(float*,float)"><b>IsOutside</b></a>(float*,float)
<dd>  Determine wether or not a given sphere lies outside the CAT2DViewport.
 <dt> o 
    <a href="#IsOutside(CAT3DBoundingSphere&amp;,float)"><b>IsOutside</b></a>(CAT3DBoundingSphere&amp;,float)
<dd>  Determine wether or not a given CAT3DBoundingSphere lies outside the CAT3DViewport.
 <dt> o 
    <a href="#operator *=(CAT4x4Matrix&amp;)"><b>operator *=</b></a>(CAT4x4Matrix&amp;)
<dd>  Apply the geometric transformatin defined by the CAT4x4Matrix to the clipping planes.
 <dt> o 
    <a href="#operator +=(CAT3DViewport&amp;)"><b>operator +=</b></a>(CAT3DViewport&amp;)
<dd>   Add the clipping planes of one CAT3DViewport to this one.
 <dt> o 
    <a href="#operator -=(CAT3DViewport&amp;)"><b>operator -=</b></a>(CAT3DViewport&amp;)
<dd>   Remove the clipping planes of one CAT3DViewport to this one.
 <dt> o 
    <a href="#operator =(CAT3DViewport&amp;)"><b>operator =</b></a>(CAT3DViewport&amp;)
<dd>   Affectation operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CAT3DViewport"></a><a name="~CAT3DViewport()"></a> <dt> o <b>~CAT3DViewport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CAT3DViewport</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Clone"></a><a name="Clone()"></a> <dt> o <b>Clone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATViewport','CATViewport *')</script>  <b>Clone</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Duplicates the Viewport.
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the copy of this CATViewport
</dl>
</dl>
<a name="Clone"></a><a name="Clone(CATViewport**)"></a> <dt> o <b>Clone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATViewport','CATViewport *')</script>  <b>Clone</b>(<td><script type="text/javascript"> activateLink('CATViewport','CATViewport**')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Duplicate a Viewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewport</tt>
   <dd> A pointer to the pointer on the CATViewport into wich we want to duplicate this CATViewport. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  A pointer to the Duplicated CATviewport
</dl>
</dl>
<a name="GetNbPlanes"></a><a name="GetNbPlanes()"></a> <dt> o <b>GetNbPlanes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetNbPlanes</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Get the number of planes.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the number of planes
</dl>
</dl>
<a name="GetPlanes"></a><a name="GetPlanes(float**,float**,float**,float**)"></a> <dt> o <b>GetPlanes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetPlanes</b>(<td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oa</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>ob</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>od</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the clipping planes equations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oa</tt>
   <dd> an array of float representing the a param in the plane equation </dd>
    <dt><tt> ob</tt>
   <dd> an array of float representing the b param in the plane equation </dd>
    <dt><tt> oc</tt>
   <dd> an array of float representing the c param in the plane equation </dd>
    <dt><tt> od</tt>
   <dd> an array of float representing the d param in the plane equation  The planes equations are of the form a.x+b.y+c.z+d = 0</dd>
</dl>
</dl>
</dl>
<a name="IsInside"></a><a name="IsInside(float[3])"></a> <dt> o <b>IsInside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsInside</b>(<td> const <script type="text/javascript"> activateLink('float[3','float[3]')</script> <td><tt>point</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Determine wether or not a given point lies inside the CAT2DViewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> point</tt>
   <dd>  a pointer to an array of coordinates for the point </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsInside"></a><a name="IsInside(float*,float)"></a> <dt> o <b>IsInside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsInside</b>(<td> const <script type="text/javascript"> activateLink('float','float*')</script> <td><tt>icenter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iradius</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Determine wether or not a given sphere lies inside the CAT2DViewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> icenter</tt>
   <dd>  a pointer to an array of coorinates for the center of the sphere </dd>
    <dt><tt> iradius</tt>
   <dd>  the radius of the spheres </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsInside"></a><a name="IsInside(CAT3DBoundingSphere&amp;,float)"></a> <dt> o <b>IsInside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsInside</b>(<td> const <script type="text/javascript"> activateLink('CAT3DBoundingSphere','CAT3DBoundingSphere&amp;')</script> <td><tt></tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iratio</tt><td><tt>= 1.f</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Determine wether or not a given CAT3DBoundingSphere lies inside the CAT3DViewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBox</tt>
   <dd>  The CAT3DBoundingSphere we want to test </dd>
    <dt><tt> iratio</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsOutside"></a><a name="IsOutside(float*,float)"></a> <dt> o <b>IsOutside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>IsOutside</b>(<td> const <script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iCenter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iRadius</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Determine wether or not a given sphere lies outside the CAT2DViewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenter</tt>
   <dd>  a pointer to an array of coorinates for the center of the sphere </dd>
    <dt><tt> iRadius</tt>
   <dd>  the radius of the spheres </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="IsOutside"></a><a name="IsOutside(CAT3DBoundingSphere&amp;,float)"></a> <dt> o <b>IsOutside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>IsOutside</b>(<td> const <script type="text/javascript"> activateLink('CAT3DBoundingSphere','CAT3DBoundingSphere&amp;')</script> <td><tt></tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iratio</tt><td><tt>= 1.f</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Determine wether or not a given CAT3DBoundingSphere lies outside the CAT3DViewport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBox</tt>
   <dd>  The CAT3DBoundingSphere we want to test </dd>
    <dt><tt> iratio</tt>
   <dd> </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the result of the test
</dl>
</dl>
<a name="operator *="></a><a name="operator *=(CAT4x4Matrix&amp;)"></a> <dt> o <b>operator *=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DViewport','inline CAT3DViewport &')</script>  <b>operator *=</b>(<td> const <script type="text/javascript"> activateLink('CAT4x4Matrix','CAT4x4Matrix&amp;')</script> <td><tt>iMatrix</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Apply the geometric transformatin defined by the CAT4x4Matrix to the clipping planes.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMatrix</tt>
   <dd> the transformation to apply.</dd>
</dl>
</dl>
</dl>
<a name="operator +="></a><a name="operator +=(CAT3DViewport&amp;)"></a> <dt> o <b>operator +=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport &')</script>  <b>operator +=</b>(<td> const <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport&amp;')</script> <td><tt>iFrom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Add the clipping planes of one CAT3DViewport to this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd> the CAT3DViewport of which we add the clipping planes</dd>
</dl>
</dl>
</dl>
<a name="operator -="></a><a name="operator -=(CAT3DViewport&amp;)"></a> <dt> o <b>operator -=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport &')</script>  <b>operator -=</b>(<td> const <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport&amp;')</script> <td><tt>iFrom</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Remove the clipping planes of one CAT3DViewport to this one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd> the CAT3DViewport of which we add the clipping planes Use only if you added that CAT3DViewport clipping planes to this CAT3DViewport, and
 did not add any other in the meantime.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CAT3DViewport&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CAT3DViewport','CAT3DViewport&amp;')</script> <td><tt>viewport</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Affectation operator.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> viewport</tt>
   <dd>  A reference to3D the CAT3DViewport we want to copy  into this one.  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  A reference to this CATViewport
</dl>
</dl>
<hr>
 This object is included in the file: <b>CAT3DViewport.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
