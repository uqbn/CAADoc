<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>VisualizationBase Class CATSupport</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../VisualizationBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSupport','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSupport','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSupport','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSupport','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>VisualizationBase Class CATSupport</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSupport_20088','CATSupport','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSupport</b>
</p>
<p>
<b><i> Base class .</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATSupport(int,int,void*)"><b>CATSupport</b></a>(int,int,void*)
<dd>  Constructs the class from a width and an height.
 <dt> o 
    <a href="#CATSupport(CATSupport&amp;)"><b>CATSupport</b></a>(CATSupport&amp;)
<dd>  Copy Constructor.
 <dt> o 
    <a href="#~CATSupport()"><b>~CATSupport</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddClippingPlane(int,float*,float*,int)"><b>AddClippingPlane</b></a>(int,float*,float*,int)
<dd>  Adds a clipping plane(you cannot define more than six clipping planes).
 <dt> o 
    <a href="#AddViewpoint(CATViewpoint*,int)"><b>AddViewpoint</b></a>(CATViewpoint*,int)
<dd>  Adds a given viewpoint.
 <dt> o 
    <a href="#Clear()"><b>Clear</b></a>()
<dd>   Clears the screen.
 <dt> o 
    <a href="#Draw(void)"><b>Draw</b></a>(void)
<dd>  Draws the scene.
 <dt> o 
    <a href="#GetAntiAliasingMode()"><b>GetAntiAliasingMode</b></a>()
<dd>  Returns whether or not the antialiasing mode for lines is active.
 <dt> o 
    <a href="#GetBackgroundColor(float*,float*,float*)"><b>GetBackgroundColor</b></a>(float*,float*,float*)
<dd>   Retreives the background color.
 <dt> o 
    <a href="#GetColorMap()"><b>GetColorMap</b></a>()
<dd>  Returns the indexed color map.
 <dt> o 
    <a href="#GetCullingPrecision()"><b>GetCullingPrecision</b></a>()
<dd>  Returns the minimum pixel size.
 <dt> o 
    <a href="#GetDefaultMaterialProperties(float&amp;,float&amp;,float&amp;)"><b>GetDefaultMaterialProperties</b></a>(float&amp;,float&amp;,float&amp;)
<dd>   Retreives default material properties.
 <dt> o 
    <a href="#GetGlobalAmbientLight(float*,float*,float*)"><b>GetGlobalAmbientLight</b></a>(float*,float*,float*)
<dd>   Retreives the global ambient light color.
 <dt> o 
    <a href="#GetMMInSupportUnit()"><b>GetMMInSupportUnit</b></a>()
<dd>  Returns the millimeter size in pixel size.
 <dt> o 
    <a href="#GetRatioWH()"><b>GetRatioWH</b></a>()
<dd>  Returns the ration heigth/width of one pixel.
 <dt> o 
    <a href="#GetSagPrecision()"><b>GetSagPrecision</b></a>()
<dd>  Returns the sag precision.
 <dt> o 
    <a href="#GetStereoMode(int*,float*)"><b>GetStereoMode</b></a>(int*,float*)
<dd>  Retreives the stereo mode.
 <dt> o 
    <a href="#GetViewMode(void)"><b>GetViewMode</b></a>(void)
<dd>  Returns the current viewer mode of the current  CATSupport.
 <dt> o 
    <a href="#GetWidthAndHeight(float&amp;,float&amp;)"><b>GetWidthAndHeight</b></a>(float&amp;,float&amp;)
<dd>  Retreives the heigth and width of the current  CATSupport.
 <dt> o 
    <a href="#IsAmbientActivated()"><b>IsAmbientActivated</b></a>()
<dd>  Returns whether or not ambient light is active.
 <dt> o 
    <a href="#IsClipped(float**,float**,int*)"><b>IsClipped</b></a>(float**,float**,int*)
<dd>  Returns the number of clipping planes.
 <dt> o 
    <a href="#IsFogOn()"><b>IsFogOn</b></a>()
<dd>  Returns whether or not fog is active.
 <dt> o 
    <a href="#RemoveClippingPlane()"><b>RemoveClippingPlane</b></a>()
<dd>  Resets all the clipping planes.
 <dt> o 
    <a href="#RemoveViewpoint(CATViewpoint*)"><b>RemoveViewpoint</b></a>(CATViewpoint*)
<dd>  Removess a given viewpoint.
 <dt> o 
    <a href="#SetAmbientActivation(unsigned int)"><b>SetAmbientActivation</b></a>(unsigned int)
<dd>   Activates or Deactivates the global ambient light.
 <dt> o 
    <a href="#SetAntiAliasingMode(int)"><b>SetAntiAliasingMode</b></a>(int)
<dd>  Sets the antialiasing mode for lines.
 <dt> o 
    <a href="#SetBackgroundColor(float,float,float)"><b>SetBackgroundColor</b></a>(float,float,float)
<dd>   Sets the background color.
 <dt> o 
    <a href="#SetCullingPrecision(int)"><b>SetCullingPrecision</b></a>(int)
<dd>  Gives the minimum pixel size for objects to be drawn.
 <dt> o 
    <a href="#SetDefaultMaterialProperties(float,float,float)"><b>SetDefaultMaterialProperties</b></a>(float,float,float)
<dd>   Sets default material properties.
 <dt> o 
    <a href="#SetFogMode(int)"><b>SetFogMode</b></a>(int)
<dd>  Sets the fog mode.
 <dt> o 
    <a href="#SetGlobalAmbientLight(float,float,float)"><b>SetGlobalAmbientLight</b></a>(float,float,float)
<dd>   Sets the global ambient light color.
 <dt> o 
    <a href="#SetLightViewFitting(CATVisLightViewFittingMode,CAT3DViewpoint*)"><b>SetLightViewFitting</b></a>(CATVisLightViewFittingMode,CAT3DViewpoint*)
<dd>  <dt> o 
    <a href="#SetMMInSupportUnit(float)"><b>SetMMInSupportUnit</b></a>(float)
<dd>  Sets one millimeter size in pixel size.
 <dt> o 
    <a href="#SetRatioWH(float)"><b>SetRatioWH</b></a>(float)
<dd>  Sets the ratio heigth/width of one pixel.
 <dt> o 
    <a href="#SetSagPrecision(float)"><b>SetSagPrecision</b></a>(float)
<dd>  Sets the sag in pixel size.
 <dt> o 
    <a href="#SetStereoMode(int,float)"><b>SetStereoMode</b></a>(int,float)
<dd>   Sets the stereo mode.
 <dt> o 
    <a href="#SetViewMode(int,int)"><b>SetViewMode</b></a>(int,int)
<dd>  Sets the viewmode for viewer enclosed in the current CATSupport.
 <dt> o 
    <a href="#SetWidthAndHeight(float,float)"><b>SetWidthAndHeight</b></a>(float,float)
<dd>  Sets the heigth and width of the current  CATSupport.
 <dt> o 
    <a href="#Swap()"><b>Swap</b></a>()
<dd>   Swaps back buffer to front buffer.
 <dt> o 
    <a href="#SwitchBack()"><b>SwitchBack</b></a>()
<dd>  Sets the back buffer as active : we are drawing into it.
 <dt> o 
    <a href="#SwitchBackLeft()"><b>SwitchBackLeft</b></a>()
<dd>  Sets the left back buffer as active when working in stereo mode: we are drawing into it.
 <dt> o 
    <a href="#SwitchBackRight()"><b>SwitchBackRight</b></a>()
<dd>  Sets the right back buffer as active when working in stereo mode: we are drawing into it.
 <dt> o 
    <a href="#SwitchFront()"><b>SwitchFront</b></a>()
<dd>  Sets  the front buffer as active : we are drawing into it.
 <dt> o 
    <a href="#SwitchFrontLeft()"><b>SwitchFrontLeft</b></a>()
<dd>  Sets the left front buffer as active when working in stereo mode: we are drawing into it.
 <dt> o 
    <a href="#SwitchFrontRight()"><b>SwitchFrontRight</b></a>()
<dd>  Sets the right front buffer as active when working in stereo mode: we are drawing into it.
 <dt> o 
    <a href="#ViewMode(int)"><b>ViewMode</b></a>(int)
<dd>  Returns whether or not the given mode is active.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATSupport"></a><a name="CATSupport(int,int,void*)"></a> <dt> o <b>CATSupport</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATSupport</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>width</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>height</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>display</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the class from a width and an height.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> width</tt>
   <dd>  pixel width.
 </dd>
    <dt><tt> height</tt>
   <dd>  pixelheight.
 </dd>
    <dt><tt> display</tt>
   <dd>  diplay X. Must be NULL on WINDOWS.</dd>
</dl>
</dl>
</dl>
<a name="CATSupport"></a><a name="CATSupport(CATSupport&amp;)"></a> <dt> o <b>CATSupport</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATSupport</b>(<td> const <script type="text/javascript"> activateLink('CATSupport','CATSupport&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy Constructor.
</dl>
<a name="~CATSupport"></a><a name="~CATSupport()"></a> <dt> o <b>~CATSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATSupport</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddClippingPlane"></a><a name="AddClippingPlane(int,float*,float*,int)"></a> <dt> o <b>AddClippingPlane</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddClippingPlane</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbPlanes</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float*')</script> <td><tt>iNnormal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCappingPlaneSeen</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a clipping plane(you cannot define more than six clipping planes).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbPlanes</tt>
   <dd>  number of planes.
 </dd>
    <dt><tt> iPoint</tt>
   <dd> array of 3x<tt>iNbPlanes</tt> of coordinates. Each (x,y,z) represents a point belonging
 to a clipping plane. And there is only one point per plane.
 </dd>
    <dt><tt> iNnormal</tt>
   <dd> array of 3x<tt>iNbPlanes</tt> of coordinates. Each (x,y,z) represents a normal to one plane.
  And there is only one normal per plane.
 </dd>
    <dt><tt> iCappingPlaneSeen</tt>
   <dd>  <ol>
  <li> 0 = intersection between clipping planes and volumic graphical representations is not filled in </li>
  <li> 1 = intersection between clipping planes and volumic graphical representations is filled in </li>
 </ol></dd>
</dl>
</dl>
</dl>
<a name="AddViewpoint"></a><a name="AddViewpoint(CATViewpoint*,int)"></a> <dt> o <b>AddViewpoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddViewpoint</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iVpt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iPlace</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a given viewpoint.
 

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVpt</tt>
   <dd> the viewpoint.
 </dd>
    <dt><tt> iPlace</tt>
   <dd> integer value 
<ol>
<li> 1 = Foreground </li>
<li> 0 = Background </li>
</ol></dd>
</dl>
</dl>
</dl>
<a name="Clear"></a><a name="Clear()"></a> <dt> o <b>Clear</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Clear</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Clears the screen.
</dl>
<a name="Draw"></a><a name="Draw(void)"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Draw</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Draws the scene.
</dl>
<a name="GetAntiAliasingMode"></a><a name="GetAntiAliasingMode()"></a> <dt> o <b>GetAntiAliasingMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetAntiAliasingMode</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns whether or not the antialiasing mode for lines is active.

<dl>
  <dt> <b>Returns:</b> 
  <dd>  integer<ol>
 <li> 0 = antialiasing is off</li>
 <li> 1 = antialiasing is on </li>
</ol>
</dl>
</dl>
<a name="GetBackgroundColor"></a><a name="GetBackgroundColor(float*,float*,float*)"></a> <dt> o <b>GetBackgroundColor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetBackgroundColor</b>(<td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oG</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oB</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retreives the background color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> oG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> oB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="GetColorMap"></a><a name="GetColorMap()"></a> <dt> o <b>GetColorMap</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATColorMap','inline CATColorMap *')</script>  <b>GetColorMap</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the indexed color map. 
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATColorMap','');return false">CATColorMap</a>
</dl>
</dl>
<a name="GetCullingPrecision"></a><a name="GetCullingPrecision()"></a> <dt> o <b>GetCullingPrecision</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetCullingPrecision</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the minimum pixel size.
</dl>
<a name="GetDefaultMaterialProperties"></a><a name="GetDefaultMaterialProperties(float&amp;,float&amp;,float&amp;)"></a> <dt> o <b>GetDefaultMaterialProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetDefaultMaterialProperties</b>(<td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oDiffAmbCoef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oSpecCoef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oShininess</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retreives default material properties.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDiffAmbCoef</tt>
   <dd> the diffuse and ambient coefficient.
</dd>
    <dt><tt> oSpecCoef</tt>
   <dd> the specular coefficient.
</dd>
    <dt><tt> oShininess</tt>
   <dd> the shininess.</dd>
</dl>
</dl>
</dl>
<a name="GetGlobalAmbientLight"></a><a name="GetGlobalAmbientLight(float*,float*,float*)"></a> <dt> o <b>GetGlobalAmbientLight</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetGlobalAmbientLight</b>(<td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oG</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oB</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Retreives the global ambient light color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> oG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> oB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="GetMMInSupportUnit"></a><a name="GetMMInSupportUnit()"></a> <dt> o <b>GetMMInSupportUnit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','inline float')</script>  <b>GetMMInSupportUnit</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the millimeter size in pixel size.
</dl>
<a name="GetRatioWH"></a><a name="GetRatioWH()"></a> <dt> o <b>GetRatioWH</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','inline float')</script>  <b>GetRatioWH</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the ration heigth/width of one pixel.
</dl>
<a name="GetSagPrecision"></a><a name="GetSagPrecision()"></a> <dt> o <b>GetSagPrecision</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','inline float')</script>  <b>GetSagPrecision</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the sag precision.
</dl>
<a name="GetStereoMode"></a><a name="GetStereoMode(int*,float*)"></a> <dt> o <b>GetStereoMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetStereoMode</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float*')</script> <td><tt>oEyeGap</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retreives the stereo mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode<ol></tt>
   <dd>
<li>0 = off </li>
<li>1 = manual </li>
<li>2 = automatic </li>
</ol>
 </dd>
    <dt><tt> oEyeGap</tt>
   <dd>  gap between the eyes (model unit). Avaible only in manual mode.</dd>
</dl>
</dl>
</dl>
<a name="GetViewMode"></a><a name="GetViewMode(void)"></a> <dt> o <b>GetViewMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetViewMode</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the current viewer mode of the current  CATSupport.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATViewModeType','');return false">CATViewModeType</a>
</dl>
</dl>
<a name="GetWidthAndHeight"></a><a name="GetWidthAndHeight(float&amp;,float&amp;)"></a> <dt> o <b>GetWidthAndHeight</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>GetWidthAndHeight</b>(<td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oWidth</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oHeight</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retreives the heigth and width of the current  CATSupport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oWidth</tt>
   <dd> the width.
 </dd>
    <dt><tt> oHeight</tt>
   <dd> the height.</dd>
</dl>
</dl>
</dl>
<a name="IsAmbientActivated"></a><a name="IsAmbientActivated()"></a> <dt> o <b>IsAmbientActivated</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline unsigned int')</script>  <b>IsAmbientActivated</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns whether or not ambient light is active.

<dl>
  <dt> <b>Returns:</b> 
  <dd>  integer<ol>
<li> 1 = ambient ligh is active </li>
<li> 0 = ambient ligh is not active </li>
</ol>
</dl>
</dl>
<a name="IsClipped"></a><a name="IsClipped(float**,float**,int*)"></a> <dt> o <b>IsClipped</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>IsClipped</b>(<td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float**')</script> <td><tt>oNormal</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oCappingPlaneSeen</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of clipping planes.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint</tt>
   <dd> pointer to an array of 3x<tt>iNbPlanes</tt> of coordinates. Each (x,y,z) represents a point belonging
 to a clipping plane. And there is only one point per plane.
 </dd>
    <dt><tt> oNnormal</tt>
   <dd>  pointer to an array of 3x<tt>iNbPlanes</tt> of coordinates. Each (x,y,z) represents a normal to one plane.
  And there is only one normal per plane.
 </dd>
    <dt><tt> oCappingPlaneSeen</tt>
   <dd>  <ol>
  <li> 0 = intersection between clipping planes and volumic graphical representations is not filled in </li>
  <li> 1 = intersection between clipping planes and volumic graphical representations is filled in </li>
 </ol></dd>
</dl>
</dl>
</dl>
<a name="IsFogOn"></a><a name="IsFogOn()"></a> <dt> o <b>IsFogOn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>IsFogOn</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns whether or not fog is active.

<dl>
  <dt> <b>Returns:</b> 
  <dd>  integer<ol>
<li> 1 = fog is active </li>
<li> 0 = fog is not active </li>
</ol>
</dl>
</dl>
<a name="RemoveClippingPlane"></a><a name="RemoveClippingPlane()"></a> <dt> o <b>RemoveClippingPlane</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveClippingPlane</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets all the clipping planes.
</dl>
<a name="RemoveViewpoint"></a><a name="RemoveViewpoint(CATViewpoint*)"></a> <dt> o <b>RemoveViewpoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveViewpoint</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iVpt</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removess a given viewpoint.
 

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVpt</tt>
   <dd> the viewpoint.</dd>
</dl>
</dl>
</dl>
<a name="SetAmbientActivation"></a><a name="SetAmbientActivation(unsigned int)"></a> <dt> o <b>SetAmbientActivation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAmbientActivation</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iOnOff</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Activates or Deactivates the global ambient light.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnOff</tt>
   <dd> 0 = off.
 1 = on.</dd>
</dl>
</dl>
</dl>
<a name="SetAntiAliasingMode"></a><a name="SetAntiAliasingMode(int)"></a> <dt> o <b>SetAntiAliasingMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetAntiAliasingMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAntialiasingMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the antialiasing mode for lines.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAntialiasingMode<ol></tt>
   <dd>
 <li> 0 = antialiasing is off</li>
 <li> 1 = antialiasing is on </li>
</ol></dd>
</dl>
</dl>
</dl>
<a name="SetBackgroundColor"></a><a name="SetBackgroundColor(float,float,float)"></a> <dt> o <b>SetBackgroundColor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBackgroundColor</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iR</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iG</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iB</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the background color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> iG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> iB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="SetCullingPrecision"></a><a name="SetCullingPrecision(int)"></a> <dt> o <b>SetCullingPrecision</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetCullingPrecision</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCullingPrecision</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the minimum pixel size for objects to be drawn. 
<br><b>Role</b>:
 Objects which size is less than the <tt> iCullingPrecision</tt> are not drawn.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCullingPrecision</tt>
   <dd> the minimum pixel size for objects to be drawn.</dd>
</dl>
</dl>
</dl>
<a name="SetDefaultMaterialProperties"></a><a name="SetDefaultMaterialProperties(float,float,float)"></a> <dt> o <b>SetDefaultMaterialProperties</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetDefaultMaterialProperties</b>(<td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iDiffAmbCoef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSpecCoef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iShininess</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets default material properties.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDiffAmbCoef</tt>
   <dd> the diffuse and ambient coefficient.
</dd>
    <dt><tt> iSpecCoef</tt>
   <dd> the specular coefficient.
</dd>
    <dt><tt> iShininess</tt>
   <dd> the shininess.</dd>
</dl>
</dl>
</dl>
<a name="SetFogMode"></a><a name="SetFogMode(int)"></a> <dt> o <b>SetFogMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetFogMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFogMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the fog mode.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFogMode<ol></tt>
   <dd>
 <li> 0 = fog is off</li>
 <li> 1= fog is on </li>
</ol></dd>
</dl>
</dl>
</dl>
<a name="SetGlobalAmbientLight"></a><a name="SetGlobalAmbientLight(float,float,float)"></a> <dt> o <b>SetGlobalAmbientLight</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetGlobalAmbientLight</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iR</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iG</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iB</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the global ambient light color.

<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iR</tt>
   <dd> the red composant color.
</dd>
    <dt><tt> iG</tt>
   <dd> the green composant color.
</dd>
    <dt><tt> iB</tt>
   <dd> the blue composant color.</dd>
</dl>
</dl>
</dl>
<a name="SetLightViewFitting"></a><a name="SetLightViewFitting(CATVisLightViewFittingMode,CAT3DViewpoint*)"></a> <dt> o <b>SetLightViewFitting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLightViewFitting</b>(<td> const <script type="text/javascript"> activateLink('CATVisLightViewFittingMode','CATVisLightViewFittingMode')</script> <td><tt>i_lightViewFitting</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CAT3DViewpoint','CAT3DViewpoint*')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="SetMMInSupportUnit"></a><a name="SetMMInSupportUnit(float)"></a> <dt> o <b>SetMMInSupportUnit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetMMInSupportUnit</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets one millimeter size in pixel size.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSize</tt>
   <dd> the pixel size .</dd>
</dl>
</dl>
</dl>
<a name="SetRatioWH"></a><a name="SetRatioWH(float)"></a> <dt> o <b>SetRatioWH</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetRatioWH</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iRatio</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the ratio heigth/width of one pixel.
<br><b>Role</b>:
 it is useful when pixel is not a squarre. It is screen-dependant.
</dl>
<a name="SetSagPrecision"></a><a name="SetSagPrecision(float)"></a> <dt> o <b>SetSagPrecision</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetSagPrecision</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iSagPrecision</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the sag in pixel size.
<br><b>Role</b>:
 sag is used for determining which level of details to use.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSagPrecision</tt>
   <dd> the sagprecision.
</dd>
</dl>
</dl>
</dl>
<a name="SetStereoMode"></a><a name="SetStereoMode(int,float)"></a> <dt> o <b>SetStereoMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetStereoMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iEyeGap</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sets the stereo mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode<ol></tt>
   <dd>
<li>0 = off </li>
<li>1 = manual </li>
<li>2 = automatic </li>
</ol>
 </dd>
    <dt><tt> iEyeGap</tt>
   <dd>  gap between the eyes (model unit). Avaible only in manual mode.</dd>
</dl>
</dl>
</dl>
<a name="SetViewMode"></a><a name="SetViewMode(int,int)"></a> <dt> o <b>SetViewMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetViewMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iActive</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the viewmode for viewer enclosed in the current CATSupport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode:</tt>
   <dd>  The viewer mode.
  <b>Legal values</b>: </dd>
<a href="#" onClick="openLink('CATViewModeType','');return false">CATViewModeType</a>  
    <dt><tt> iActive</tt>
   <dd> 0 = off.
 1 = on.
</dd>
</dl>
</dl>
</dl>
<a name="SetWidthAndHeight"></a><a name="SetWidthAndHeight(float,float)"></a> <dt> o <b>SetWidthAndHeight</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','inline void')</script>  <b>SetWidthAndHeight</b>(<td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iWidth</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float')</script> <td><tt>iHeight</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the heigth and width of the current  CATSupport.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWidth</tt>
   <dd> the width.
 </dd>
    <dt><tt> iHeight</tt>
   <dd> the height.</dd>
</dl>
</dl>
</dl>
<a name="Swap"></a><a name="Swap()"></a> <dt> o <b>Swap</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Swap</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Swaps back buffer to front buffer.
</dl>
<a name="SwitchBack"></a><a name="SwitchBack()"></a> <dt> o <b>SwitchBack</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchBack</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the back buffer as active : we are drawing into it.
</dl>
<a name="SwitchBackLeft"></a><a name="SwitchBackLeft()"></a> <dt> o <b>SwitchBackLeft</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchBackLeft</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the left back buffer as active when working in stereo mode: we are drawing into it.
</dl>
<a name="SwitchBackRight"></a><a name="SwitchBackRight()"></a> <dt> o <b>SwitchBackRight</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchBackRight</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the right back buffer as active when working in stereo mode: we are drawing into it.
</dl>
<a name="SwitchFront"></a><a name="SwitchFront()"></a> <dt> o <b>SwitchFront</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchFront</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets  the front buffer as active : we are drawing into it.
<br><b>Role</b>: when you are in furtive mode you draw graphical representations
 into the front buffer.
</dl>
<a name="SwitchFrontLeft"></a><a name="SwitchFrontLeft()"></a> <dt> o <b>SwitchFrontLeft</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchFrontLeft</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the left front buffer as active when working in stereo mode: we are drawing into it.
</dl>
<a name="SwitchFrontRight"></a><a name="SwitchFrontRight()"></a> <dt> o <b>SwitchFrontRight</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwitchFrontRight</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the right front buffer as active when working in stereo mode: we are drawing into it.
</dl>
<a name="ViewMode"></a><a name="ViewMode(int)"></a> <dt> o <b>ViewMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>ViewMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns whether or not the given mode is active.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> the viewer mode.
 <br><b>Legal values</b>: </dd>
<a href="#" onClick="openLink('CATViewModeType','');return false">CATViewModeType</a>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSupport.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATViz</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
