<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ManufacturingInterfaces Interface CATIMfgSetup</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ManufacturingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMfgSetup','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgSetup','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMfgSetup','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgSetup','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ManufacturingInterfaces Interface CATIMfgSetup</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMfgSetup_36935','CATIMfgSetup','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMfgSetup</b>
</p>
<p>
<b><i> Interface to manage Part Operation (Setup).</i></b><br>

 <b>Role</b>: Manage the information related to the Part Operation object like associated
 resource, product and machining axis system.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetActualStockMode(int&amp;)"><b>GetActualStockMode</b></a>(int&amp;)
<dd>  Gets the actual stock computation mode.
 <dt> o 
    <a href="#GetAllChildren(CATClassId&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetAllChildren</b></a>(CATClassId&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the children of the product associated to the Part Operation.
 <dt> o 
    <a href="#GetContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetContext</b></a>(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 <dt> o 
    <a href="#GetHomePoint(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"><b>GetHomePoint</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)
<dd>  Gets the setup parameters defining the home point.
 <dt> o 
    <a href="#GetIPMMainBodies(CATILinkableObject_var&amp;,int)"><b>GetIPMMainBodies</b></a>(CATILinkableObject_var&amp;,int)
<dd>  Retrieves one In Process Model Body at a given position.
 <dt> o 
    <a href="#GetIPMMainBody(CATILinkableObject_var&amp;)"><b>GetIPMMainBody</b></a>(CATILinkableObject_var&amp;)
<dd>  Do not use.
 <dt> o 
    <a href="#GetMachine(CATBaseUnknown_var&amp;)"><b>GetMachine</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the machine on the Part Operation.
 <dt> o 
    <a href="#GetMachineAndContext(CATBaseUnknown_var&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetMachineAndContext</b></a>(CATBaseUnknown_var&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Retrieves the machine on the Part Operation and the transformation
 to switch from the absolute axis system to the machining axis sytem.
 <dt> o 
    <a href="#GetMachiningAxis(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningAxis</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Retrieves the Machining Axis System feature associated to the Part Operation.
 <dt> o 
    <a href="#GetMachiningAxisDefinition(CATMathAxis&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningAxisDefinition</b></a>(CATMathAxis&amp;,CATBaseUnknown_var&amp;)
<dd>  Retrieves the mathematical axis system associated to the Part Operation.
 <dt> o 
    <a href="#GetMachiningContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetMachiningContext</b></a>(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 <dt> o 
    <a href="#GetNumberOfIPMMainBodies(int&amp;)"><b>GetNumberOfIPMMainBodies</b></a>(int&amp;)
<dd>  Gets the number of In Process Model Bodies associated to the Part Operation.
 <dt> o 
    <a href="#GetOldProductInProductList(CATBaseUnknown_var&amp;)"><b>GetOldProductInProductList</b></a>(CATBaseUnknown_var&amp;)
<dd>  Do not use this method.
 <dt> o 
    <a href="#GetProduct(CATBaseUnknown_var&amp;)"><b>GetProduct</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the product associated to the Part Operation.
 <dt> o 
    <a href="#GetProductInProductList(CATBaseUnknown_var&amp;)"><b>GetProductInProductList</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the product associated to the Part Operation.
 <dt> o 
    <a href="#GetProductReference(CATBaseUnknown_var&amp;)"><b>GetProductReference</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the product associated to the Part Operation.
 <dt> o 
    <a href="#GetResource(CATBaseUnknown_var&amp;)"><b>GetResource</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the resource on the Part Operation.
 <dt> o 
    <a href="#GetRotaryPlanes(CATBaseUnknown_var&amp;)"><b>GetRotaryPlanes</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the rotary planes associated to the Part Operation.
 <dt> o 
    <a href="#GetSafetyPlane(CATBaseUnknown_var&amp;)"><b>GetSafetyPlane</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the safety plane associated to the Part Operation.
 <dt> o 
    <a href="#GetSafetyPlaneResult(CATMathPlane&amp;)"><b>GetSafetyPlaneResult</b></a>(CATMathPlane&amp;)
<dd>  Retrieves the mathematical definition of the safety plane associated to the Part Operation.
 <dt> o 
    <a href="#GetToolChangeLocation(CATMathPoint&amp;)"><b>GetToolChangeLocation</b></a>(CATMathPoint&amp;)
<dd>   Do not use.
 <dt> o 
    <a href="#GetToolChangeLocation(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"><b>GetToolChangeLocation</b></a>(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)
<dd>  Gets the setup parameters defining the Tool Change point.
 <dt> o 
    <a href="#GetToolChangeLocation(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"><b>GetToolChangeLocation</b></a>(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)
<dd>  Gets the mathematical definition of the Tool Change point.
 <dt> o 
    <a href="#GetTopPlaneDirectionInversion(int&amp;)"><b>GetTopPlaneDirectionInversion</b></a>(int&amp;)
<dd>  Gets the top plane direction inversion value.
 <dt> o 
    <a href="#GetTransitionPlanes(CATBaseUnknown_var&amp;)"><b>GetTransitionPlanes</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the transition planes associated to the Part Operation.
 <dt> o 
    <a href="#GetTraverseBoxPlanes(CATBaseUnknown_var&amp;)"><b>GetTraverseBoxPlanes</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the traverse box planes associated to the Part Operation.
 <dt> o 
    <a href="#InsertNewProgram(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>InsertNewProgram</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Creates and insert a Program in the Part Operation.
 <dt> o 
    <a href="#MoveProgramAfter(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"><b>MoveProgramAfter</b></a>(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)
<dd>  Moves a Program inside the Part Operation.
 <dt> o 
    <a href="#RemoveAllIPMMainBodies()"><b>RemoveAllIPMMainBodies</b></a>()
<dd>  Removes all the In Process Model Bodies.
 <dt> o 
    <a href="#RemoveIPMMainBodies(int)"><b>RemoveIPMMainBodies</b></a>(int)
<dd>  Removes an In Process Model Body at a given index.
 <dt> o 
    <a href="#RemoveIPMMainBodies(CATILinkableObject_var&amp;)"><b>RemoveIPMMainBodies</b></a>(CATILinkableObject_var&amp;)
<dd>  Removes an In Process Model Body.
 <dt> o 
    <a href="#RemoveMachine(CATBaseUnknown_var&amp;)"><b>RemoveMachine</b></a>(CATBaseUnknown_var&amp;)
<dd>  Removes the machine associated to the Part Operation.
 <dt> o 
    <a href="#RemoveResource(CATBaseUnknown_var&amp;)"><b>RemoveResource</b></a>(CATBaseUnknown_var&amp;)
<dd>  Removes the resource associated to the Part Operation.
 <dt> o 
    <a href="#SetActualStockMode(int)"><b>SetActualStockMode</b></a>(int)
<dd>  Sets the actual stock computation mode.
 <dt> o 
    <a href="#SetIPMMainBodies(CATILinkableObject_var&amp;,int)"><b>SetIPMMainBodies</b></a>(CATILinkableObject_var&amp;,int)
<dd>  Associates one In Process Model Body to the Part Operation.
 <dt> o 
    <a href="#SetMachine(CATBaseUnknown_var&amp;)"><b>SetMachine</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a machine to the Part Operation.
 <dt> o 
    <a href="#SetMachiningAxis(CATBaseUnknown_var&amp;)"><b>SetMachiningAxis</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a Machining Axis System feature to the Part Operation.
 <dt> o 
    <a href="#SetProduct(CATBaseUnknown_var&amp;)"><b>SetProduct</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a product to the Part Operation.
 <dt> o 
    <a href="#SetResource(CATBaseUnknown_var&amp;)"><b>SetResource</b></a>(CATBaseUnknown_var&amp;)
<dd>  Associates a resource to the Part Operation.
 <dt> o 
    <a href="#SetTopPlaneDirectionInversion(int)"><b>SetTopPlaneDirectionInversion</b></a>(int)
<dd>  Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetActualStockMode"></a><a name="GetActualStockMode(int&amp;)"></a> <dt> o <b>GetActualStockMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetActualStockMode</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Gets the actual stock computation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd> the actual stock mode.        <br><b>Legal values</b>: 1 if the stock is recomputed automatically for each Machining Operation,
                                 0 otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetAllChildren"></a><a name="GetAllChildren(CATClassId&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAllChildren</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAllChildren</b>(<td> const <script type="text/javascript"> activateLink('CATClassId','CATClassId&amp;')</script> <td><tt>iInterName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the children of the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInterName</tt>
   <dd> To get only children answering to interface iInterName </dd>
    <dt><tt> oList</tt>
   <dd> The result list.</dd>
</dl>
</dl>
</dl>
<a name="GetContext"></a><a name="GetContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContext</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromAbsoluteToSetup</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromSetupToAbsolute</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromAbsoluteToSetup</tt>
   <dd> The computed mathematical transformation to switch from                             the absolute axis system to the machining axis system
 </dd>
    <dt><tt> oFromSetupToAbsolute</tt>
   <dd> The computed mathematical transformation to switch from                             the machining axis system to the absolute axis system
 </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathTransformation','');return false">CATMathTransformation</a>
</dl>
</dl>
<a name="GetHomePoint"></a><a name="GetHomePoint(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetHomePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHomePoint</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oHomePointXYZListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oHomePointIJKListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUseMachineHomePoint</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Gets the setup parameters defining the home point.
 WARNING : The values of these parameters are defined in the Part Operation axis system.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHomePointXYZListParms</tt>
   <dd>            List of 3 </dd>
<a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a> refering to the X, Y, Z coordinates            of home point.     
 
    <dt><tt> oHomePointIJKListParms</tt>
   <dd>            List of 3 </dd>
<a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a> refering to the I, J, K coordinates            of tool axis vector on the home point.     
 
    <dt><tt> oUseMachineHomePoint</tt>
   <dd>            TRUE if the parameters have been copied from the machine, 
            FALSE otherwise.</dd>
</dl>
</dl>
</dl>
<a name="GetIPMMainBodies"></a><a name="GetIPMMainBodies(CATILinkableObject_var&amp;,int)"></a> <dt> o <b>GetIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIPMMainBodies</b>(<td><script type="text/javascript"> activateLink('CATILinkableObject_var','CATILinkableObject_var&amp;')</script> <td><tt>oBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves one In Process Model Body at a given position.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBody</tt>
   <dd> The retrieved body. </dd>
    <dt><tt> iIndex</tt>
   <dd> The position where oBody is        <br><b>Legal values</b>: This position must be between 1 and the number of
                                 bodies in the list.
                             <br>If 0, .</dd>
</dl>
</dl>
</dl>
<a name="GetIPMMainBody"></a><a name="GetIPMMainBody(CATILinkableObject_var&amp;)"></a> <dt> o <b>GetIPMMainBody</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIPMMainBody</b>(<td><script type="text/javascript"> activateLink('CATILinkableObject_var','CATILinkableObject_var&amp;')</script> <td><tt>oBody</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Do not use. Use 
<a href="#" onClick="openLink('','GetIPMMainBodies');return false">GetIPMMainBodies</a> instead.
</dl>
<a name="GetMachine"></a><a name="GetMachine(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachine</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachine</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the machine on the Part Operation.
 There can be only one machine per Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachine</tt>
   <dd> The machine associated to the Part Operation. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_FALSE if no machine is associated to the Part Operation.
</dl>
</dl>
<a name="GetMachineAndContext"></a><a name="GetMachineAndContext(CATBaseUnknown_var&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachineAndContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachineAndContext</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromAbsoluteToSetup</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the machine on the Part Operation and the transformation
 to switch from the absolute axis system to the machining axis sytem.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachine</tt>
   <dd> The machine associated to the Part Operation. </dd>
    <dt><tt> oFromAbsoluteToSetup</tt>
   <dd> The computed mathematical transformation to switch from                             the absolute axis system to the machining axis system
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_FALSE if no machine is associated to the Part Operation.
</dl>
</dl>
<a name="GetMachiningAxis"></a><a name="GetMachiningAxis(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningAxis</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMachiningAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Machining Axis System feature associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachiningAxis</tt>
   <dd> The associated Machining Axis System </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value.</dd>
</dl>
</dl>
</dl>
<a name="GetMachiningAxisDefinition"></a><a name="GetMachiningAxisDefinition(CATMathAxis&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningAxisDefinition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningAxisDefinition</b>(<td><script type="text/javascript"> activateLink('CATMathAxis','CATMathAxis&amp;')</script> <td><tt>oMachiningAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mathematical axis system associated to the Part Operation.
 This is the mathematical definition of the Machining Axis System.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMachiningAxis</tt>
   <dd> The associated mathematical axis system </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathAxis','');return false">CATMathAxis</a>
</dl>
</dl>
<a name="GetMachiningContext"></a><a name="GetMachiningContext(CATMathTransformation&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetMachiningContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMachiningContext</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromAbsoluteToMachiningAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oFromMachiningAxisToAbsolute</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iSpindle</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the mathematical transformations to switch from the machining axis system
 to the absolute axis sytem and vice versa.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFromAbsoluteToMachiningAxis</tt>
   <dd> The computed mathematical transformation to switch from                                     the absolute axis system to the machining axis system
 </dd>
    <dt><tt> oFromMachiningAxisToAbsolute</tt>
   <dd> The computed mathematical transformation to switch from                                     the machining axis system to the absolute axis system
 </dd>
    <dt><tt> iSpindle</tt>
   <dd> Do not use this parameter: keep the default value. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathTransformation','');return false">CATMathTransformation</a>
</dl>
</dl>
<a name="GetNumberOfIPMMainBodies"></a><a name="GetNumberOfIPMMainBodies(int&amp;)"></a> <dt> o <b>GetNumberOfIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumberOfIPMMainBodies</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of In Process Model Bodies associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd> The number of In Process Model Bodies</dd>
</dl>
</dl>
</dl>
<a name="GetOldProductInProductList"></a><a name="GetOldProductInProductList(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetOldProductInProductList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOldProductInProductList</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Do not use this method. Prefer use method: GetProductInProductList
</dl>
<a name="GetProduct"></a><a name="GetProduct(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetProduct</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProduct</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product.             If we are in File Based context, oProduct is a reference
             If we are in Manufacturing Hub context, oProduct is an instance</dd>
</dl>
</dl>
</dl>
<a name="GetProductInProductList"></a><a name="GetProductInProductList(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetProductInProductList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductInProductList</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product. It is an instance</dd>
</dl>
</dl>
</dl>
<a name="GetProductReference"></a><a name="GetProductReference(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetProductReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetProductReference</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProduct</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the product associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProduct</tt>
   <dd> The associated product. It is a reference.</dd>
</dl>
</dl>
</dl>
<a name="GetResource"></a><a name="GetResource(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetResource</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetResource</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oResource</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the resource on the Part Operation.
 There can be only one resource per Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oResource</tt>
   <dd> The resource associated to the Part Operation. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_FALSE if no resource is associated to the Part Operation.
</dl>
</dl>
<a name="GetRotaryPlanes"></a><a name="GetRotaryPlanes(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetRotaryPlanes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRotaryPlanes</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oRotaryPlanes</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the rotary planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRotaryPlanes</tt>
   <dd> The rotary planes.        Use </dd>
<a href="#" onClick="openLink('CATIMfgAgregate','');return false">CATIMfgAgregate</a> on oRotaryPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the rotary planes is not defined.
</dl>
</dl>
</dl>
<a name="GetSafetyPlane"></a><a name="GetSafetyPlane(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetSafetyPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSafetyPlane</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oSafetyPlane</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSafetyPlane</tt>
   <dd> The safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined.
</dl>
</dl>
<a name="GetSafetyPlaneResult"></a><a name="GetSafetyPlaneResult(CATMathPlane&amp;)"></a> <dt> o <b>GetSafetyPlaneResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSafetyPlaneResult</b>(<td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>oPlane</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mathematical definition of the safety plane associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPlane</tt>
   <dd> The mathematical safety plane. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the safety plane is not defined. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathPlane','');return false">CATMathPlane</a>
</dl>
</dl>
<a name="GetToolChangeLocation"></a><a name="GetToolChangeLocation(CATMathPoint&amp;)"></a> <dt> o <b>GetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
  Do not use. Use 
<a href="#" onClick="openLink('','GetToolChangeLocation');return false">GetToolChangeLocation</a> (CATMathPoint&,CATMathVector&,CATBoolean&,CATMathTransformation&) instead.
</dl>
<a name="GetToolChangeLocation"></a><a name="GetToolChangeLocation(CATListValCATBaseUnknown_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oToolChangeXYZListParms</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oFromMachine</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Gets the setup parameters defining the Tool Change point.
 <br><b>WARNING</b> : The values of these parameters are defined in the Part Operation axis system.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oToolChangeXYZListParms</tt>
   <dd>            List of 3 </dd>
<a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a> refering to the X, Y, Z coordinates            of tool change point.     
 
    <dt><tt> oFromMachine</tt>
   <dd>            TRUE if the parameters have been copied from the machine.
            In this case the tool length is NOT take into account in the point definition.
     <br>   FALSE otherwise, and the tool change point is the tip point.</dd>
</dl>
</dl>
</dl>
<a name="GetToolChangeLocation"></a><a name="GetToolChangeLocation(CATMathPoint&amp;,CATMathVector&amp;,CATBoolean&amp;,CATMathTransformation&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetToolChangeLocation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetToolChangeLocation</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oTCPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oTCAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oFromMachine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>oTheLocXform</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iToolChangeOperation</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Gets the mathematical definition of the Tool Change point.
 <br><b>WARNING</b> : The values of these parameters are defined in absolute axis system.
 Units are mm.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTCPoint</tt>
   <dd>            The mathematical tool change point. This is the tool mounting point if 
            oFromMachine is TRUE, the tool tip point otherwise.     
 </dd>
    <dt><tt> oTCAxis</tt>
   <dd>            The tool axis vector on the tool change point.
 </dd>
    <dt><tt> oFromMachine</tt>
   <dd>            TRUE if the parameters have been copied from the machine,
            The tool length is then NOT take into account in the point definition,
            and oTheLocXform is valuated.
     <br>   FALSE otherwise. The tool change point is then the tip point.
 </dd>
    <dt><tt> oTheLocXform</tt>
   <dd>            Transformation in order to compute the tip point with the tool length.
            This is the Identity if oFromMachine is FALSE.
 </dd>
    <dt><tt> iToolChangeOperation</tt>
   <dd>            Tool change operation defining the context (optional).
            Only used if oFromMachine is TRUE.
            If valued : the returned location takes the contextual position of the machine into account.</dd>
</dl>
</dl>
</dl>
<a name="GetTopPlaneDirectionInversion"></a><a name="GetTopPlaneDirectionInversion(int&amp;)"></a> <dt> o <b>GetTopPlaneDirectionInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTopPlaneDirectionInversion</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Gets the top plane direction inversion value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction has been inverted, 0 otherwise</dd>
</dl>
</dl>
</dl>
<a name="GetTransitionPlanes"></a><a name="GetTransitionPlanes(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetTransitionPlanes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTransitionPlanes</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oTransitionPlanes</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the transition planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTransitionPlanes</tt>
   <dd> The transition planes.        Use </dd>
<a href="#" onClick="openLink('CATIMfgAgregate','');return false">CATIMfgAgregate</a> on oTransitionPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the transition planes is not defined.
</dl>
</dl>
</dl>
<a name="GetTraverseBoxPlanes"></a><a name="GetTraverseBoxPlanes(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetTraverseBoxPlanes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTraverseBoxPlanes</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oTraverseBoxPlanes</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the traverse box planes associated to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTraverseBoxPlanes</tt>
   <dd> The traverse box planes.        Use </dd>
<a href="#" onClick="openLink('CATIMfgAgregate','');return false">CATIMfgAgregate</a> on oTraverseBoxPlanes to access each plane. 
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if the traverse box planes is not defined.
</dl>
</dl>
</dl>
<a name="InsertNewProgram"></a><a name="InsertNewProgram(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>InsertNewProgram</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertNewProgram</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oProgram</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iInsertionLevel</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates and insert a Program in the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oProgram</tt>
   <dd> The new created Program </dd>
    <dt><tt> iInsertionLevel</tt>
   <dd> The Program after which the new program is inserted.                        If NULL_var, the Program is inserted at the beginning of the Part Operation
                        (default behaviour).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL If the insertion program does not belong to the Part Operation.<br>         S_OK, if the program has been correctly created.
</dl>
</dl>
<a name="MoveProgramAfter"></a><a name="MoveProgramAfter(CATBaseUnknown_var&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>MoveProgramAfter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>MoveProgramAfter</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iProgramToMove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iInsertionLevel</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Moves a Program inside the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProgramToMove</tt>
   <dd> The Program to be moved </dd>
    <dt><tt> iInsertionLevel</tt>
   <dd> The Program after which the program is moved.                        If NULL_var, the Program is moved at the beginning of the Part Operation
                        (default behaviour).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL If the program to move or the insertion program do not belong to the Part Operation.<br>         S_OK, if the program has been correctly moved.
</dl>
</dl>
<a name="RemoveAllIPMMainBodies"></a><a name="RemoveAllIPMMainBodies()"></a> <dt> o <b>RemoveAllIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllIPMMainBodies</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes all the In Process Model Bodies.
</dl>
<a name="RemoveIPMMainBodies"></a><a name="RemoveIPMMainBodies(int)"></a> <dt> o <b>RemoveIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveIPMMainBodies</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes an In Process Model Body at a given index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The position at which the body is to be removed        <br><b>Legal values</b>: This position must be between one and the number
                                 of bodies in the list.</dd>
</dl>
</dl>
</dl>
<a name="RemoveIPMMainBodies"></a><a name="RemoveIPMMainBodies(CATILinkableObject_var&amp;)"></a> <dt> o <b>RemoveIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveIPMMainBodies</b>(<td> const <script type="text/javascript"> activateLink('CATILinkableObject_var','CATILinkableObject_var&amp;')</script> <td><tt>ispIPMMainBodyToRemove</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes an In Process Model Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ispIPMMainBodyToRemove</tt>
   <dd> The body to be removed </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_FALSE if there is no In Process Body, or if ispIPMMainBodyToRemove is not in the list.
</dl>
</dl>
<a name="RemoveMachine"></a><a name="RemoveMachine(CATBaseUnknown_var&amp;)"></a> <dt> o <b>RemoveMachine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveMachine</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMachine</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes the machine associated to the Part Operation.
 The machine is not removed from the document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMachine</tt>
   <dd> The removed machine. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_FAIL if iMachine is NULL_var.
</dl>
</dl>
<a name="RemoveResource"></a><a name="RemoveResource(CATBaseUnknown_var&amp;)"></a> <dt> o <b>RemoveResource</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveResource</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iResource</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes the resource associated to the Part Operation.
 The resource is also removed from the document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iResource</tt>
   <dd> The removed resource. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iResource is NULL_var.
</dl>
</dl>
<a name="SetActualStockMode"></a><a name="SetActualStockMode(int)"></a> <dt> o <b>SetActualStockMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetActualStockMode</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the actual stock computation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> the actual stock mode.        <br><b>Legal values</b>: 1 if the stock is to be recomputed automatically for each Machining Operation,
                                 0 otherwise.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iMode is different from 0 or 1.
</dl>
</dl>
<a name="SetIPMMainBodies"></a><a name="SetIPMMainBodies(CATILinkableObject_var&amp;,int)"></a> <dt> o <b>SetIPMMainBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetIPMMainBodies</b>(<td> const <script type="text/javascript"> activateLink('CATILinkableObject_var','CATILinkableObject_var&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Associates one In Process Model Body to the Part Operation.
 Several In Process Bosies can be associated, they are stored in a list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBody</tt>
   <dd> The body to be added to the In Process Bodies list. </dd>
    <dt><tt> iIndex</tt>
   <dd> The position where iBody is to be added        <br><b>Legal values</b>: This position must be between 0 and the number of
                                 bodies in the list.
                             <br>If 0 (default value), the body is appended at the end of the list.</dd>
</dl>
</dl>
</dl>
<a name="SetMachine"></a><a name="SetMachine(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetMachine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMachine</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMachine</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Associates a machine to the Part Operation.
 The previously associated machine is removed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMachine</tt>
   <dd> The machine to be associated. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iMachine is NULL_var.
</dl>
</dl>
<a name="SetMachiningAxis"></a><a name="SetMachiningAxis(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetMachiningAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMachiningAxis</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iMachiningAxis</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Associates a Machining Axis System feature to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMachiningAxis</tt>
   <dd> The Machining Axis System to be associated</dd>
</dl>
</dl>
</dl>
<a name="SetProduct"></a><a name="SetProduct(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetProduct</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetProduct</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iProduct</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Associates a product to the Part Operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProduct</tt>
   <dd> The product to be associated.                 If iProduct is NULL_var, the previously associated product is removed.</dd>
</dl>
</dl>
</dl>
<a name="SetResource"></a><a name="SetResource(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetResource</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetResource</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iResource</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Associates a resource to the Part Operation.
 The previously associated resource is removed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iResource</tt>
   <dd> The resource to be associated. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iResource is NULL_var or not a Delmia machine.
</dl>
</dl>
<a name="SetTopPlaneDirectionInversion"></a><a name="SetTopPlaneDirectionInversion(int)"></a> <dt> o <b>SetTopPlaneDirectionInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTopPlaneDirectionInversion</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the top plane direction inversion value in order to determine the traverse box position
 relatively to the top plane.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>         <br><b>Legal values</b>: 1 if the top plane direction is to be inverted, 0 otherwise
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_INVALIDARG if iMode is different from 0 or 1.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMfgSetup.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MfgItfEnv</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
