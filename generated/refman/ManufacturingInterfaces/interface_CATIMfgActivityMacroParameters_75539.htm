<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ManufacturingInterfaces Interface CATIMfgActivityMacroParameters</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ManufacturingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMfgActivityMacroParameters','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgActivityMacroParameters','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMfgActivityMacroParameters','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgActivityMacroParameters','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ManufacturingInterfaces Interface CATIMfgActivityMacroParameters</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMfgActivityMacroParameters_75539','CATIMfgActivityMacroParameters','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMfgActivityMacroParameters</b>
</p>
<p>
<b><i>    Interface dedicated to manufacturing operation management with macros.</i></b><br>

 <b>Role</b>: This interface offers services to access macros from an operation<br></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetApproachMacroMotions(int&amp;,CATBaseUnknown_var&amp;)"><b>GetApproachMacroMotions</b></a>(int&amp;,CATBaseUnknown_var&amp;)
<dd>  Access to the approach motions of a macro of a given type on a operation.
 <dt> o 
    <a href="#GetClearanceCornerizedRadius(double&amp;)"><b>GetClearanceCornerizedRadius</b></a>(double&amp;)
<dd>  Returns clearance radius if clearance is cornerized.
 <dt> o 
    <a href="#GetClearanceMacroMotions(CATBaseUnknown_var&amp;)"><b>GetClearanceMacroMotions</b></a>(CATBaseUnknown_var&amp;)
<dd>  Access to the clearance macro motions on a operation.
 <dt> o 
    <a href="#GetGlobalApproachMacroMotions(CATBaseUnknown_var&amp;)"><b>GetGlobalApproachMacroMotions</b></a>(CATBaseUnknown_var&amp;)
<dd>  Access to the global approach macro motion (circular milling and thread milling).
 <dt> o 
    <a href="#GetGlobalRetractMacroMotions(CATBaseUnknown_var&amp;)"><b>GetGlobalRetractMacroMotions</b></a>(CATBaseUnknown_var&amp;)
<dd>  Access to the global retract macro motion (circular milling and thread milling).
 <dt> o 
    <a href="#GetRetractMacroMotions(int&amp;,CATBaseUnknown_var&amp;)"><b>GetRetractMacroMotions</b></a>(int&amp;,CATBaseUnknown_var&amp;)
<dd>  Access to the retract motions of a macro of a given type on a operation.
 <dt> o 
    <a href="#GetSafetyPlane(CATMathPlane&amp;)"><b>GetSafetyPlane</b></a>(CATMathPlane&amp;)
<dd>  Returns setup safety plane (use if clearance mode=Safety Plane).
 <dt> o 
    <a href="#IsActive(int&amp;,int&amp;)"><b>IsActive</b></a>(int&amp;,int&amp;)
<dd>  Determines wether a macro type on an operation is active or not.
 <dt> o 
    <a href="#IsClearanceCornerized(int&amp;)"><b>IsClearanceCornerized</b></a>(int&amp;)
<dd>  Determines wether the clearance on the operation is cornerized or not.
 <dt> o 
    <a href="#IsComplete(int&amp;,int&amp;)"><b>IsComplete</b></a>(int&amp;,int&amp;)
<dd>  Returns if a macro  or if all macros is/are complete or not on an operation.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetApproachMacroMotions"></a><a name="GetApproachMacroMotions(int&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetApproachMacroMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApproachMacroMotions</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iMacroType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotions</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Access to the approach motions of a macro of a given type on a operation. 
 Not used for Retract Macro and Clearance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>  <br><b>Legal values</b>:
  <dl>
  	<dt>  1:Approach       
      <dt>  2:Retract 
  	<dt>  3:ReturnOneLevel    
  	<dt>  4:ReturnTwoLevels          
  	<dt>  5:Linking     
  	<dt>  6:ReturnFinihPath  
  	<dt>  7:Clearance      
	</dl>
 </dd>
    <dt><tt> oMacroMotions</tt>
   <dd> The macro motions</dd>
</dl>
</dl>
</dl>
<a name="GetClearanceCornerizedRadius"></a><a name="GetClearanceCornerizedRadius(double&amp;)"></a> <dt> o <b>GetClearanceCornerizedRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClearanceCornerizedRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns clearance radius if clearance is cornerized.
</dl>
<a name="GetClearanceMacroMotions"></a><a name="GetClearanceMacroMotions(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetClearanceMacroMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClearanceMacroMotions</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotions</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Access to the clearance macro motions on a operation.
</dl>
<a name="GetGlobalApproachMacroMotions"></a><a name="GetGlobalApproachMacroMotions(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetGlobalApproachMacroMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalApproachMacroMotions</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotions</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Access to the global approach macro motion (circular milling and thread milling).
</dl>
<a name="GetGlobalRetractMacroMotions"></a><a name="GetGlobalRetractMacroMotions(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetGlobalRetractMacroMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGlobalRetractMacroMotions</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotions</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Access to the global retract macro motion (circular milling and thread milling).
</dl>
<a name="GetRetractMacroMotions"></a><a name="GetRetractMacroMotions(int&amp;,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetRetractMacroMotions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRetractMacroMotions</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iMacroType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oMacroMotions</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Access to the retract motions of a macro of a given type on a operation.
 Not used for Approach Macro and Clearance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>  <br><b>Legal values</b>:
  <dl>
  	<dt>  1:Approach       
      <dt>  2:Retract 
  	<dt>  3:ReturnOneLevel    
  	<dt>  4:ReturnTwoLevels          
  	<dt>  5:Linking     
  	<dt>  6:ReturnFinihPath  
  	<dt>  7:Clearance      
	</dl>
 </dd>
    <dt><tt> oMacroMotions</tt>
   <dd> The macro motions</dd>
</dl>
</dl>
</dl>
<a name="GetSafetyPlane"></a><a name="GetSafetyPlane(CATMathPlane&amp;)"></a> <dt> o <b>GetSafetyPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSafetyPlane</b>(<td><script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>oPlane</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns setup safety plane (use if clearance mode=Safety Plane).
</dl>
<a name="IsActive"></a><a name="IsActive(int&amp;,int&amp;)"></a> <dt> o <b>IsActive</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsActive</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iMacroType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oActive</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Determines wether a macro type on an operation is active or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>  <br><b>Legal values</b>:
  <dl>
  	<dt>  1:Approach       
      <dt>  2:Retract 
  	<dt>  3:ReturnOneLevel    
  	<dt>  4:ReturnTwoLevels          
  	<dt>  5:Linking     
  	<dt>  6:ReturnFinihPath  
  	<dt>  7:Clearance      
	</dl>
 </dd>
    <dt><tt> oActive</tt>
   <dd> <dl>
	 <dt> 0:not active  </li>
   <dt> 1:Active      </li>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="IsClearanceCornerized"></a><a name="IsClearanceCornerized(int&amp;)"></a> <dt> o <b>IsClearanceCornerized</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsClearanceCornerized</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oCornerized</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Determines wether the clearance on the operation is cornerized or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCornerized</tt>
   <dd> <dl>
   <li> 0:not cornerized  </li>
   <li> 1:cornerized      </li>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="IsComplete"></a><a name="IsComplete(int&amp;,int&amp;)"></a> <dt> o <b>IsComplete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsComplete</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iMacroType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oComplete</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns if a macro  or if all macros is/are complete or not on an operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>  <br><b>Legal values</b>:
  <dl>
  	<dt>  1:Approach       
      <dt>  2:Retract 
  	<dt>  3:ReturnOneLevel    
  	<dt>  4:ReturnTwoLevels          
  	<dt>  5:Linking     
  	<dt>  6:ReturnFinihPath  
  	<dt>  7:Clearance      
	</dl>
 </dd>
    <dt><tt> oComplete</tt>
   <dd> <dl>
	 <dt> 0:not complete  
   <dt> 1:complete      
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMfgActivityMacroParameters.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MfgItfEnv</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
