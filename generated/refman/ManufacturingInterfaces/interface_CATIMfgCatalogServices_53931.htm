<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ManufacturingInterfaces Interface CATIMfgCatalogServices</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ManufacturingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMfgCatalogServices','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgCatalogServices','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMfgCatalogServices','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfgCatalogServices','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ManufacturingInterfaces Interface CATIMfgCatalogServices</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMfgCatalogServices_53931','CATIMfgCatalogServices','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMfgCatalogServices</b>
</p>
<p>
<b><i> Interface to manage (machining processes) components instantiation.</i></b><br>

 <br><b>Role</b>: CATIMfgCatalogServices has methods to 
 manage launch of (machining processes) components instantiation from catalog access .</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildMfgStartupMPPath(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>BuildMfgStartupMPPath</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Build the path from the Install path and the startup directory .
 <dt> o 
    <a href="#LaunchMPApplication(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)"><b>LaunchMPApplication</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)
<dd>  Launch the machining process instantiation from a catalog.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildMfgStartupMPPath"></a><a name="BuildMfgStartupMPPath(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>BuildMfgStartupMPPath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BuildMfgStartupMPPath</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oPath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Build the path from the Install path and the startup directory .
 <br><b>Role</b>: Build the path from the Install path and the startup directory
<br><b>Usage</b>:
 The path is built from the "CATInstallPath" environment variable and the startup directory
 "/startup/Manufacturing/Processes/". It is available under Windows and Unix platforms
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd> Catalog Name 
 For example : iCatalogName="MP_demo.catalog"
</dd>
</dl>
</dl>
</dl>
<a name="LaunchMPApplication"></a><a name="LaunchMPApplication(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATString&amp;)"></a> <dt> o <b>LaunchMPApplication</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LaunchMPApplication</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>PathDocument</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>PathChapter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>NomMPRef</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>MPKeyword</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Launch the machining process instantiation from a catalog.
 <br><b>Role</b>: Launch machining process instantiation in a CATCommand from a catalog
<br><b>Usage</b>:
  CATIMfgCatalogServices *piServices=NULL;

  CATString ClassName("CATMfgCatalogServices");
  CATInstantiateComponent (ClassName,
                            CATIMfgCatalogServices::ClassId(),
                            piServices);
   .....................

   HRESULT Res = piServices->LaunchMPApplication(const CATUnicodeString& iPathDocument, 
                              const CATUnicodeString& iPathChapter,
                              const CATUnicodeString& NomMPRef, const CATString& MPKeyword);

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathDocument</tt>
   <dd> Catalog Name including the path where the catalog is located 
 For example : "PathDocument = "C:\\install\\intel_a\\startup\\Manufacturing\\Processes\\MP_demo.catalog" under Windows
 </dd>
    <dt><tt> iPathChapter</tt>
   <dd> Path in the catalog where the machining process component is located
 For example :   iPathChapter = "Chapter.1/Drilling Processes"</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMfgCatalogServices.h</b><br>
If needed, your Imakefile.mk should include the module: <b>MfgItfEnv</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
