<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SketcherInterfaces Interface CATI2DHybConstraint</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SketcherInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATI2DHybConstraint','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DHybConstraint','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATI2DHybConstraint','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DHybConstraint','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SketcherInterfaces Interface CATI2DHybConstraint</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATI2DHybConstraint_37179','CATI2DHybConstraint','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATI2DHybConstraint</b>
</p>
<p>
<b><i> Interface to manage a hybrid constraint.</i></b><br>

 <b>Role</b>: This interface is used to manage a hybrid constraint.
 Hybrid constraints are used to constrained 2D and 3D geometries 
 when those 3D geometries are in an other document.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISketchElement','');return false">CATISketchElement</a>, <a href="#" onClick="openLink('CATISketchExternalReferences','');return false">CATISketchExternalReferences</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddConstraint()"><b>AddConstraint</b></a>()
<dd>  Plugs the hybrid constraint in the solver.
 <dt> o 
    <a href="#Analyse(CATRawCollint&amp;)"><b>Analyse</b></a>(CATRawCollint&amp;)
<dd>  Analyse the hybrid constraint and returns a list of POSSIBLE
 constraint types according to the referenced elements.
 <dt> o 
    <a href="#Get2DCstType(CAT2DCstType*)"><b>Get2DCstType</b></a>(CAT2DCstType*)
<dd>  Returns the kind of the hybrid constraint.
 <dt> o 
    <a href="#GetElements(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>GetElements</b></a>(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Retrieves the constrained geometries.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddConstraint"></a><a name="AddConstraint()"></a> <dt> o <b>AddConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddConstraint</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Plugs the hybrid constraint in the solver.
 The constrained 3D geometries are fixed in the dimensional system.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
</dl>
</dl>
<a name="Analyse"></a><a name="Analyse(CATRawCollint&amp;)"></a> <dt> o <b>Analyse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Analyse</b>(<td><script type="text/javascript"> activateLink('CATRawCollint','CATRawCollint&amp;')</script> <td><tt>oCstTypes</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Analyse the hybrid constraint and returns a list of POSSIBLE
 constraint types according to the referenced elements.
 The returned types are defined into CAT2DCstType.h.
 Only the logical constraint types are returned, but not the dimension types.

 Output:
  oCstTypes : List of possible 2D logical constraint types on the referenced elements.

</dl>
<a name="Get2DCstType"></a><a name="Get2DCstType(CAT2DCstType*)"></a> <dt> o <b>Get2DCstType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Get2DCstType</b>(<td><script type="text/javascript"> activateLink('CAT2DCstType','CAT2DCstType*')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the kind of the hybrid constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CAT2DCstType</tt>
   <dd> *oType</tt> [out] The expected 2D constraint type.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
</dl>
</dl>
<a name="GetElements"></a><a name="GetElements(CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetElements</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oFirstGeometries</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oSecondGeometries</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>oThirdGeometries</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the constrained geometries.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>CATListValCATBaseUnknown_var&</tt>
   <dd> oFirstGeometries</tt> [out] The first geometries
 </dd>
    <dt><tt> <tt>CATListValCATBaseUnknown_var&</tt>
   <dd> oSecondGeometries</tt> [out] The second geometries
 </dd>
    <dt><tt> <tt>CATListValCATBaseUnknown_var&</tt>
   <dd> oThirdGeometries</tt> [out] The third geometries
 3D geometries must be given as CATPCurves 
 in the absolute axis system coordinates of the sketch.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>HRESULT</tt>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATI2DHybConstraint.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
