<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SketcherInterfaces Interface CATI2DSplineCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SketcherInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATI2DSplineCurve','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DSplineCurve','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATI2DSplineCurve','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DSplineCurve','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SketcherInterfaces Interface CATI2DSplineCurve</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATI2DSplineCurve_33225','CATI2DSplineCurve','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATI2DSplineCurve</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddLastPoint(CATI2DPoint*,int)"><b>AddLastPoint</b></a>(CATI2DPoint*,int)
<dd>   Inserts control point in the spline at the last position.
 <dt> o 
    <a href="#Compute(int)"><b>Compute</b></a>(int)
<dd>   Computes the spline, according to the recorded control points.
 <dt> o 
    <a href="#GetClosure(int*)"><b>GetClosure</b></a>(int*)
<dd>  Gets whether the curve is closed.
 <dt> o 
    <a href="#GetCstPoints(CATListValCATI2DCstPoint_var&amp;)"><b>GetCstPoints</b></a>(CATListValCATI2DCstPoint_var&amp;)
<dd>   Gives the list of the control points of the spline.
 <dt> o 
    <a href="#GetDegree(int*)"><b>GetDegree</b></a>(int*)
<dd>   Gives the degree of the curve (3 or 5)
  
 <dt> o 
    <a href="#InsertControlPointAfter(CATI2DPoint*,unsigned long,int)"><b>InsertControlPointAfter</b></a>(CATI2DPoint*,unsigned long,int)
<dd>   Inserts control point in the spline.
 <dt> o 
    <a href="#RemovePoint(CATI2DPoint*,int)"><b>RemovePoint</b></a>(CATI2DPoint*,int)
<dd>   Removes control point in the spline.
 <dt> o 
    <a href="#SetClosure(int)"><b>SetClosure</b></a>(int)
<dd>  Sets whether the curve is closed.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddLastPoint"></a><a name="AddLastPoint(CATI2DPoint*,int)"></a> <dt> o <b>AddLastPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddLastPoint</b>(<td><script type="text/javascript"> activateLink('CATI2DPoint','CATI2DPoint*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEvaluationType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Inserts control point in the spline at the last position.<br>
  If a 2D point is given (and not a control point), a new control point is created
  and aggregated in the spline.<br>
  If a 2D control point is given, it will be aggregated in the spline.<br>
  If the 2D control point is previously aggregated in a spline, the return code will be E_FAIL.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>  The new point to be inserted. (@see CATI2DPoint and CATI2DCstPoint for more information).
  </dd>
    <dt><tt> iEvaluationType</tt>
   <dd>  Unused.</dd>
</dl>
</dl>
</dl>
<a name="Compute"></a><a name="Compute(int)"></a> <dt> o <b>Compute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compute</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEvaluationType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Computes the spline, according to the recorded control points.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvaluationType</tt>
   <dd>  Unused.</dd>
</dl>
</dl>
</dl>
<a name="GetClosure"></a><a name="GetClosure(int*)"></a> <dt> o <b>GetClosure</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClosure</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oClosed</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets whether the curve is closed.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClosed</tt>
   <dd>       Closing flag
<dl><dt>1</dt><dd> for a closed curve</dd>
    <dt>0</dt><dd> for an open curve</dd>
</dl></dd>
</dl>
</dl>
</dl>
<a name="GetCstPoints"></a><a name="GetCstPoints(CATListValCATI2DCstPoint_var&amp;)"></a> <dt> o <b>GetCstPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCstPoints</b>(<td><script type="text/javascript"> activateLink('CATListValCATI2DCstPoint_var','CATListValCATI2DCstPoint_var&amp;')</script> <td><tt>oCstPointsList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gives the list of the control points of the spline.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCstPointsList</tt>
   <dd>  The list of the control points. (@see CATI2DPoint and CATI2DCstPoint for more information).</dd>
</dl>
</dl>
</dl>
<a name="GetDegree"></a><a name="GetDegree(int*)"></a> <dt> o <b>GetDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDegree</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oDegree</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Gives the degree of the curve (3 or 5)
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDegree</tt>
   <dd>  The degree of the spline curve</dd>
</dl>
</dl>
</dl>
<a name="InsertControlPointAfter"></a><a name="InsertControlPointAfter(CATI2DPoint*,unsigned long,int)"></a> <dt> o <b>InsertControlPointAfter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InsertControlPointAfter</b>(<td><script type="text/javascript"> activateLink('CATI2DPoint','CATI2DPoint*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('unsigned long','unsigned long')</script> <td><tt>iPosition</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEvaluationType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Inserts control point in the spline.<br>
  If a 2D point is given (and not a control point), a new control point is created
  and aggregated in the spline.<br>
  If a 2D control point is given, it will be aggregated in the spline.<br>
  If the 2D control point is previously aggregated in a spline, the return code will be E_FAIL.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>  The new point to be inserted. (@see CATI2DPoint and CATI2DCstPoint for more information).
  </dd>
    <dt><tt> iPosition</tt>
   <dd>  The position at which to insert the point.
  To insert a new control point as the first element, set iPosition to 0.
  </dd>
    <dt><tt> iEvaluationType</tt>
   <dd>  Unused.</dd>
</dl>
</dl>
</dl>
<a name="RemovePoint"></a><a name="RemovePoint(CATI2DPoint*,int)"></a> <dt> o <b>RemovePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePoint</b>(<td><script type="text/javascript"> activateLink('CATI2DPoint','CATI2DPoint*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEvaluationType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Removes control point in the spline.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>  The point to be removed. (@see CATI2DPoint and CATI2DCstPoint for more information).
  </dd>
    <dt><tt> iEvaluationType</tt>
   <dd>  Unused.</dd>
</dl>
</dl>
</dl>
<a name="SetClosure"></a><a name="SetClosure(int)"></a> <dt> o <b>SetClosure</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClosure</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iClosed</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets whether the curve is closed.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClosed</tt>
   <dd>       Closing flag
<dl><dt>1</dt><dd> for a closed curve</dd>
    <dt>0</dt><dd> for an open curve</dd>
</dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATI2DSplineCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
