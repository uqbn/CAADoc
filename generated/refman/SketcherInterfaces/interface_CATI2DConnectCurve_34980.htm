<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SketcherInterfaces Interface CATI2DConnectCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SketcherInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATI2DConnectCurve','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DConnectCurve','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATI2DConnectCurve','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DConnectCurve','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SketcherInterfaces Interface CATI2DConnectCurve</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATI2DConnectCurve_34980','CATI2DConnectCurve','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATI2DConnectCurve</b>
</p>
<p>
<b><i> Interface to 2D connect curve feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the Connect Curve feature created by using 
 two curves, two points, orientations, continuity, tension options
 Get, set the Connect definition elements
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATI2DWFFactory','CreateConnectCurve');return false">CATI2DWFFactory.CreateConnectCurve</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetFirstContinuity(int*)"><b>GetFirstContinuity</b></a>(int*)
<dd>  Gets the first continuity.
 <dt> o 
    <a href="#GetFirstCurve(IID&amp;,CATBaseUnknown**)"><b>GetFirstCurve</b></a>(IID&amp;,CATBaseUnknown**)
<dd>  Gets the first reference curve.
 <dt> o 
    <a href="#GetFirstOrientation(int*)"><b>GetFirstOrientation</b></a>(int*)
<dd>  Gets the first orientation.
 <dt> o 
    <a href="#GetFirstPoint(IID&amp;,CATBaseUnknown**)"><b>GetFirstPoint</b></a>(IID&amp;,CATBaseUnknown**)
<dd>  Gets the first reference point.
 <dt> o 
    <a href="#GetFirstTension(double*)"><b>GetFirstTension</b></a>(double*)
<dd>  Gets the first tension.
 <dt> o 
    <a href="#GetSecondContinuity(int*)"><b>GetSecondContinuity</b></a>(int*)
<dd>  Gets the second continuity.
 <dt> o 
    <a href="#GetSecondCurve(IID&amp;,CATBaseUnknown**)"><b>GetSecondCurve</b></a>(IID&amp;,CATBaseUnknown**)
<dd>  Gets the second reference curve.
 <dt> o 
    <a href="#GetSecondOrientation(int*)"><b>GetSecondOrientation</b></a>(int*)
<dd>  Gets the second orientation.
 <dt> o 
    <a href="#GetSecondPoint(IID&amp;,CATBaseUnknown**)"><b>GetSecondPoint</b></a>(IID&amp;,CATBaseUnknown**)
<dd>  Gets the second reference point.
 <dt> o 
    <a href="#GetSecondTension(double*)"><b>GetSecondTension</b></a>(double*)
<dd>  Gets the second tension.
 <dt> o 
    <a href="#SetFirstContinuity(int)"><b>SetFirstContinuity</b></a>(int)
<dd>  Sets the first continuity.
 <dt> o 
    <a href="#SetFirstCurve(CATBaseUnknown*)"><b>SetFirstCurve</b></a>(CATBaseUnknown*)
<dd>  Sets the first reference curve.
 <dt> o 
    <a href="#SetFirstOrientation(int)"><b>SetFirstOrientation</b></a>(int)
<dd>  Sets the first orientation.
 <dt> o 
    <a href="#SetFirstPoint(CATBaseUnknown*)"><b>SetFirstPoint</b></a>(CATBaseUnknown*)
<dd>  Sets the first reference point.
 <dt> o 
    <a href="#SetFirstTension(double)"><b>SetFirstTension</b></a>(double)
<dd>  Gets the first tension.
 <dt> o 
    <a href="#SetSecondContinuity(int)"><b>SetSecondContinuity</b></a>(int)
<dd>  Sets the second continuity.
 <dt> o 
    <a href="#SetSecondCurve(CATBaseUnknown*)"><b>SetSecondCurve</b></a>(CATBaseUnknown*)
<dd>  Sets the second reference curve.
 <dt> o 
    <a href="#SetSecondOrientation(int)"><b>SetSecondOrientation</b></a>(int)
<dd>  Sets the second orientation.
 <dt> o 
    <a href="#SetSecondPoint(CATBaseUnknown*)"><b>SetSecondPoint</b></a>(CATBaseUnknown*)
<dd>  Sets the second reference point.
 <dt> o 
    <a href="#SetSecondTension(double)"><b>SetSecondTension</b></a>(double)
<dd>  Gets the first tension.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetFirstContinuity"></a><a name="GetFirstContinuity(int*)"></a> <dt> o <b>GetFirstContinuity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstContinuity</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oContinuity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first continuity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oContinuity</tt></tt>
   <dd> [out] Continuity of the first reference curve.
 <dl>
 <dt> <tt> 0 </tt> <dd> Continuity in point
 <dt> <tt> 1 </tt> <dd> Continuity in tangency
 <dt> <tt> 2 </tt> <dd> Continuity in curvature
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetFirstCurve"></a><a name="GetFirstCurve(IID&amp;,CATBaseUnknown**)"></a> <dt> o <b>GetFirstCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstCurve</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first reference curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iIID</tt></tt>
   <dd> [in] Interface identifier for which a pointer is requested.
 </dd>
    <dt><tt> <tt>oCurve</tt></tt>
   <dd> [out] Pointer to the first reference curve.</dd>
</dl>
</dl>
</dl>
<a name="GetFirstOrientation"></a><a name="GetFirstOrientation(int*)"></a> <dt> o <b>GetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstOrientation</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oOrient</tt></tt>
   <dd> [out] Orientation of the first reference curve.
 <dl>
 <dt> <tt>  1 </tt> <dd> Same orientation
 <dt> <tt> -1 </tt> <dd> Opposite orientation
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetFirstPoint"></a><a name="GetFirstPoint(IID&amp;,CATBaseUnknown**)"></a> <dt> o <b>GetFirstPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstPoint</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first reference point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iIID</tt></tt>
   <dd> [in] Interface identifier for which a pointer is requested.
 </dd>
    <dt><tt> <tt>oPoint</tt></tt>
   <dd> [out] Pointer to the first reference point.</dd>
</dl>
</dl>
</dl>
<a name="GetFirstTension"></a><a name="GetFirstTension(double*)"></a> <dt> o <b>GetFirstTension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstTension</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oTension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first tension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oTension</tt></tt>
   <dd> [out] Tension of the first reference curve.
 <dl>
 Must be strictly greater than 0
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetSecondContinuity"></a><a name="GetSecondContinuity(int*)"></a> <dt> o <b>GetSecondContinuity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondContinuity</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oContinuity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second continuity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oContinuity</tt></tt>
   <dd> [out] Continuity of the second reference curve.
 <dl>
 <dt> <tt> 0 </tt> <dd> Continuity in point
 <dt> <tt> 1 </tt> <dd> Continuity in tangency
 <dt> <tt> 2 </tt> <dd> Continuity in curvature
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetSecondCurve"></a><a name="GetSecondCurve(IID&amp;,CATBaseUnknown**)"></a> <dt> o <b>GetSecondCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondCurve</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second reference curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iIID</tt></tt>
   <dd> [in] Interface identifier for which a pointer is requested.
 </dd>
    <dt><tt> <tt>oCurve</tt></tt>
   <dd> [out] Pointer to the second reference curve.</dd>
</dl>
</dl>
</dl>
<a name="GetSecondOrientation"></a><a name="GetSecondOrientation(int*)"></a> <dt> o <b>GetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondOrientation</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oOrient</tt></tt>
   <dd> [out] Orientation of the second reference curve.
 <dl>
 <dt> <tt>  1 </tt> <dd> Same orientation
 <dt> <tt> -1 </tt> <dd> Opposite orientation
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetSecondPoint"></a><a name="GetSecondPoint(IID&amp;,CATBaseUnknown**)"></a> <dt> o <b>GetSecondPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondPoint</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second reference point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iIID</tt></tt>
   <dd> [in] Interface identifier for which a pointer is requested.
 </dd>
    <dt><tt> <tt>oPoint</tt></tt>
   <dd> [out] Pointer to the second reference point.</dd>
</dl>
</dl>
</dl>
<a name="GetSecondTension"></a><a name="GetSecondTension(double*)"></a> <dt> o <b>GetSecondTension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondTension</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oTension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second tension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>oTension</tt></tt>
   <dd> [out] Tension of the second reference curve.
 <dl>
 Must be strictly greater than 0
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetFirstContinuity"></a><a name="SetFirstContinuity(int)"></a> <dt> o <b>SetFirstContinuity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstContinuity</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iContinuity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first continuity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iContinuity</tt></tt>
   <dd> [in] Continuity of the first reference curve.
 <dl>
 <dt> <tt> 0 </tt> <dd> Continuity in point
 <dt> <tt> 1 </tt> <dd> Continuity in tangency
 <dt> <tt> 2 </tt> <dd> Continuity in curvature
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetFirstCurve"></a><a name="SetFirstCurve(CATBaseUnknown*)"></a> <dt> o <b>SetFirstCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstCurve</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first reference curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iCurve</tt></tt>
   <dd> [in] Pointer to the first reference curve.</dd>
</dl>
</dl>
</dl>
<a name="SetFirstOrientation"></a><a name="SetFirstOrientation(int)"></a> <dt> o <b>SetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstOrientation</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iOrientation</tt></tt>
   <dd> [in] Orientation of the first reference curve.
 <dl>
 <dt> <tt>  1 </tt> <dd> Same orientation
 <dt> <tt> -1 </tt> <dd> Opposite orientation
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetFirstPoint"></a><a name="SetFirstPoint(CATBaseUnknown*)"></a> <dt> o <b>SetFirstPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstPoint</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first reference point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iPoint</tt></tt>
   <dd> [in] Pointer to the first reference point.</dd>
</dl>
</dl>
</dl>
<a name="SetFirstTension"></a><a name="SetFirstTension(double)"></a> <dt> o <b>SetFirstTension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstTension</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first tension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iTension</tt></tt>
   <dd> [in] Tension of the first reference curve.
 <dl>
 Strictly greater than 0
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetSecondContinuity"></a><a name="SetSecondContinuity(int)"></a> <dt> o <b>SetSecondContinuity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondContinuity</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iContinuity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second continuity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iContinuity</tt></tt>
   <dd> [in] Continuity of the second reference curve.
 <dl>
 <dt> <tt> 0 </tt> <dd> Continuity in point
 <dt> <tt> 1 </tt> <dd> Continuity in tangency
 <dt> <tt> 2 </tt> <dd> Continuity in curvature
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetSecondCurve"></a><a name="SetSecondCurve(CATBaseUnknown*)"></a> <dt> o <b>SetSecondCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondCurve</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second reference curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iCurve</tt></tt>
   <dd> [in] Pointer to the second reference curve.</dd>
</dl>
</dl>
</dl>
<a name="SetSecondOrientation"></a><a name="SetSecondOrientation(int)"></a> <dt> o <b>SetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondOrientation</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second orientation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iOrientation</tt></tt>
   <dd> [in] Orientation of the second reference curve.
 <dl>
 <dt> <tt>  1 </tt> <dd> Same orientation
 <dt> <tt> -1 </tt> <dd> Opposite orientation
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetSecondPoint"></a><a name="SetSecondPoint(CATBaseUnknown*)"></a> <dt> o <b>SetSecondPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondPoint</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second reference point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iPoint</tt></tt>
   <dd> [in] Pointer to the second reference point.</dd>
</dl>
</dl>
</dl>
<a name="SetSecondTension"></a><a name="SetSecondTension(double)"></a> <dt> o <b>SetSecondTension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondTension</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTension</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first tension.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iTension</tt></tt>
   <dd> [in] Tension of the second reference curve.
 <dl>
 Strictly greater than 0
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATI2DConnectCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
