<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SketcherInterfaces Interface CATI2DConstraintFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SketcherInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATI2DConstraintFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DConstraintFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATI2DConstraintFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATI2DConstraintFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SketcherInterfaces Interface CATI2DConstraintFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATI2DConstraintFactory_45964','CATI2DConstraintFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATI2DConstraintFactory</b>
</p>
<p>
<b><i> </i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateConstraint(CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,CAT2DCstType,int,int)"><b>CreateConstraint</b></a>(CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,CAT2DCstType,int,int)
<dd>  Creates a constraint.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateConstraint"></a><a name="CreateConstraint(CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,double*,CATBaseUnknown*,CAT2DCstType,int,int)"></a> <dt> o <b>CreateConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateConstraint</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElem1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iSelPt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElem2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iSelPt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElem3</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iSelPt3</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CAT2DCstType','CAT2DCstType')</script> <td><tt>iCstType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDriven</tt><td><tt>=0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEvaluation</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> <tt>iElem1</tt></tt>
   <dd> [in] Address of the first geometrical element.
 </dd>
    <dt><tt> <tt>iSelPt1</tt></tt>
   <dd> [in] If the geometry is a curve, pass the 2D selection coordinates of the curve
 expressed according to the sketch system of reference.
 Else, pass NULL.
 (This entry serves as the initialization point of the resolution. If no information is passed, 
 the system will evaluate one automatically. However, the returned solution (location where the 
 constraint on the curve will be solved) can be unexpected for the user).
 </dd>
    <dt><tt> <tt>iElem2</tt></tt>
   <dd> [in] Address of the second geometrical element. 
 Pass NULL if necessary (e.g. for a length constraint, only iElem1 should be valuated).
 </dd>
    <dt><tt> <tt>iSelPt2</tt></tt>
   <dd> [in] If the geometry is a curve, pass the 2D selection coordinates of the curve
 expressed according to the sketch system of reference.
 Else, pass NULL.
 (This entry serves as the initialization point of the resolution. If no information is passed, 
 the system will evaluate one automatically. However, the returned solution (location where the 
 constraint on the curve will be solved) can be unexpected for the user).
 </dd>
    <dt><tt> <tt>iElem3</tt></tt>
   <dd> [in] Address of the third geometrical element. 
 Pass NULL if necessary.
 </dd>
    <dt><tt> <tt>iSelPt3</tt></tt>
   <dd> [in] If the geometry is a curve, pass the 2D selection coordinates of the curve
 expressed according to the sketch system of reference.
 Else, pass NULL.
 (This entry serves as the initialization point of the resolution. If no information is passed, 
 the system will evaluate one automatically. However, the returned solution (location where the 
 constraint on the curve will be solved) can be unexpected for the user).
 </dd>
    <dt><tt> <tt>iDirection</tt></tt>
   <dd> [in] Address of a geometrical element of the line type to create an oriented dimension.
 (e.g. vertical if the V direction of the sketch absolute axis is passed, or horizontal if the 
 H direction is passed).
 </dd>
    <dt><tt> <tt>iCstType</tt></tt>
   <dd> [in] Type of the constraint to create.
 </dd>
    <dt><tt> <tt>iDriven</tt></tt>
   <dd> [in] The default value 0 corresponds to a driving dimension. If <> 0, if will be a measured 
 dimension (reference constraint).
 </dd>
    <dt><tt> <tt>iEvaluation</tt></tt>
   <dd> [in] The default value 1 implies a solver evaluation after the constraint is created. 
 If several constraints must be created successively, you can run explicitly a final evaluation by 
 setting the value to 0.
 </dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATI2DConstraintFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSketcherInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
