<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Interface CATIAfrCmdPaletteOptions</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIAfrCmdPaletteOptions','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIAfrCmdPaletteOptions','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIAfrCmdPaletteOptions','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIAfrCmdPaletteOptions','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ApplicationFrame Interface CATIAfrCmdPaletteOptions</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAfrCmdPaletteOptions_44704','CATIAfrCmdPaletteOptions','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIAfrCmdPaletteOptions</b>
</p>
<p>
<b><i> Interface for state commands to dynamically fill the Tools Palette.</i></b><br>

 <b>Role</b>: The Tools Palette is a special toolbar which updates dynamically when:
 <ul>
  <li>Entering a workbench. The workbench implements the <a href="#" onClick="openLink('CATIAfrPaletteOptions','');return false">CATIAfrPaletteOptions</a> interface.</li>  <li>Executing a command. The command implements this interface.</li>
 </ul>
 The Tools Palette contains <b>options</b>. 
 <br>An option is a 
<a href="#" onClick="openLink('CATCommandHeader','');return false">CATCommandHeader</a> instance which may start a simple command  ( 
<a href="#" onClick="openLink('CATCommand','');return false">CATCommand</a> ) ; avoid dialog ( 
<a href="#" onClick="openLink('CATDlgDialog','');return false">CATDlgDialog</a> ) or state commands (<tt>CATStateCommand</tt>). Often a check header, encapsulated by the 
 
<a href="#" onClick="openLink('CATAfrCheckHeaderAccessor','');return false">CATAfrCheckHeaderAccessor</a> class, is sufficient. <br><br>The 
<a href="#" onClick="openLink('','GetPaletteOptions');return false">GetPaletteOptions</a> enables you to specify the options available as  long as the command is alive,
 and the 
<a href="#" onClick="openLink('','GetPaletteStateOptions');return false">GetPaletteStateOptions</a> enables you  to specify the options depending on states. 
 <br>When the command is interrupted by a shared command, all its options become
  unavailable. 
 <br><br><b>About the</b> 
<a href="#" onClick="openLink('CATCommandHeader','');return false">CATCommandHeader</a> </b>instance usage</b> <br>You may create the header instances at any time before the <tt>GetPaletteOptions</tt> 
 or the <tt>GetPaletteStateOptions</tt> methods are called or even inside these methods. 
 You have only one rule to respect, a
 command header instance must be created only once during the 
<a href="#" onClick="openLink('CATFrmEditor','');return false">CATFrmEditor</a> life.  The 
<a href="#" onClick="openLink('CATAfrGetCommandHeader','');return false">CATAfrGetCommandHeader</a> global fuction can be used to retrieve  a command header instance from its identifier, or to check its existence
 before its creation.

</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetPaletteOptions()"><b>GetPaletteOptions</b></a>()
<dd>   Gets the options to display when entering the command.
 <dt> o 
    <a href="#GetPaletteStateOptions()"><b>GetPaletteStateOptions</b></a>()
<dd>   Gets the options to display when changing the command current state.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetPaletteOptions"></a><a name="GetPaletteOptions()"></a> <dt> o <b>GetPaletteOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATCommandHeader)','CATLISTP(CATCommandHeader)')</script>  <b>GetPaletteOptions</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the options to display when entering the command. 
 <br><b>Role:</b>This method provides the options available during the
 life of the command. But this method is called at the first command activation,
 it means that the command must be a shared or exclusive command. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   List of options. 
  <br> The returned options are added to the Palette when the command 
 is started and they are automatically removed when leaving the command.
 The list can be empty.
</dl>
</dl>
<a name="GetPaletteStateOptions"></a><a name="GetPaletteStateOptions()"></a> <dt> o <b>GetPaletteStateOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATCommandHeader)','CATLISTP(CATCommandHeader)')</script>  <b>GetPaletteStateOptions</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the options to display when changing the command current state. 
 <br><b>Role</b>This method is called when entering a state. In most cases,
 the name of the current state should be compared to a string to
 return a specific list. Here is an example that you can find in such method:
 <pre>
    CATLISTP(CATCommandHeader) PaletteStateOptions;
    CATDialogState * pCurrentState = <b>GetCurrentState</b>();
    if ( NULL != pCurrentState )
    {
       CATString StateName = pCurrentState-><b>GetResourceID</b>();

        if ( ! strcmp("MyStateId",StateName) )
        {
           PaletteStateOptions.Append(pCmdHdr);
           ...
 </pre>
    where <tt>pCmdHdr</tt> can be a command header pointer retrieval by the 
    
<a href="#" onClick="openLink('CATAfrGetCommandHeader','');return false">CATAfrGetCommandHeader</a> global function. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   List of options. 
 <br>The returned options are added to the Palette for the current state
 and they are automatically removed when leaving the state.
 The list can be empty for all the states, or for some of them.
 <br>If the command is a simple 
<a href="#" onClick="openLink('CATCommand','');return false">CATCommand</a> , return an empty list.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAfrCmdPaletteOptions.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
