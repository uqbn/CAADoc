<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Macro CATImplementConfigurationFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ApplicationFrame Macro CATImplementConfigurationFactory</h1>
<pre>
Macro <b>CATImplementConfigurationFactory</b> (Config,CFactory)
</pre>
<b><i> Defines the source file of the workbench factory class.</i></b><br>

 <b>Role</b>: To create an instance of your workbench, you must define a factory 
 interface which derives from CATIGenericFactory.<br>
 This interface is implemented using a factory class as an extension of 
 the CATApplicationFrame class and is created by the two macros <a href="#" onClick="openLink('CATDeclareConfigurationFactory','');return false">CATDeclareConfigurationFactory</a>  and <tt>CATImplementConfigurationFactory</tt>.  

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Config</tt>
   <dd>    The name of the workbench's class. This class must implement an interface which 
    derives from </dd>
<a href="#" onClick="openLink('CATIWorkbench','');return false">CATIWorkbench</a> 
    <dt><tt> CFactory</tt>
   <dd>    The name of the workbench factory interface deriving from CATIGenericFactory. 
    <br>
    <br>
 <b>Example:</b> <tt>MyWorkbenchFactory</tt> is a class which implements the <tt>IMyWorkbenchFactory</tt> 
    factory interface, creates the <tt>MyWorkbench</tt> workbench and is defined in the
    shared library myModule.dll
 <pre> 
 1) The header file <tt>MyWorkbenchFactory.h</tt> must contain these two lines:

       #include "CATWorkshopConfigurationFactory.h"
       CATDeclareConfigurationFactory(MyWorkbench);

 2) The source file <tt>MyWorkbenchFactory.cpp</tt> must contain these lines:

       #include "MyWorkbench.h"
       #include "MyWorkbenchFactory.h"

       #include "TIE_IMyWorkbenchFactory.h"

       <b>CATImplementConfigurationFactory</b>(MyWorkbench, IMyWorkbenchFactory);

 3) To declare that CATApplicationFrame implements IMyWorkbenchFactory,  
       insert the following line in the <b>interface dictionary</b>:

       CATApplicationFrame    IMyWorkbenchFactory  myModule 

 4) To declare that the factory creates an instance of the MyWorkbench class, 
       insert the following line in the <b>factory dictionary</b>:
 
       MyWorkbench            IMyWorkbenchFactory      
 </pre>
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATDeclareConfigurationFactory','');return false">CATDeclareConfigurationFactory</a>, <a href="#" onClick="openLink('CATIWorkbench','');return false">CATIWorkbench</a>
</dl>
<hr>
 This object is included in the file: <b>CATWorkshopConfigurationFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
