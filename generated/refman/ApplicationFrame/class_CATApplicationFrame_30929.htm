<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Class CATApplicationFrame</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATApplicationFrame','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATApplicationFrame','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATApplicationFrame','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATApplicationFrame','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ApplicationFrame Class CATApplicationFrame</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATApplicationFrame_30929','CATApplicationFrame','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATApplicationFrame</b>
</p>
<p>
<b><i> Class representing the application main window model.</i></b><br>

 <b>Role</b>: An application frame is a specialized window which
 allows to start commands and perform standard interactions. The 
 <tt>CATApplicationFrame</tt> class corresponds to the model of 
 this window. The <tt>CATApplicationFrame</tt> class is also able
 to create workshops and workbenches since workshop and workbench 
 factories are defined as its data extensions.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATApplicationFrame()"><b>~CATApplicationFrame</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetApplicationDocument()"><b>GetApplicationDocument</b></a>()
<dd>    Returns the application document.
 <dt> o 
    <a href="#GetCurrentWorkbench()"><b>GetCurrentWorkbench</b></a>()
<dd>  Returns the internal name of the current workbench.
 <dt> o 
    <a href="#GetCurrentWorkshop()"><b>GetCurrentWorkshop</b></a>()
<dd>  Returns the internal name of the current workshop.
 <dt> o 
    <a href="#GetFrame()"><b>GetFrame</b></a>()
<dd>    Retrieves a pointer to the application frame.
 <dt> o 
    <a href="#GetMainWindow()"><b>GetMainWindow</b></a>()
<dd>   Returns the main window.
 <dt> o 
    <a href="#HidePalette(CATString&amp;)"><b>HidePalette</b></a>(CATString&amp;)
<dd>  Hides a toolbar.
 <dt> o 
    <a href="#SetBusyCursor()"><b>SetBusyCursor</b></a>()
<dd>  Changes the cursor mouse into a busy cursor.
 <dt> o 
    <a href="#SetMessage(MessageType,CATUnicodeString&amp;)"><b>SetMessage</b></a>(MessageType,CATUnicodeString&amp;)
<dd>  Displays a message in the status bar.
 <dt> o 
    <a href="#ShowPalette(CATString&amp;)"><b>ShowPalette</b></a>(CATString&amp;)
<dd>  Displays a toolbar.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#MessageType"><b>MessageType</b></a>
<dd>   Type of message to displays in the status bar.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATApplicationFrame"></a><a name="~CATApplicationFrame()"></a> <dt> o <b>~CATApplicationFrame</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATApplicationFrame</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetApplicationDocument"></a><a name="GetApplicationDocument()"></a> <dt> o <b>GetApplicationDocument</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgWindow','CATDlgWindow *')</script>  <b>GetApplicationDocument</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Returns the application document.
 <br><b>Role</b>: This method returns the document of the application. Refer to the
 
<a href="#" onClick="openLink('','GetMainWindow');return false">GetMainWindow</a> method for its usage. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The application document.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.

</dl>
</dl>
<a name="GetCurrentWorkbench"></a><a name="GetCurrentWorkbench()"></a> <dt> o <b>GetCurrentWorkbench</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString')</script>  <b>GetCurrentWorkbench</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal name of the current workbench.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a CATString
</dl>
</dl>
<a name="GetCurrentWorkshop"></a><a name="GetCurrentWorkshop()"></a> <dt> o <b>GetCurrentWorkshop</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString')</script>  <b>GetCurrentWorkshop</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal name of the current workshop.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a CATString
</dl>
</dl>
<a name="GetFrame"></a><a name="GetFrame()"></a> <dt> o <b>GetFrame</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATApplicationFrame','CATApplicationFrame *')</script>  <b>GetFrame</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Retrieves a pointer to the application frame.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The application frame pointer.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="GetMainWindow"></a><a name="GetMainWindow()"></a> <dt> o <b>GetMainWindow</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgWindow','CATDlgWindow *')</script>  <b>GetMainWindow</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the main window.
 <br><b>Role</b>: This method returns:
  <ul>
    <li>If no document is open: the only one <tt>CATApplicationDocument</tt> instance. The
        instance that you retrieve also with the 
<a href="#" onClick="openLink('','GetApplicationDocument');return false">GetApplicationDocument</a> method</li>    <li>Otherwise: a dialog object dedicated to the current 
<a href="#" onClick="openLink('CATFrmEditor','');return false">CATFrmEditor</a>. This dialog       object is an invisible dialog object which contains all the dialog objects related to 
        the document: all its windows and all its dialog boxes. Thanks to this object, 
         the application can hide/deactivate all the dialog objects when the document
         loses the focus.</li>
  </ul>
 It enables you mainly to find a parent for your dialog box:
  <ul>
  <li>If you create a dialog box which is document's independent, use the 
  
<a href="#" onClick="openLink('','GetApplicationDocument');return false">GetApplicationDocument</a> method; your dialog box will be always visible. For   example, if you create a dialog box inside a command launched from the General workshop 
   addin ( 
<a href="#" onClick="openLink('CATIAfrGeneralWksAddin','');return false">CATIAfrGeneralWksAddin</a> ) you will use the <tt>GetApplicationDocument</tt> method</li> <li>If you create a dialog box which is in relationship with a document, use this
     method. In generally, the commands associated with a document use this method.</li>
 </ul>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     A dialog object.  
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="HidePalette"></a><a name="HidePalette(CATString&amp;)"></a> <dt> o <b>HidePalette</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>HidePalette</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iPaletteName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Hides a toolbar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaletteName</tt>
   <dd>  The name of the toolbar to set invisible. This name is third argument of the
 </dd>
<a href="#" onClick="openLink('NewAccess','');return false">NewAccess</a> macro.   <pre>
  NewAccess(CATCmdContainer, pMyTlb, iPaletteName);
 </pre>
</dl>
</dl>
</dl>
<a name="SetBusyCursor"></a><a name="SetBusyCursor()"></a> <dt> o <b>SetBusyCursor</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBusyCursor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Changes the cursor mouse into a busy cursor.
 <br><b>Role</b>: Use this method to indicate that
 your application is busy. This method calls the
 <tt>SetBusyCursor</tt> method of the 
<a href="#" onClick="openLink('CATInteractiveApplication','');return false">CATInteractiveApplication</a> class.
</dl>
<a name="SetMessage"></a><a name="SetMessage(MessageType,CATUnicodeString&amp;)"></a> <dt> o <b>SetMessage</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMessage</b>(<td><script type="text/javascript"> activateLink('MessageType','MessageType')</script> <td><tt>iMessageType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iMessage</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Displays a message in the status bar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMessageType</tt>
   <dd>   The message type.
   <br><b>Legal values</b>: The parameter must
   be set to <tt>CATApplicationFrame::Information</tt>.
 </dd>
    <dt><tt> iMessage</tt>
   <dd>   The message.</dd>
</dl>
</dl>
</dl>
<a name="ShowPalette"></a><a name="ShowPalette(CATString&amp;)"></a> <dt> o <b>ShowPalette</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ShowPalette</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iPaletteName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Displays a toolbar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaletteName</tt>
   <dd>  The name of the toolbar to set visible. This name is third argument of the
 </dd>
<a href="#" onClick="openLink('NewAccess','');return false">NewAccess</a> macro.   <pre>
  NewAccess(CATCmdContainer, pMyTlb, iPaletteName);
 </pre>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="MessageType"> <dt> o <b>MessageType</b>
<dl>
  <dd>
<pre>
enum <b>MessageType</b> {
  Information,
  Prompt,
  MultiDocumentPrompt,
  ShortPrompt,
  LogMessage
}
</pre>
  Type of message to displays in the status bar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Information</tt>
   <dd>  Simple text.
 </dd>
    <dt><tt> Prompt</tt>
   <dd>  Internal usage.
 </dd>
    <dt><tt> MultiDocumentPrompt</tt>
   <dd>  Internal usage.
 </dd>
    <dt><tt> ShortPrompt</tt>
   <dd>  Internal usage.
 </dd>
    <dt><tt> LogMessage</tt>
   <dd>  Internal usage.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATApplicationFrame.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
