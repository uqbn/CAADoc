<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ApplicationFrame Interface CATIWorkbench</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ApplicationFrame.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIWorkbench','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIWorkbench','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIWorkbench','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIWorkbench','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ApplicationFrame Interface CATIWorkbench</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIWorkbench_23960','CATIWorkbench','0');</script>
<p><b>Usage: you cannot implement this base interface directly. You must first derive it and then implement the derived interface. </b></p>
<hr>
<p>
 interface <b>CATIWorkbench</b>
</p>
<p>
<b><i> Interface to derive to create a workbench.</i></b><br>

 <b>Role</b>: The workbench is the object seen by the end user in place of the 
 workshop. As in workshops, tools are grouped in toolbars and menus. 
 These tools are commands which are handled by workshop and its workbenches by means of 
 command headers. 
 <br><br>
 The workshop dedicated to this workbench features a specific workbench 
 interface, see <a href="#" onClick="openLink('CATIWorkshop','GetWorkbenchInterface');return false">CATIWorkshop.GetWorkbenchInterface</a>, which derives from <tt>CATIWorkbench</tt>. Each workbench of this workshop is an implementation of this specific workbench interface. 
 <br><br>
 To enable the instanciation of the workbench you must:
 <ul>
 <li> Create a workbench factory interface which derives from 
<a href="#" onClick="openLink('CATIGenericFactory','');return false">CATIGenericFactory</a>. </li> <li> Implement this factory interface with the help of these two macros: 
<a href="#" onClick="openLink('CATDeclareConfigurationFactory','');return false">CATDeclareConfigurationFactory</a>  and 
<a href="#" onClick="openLink('CATImplementConfigurationFactory','');return false">CATImplementConfigurationFactory</a>. </li> </ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIWorkshop','');return false">CATIWorkshop</a>, <a href="#" onClick="openLink('CATIWorkbenchAddin','');return false">CATIWorkbenchAddin</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateCommands()"><b>CreateCommands</b></a>()
<dd>  Instantiates the command headers.
 <dt> o 
    <a href="#CreateWorkbench()"><b>CreateWorkbench</b></a>()
<dd>  Creates the workbench accesses.
 <dt> o 
    <a href="#GetAddinInterface()"><b>GetAddinInterface</b></a>()
<dd>  Returns the name of the interface exposed by the workbench to create add-ins.
 <dt> o 
    <a href="#GetCustomInterfaces(CATListPV*,CATListPV*)"><b>GetCustomInterfaces</b></a>(CATListPV*,CATListPV*)
<dd>  Replaces specific interfaces by customized interfaces.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateCommands"></a><a name="CreateCommands()"></a> <dt> o <b>CreateCommands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CreateCommands</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Instantiates the command headers.  
 <br><b>Role</b>: Each command you want to make available in your workshop or 
 workbench must have a command header. The command header holds the necessary 
 information to load the command, such as the name of the 
 shared library in which the command's executable code is located, the name of the 
 command class, and the data to pass to the command's code when this command 
 becomes the current one. The command header has resources for each command to display 
 such as the command name shown to the end user, its ToolTip displayed in a balloon, 
 its help message, and its icon.
 <br>Each instance of header is deleted by CATIA.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATCommandHeader','');return false">CATCommandHeader</a>
</dl>
</dl>
<a name="CreateWorkbench"></a><a name="CreateWorkbench()"></a> <dt> o <b>CreateWorkbench</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCmdWorkbench','CATCmdWorkbench *')</script>  <b>CreateWorkbench</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the workbench accesses.
 <br><b>Role</b>: Creates the containers for the workbench, the menubar, the menus, and the toolbars, 
 the starters for the commands, and arranges the commands in the menus and toolbars.
 With the 
<a href="#" onClick="openLink('NewAccess','');return false">NewAccess</a> macro you have explanations to create  each  component of the workbench and how to arrange it.
 <br><b>Warning</b>:
 The workbench's name must be the same as the class implementing this interface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The workbench's container .
</dl>
</dl>
<a name="GetAddinInterface"></a><a name="GetAddinInterface()"></a> <dt> o <b>GetAddinInterface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATClassId','CATClassId')</script>  <b>GetAddinInterface</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the interface exposed by the workbench to create add-ins.
 <br><b>Role</b>: To enable client applications of your workbench to add their 
 own addins , you should provide an interface that the client application will implement. 
 This interface should derive from the 
<a href="#" onClick="openLink('CATIWorkbenchAddin','');return false">CATIWorkbenchAddin</a> interface.  <br><b>Warning</b>: The name of this interface must be pppIxxx<b>Addin</b>, where 
 ppp is your application prefix (such as CAT for CATIA) and xxx is the name of your 
 workbench.
</dl>
<a name="GetCustomInterfaces"></a><a name="GetCustomInterfaces(CATListPV*,CATListPV*)"></a> <dt> o <b>GetCustomInterfaces</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetCustomInterfaces</b>(<td><script type="text/javascript"> activateLink('CATListPV','CATListPV*')</script> <td><tt>oDefaultIIDList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPV','CATListPV*')</script> <td><tt>oCustomIIDList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replaces specific interfaces by customized interfaces.
 <br><b>Warning</b>: if you don't have any customized interface, this method must be <i>empty</i> implemented.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultIIDList</tt>
   <dd>    The list of IID of interfaces you need to customize
 </dd>
    <dt><tt> oCustomIIDList</tt>
   <dd>    The list of IID of your replacing interfaces

</dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>     How to implement this method:

    oDefaultIIDList->Append((void*)&IID_CATIxxxxxx);
    oCustomIIDList->Append((void*)&IID_MyCustoCATIxxxxxx); //MyCustoCATIxxxxxx derives from CATIxxxxxx

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIWorkbench.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATApplicationFrame</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
