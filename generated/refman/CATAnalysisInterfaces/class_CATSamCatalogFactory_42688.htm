<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisInterfaces Class CATSamCatalogFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATAnalysisInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSamCatalogFactory','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSamCatalogFactory','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSamCatalogFactory','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSamCatalogFactory','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATAnalysisInterfaces Class CATSamCatalogFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSamCatalogFactory_42688','CATSamCatalogFactory','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSamCatalogFactory</b>
</p>
<p>
<b><i> Global Services to create feature that derive from Analysis Types.</i></b><br>
<br></p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateAnalysisEntity(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"><b>CreateAnalysisEntity</b></a>(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)
<dd>  Global service for "AnalysisEntity" startup creation.
 <dt> o 
    <a href="#CreateAnalysisSet(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"><b>CreateAnalysisSet</b></a>(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)
<dd>  Global service for "AnalysisSet" startup creation.
 <dt> o 
    <a href="#CreateBasicComponent(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"><b>CreateBasicComponent</b></a>(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)
<dd>  Global service for "BasicComponent" startup creation.
 <dt> o 
    <a href="#CreateMSHPart(CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"><b>CreateMSHPart</b></a>(CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)
<dd>  Global service for "MSHPart" startup creation.
 <dt> o 
    <a href="#SetBasicComponent(CATUnicodeString*,CATBaseUnknown*,CATICatalog**,CATBaseUnknown*)"><b>SetBasicComponent</b></a>(CATUnicodeString*,CATBaseUnknown*,CATICatalog**,CATBaseUnknown*)
<dd>  Global service to associate a "BasicComponent" to another or to an Analysis entity.
 <dt> o 
    <a href="#SetDataType(CATBaseUnknown*,CATUnicodeString*)"><b>SetDataType</b></a>(CATBaseUnknown*,CATUnicodeString*)
<dd>  Global service to define a data type on a startup on anay type.
 <dt> o 
    <a href="#SetLabels(CATBaseUnknown*,int,CATUnicodeString*)"><b>SetLabels</b></a>(CATBaseUnknown*,int,CATUnicodeString*)
<dd>  Global service to define a the Labels values on a startup of basic component.
 <dt> o 
    <a href="#SetPhysicalType(CATBaseUnknown*,CATUnicodeString*)"><b>SetPhysicalType</b></a>(CATBaseUnknown*,CATUnicodeString*)
<dd>  Global service to define a physical type on a startup on anay type.
 <dt> o 
    <a href="#SetValuesDim(CATBaseUnknown*,int,int*)"><b>SetValuesDim</b></a>(CATBaseUnknown*,int,int*)
<dd>  Global service to define a the dimension values on a startup of basic component.
 <dt> o 
    <a href="#UpgradeForBackup(CATICatalog**,int)"><b>UpgradeForBackup</b></a>(CATICatalog**,int)
<dd>  Global service to set up a backup startup in a CATfct.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateAnalysisEntity"></a><a name="CreateAnalysisEntity(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateAnalysisEntity</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateAnalysisEntity</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iSubType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPublic</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDerivable</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service for "AnalysisEntity" startup creation.
<br><b> Note </b>: These methods allow to derive the AnalysisEntity startup
				and store the derived one in a client catalog that can be accessed via the "CATICatalog" interface
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> The type of the created startup. </dd>
    <dt><tt> iSubType</tt>
   <dd>  The type of the startup of Analysis Entity to derive. <br><b>Legal values</b>: 
 <ul><li> <font color="red">NULL</font color="red"> : to derive directely a Analysis Entity. 
	<li><font color="red">Late Type of an existing Analysis</font color="red"> Entity to create a new derivation of kind of entity.<br>
   For example "AnalysisProperty"
 </ul>
 </dd>
    <dt><tt> oStartUp</tt>
   <dd>  The created startup. </dd>
    <dt><tt> piCatalog</tt>
   <dd> Catalog to store the created startup. </dd>
    <dt><tt> iPublic</tt>
   <dd>  Set-up the created startup as Public. </dd>
    <dt><tt> iDerivable</tt>
   <dd>  Set-up the created startup as Derivable. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  		S_OK if the startup is created.
      E_FAIL in other cases
</dl>
</dl>
<a name="CreateAnalysisSet"></a><a name="CreateAnalysisSet(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateAnalysisSet</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateAnalysisSet</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iSubType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPublic</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDerivable</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service for "AnalysisSet" startup creation.
<br><b> Note </b>: These methods allow to derive the Analysis Set startup
				and store the derived one in a client catalog that can be accessed via the "CATICatalog" interface
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd>  The type of the created startup. </dd>
    <dt><tt> iSubType</tt>
   <dd>  The type of the startup of Analysis Set to derive. <br><b>Legal values</b>: 
 <ul><li> <font color="red">NULL</font color="red"> : to derive directely a Analysis Set. 
	<li>	<font color="red">SolutionSet</font color="red"> to create a new type of  Solution Set.
	<li>	<font color="red">Late Type of an existing Analysis Set</font color="red">  to create a new derivation of kind of set.<br>
    For example "Restraint Set"
 </ul>
 </dd>
    <dt><tt> oStartUp</tt>
   <dd>   The created startup. </dd>
    <dt><tt> piCatalog</tt>
   <dd>  Catalog to store the created startup. </dd>
    <dt><tt> iPublic</tt>
   <dd>  Set-up the created startup as Public. </dd>
    <dt><tt> iDerivable</tt>
   <dd>  Set-up the created startup as Derivable. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  		S_OK if the startup is created.
      E_FAIL in other cases
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICatalog','');return false">CATICatalog</a>
</dl>
</dl>
<a name="CreateBasicComponent"></a><a name="CreateBasicComponent(CATUnicodeString*,CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateBasicComponent</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateBasicComponent</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iSubType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPublic</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDerivable</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service for "BasicComponent" startup creation.
<br><b> Note </b>: These methods allow to define a BasicComponent startup
				and store the derived one in a client catalog that can
				be accessed via the "CATICatalog" interface
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> The type of the created startup. </dd>
    <dt><tt> iSubType</tt>
   <dd>  The type of the startup of BasicComponent to create.  <br><b>Legal values</b>: 
 <ul>
 <li><font color="red">NULL</font color="red"> to derive directely a Basic Component 
 <li><font color="red">SAM3DVector</font color="red"> to create a new type of  3DVector
 <li> <font color="red">SAMTensor</font color="red"> to create a new type of  Tensor
 </ul>
 </dd>
    <dt><tt> oStartUp</tt>
   <dd> The created startup </dd>
    <dt><tt> piCatalog</tt>
   <dd> Catalog to store the created startup. </dd>
    <dt><tt> iPublic</tt>
   <dd>  Set-up the created startup as Public. </dd>
    <dt><tt> iDerivable</tt>
   <dd>  Set-up the created startup as Derivable. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  		S_OK if the startup is created.
      E_FAIL in other cases
</dl>
</dl>
<a name="CreateMSHPart"></a><a name="CreateMSHPart(CATUnicodeString*,CATBaseUnknown**,CATICatalog**,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateMSHPart</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateMSHPart</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPublic</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDerivable</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service for "MSHPart" startup creation.
<br><b> Note </b>: These methods allow to derive the MSHPart startup
				and store the derived one in a client catalog that can be accessed via the "CATICatalog" interface
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> The type of the created startup. </dd>
    <dt><tt> oStartUp</tt>
   <dd>  The created startup. </dd>
    <dt><tt> piCatalog</tt>
   <dd> Catalog to store the created startup. </dd>
    <dt><tt> iPublic</tt>
   <dd>  Set-up the created startup as Public. </dd>
    <dt><tt> iDerivable</tt>
   <dd>  Set-up the created startup as Derivable. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  		S_OK if the startup is created.
    E_FAIL in other cases
</dl>
</dl>
<a name="SetBasicComponent"></a><a name="SetBasicComponent(CATUnicodeString*,CATBaseUnknown*,CATICatalog**,CATBaseUnknown*)"></a> <dt> o <b>SetBasicComponent</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBasicComponent</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iTypeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piBasicComponent</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Global service to associate a "BasicComponent" to another or to an Analysis entity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeName</tt>
   <dd> The type of the startup of BasicComponent to retrieve. </dd>
    <dt><tt> piStartUp</tt>
   <dd>  The Startup in which the association will be done. </dd>
    <dt><tt> piCatalog</tt>
   <dd> Catalog to store the created startup. </dd>
    <dt><tt> piBasicComponent</tt>
   <dd> If the Pointer of the basic component is known (For example if it is created <br> by using the </dd>
<a href="#" onClick="openLink('CATICkeParmFactory','CreateDimension');return false">CATICkeParmFactory.CreateDimension</a> method, set iTypeName to NULL and use the pointer. 
  <dt> <b>Returns:</b> 
  <dd>  		S_OK if the startup is created.
      E_FAIL in other cases
</dl>
</dl>
</dl>
<a name="SetDataType"></a><a name="SetDataType(CATBaseUnknown*,CATUnicodeString*)"></a> <dt> o <b>SetDataType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDataType</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piStartUp</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service to define a data type on a startup on anay type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piStartUp</tt>
   <dd>  The Startup. </dd>
    <dt><tt> iType</tt>
   <dd> The string of the data type.</dd>
</dl>
</dl>
</dl>
<a name="SetLabels"></a><a name="SetLabels(CATBaseUnknown*,int,CATUnicodeString*)"></a> <dt> o <b>SetLabels</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLabels</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>Nb</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iLabels</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service to define a the Labels values on a startup of basic component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piStartUp</tt>
   <dd>  The Startup. </dd>
    <dt><tt> iLabels</tt>
   <dd> The array that defines the labels identifiers.</dd>
</dl>
</dl>
</dl>
<a name="SetPhysicalType"></a><a name="SetPhysicalType(CATBaseUnknown*,CATUnicodeString*)"></a> <dt> o <b>SetPhysicalType</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPhysicalType</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piStartUp</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service to define a physical type on a startup on anay type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piStartUp</tt>
   <dd>  The Startup. </dd>
    <dt><tt> iType</tt>
   <dd> The string of the physical type.</dd>
</dl>
</dl>
</dl>
<a name="SetValuesDim"></a><a name="SetValuesDim(CATBaseUnknown*,int,int*)"></a> <dt> o <b>SetValuesDim</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValuesDim</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>piStartUp</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>Nb</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iValueDim</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service to define a the dimension values on a startup of basic component.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piStartUp</tt>
   <dd>  The Startup. </dd>
    <dt><tt> iValueDim</tt>
   <dd> The array that defines the dimension values.</dd>
</dl>
</dl>
</dl>
<a name="UpgradeForBackup"></a><a name="UpgradeForBackup(CATICatalog**,int)"></a> <dt> o <b>UpgradeForBackup</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UpgradeForBackup</b>(<td><script type="text/javascript"> activateLink('CATICatalog','CATICatalog**')</script> <td><tt>piCatalog</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Global service to set up a backup startup in a CATfct.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> piCatalog</tt>
   <dd> Catalog to upgrade. </dd>
    <dt><tt> iMode</tt>
   <dd>  Check or Upgrade. <br><b>Legal values</b>:
 <ul>
 <li><font color="red">1</font color="red">Check only. </li>
 <li><font color="red">2</font color="red"> Check and upgrade. </li>
 </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   HRESULT  <br><b>Legal values</b>:
 <ul>
 <li><font color="red">S_OK</font color="red"> The catalog needs to be saved. </li>
 <li><font color="red">S_FALSE</font color="red"> The catalog doesn't need to be saved. </li>
 <li><font color="red">E_*</font color="red"> Internal Error. </li>
 </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSamCatalogFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAnalysisInterface</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
