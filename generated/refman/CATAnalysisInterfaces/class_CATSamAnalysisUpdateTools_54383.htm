<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisInterfaces Class CATSamAnalysisUpdateTools</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATAnalysisInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSamAnalysisUpdateTools','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSamAnalysisUpdateTools','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSamAnalysisUpdateTools','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSamAnalysisUpdateTools','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATAnalysisInterfaces Class CATSamAnalysisUpdateTools</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSamAnalysisUpdateTools_54383','CATSamAnalysisUpdateTools','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSamAnalysisUpdateTools</b>
</p>
<p>
<b><i> General tools for Update control.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#FindUpdateCycle(CATISpecObject*,CATListPtrCATBaseUnknown*)"><b>FindUpdateCycle</b></a>(CATISpecObject*,CATListPtrCATBaseUnknown*)
<dd>  Checks whether an update cycle exists inside an object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="FindUpdateCycle"></a><a name="FindUpdateCycle(CATISpecObject*,CATListPtrCATBaseUnknown*)"></a> <dt> o <b>FindUpdateCycle</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATListValCATISpecObject','CATListValCATISpecObject_var*')</script>  <b>FindUpdateCycle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iFrom</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown*')</script> <td><tt>iOtherInputs</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks whether an update cycle exists inside an object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd> is the feature to check. </dd>
    <dt><tt> The</tt>
   <dd> list iOtherInputs contains a list of objects that you would like to put into iFrom as IN. <br> <b>If NULL</b>, the method will only check the ifrom definition. <br>
 Else, the method checks whether a cycle happens (either because iFrom cycles or because adding iOtherInputs as inputs of iFrom would cause a cycle).<br>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  ListCycle will contain the list of features which cause the cycle. It's up to the caller to delete the ListCycle . <b>Note:</b> It cannot check side effects like objects implementing CATISamAnalysisFeatureUpdate or CATIBuild and thereby potentially producing cycles (reimpacts).
 All the check is done if iOtherInputs are located the same document as iFrom.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSamAnalysisUpdateTools.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAnalysisToolkit</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
