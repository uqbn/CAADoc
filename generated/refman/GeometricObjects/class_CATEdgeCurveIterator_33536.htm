<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricObjects Class CATEdgeCurveIterator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricObjects.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATEdgeCurveIterator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEdgeCurveIterator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATEdgeCurveIterator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEdgeCurveIterator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricObjects Class CATEdgeCurveIterator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEdgeCurveIterator_33536','CATEdgeCurveIterator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATEdgeCurveIterator</b>
</p>
<p>
<b><i> Class defining the iterator to scan the curves of a CATEdgeCurve.</i></b><br>

 <br>By default, a given curve is retrieved as many times as it appears in the
 tree structure below the root CATEdgeCurve.
 Stuttering shared curves can be turned off upon request by the <a href="#" onClick="openLink('CATEdgeCurveIterator','SetRepetitions');return false">CATEdgeCurveIterator.SetRepetitions</a> method.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEdgeCurveIterator(CATEdgeCurve*)"><b>CATEdgeCurveIterator</b></a>(CATEdgeCurve*)
<dd>  Constructs a CATEdgeCurveIterator.
 <dt> o 
    <a href="#CATEdgeCurveIterator(CATEdgeCurveIterator&amp;)"><b>CATEdgeCurveIterator</b></a>(CATEdgeCurveIterator&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATEdgeCurveIterator()"><b>~CATEdgeCurveIterator</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetElement()"><b>GetElement</b></a>()
<dd>  Returns the CATEdgeCurve that is scanned.
 <dt> o 
    <a href="#Next(short*,CATLONG32*,CATLONG32*)"><b>Next</b></a>(short*,CATLONG32*,CATLONG32*)
<dd>  Skips to the next curve of the CATEdgeCurve.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Initializes the iterator to the beginning curve.
 <dt> o 
    <a href="#Set(CATEdgeCurve*)"><b>Set</b></a>(CATEdgeCurve*)
<dd>  Defines a new CATEdgeCurve to scan.
 <dt> o 
    <a href="#SetLeafScan(short)"><b>SetLeafScan</b></a>(short)
<dd>   Only scans the leaf curves.
 <dt> o 
    <a href="#SetRepetitions(short)"><b>SetRepetitions</b></a>(short)
<dd>  Defines whether a curve that appears several times in the root must be
 output only one time.
 <dt> o 
    <a href="#SetTargetType(CATGeometricType)"><b>SetTargetType</b></a>(CATGeometricType)
<dd>  Only scans a defined type of curves.
 <dt> o 
    <a href="#operator=(CATEdgeCurveIterator&amp;)"><b>operator=</b></a>(CATEdgeCurveIterator&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEdgeCurveIterator"></a><a name="CATEdgeCurveIterator(CATEdgeCurve*)"></a> <dt> o <b>CATEdgeCurveIterator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEdgeCurveIterator</b>(<td> const <script type="text/javascript"> activateLink('CATEdgeCurve','CATEdgeCurve*')</script> <td><tt>iEdgeCurve</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATEdgeCurveIterator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEdgeCurve</tt>
   <dd> The pointer to the CATEdgeCurve to be scanned.</dd>
</dl>
</dl>
</dl>
<a name="CATEdgeCurveIterator"></a><a name="CATEdgeCurveIterator(CATEdgeCurveIterator&amp;)"></a> <dt> o <b>CATEdgeCurveIterator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEdgeCurveIterator</b>(<td> const <script type="text/javascript"> activateLink('CATEdgeCurveIterator','CATEdgeCurveIterator&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor. An unfinished scan will not be memorized in the new iterator.
</dl>
<a name="~CATEdgeCurveIterator"></a><a name="~CATEdgeCurveIterator()"></a> <dt> o <b>~CATEdgeCurveIterator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATEdgeCurveIterator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetElement"></a><a name="GetElement()"></a> <dt> o <b>GetElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATEdgeCurve','const CATEdgeCurve*')</script>  <b>GetElement</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATEdgeCurve that is scanned.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the curve to scan.
</dl>
</dl>
<a name="Next"></a><a name="Next(short*,CATLONG32*,CATLONG32*)"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCurve','CATCurve *')</script>  <b>Next</b>(<td><script type="text/javascript"> activateLink('short','short*')</script> <td><tt>oOrientation</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32*')</script> <td><tt>oNbPCurves</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32*')</script> <td><tt>oNbSurfaces</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next curve of the CATEdgeCurve.
 <br>If this mehod is called without
 arguments the first time, it is forbidden to swap to the signature with
 arguments within the same scanning sequence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd> The orientation with respect to the root curve (curve that has been
 provided to the constructor, or to the <tt>Set</tt> method). 
 If <tt>NULL</tt>, this information is not retrieved.
 </dd>
    <dt><tt> oNbPCurves</tt>
   <dd> The actual number of imbedded pcurves: 1 if the current
 curve is a pcurve itself, and one for each of the imbedded pcurves,
 whatever their number of occurences.
 If <tt>NULL</tt>, this information is not retrieved.
 </dd>
    <dt><tt> oNbSurfaces</tt>
   <dd> The number of underlying surfaces of the imbedded pcurves.
 For example, the edge curve reprensenting the edge of the closure of a cylinder
 yields to two pcurves and one surface. A 3d curve yields zero pcurve and zero surface.
 If <tt>NULL</tt>, this information is not retrieved.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the next curve, <tt>NULL</tt> when the scan is over.
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator to the beginning curve.
 <br>This allows you to change the target type or any of the scanning specifications.
</dl>
<a name="Set"></a><a name="Set(CATEdgeCurve*)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Set</b>(<td> const <script type="text/javascript"> activateLink('CATEdgeCurve','CATEdgeCurve*')</script> <td><tt>iNewCurve</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Defines a new CATEdgeCurve to scan.
 <br> Resets the iterator at the beginning.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewCurve</tt>
   <dd> The pointer to the new curve to scan.</dd>
</dl>
</dl>
</dl>
<a name="SetLeafScan"></a><a name="SetLeafScan(short)"></a> <dt> o <b>SetLeafScan</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLeafScan</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iOnlyLeaves</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Only scans the leaf curves.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnlyLeaves</tt>
   <dd> <tt>1</tt> to only scan the leaf curves, <tt>0</tt> otherwise. 
 Note that the <tt>1</tt> value in this option is incompatible with the <tt>CATEdgeCurveType</tt>
 value in the </dd>
<a href="#" onClick="openLink('CATEdgeCurveIterator','SetTargetType');return false">CATEdgeCurveIterator.SetTargetType</a> method.
</dl>
</dl>
</dl>
<a name="SetRepetitions"></a><a name="SetRepetitions(short)"></a> <dt> o <b>SetRepetitions</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRepetitions</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iStutter</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines whether a curve that appears several times in the root must be
 output only one time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStutter</tt>
   <dd> <tt>1</tt> if it is output as many times as it appears (default value), </tt>0</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetTargetType"></a><a name="SetTargetType(CATGeometricType)"></a> <dt> o <b>SetTargetType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTargetType</b>(<td><script type="text/javascript"> activateLink('CATGeometricType','CATGeometricType')</script> <td><tt>iTarget</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Only scans a defined type of curves. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTarget</tt>
   <dd> The geometry type that is scanned, like CATPCurveType, or CATIntCurveType.
 For instance, use CATEdgeCurveType to skip the leaves in the tree.
 Type <tt>0</tt> means no type filter at all.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATEdgeCurveIterator&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATEdgeCurveIterator','CATEdgeCurveIterator&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATEdgeCurveIterator','CATEdgeCurveIterator&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator. An unfinished scan will not be memorized in the new iterator.
</dl>
<hr>
 This object is included in the file: <b>CATEdgeCurveIterator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricObjects</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
