<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricObjects Class CATCGMStream</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricObjects.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATCGMStream','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCGMStream','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATCGMStream','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCGMStream','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricObjects Class CATCGMStream</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCGMStream_20060','CATCGMStream','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCGMStream</b>
</p>
<p>
<b><i>  Class defining the stream to use for the stream and unstream of a single geometric object.</i></b><br>

 <b>Role</b>: This stream class is specially designed to deal with a list of linked objects.
 The list of linked objects must be written/read prior to any other write/read operation.
 <br>This class is used when you define the stream or unstream of your own CGM attribute, but you only has
 to use it as a CATMathStream. In fact, if you have linked objects, use <a href="#" onClick="openLink('CATCGMStreamAttribute','AddLink');return false">CATCGMStreamAttribute.AddLink</a> ,  and  the stream/unstream of your linked objects will be automatic.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathStream','');return false">CATMathStream</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATCGMStream(CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for stream operation (read and write acces are allowed).
 <dt> o 
    <a href="#CATCGMStream(istream&amp;,CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(istream&amp;,CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for read only stream operation.
 <dt> o 
    <a href="#CATCGMStream(void*,size_t,CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(void*,size_t,CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for read only stream operation.
 <dt> o 
    <a href="#CATCGMStream(ostream&amp;,size_t,CATBoolean,CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(ostream&amp;,size_t,CATBoolean,CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for write only stream operation.
 <dt> o 
    <a href="#CATCGMStream(char*,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(char*,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for read only or write only stream operation.
 <dt> o 
    <a href="#CATCGMStream(size_t,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)"><b>CATCGMStream</b></a>(size_t,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)
<dd>  Constructs CATCGMStream for stream operation.
 <dt> o 
    <a href="#~CATCGMStream()"><b>~CATCGMStream</b></a>()
<dd>  Destructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CloseFactoryForRead(size_t,short,CATBoolean)"><b>CloseFactoryForRead</b></a>(size_t,short,CATBoolean)
<dd>  Closes the stream after reading of the content of a CATGeoFactory.
 <dt> o 
    <a href="#CloseFactoryForWrite(size_t,short,CATBoolean)"><b>CloseFactoryForWrite</b></a>(size_t,short,CATBoolean)
<dd>  Closes the stream after writing of the content of a CATGeoFactory.
 <dt> o 
    <a href="#GetAssociatedContainer()"><b>GetAssociatedContainer</b></a>()
<dd>  Returns the CATGeoFactory used with a OpenFactoryForWrite/CloseFactoryForWrite or OpenFactoryForRead/CloseFactoryForRead operation.
 <dt> o 
    <a href="#GetNumberOfBytesToRead()"><b>GetNumberOfBytesToRead</b></a>()
<dd>  Returns the number of bytes that remains to read.
 <dt> o 
    <a href="#OpenFactoryForRead(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)"><b>OpenFactoryForRead</b></a>(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)
<dd>  Opens the stream for reading the content of a CATGeoFactory.
 <dt> o 
    <a href="#OpenFactoryForWrite(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)"><b>OpenFactoryForWrite</b></a>(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)
<dd>  Opens the stream for writing the content of a CATGeoFactory.
 <dt> o 
    <a href="#PrepareToObjectStreaming()"><b>PrepareToObjectStreaming</b></a>()
<dd>   Prepares the object streaming.
 <dt> o 
    <a href="#PrepareToObjectUnstreaming()"><b>PrepareToObjectUnstreaming</b></a>()
<dd>     Prepares the object unstreaming.
 <dt> o 
    <a href="#PrepareToProcessAnObject(size_t)"><b>PrepareToProcessAnObject</b></a>(size_t)
<dd>  Prepares the stream to process an object.
 <dt> o 
    <a href="#ReadCrvLimits(CATCrvLimits&amp;,CATCurve*,char[])"><b>ReadCrvLimits</b></a>(CATCrvLimits&amp;,CATCurve*,char[])
<dd>  Reads a CATCrvLimits.
 <dt> o 
    <a href="#ReadCrvParam(CATCrvParam&amp;,CATCurve*,char[])"><b>ReadCrvParam</b></a>(CATCrvParam&amp;,CATCurve*,char[])
<dd>  Reads a CATCrvParam.
 <dt> o 
    <a href="#ReadGeometryV5(CATICGMObject**,CATLONG32,char[])"><b>ReadGeometryV5</b></a>(CATICGMObject**,CATLONG32,char[])
<dd>  Read an array of CGM objects.
 <dt> o 
    <a href="#ReadKnotVector(CATKnotVector&amp;,char[])"><b>ReadKnotVector</b></a>(CATKnotVector&amp;,char[])
<dd>  Reads a CATKnotVector.
 <dt> o 
    <a href="#ReadLinkedObjectsCount(CATULONG32&amp;)"><b>ReadLinkedObjectsCount</b></a>(CATULONG32&amp;)
<dd>  Reads the linked objects count.
 <dt> o 
    <a href="#ReadListOfLinkedObjects(CATLISTP(CATICGMObject)&amp;,char[])"><b>ReadListOfLinkedObjects</b></a>(CATLISTP(CATICGMObject)&amp;,char[])
<dd>  Reads the total list of linked objects.
 <dt> o 
    <a href="#ReadObject(CATICGMObject*&amp;,char[])"><b>ReadObject</b></a>(CATICGMObject*&amp;,char[])
<dd>  Reads a linked object.
 <dt> o 
    <a href="#ReadSurLimits(CATSurLimits&amp;,CATSurface*,char[])"><b>ReadSurLimits</b></a>(CATSurLimits&amp;,CATSurface*,char[])
<dd>  Reads a CATSurLimits.
 <dt> o 
    <a href="#ReadSurParam(CATSurParam&amp;,CATSurface*,char[])"><b>ReadSurParam</b></a>(CATSurParam&amp;,CATSurface*,char[])
<dd>  Reads a CATSurParam.
 <dt> o 
    <a href="#ResetToRawBehaviour()"><b>ResetToRawBehaviour</b></a>()
<dd>  Resets the stream to raw behaviour.
 <dt> o 
    <a href="#SkipRemainingInformationsToRead()"><b>SkipRemainingInformationsToRead</b></a>()
<dd>  Skips over remaining informations to read.
 <dt> o 
    <a href="#SkipRemainingLinkedObjectsToRead()"><b>SkipRemainingLinkedObjectsToRead</b></a>()
<dd>  Skips over remaining linked objects to read.
 <dt> o 
    <a href="#WriteCrvLimits(CATCrvLimits&amp;,char[])"><b>WriteCrvLimits</b></a>(CATCrvLimits&amp;,char[])
<dd>  Writes a CATCrvLimits.
 <dt> o 
    <a href="#WriteCrvParam(CATCrvParam&amp;,char[])"><b>WriteCrvParam</b></a>(CATCrvParam&amp;,char[])
<dd>  Writes a CATCrvParam.
 <dt> o 
    <a href="#WriteGeometryV5(CATICGMObject**,CATLONG32,char[])"><b>WriteGeometryV5</b></a>(CATICGMObject**,CATLONG32,char[])
<dd>  Writes an array of CGM objects.
 <dt> o 
    <a href="#WriteKnotVector(CATKnotVector&amp;,char[])"><b>WriteKnotVector</b></a>(CATKnotVector&amp;,char[])
<dd>  Writes a CATKnotVector.
 <dt> o 
    <a href="#WriteLinkedObjectsCount(CATULONG32)"><b>WriteLinkedObjectsCount</b></a>(CATULONG32)
<dd>   Writes the linked objects count.
 <dt> o 
    <a href="#WriteListOfLinkedObjects(CATLISTP(CATICGMObject)&amp;,char[])"><b>WriteListOfLinkedObjects</b></a>(CATLISTP(CATICGMObject)&amp;,char[])
<dd>  Writes a (partial or total) list of linked objects.
 <dt> o 
    <a href="#WriteObject(CATICGMObject*,char[])"><b>WriteObject</b></a>(CATICGMObject*,char[])
<dd>  Writes a linked object.
 <dt> o 
    <a href="#WriteSurLimits(CATSurLimits&amp;,char[])"><b>WriteSurLimits</b></a>(CATSurLimits&amp;,char[])
<dd>  Writes a CATSurLimits.
 <dt> o 
    <a href="#WriteSurParam(CATSurParam&amp;,char[])"><b>WriteSurParam</b></a>(CATSurParam&amp;,char[])
<dd>  Writes a CATSurParam.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATCGMStream"></a><a name="CATCGMStream(CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for stream operation (read and write acces are allowed).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CATCGMStream"></a><a name="CATCGMStream(istream&amp;,CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td><script type="text/javascript"> activateLink('istream','istream&amp;')</script> <td><tt>ioFile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for read only stream operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFile</tt>
   <dd> The stream from which the stream is read.
 <br>The first acces of the stream may be done with <tt>OpenWriteStreamHeader</tt>.
 <br>The last acces of the stream may be done with <tt>CloseWriteStreamHeader</tt>.
 </dd>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CATCGMStream"></a><a name="CATCGMStream(void*,size_t,CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iSizeBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for read only stream operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBuffer</tt>
   <dd>  The memory area directly acceded for the read operation.
 </dd>
    <dt><tt> iSizeBuffer</tt>
   <dd>  The size in bytes of <tt>iBuffer</tt>.
 </dd>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CATCGMStream"></a><a name="CATCGMStream(ostream&amp;,size_t,CATBoolean,CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td><script type="text/javascript"> activateLink('ostream','ostream&amp;')</script> <td><tt>ioFile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iInitialNumberOfBytes</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iEnableByAddress</tt><td><tt>= FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for write only stream operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFile</tt>
   <dd> The stream on which the stream is saved.
 </dd>
    <dt><tt> iInitialNumberOfBytes</tt>
   <dd>  The initial memory size of internal buffer in bytes.
 <br>The first acces of the stream may be done with <tt>OpenReadStreamHeader</tt>.
 <br>The last acces of the stream may be done with <tt>CloseReadStreamHeader</tt>.
 </dd>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CATCGMStream"></a><a name="CATCGMStream(char*,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iFilename</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCGMStreamType','CATCGMStreamType')</script> <td><tt>iAcces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iEnableByAddress</tt><td><tt>= FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for read only or write only stream operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFile</tt>
   <dd> The stream from which the stream is read.
 </dd>
    <dt><tt> iAcces</tt>
   <dd>  The kind of acces allowed on the CATCGMStream.
 <br>The first acces of the stream may be done with <tt>OpenReadStreamHeader</tt> or <tt>OpenWriteStreamHeader</tt>.
 <br>The last acces of the stream may be done with <tt>CloseReadStreamHeader</tt> or <tt>CloseWriteStreamHeader</tt>.
 </dd>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CATCGMStream"></a><a name="CATCGMStream(size_t,CATCGMStreamType,CATBoolean,CATCGMStreamImpl*)"></a> <dt> o <b>CATCGMStream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATCGMStream</b>(<td><script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iInitialNumberOfBytes</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCGMStreamType','CATCGMStreamType')</script> <td><tt>iAcces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iEnableByAddress</tt><td><tt>= FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMStreamImpl','CATCGMStreamImpl*')</script> <td><tt>ipImpl</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs CATCGMStream for stream operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitialNumberOfBytes</tt>
   <dd>  The initial number of bytes for internal buffer.
 </dd>
    <dt><tt> iAcces</tt>
   <dd>  The kind of acces allowed on the CATCGMStream.
 </dd>
    <dt><tt> CATCGMStreamImpl</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="~CATCGMStream"></a><a name="~CATCGMStream()"></a> <dt> o <b>~CATCGMStream</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATCGMStream</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor
</dl>
 <h2>Methods</h2> <br>
<a name="CloseFactoryForRead"></a><a name="CloseFactoryForRead(size_t,short,CATBoolean)"></a> <dt> o <b>CloseFactoryForRead</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>CloseFactoryForRead</b>(<td> const <script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iWhere</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('short','short')</script> <td><tt>iLevel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iForExternalWeakLinks</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Closes the stream after reading of the content of a CATGeoFactory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhere</tt>
   <dd>  internal parameter given by <tt>OpenFactoryForRead</tt>.
 </dd>
    <dt><tt> iLevel</tt>
   <dd>  internal parameter given by <tt>OpenFactoryForRead</tt>.
 </dd>
    <dt><tt> iForExternalWeakLinks</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="CloseFactoryForWrite"></a><a name="CloseFactoryForWrite(size_t,short,CATBoolean)"></a> <dt> o <b>CloseFactoryForWrite</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>CloseFactoryForWrite</b>(<td> const <script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iWhere</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('short','short')</script> <td><tt>iLevel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iForExternalWeakLinks</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Closes the stream after writing of the content of a CATGeoFactory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhere</tt>
   <dd>  internal parameter given by <tt>OpenFactoryForWrite</tt>.
 </dd>
    <dt><tt> iLevel</tt>
   <dd>  internal parameter given by <tt>OpenFactoryForWrite</tt>.
 </dd>
    <dt><tt> iForExternalWeakLinks</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="GetAssociatedContainer"></a><a name="GetAssociatedContainer()"></a> <dt> o <b>GetAssociatedContainer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATICGMContainer','CATICGMContainer*')</script>  <b>GetAssociatedContainer</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATGeoFactory used with a OpenFactoryForWrite/CloseFactoryForWrite or OpenFactoryForRead/CloseFactoryForRead operation.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  A CATICGMContainer pointer to the associated CATGeoFactory.
</dl>
</dl>
<a name="GetNumberOfBytesToRead"></a><a name="GetNumberOfBytesToRead()"></a> <dt> o <b>GetNumberOfBytesToRead</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('size_t','size_t')</script>  <b>GetNumberOfBytesToRead</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of bytes that remains to read.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of bytes still to read, considering what has been already read
</dl>
</dl>
<a name="OpenFactoryForRead"></a><a name="OpenFactoryForRead(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)"></a> <dt> o <b>OpenFactoryForRead</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>OpenFactoryForRead</b>(<td><script type="text/javascript"> activateLink('CATICGMContainer','CATICGMContainer*')</script> <td><tt>iFactory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('size_t','size_t&amp;')</script> <td><tt>oWhere</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short&amp;')</script> <td><tt>oLevel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iForExternalWeakLinks</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Opens the stream for reading the content of a CATGeoFactory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactory</tt>
   <dd>  A pointer to the CATGeoFactory to be read.
 </dd>
    <dt><tt> oWhere</tt>
   <dd>  internal parameter you must give back to <tt>CloseFactoryForRead</tt>.
 </dd>
    <dt><tt> oLevel</tt>
   <dd>  internal parameter you must give back to <tt>CloseFactoryForRead</tt>.
 </dd>
    <dt><tt> iForExternalWeakLinks</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="OpenFactoryForWrite"></a><a name="OpenFactoryForWrite(CATICGMContainer*,size_t&amp;,short&amp;,CATBoolean)"></a> <dt> o <b>OpenFactoryForWrite</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>OpenFactoryForWrite</b>(<td><script type="text/javascript"> activateLink('CATICGMContainer','CATICGMContainer*')</script> <td><tt>iFactory</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('size_t','size_t&amp;')</script> <td><tt>oWhere</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short&amp;')</script> <td><tt>oLevel</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iForExternalWeakLinks</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Opens the stream for writing the content of a CATGeoFactory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFactory</tt>
   <dd>  A pointer to the CATGeoFactory to be written.
 </dd>
    <dt><tt> oWhere</tt>
   <dd>  internal parameter you must give back to <tt>CloseFactoryForWrite</tt>.
 </dd>
    <dt><tt> oLevel</tt>
   <dd>  internal parameter you must give back to <tt>CloseFactoryForWrite</tt>.
 </dd>
    <dt><tt> iForExternalWeakLinks</tt>
   <dd>  Internal use only. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="PrepareToObjectStreaming"></a><a name="PrepareToObjectStreaming()"></a> <dt> o <b>PrepareToObjectStreaming</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>PrepareToObjectStreaming</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Prepares the object streaming.
 <br>This function forces the order of write operations:
 <ol>
    <li>Indicates the linked objects count for the objects to stream.
        <br>(thru a call to <tt>WriteLinkedObjectsCount</tt>)
        <br>
        <b>This step is mandatory, even if there is no link.</b>
    <li>Writes the list of linked objects for object to be streamed, combining :
    <ul>
        <li>call(s) to <tt>WriteListOfLinkedObjects</tt>,
        <li>call(s) to <tt>WriteObject</tt>.
    </ul>
    <li>Write other informations (numbers and strings).
 </ol>
 <br>It must be called anytime, even if there is no link. (use an empty list in such case)
</dl>
<a name="PrepareToObjectUnstreaming"></a><a name="PrepareToObjectUnstreaming()"></a> <dt> o <b>PrepareToObjectUnstreaming</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>PrepareToObjectUnstreaming</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
    Prepares the object unstreaming.

 <br>This function will force the order of read operations:
 <ol>
    <li>Gets the linked objects for the objects to unstream:
    <ul>
        <li>Either read the linked objects count for object to be streamed.
            <br>(in one shot, thru a call to 'ReadListOfLinkedObjects').
            <br>Extract then only what you need: Do not make any assumptions on list's size,
                 as upcoming versions may add later linked objects to the modelization.
        <li>Either read the count, then read individually each linked object.
            <br>You must forecast to skip linked objects possibly added by upcoming versions.
            <br>(thru a call to 'ReadLinkedObjectsCount',
                 followed by as many calls as required to 'ReadObject',
                 ended by a call to 'SkipRemainingLinkedObjectsToRead').
    </ul>
        <br><b>This step is mandatory, even if there is no link.</b>
    <li>Read other informations (numbers and strings).
 </ol>
 <br>It must be called anytime, even if there is no link. (use an empty list in such case)
</dl>
<a name="PrepareToProcessAnObject"></a><a name="PrepareToProcessAnObject(size_t)"></a> <dt> o <b>PrepareToProcessAnObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>PrepareToProcessAnObject</b>(<td><script type="text/javascript"> activateLink('size_t','size_t')</script> <td><tt>iObjectSize</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Prepares the stream to process an object.
 <br>This resets the flags that control the order of read/write operations.
 <br>It must be called before streaming/unstreaming an object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectSize</tt>
   <dd> The size of the object to be unstreamed (useless when streaming).</dd>
</dl>
</dl>
</dl>
<a name="ReadCrvLimits"></a><a name="ReadCrvLimits(CATCrvLimits&amp;,CATCurve*,char[])"></a> <dt> o <b>ReadCrvLimits</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadCrvLimits</b>(<td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>ioCrvLimits</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>ipCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a CATCrvLimits.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCrvLimits</tt>
   <dd> The read CATCrvLimits.
 </dd>
    <dt><tt> ipCurve</tt>
   <dd> The CATCurve with which the CATCrvLimits is associated.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadCrvParam"></a><a name="ReadCrvParam(CATCrvParam&amp;,CATCurve*,char[])"></a> <dt> o <b>ReadCrvParam</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadCrvParam</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioCrvParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>ipCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a CATCrvParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCrvParam</tt>
   <dd> The read CATCrvParam.
 </dd>
    <dt><tt> ipCurve</tt>
   <dd> The CATCurve with which the CATCrvParam is associated.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadGeometryV5"></a><a name="ReadGeometryV5(CATICGMObject**,CATLONG32,char[])"></a> <dt> o <b>ReadGeometryV5</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadGeometryV5</b>(<td><script type="text/javascript"> activateLink('CATICGMObject','CATICGMObject**')</script> <td><tt>geometry</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iNbGeometry</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iReservedLabel</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Read an array of CGM objects.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> geometry</tt>
   <dd> A pointer to the array of read CATICGMObjects.
 </dd>
    <dt><tt> iNbGeometry</tt>
   <dd> The number of CATICGMObjects to read.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadKnotVector"></a><a name="ReadKnotVector(CATKnotVector&amp;,char[])"></a> <dt> o <b>ReadKnotVector</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadKnotVector</b>(<td><script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector&amp;')</script> <td><tt>ioKnotVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a CATKnotVector.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioKnotVector</tt>
   <dd> The read CATKnotVector.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadLinkedObjectsCount"></a><a name="ReadLinkedObjectsCount(CATULONG32&amp;)"></a> <dt> o <b>ReadLinkedObjectsCount</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadLinkedObjectsCount</b>(<td><script type="text/javascript"> activateLink('CATULONG32','CATULONG32&amp;')</script> <td><tt>ioLinkedObjectsCount</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the linked objects count. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLinkedObjectsCount</tt>
   <dd> The number of linked objects that are requsted by <tt>this</tt>.</dd>
</dl>
</dl>
</dl>
<a name="ReadListOfLinkedObjects"></a><a name="ReadListOfLinkedObjects(CATLISTP(CATICGMObject)&amp;,char[])"></a> <dt> o <b>ReadListOfLinkedObjects</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadListOfLinkedObjects</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATICGMObject)','CATLISTP(CATICGMObject)&amp;')</script> <td><tt>ioLinkedObjects</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads the total list of linked objects.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLinkedObjects</tt>
   <dd> The list of linked objects. This list does not need to be empty in order 
 to make the concatenation easier.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadObject"></a><a name="ReadObject(CATICGMObject*&amp;,char[])"></a> <dt> o <b>ReadObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadObject</b>(<td><script type="text/javascript"> activateLink('CATICGMObject','CATICGMObject*&amp;')</script> <td><tt>ioLinkedObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a linked object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLinkedObject</tt>
   <dd> Retrieves the current linked object.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadSurLimits"></a><a name="ReadSurLimits(CATSurLimits&amp;,CATSurface*,char[])"></a> <dt> o <b>ReadSurLimits</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadSurLimits</b>(<td><script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits&amp;')</script> <td><tt>ioSurLimits</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>ipSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a CATSurLimits.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSurLimits</tt>
   <dd> The read CATSurLimits.
 </dd>
    <dt><tt> ipSurface</tt>
   <dd> The CATSurface with which the CATSurLimits is associated.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ReadSurParam"></a><a name="ReadSurParam(CATSurParam&amp;,CATSurface*,char[])"></a> <dt> o <b>ReadSurParam</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReadSurParam</b>(<td><script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>ioSurParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>ipSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reads a CATSurParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSurParam</tt>
   <dd> The read CATSurParam.
 </dd>
    <dt><tt> ipSurface</tt>
   <dd> The CATSurface with which the CATSurParam is associated.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="ResetToRawBehaviour"></a><a name="ResetToRawBehaviour()"></a> <dt> o <b>ResetToRawBehaviour</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetToRawBehaviour</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets the stream to raw behaviour.
 <br>This removes checks on the stream use (i.e. when no object streaming/unstreaming).
</dl>
<a name="SkipRemainingInformationsToRead"></a><a name="SkipRemainingInformationsToRead()"></a> <dt> o <b>SkipRemainingInformationsToRead</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SkipRemainingInformationsToRead</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Skips over remaining informations to read.

 <br>(i.e. what follows the linked objects sequence)
</dl>
<a name="SkipRemainingLinkedObjectsToRead"></a><a name="SkipRemainingLinkedObjectsToRead()"></a> <dt> o <b>SkipRemainingLinkedObjectsToRead</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SkipRemainingLinkedObjectsToRead</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Skips over remaining linked objects to read.
</dl>
<a name="WriteCrvLimits"></a><a name="WriteCrvLimits(CATCrvLimits&amp;,char[])"></a> <dt> o <b>WriteCrvLimits</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteCrvLimits</b>(<td> const <script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>ioCrvLimits</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a CATCrvLimits.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCrvLimits</tt>
   <dd> The CATCrvLimits to write.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteCrvParam"></a><a name="WriteCrvParam(CATCrvParam&amp;,char[])"></a> <dt> o <b>WriteCrvParam</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteCrvParam</b>(<td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioCrvParam</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a CATCrvParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioCrvParam</tt>
   <dd> The CATCrvParam to write. 
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteGeometryV5"></a><a name="WriteGeometryV5(CATICGMObject**,CATLONG32,char[])"></a> <dt> o <b>WriteGeometryV5</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteGeometryV5</b>(<td><script type="text/javascript"> activateLink('CATICGMObject','CATICGMObject**')</script> <td><tt>geometry</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iNbGeometry</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iReservedLabel</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes an array of CGM objects.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> geometry</tt>
   <dd> A pointer to the array of CATICGMObjects to write.
 </dd>
    <dt><tt> iNbGeometry</tt>
   <dd> The number of CATICGMObjects to write.
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteKnotVector"></a><a name="WriteKnotVector(CATKnotVector&amp;,char[])"></a> <dt> o <b>WriteKnotVector</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteKnotVector</b>(<td> const <script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector&amp;')</script> <td><tt>ioKnotVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a CATKnotVector.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioKnotVector</tt>
   <dd> The CATKnotVector to write. 
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteLinkedObjectsCount"></a><a name="WriteLinkedObjectsCount(CATULONG32)"></a> <dt> o <b>WriteLinkedObjectsCount</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteLinkedObjectsCount</b>(<td><script type="text/javascript"> activateLink('CATULONG32','CATULONG32')</script> <td><tt>iLinkedObjectsCount</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Writes the linked objects count. 
 <br>Refer to the 
<a href="#" onClick="openLink('CATCGMStream','PrepareToObjectStreaming');return false">CATCGMStream.PrepareToObjectStreaming</a> method for explanations about the write functions sequence.
</dl>
<a name="WriteListOfLinkedObjects"></a><a name="WriteListOfLinkedObjects(CATLISTP(CATICGMObject)&amp;,char[])"></a> <dt> o <b>WriteListOfLinkedObjects</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteListOfLinkedObjects</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATICGMObject)','CATLISTP(CATICGMObject)&amp;')</script> <td><tt>iLinkedObjects</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a (partial or total) list of linked objects. 
 <br>Refer to  
<a href="#" onClick="openLink('CATCGMStream','PrepareToObjectStreaming');return false">CATCGMStream.PrepareToObjectStreaming</a> method for explanations about the write functions sequence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteObject"></a><a name="WriteObject(CATICGMObject*,char[])"></a> <dt> o <b>WriteObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteObject</b>(<td><script type="text/javascript"> activateLink('CATICGMObject','CATICGMObject*')</script> <td><tt>iLinkedObject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a linked object.
 <br>Refer to 
<a href="#" onClick="openLink('CATCGMStream','PrepareToObjectStreaming');return false">CATCGMStream.PrepareToObjectStreaming</a> method for explanations about the write functions sequence.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteSurLimits"></a><a name="WriteSurLimits(CATSurLimits&amp;,char[])"></a> <dt> o <b>WriteSurLimits</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteSurLimits</b>(<td> const <script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits&amp;')</script> <td><tt>ioSurLimits</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a CATSurLimits.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSurLimits</tt>
   <dd> The CATSurLimits to write. 
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<a name="WriteSurParam"></a><a name="WriteSurParam(CATSurParam&amp;,char[])"></a> <dt> o <b>WriteSurParam</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>WriteSurParam</b>(<td> const <script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>ioSurParam</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char[]')</script> <td><tt>iLabelReserved</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Writes a CATSurParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioSurParam</tt>
   <dd> The CATSurParam to write. 
 </dd>
    <dt><tt> iReservedLabel</tt>
   <dd> Reserved for future use. Do not change the default value.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCGMStream.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricObjects</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
