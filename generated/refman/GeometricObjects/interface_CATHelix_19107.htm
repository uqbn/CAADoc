<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricObjects Interface CATHelix</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricObjects.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATHelix','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATHelix','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATHelix','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATHelix','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricObjects Interface CATHelix</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATHelix_19107','CATHelix','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATHelix</b>
</p>
<p>
<b><i> Interface describing a geometric helix.</i></b><br>

 The CATHelix is created by the <tt>CreateHelix</tt>
 method of the <tt>CATGeoFactory</tt> interface and deleted 
 with the <tt>CATICGMContainer::Remove</tt> method.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngleFromParameter(CATCrvParam,CATAngle&amp;)"><b>GetAngleFromParameter</b></a>(CATCrvParam,CATAngle&amp;)
<dd>  Up to V5R21 and V6R209.
 <dt> o 
    <a href="#GetAngleFromParameter(CATCrvParam&amp;,CATAngle&amp;)"><b>GetAngleFromParameter</b></a>(CATCrvParam&amp;,CATAngle&amp;)
<dd>  From V5R21 and V6R209.
 <dt> o 
    <a href="#GetAxis(CATMathLine&amp;)"><b>GetAxis</b></a>(CATMathLine&amp;)
<dd>  Returns the axis of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetEndAngle()"><b>GetEndAngle</b></a>()
<dd>  Returns the end angle of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetParameterFromAngle(CATAngle,CATCrvParam&amp;)"><b>GetParameterFromAngle</b></a>(CATAngle,CATCrvParam&amp;)
<dd>  Retrieves the CATCrvParam of a point defined by its angle.
 <dt> o 
    <a href="#GetParameterFromZ(double,CATCrvParam&amp;)"><b>GetParameterFromZ</b></a>(double,CATCrvParam&amp;)
<dd>  Retrieves the CATCrvParam of a point defined by its Z coordinate.
 <dt> o 
    <a href="#GetPitch()"><b>GetPitch</b></a>()
<dd>  Returns the pitch of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetRadiusEvolution()"><b>GetRadiusEvolution</b></a>()
<dd>  Returns the coefficient of linear evolution of the radius 
 (the radius increase for one turn).
 <dt> o 
    <a href="#GetRadiusLaw(CATLaw*&amp;)"><b>GetRadiusLaw</b></a>(CATLaw*&amp;)
<dd>  Retrieves the law which defines how the radius evolves versus the helix length.
 <dt> o 
    <a href="#GetStartAngle()"><b>GetStartAngle</b></a>()
<dd>  Returns the start angle of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetStartingPoint(CATMathPoint&amp;)"><b>GetStartingPoint</b></a>(CATMathPoint&amp;)
<dd>  Returns the starting point of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetTheta0()"><b>GetTheta0</b></a>()
<dd>  Retrieves the angle(in radians) which defines position of the starting point with respect 
 to the reference CATMathVector.
 <dt> o 
    <a href="#GetThetaLaw(CATLaw*&amp;)"><b>GetThetaLaw</b></a>(CATLaw*&amp;)
<dd>  Retrieves the law which defines the number of turns made by the helix versus its length.
 <dt> o 
    <a href="#GetTrigonometricOrientation()"><b>GetTrigonometricOrientation</b></a>()
<dd>  Returns the trigonometric orientation of <tt>this</tt> CATSphere.
 <dt> o 
    <a href="#GetZFromParameter(CATCrvParam,double&amp;)"><b>GetZFromParameter</b></a>(CATCrvParam,double&amp;)
<dd>  Up to V5R21 and V6R209.
 <dt> o 
    <a href="#GetZFromParameter(CATCrvParam&amp;,double&amp;)"><b>GetZFromParameter</b></a>(CATCrvParam&amp;,double&amp;)
<dd>  From V5R21 and V6R209.
 <dt> o 
    <a href="#GetZLaw(CATLaw*&amp;)"><b>GetZLaw</b></a>(CATLaw*&amp;)
<dd>  Retrieves the law which defines how the z coordinates evolves versus the helix length.
 <dt> o 
    <a href="#Set(CATMathLine&amp;,CATMathPoint&amp;,CATAngle,CATAngle,double,CATLONG32,double)"><b>Set</b></a>(CATMathLine&amp;,CATMathPoint&amp;,CATAngle,CATAngle,double,CATLONG32,double)
<dd>  Modifies all the characteristics of <tt>this</tt> CATHelix.
 <dt> o 
    <a href="#SetTheta0(double)"><b>SetTheta0</b></a>(double)
<dd>  Modifies the helix starting with respect to the iUnitU reference vector.
 <dt> o 
    <a href="#SetTrigonometricOrientation(CATLONG32)"><b>SetTrigonometricOrientation</b></a>(CATLONG32)
<dd>  Modifies the orientation of <tt>this</tt> CATHelix.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#HelixType"><b>HelixType</b></a>
<dd>  The type of helix.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngleFromParameter"></a><a name="GetAngleFromParameter(CATCrvParam,CATAngle&amp;)"></a> <dt> o <b>GetAngleFromParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAngleFromParameter</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAngle','CATAngle&amp;')</script> <td><tt>oAngle</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Up to V5R21 and V6R209.
 Retrieves the angle of a point defined by its CATCrvParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd> The CATCrvParam.
 </dd>
    <dt><tt> oAngle</tt>
   <dd> The angle to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetAngleFromParameter"></a><a name="GetAngleFromParameter(CATCrvParam&amp;,CATAngle&amp;)"></a> <dt> o <b>GetAngleFromParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAngleFromParameter</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAngle','CATAngle&amp;')</script> <td><tt>oAngle</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 From V5R21 and V6R209. 
 Retrieves the angle of a point defined by its CATCrvParam.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd> The CATCrvParam.
 </dd>
    <dt><tt> oAngle</tt>
   <dd> The angle to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetAxis"></a><a name="GetAxis(CATMathLine&amp;)"></a> <dt> o <b>GetAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetAxis</b>(<td><script type="text/javascript"> activateLink('CATMathLine','CATMathLine&amp;')</script> <td><tt>oAxis</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the axis of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxis</tt>
   <dd> The CATMathLine which defines the helix axis.</dd>
</dl>
</dl>
</dl>
<a name="GetEndAngle"></a><a name="GetEndAngle()"></a> <dt> o <b>GetEndAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script>  <b>GetEndAngle</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the end angle of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the angle in radians.
</dl>
</dl>
<a name="GetParameterFromAngle"></a><a name="GetParameterFromAngle(CATAngle,CATCrvParam&amp;)"></a> <dt> o <b>GetParameterFromAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetParameterFromAngle</b>(<td><script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>oParam</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the CATCrvParam of a point defined by its angle.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngle</tt>
   <dd> The angle in radians.
 </dd>
    <dt><tt> oParam</tt>
   <dd> The CATCrvParam to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetParameterFromZ"></a><a name="GetParameterFromZ(double,CATCrvParam&amp;)"></a> <dt> o <b>GetParameterFromZ</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetParameterFromZ</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>oParam</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the CATCrvParam of a point defined by its Z coordinate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iZ</tt>
   <dd> The coordinate of the point along Oz.
 </dd>
    <dt><tt> oParam</tt>
   <dd> The CATCrvParam to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetPitch"></a><a name="GetPitch()"></a> <dt> o <b>GetPitch</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetPitch</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the pitch of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pitch value.
</dl>
</dl>
<a name="GetRadiusEvolution"></a><a name="GetRadiusEvolution()"></a> <dt> o <b>GetRadiusEvolution</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetRadiusEvolution</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the coefficient of linear evolution of the radius 
 (the radius increase for one turn).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the coefficient.
</dl>
</dl>
<a name="GetRadiusLaw"></a><a name="GetRadiusLaw(CATLaw*&amp;)"></a> <dt> o <b>GetRadiusLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetRadiusLaw</b>(<td> const <script type="text/javascript"> activateLink('CATLaw','CATLaw*&amp;')</script> <td><tt>oRadiusLaw</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the law which defines how the radius evolves versus the helix length.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadiusLaw</tt>
   <dd> The CATLaw to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetStartAngle"></a><a name="GetStartAngle()"></a> <dt> o <b>GetStartAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script>  <b>GetStartAngle</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the start angle of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the angle in radians.
</dl>
</dl>
<a name="GetStartingPoint"></a><a name="GetStartingPoint(CATMathPoint&amp;)"></a> <dt> o <b>GetStartingPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetStartingPoint</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oPoint</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the starting point of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPoint</tt>
   <dd> The CATMathPoint which defines the starting point.</dd>
</dl>
</dl>
</dl>
<a name="GetTheta0"></a><a name="GetTheta0()"></a> <dt> o <b>GetTheta0</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetTheta0</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the angle(in radians) which defines position of the starting point with respect 
 to the reference CATMathVector.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The angle(in radians) to be retrieved.
</dl>
</dl>
<a name="GetThetaLaw"></a><a name="GetThetaLaw(CATLaw*&amp;)"></a> <dt> o <b>GetThetaLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThetaLaw</b>(<td> const <script type="text/javascript"> activateLink('CATLaw','CATLaw*&amp;')</script> <td><tt>oThetaLaw</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the law which defines the number of turns made by the helix versus its length.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oThetaLaw</tt>
   <dd> The CATLaw to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetTrigonometricOrientation"></a><a name="GetTrigonometricOrientation()"></a> <dt> o <b>GetTrigonometricOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetTrigonometricOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the trigonometric orientation of <tt>this</tt> CATSphere.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The value of the orientation: 1 (counterclockwise), -1 (clockwise).
</dl>
</dl>
<a name="GetZFromParameter"></a><a name="GetZFromParameter(CATCrvParam,double&amp;)"></a> <dt> o <b>GetZFromParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetZFromParameter</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oZ</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Up to V5R21 and V6R209.
 Retrieves the Z coordinate of a point defined by its CATCrvParam.	
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd> The input CATCrvParam.
 </dd>
    <dt><tt> oZ</tt>
   <dd> The coordinate(along Z)to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetZFromParameter"></a><a name="GetZFromParameter(CATCrvParam&amp;,double&amp;)"></a> <dt> o <b>GetZFromParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetZFromParameter</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oZ</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 From V5R21 and V6R209. 
 Retrieves the Z coordinate of a point defined by its CATCrvParam.	
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParam</tt>
   <dd> The input CATCrvParam.
 </dd>
    <dt><tt> oZ</tt>
   <dd> The coordinate(along Z)to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetZLaw"></a><a name="GetZLaw(CATLaw*&amp;)"></a> <dt> o <b>GetZLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetZLaw</b>(<td> const <script type="text/javascript"> activateLink('CATLaw','CATLaw*&amp;')</script> <td><tt>oZLaw</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the law which defines how the z coordinates evolves versus the helix length.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oZLaw</tt>
   <dd> The CATLaw to be retrieved.</dd>
</dl>
</dl>
</dl>
<a name="Set"></a><a name="Set(CATMathLine&amp;,CATMathPoint&amp;,CATAngle,CATAngle,double,CATLONG32,double)"></a> <dt> o <b>Set</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Set</b>(<td> const <script type="text/javascript"> activateLink('CATMathLine','CATMathLine&amp;')</script> <td><tt>iAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iStartingPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iStartAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iEndAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPitch</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iTrigonometricOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadiusEvolution</tt><td><tt>= 0.</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies all the characteristics of <tt>this</tt> CATHelix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxis</tt>
   <dd> The new axis.
 </dd>
    <dt><tt> iStartingPoint</tt>
   <dd> The new starting point.
 </dd>
    <dt><tt> iStartAngle</tt>
   <dd> The new start angle.
 </dd>
    <dt><tt> iEndAngle</tt>
   <dd> The new end angle.
 </dd>
    <dt><tt> iPitch</tt>
   <dd> The new pitch.
 </dd>
    <dt><tt> iTrigonometricOrientation</tt>
   <dd> The new trigonometric orientation.
 </dd>
    <dt><tt> iRadiusEvolution</tt>
   <dd> The new radius evolution.</dd>
</dl>
</dl>
</dl>
<a name="SetTheta0"></a><a name="SetTheta0(double)"></a> <dt> o <b>SetTheta0</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTheta0</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTheta0</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the helix starting with respect to the iUnitU reference vector.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTheta0</tt>
   <dd> Defines a starting point for the new helix. The value must be specified in radians.
 If 0 is specified, the starting point is located along iUnitU. Otherwise, it is shifted according 
 to the iTheta0 value.</dd>
</dl>
</dl>
</dl>
<a name="SetTrigonometricOrientation"></a><a name="SetTrigonometricOrientation(CATLONG32)"></a> <dt> o <b>SetTrigonometricOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTrigonometricOrientation</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iTrigonometricOrientation</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the orientation of <tt>this</tt> CATHelix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrigonometricOrientation</tt>
   <dd> The orientation of the rotation about the axis: 1 to turn counterclockwise,
 -1 to turn clockwise.</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="HelixType"> <dt> o <b>HelixType</b>
<dl>
  <dd>
<pre>
enum <b>HelixType</b> {
  ConstantPitch,
  VariablePitch
}
</pre>
 The type of helix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ConstantPitch</tt>
   <dd> Helix with a constant pitch.
 </dd>
    <dt><tt> VariablePitch</tt>
   <dd> Helix with a variable pitch.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATHelix.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricObjects</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
