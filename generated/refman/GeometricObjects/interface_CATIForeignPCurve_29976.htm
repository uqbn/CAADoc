<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricObjects Interface CATIForeignPCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricObjects.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIForeignPCurve','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIForeignPCurve','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIForeignPCurve','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIForeignPCurve','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricObjects Interface CATIForeignPCurve</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIForeignPCurve_29976','CATIForeignPCurve','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIForeignPCurve</b>
</p>
<p>
<b><i> Interface representing the class of the foreign mono-parameterized
 geometric elements in surface parametric space.</i></b><br>
 
 <br>A foreign PCurve is introduced into CGM by filling the CATIForeignPCurve object data
 with a CATForeignPCurveData. Then, it is automatically integrated into CGM, and
 can be used as any CATCurve by the operators and the topology.
 To create your own Curve class, you have to derive the CATForeignPCurveData
 class, and re-write the methods that are associated with.
 <br> A CATIForeignPCurve object is create through the method <a href="#" onClick="openLink('CATGeoFactory','CreateForeignPCurve');return false">CATGeoFactory.CreateForeignPCurve</a> . 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATForeignPCurveData','');return false">CATForeignPCurveData</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetData()"><b>GetData</b></a>()
<dd>  Retrieves a pointer to the data of <tt>this</tt> CATIForeignPCurve.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetData"></a><a name="GetData()"></a> <dt> o <b>GetData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATForeignPCurveData','CATForeignPCurveData *')</script>  <b>GetData</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a pointer to the data of <tt>this</tt> CATIForeignPCurve.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the data of <tt>this</tt> foreign PCurve.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIForeignPCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricObjects</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
