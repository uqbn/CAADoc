<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ConstraintModelerInterfaces Interface CATIDimCst2</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ConstraintModelerInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDimCst2','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDimCst2','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDimCst2','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDimCst2','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ConstraintModelerInterfaces Interface CATIDimCst2</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDimCst2_45041','CATIDimCst2','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDimCst2</b>
</p>
<p>
<b><i> Interface to manage constraints and parameters visualization.</i></b><br>

 <b>Role</b>: This interface unifies behaviors of constraints 
 and features' parameters for visualization purpose.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCalloutPositionForDimension3d(double*,double*)"><b>GetCalloutPositionForDimension3d</b></a>(double*,double*)
<dd>  Gets the callout anchor point and the normal to dimension plane.
 <dt> o 
    <a href="#GetDisplayMode(DisplayMode&amp;)"><b>GetDisplayMode</b></a>(DisplayMode&amp;)
<dd>   Gets the display mode of the constraint.
 <dt> o 
    <a href="#SetCalloutPositionForDimension3d(double*)"><b>SetCalloutPositionForDimension3d</b></a>(double*)
<dd>  Sets the callout position for 3D dimension.
 <dt> o 
    <a href="#SetDisplayMode(DisplayMode)"><b>SetDisplayMode</b></a>(DisplayMode)
<dd>   Sets the display mode of the constraint.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#DisplayMode"><b>DisplayMode</b></a>
<dd>  Constraint display mode.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCalloutPositionForDimension3d"></a><a name="GetCalloutPositionForDimension3d(double*,double*)"></a> <dt> o <b>GetCalloutPositionForDimension3d</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCalloutPositionForDimension3d</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oCallout</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oNorm</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the callout anchor point and the normal to dimension plane.
 (Necessary to create a 3D manipulator).
 Allows users to get the position of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCallout</tt>
   <dd>   coordinates of the callout in an array of 3 doubles.
 </dd>
    <dt><tt> oNorm</tt>
   <dd>    coordinates of the normal to dimension plane in an array of 3 doubles.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="GetDisplayMode"></a><a name="GetDisplayMode(DisplayMode&amp;)"></a> <dt> o <b>GetDisplayMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDisplayMode</b>(<td><script type="text/javascript"> activateLink('DisplayMode','DisplayMode&amp;')</script> <td><tt>oDisplayMode</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
  Gets the display mode of the constraint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDisplayMode</tt>
   <dd> <b>Legal values</b>:
 <br><tt>DisplayValue :</tt>   The text of the constraint is displayed as its value.
 <br><tt>DisplayName :</tt>   The text of the constraint is displayed as its name.
 <br><tt>DisplayNameAndValue :</tt>   The text of the constraint is displayed as its name = value.
 <br><tt>DisplayNameAndValueAndFormula :</tt>   The text of the constraint is displayed as its name = value - formula.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetCalloutPositionForDimension3d"></a><a name="SetCalloutPositionForDimension3d(double*)"></a> <dt> o <b>SetCalloutPositionForDimension3d</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCalloutPositionForDimension3d</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iCallout</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the callout position for 3D dimension.
 Throws <tt>GeometricalException</tt>.
 Allows users to choose a position for the constraint.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCallout</tt>
   <dd>   coordinates of the callout as an array of 3 doubles.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetDisplayMode"></a><a name="SetDisplayMode(DisplayMode)"></a> <dt> o <b>SetDisplayMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDisplayMode</b>(<td> const <script type="text/javascript"> activateLink('DisplayMode','DisplayMode')</script> <td><tt>iDisplayMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the display mode of the constraint. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDisplayMode</tt>
   <dd> <b>Legal values</b>:
 <br><tt>DisplayValue :</tt>   The text of the constraint is displayed as its value.
 <br><tt>DisplayName :</tt>   The text of the constraint is displayed as its name.
 <br><tt>DisplayNameAndValue :</tt>   The text of the constraint is displayed as its name = value.
 <br><tt>DisplayNameAndValueAndFormula :</tt>   The text of the constraint is displayed as its name = value - formula.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="DisplayMode"> <dt> o <b>DisplayMode</b>
<dl>
  <dd>
<pre>
enum <b>DisplayMode</b> {
  DisplayValue,
  DisplayName,
  DisplayNameAndValue,
  DisplayNameAndValueAndFormula
}
</pre>
 Constraint display mode.
 The mode is used as input parameter in 
<a href="#" onClick="openLink('','SetDisplayMode');return false">SetDisplayMode</a> and as output parameter in 
<a href="#" onClick="openLink('','GetDisplayMode');return false">GetDisplayMode</a> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> DisplayValue</tt>
   <dd>    The text of the constraint is displayed as its value.
 </dd>
    <dt><tt> DisplayName</tt>
   <dd>     The text of the constraint is displayed as its name.
 </dd>
    <dt><tt> DisplayNameAndValue</tt>
   <dd>     The text of the constraint is displayed as its name = value.
 </dd>
    <dt><tt> DisplayNameAndValueAndFormula</tt>
   <dd>     The text of the constraint is displayed as its name = value - formula.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDimCst2.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATConstraintModelerItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
