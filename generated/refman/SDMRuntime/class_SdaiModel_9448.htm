<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SDMRuntime Class SdaiModel</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SDMRuntime.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('SdaiModel','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SdaiModel','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('SdaiModel','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SdaiModel','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SDMRuntime Class SdaiModel</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_SdaiModel_9448','SdaiModel','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SdaiModel</b>
</p>
<p>
<b><i> Class representing a set of SDAI instances corresponding to a given schema.</i></b><br>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#COWing()"><b>COWing</b></a>()
<dd>  This is used to determine if this SdaiModel has Copy-On-Write enabled.
 <dt> o 
    <a href="#CloseModel()"><b>CloseModel</b></a>()
<dd>  Closes a SdaiModel
 <dt> o 
    <a href="#GetEntityDefinition(SdaiString&amp;)"><b>GetEntityDefinition</b></a>(SdaiString&amp;)
<dd>  Gets the definition of a type as an entity in a SdaiModel.
 <dt> o 
    <a href="#GetEntityExtent(SdaiString&amp;)"><b>GetEntityExtent</b></a>(SdaiString&amp;)
<dd>  Gets all instances of a given type (and its sub types) in a SdaiModel.
 <dt> o 
    <a href="#IsChanged()"><b>IsChanged</b></a>()
<dd>  Tests if a SdaiModel has been modified
  
 <dt> o 
    <a href="#Name()"><b>Name</b></a>()
<dd>  Gets the name of a SdaiModel.
 <dt> o 
    <a href="#Underlying_schema()"><b>Underlying_schema</b></a>()
<dd>  Gets the SdaiSchema corresponding to a SdaiModel.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="COWing"></a><a name="COWing()"></a> <dt> o <b>COWing</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiRoot::COWSupport','SdaiRoot::COWSupport')</script>  <b>COWing</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 This is used to determine if this SdaiModel has Copy-On-Write enabled.
</dl>
<a name="CloseModel"></a><a name="CloseModel()"></a> <dt> o <b>CloseModel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CloseModel</b>(<td>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Closes a SdaiModel
</dl>
<a name="GetEntityDefinition"></a><a name="GetEntityDefinition(SdaiString&amp;)"></a> <dt> o <b>GetEntityDefinition</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiEntityH','const SdaiEntityH')</script>  <b>GetEntityDefinition</b>(<td> const <script type="text/javascript"> activateLink('SdaiString','SdaiString&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets the definition of a type as an entity in a SdaiModel.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> -</tt>
   <dd> The type to describe  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  - The SdaiEntity
</dl>
</dl>
<a name="GetEntityExtent"></a><a name="GetEntityExtent(SdaiString&amp;)"></a> <dt> o <b>GetEntityExtent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('SDAIAGGRH(SdaiSet,SdaiEntityInstanceH)','const SDAIAGGRH(SdaiSet,SdaiEntityInstanceH)')</script>  <b>GetEntityExtent</b>(<td> const <script type="text/javascript"> activateLink('SdaiString','SdaiString&amp;')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets all instances of a given type (and its sub types) in a SdaiModel.
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  - the list of SdaiEntityInstance
</dl>
</dl>
<a name="IsChanged"></a><a name="IsChanged()"></a> <dt> o <b>IsChanged</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsChanged</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests if a SdaiModel has been modified
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  1 if Model has changed, 0 else.
</dl>
</dl>
<a name="Name"></a><a name="Name()"></a> <dt> o <b>Name</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiString','const SdaiString &')</script>  <b>Name</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets the name of a SdaiModel.
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  - the name of the model
</dl>
</dl>
<a name="Underlying_schema"></a><a name="Underlying_schema()"></a> <dt> o <b>Underlying_schema</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiSchemaH','const SdaiSchemaH')</script>  <b>Underlying_schema</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Gets the SdaiSchema corresponding to a SdaiModel.
</dl>
<hr>
 This object is included in the file: <b>SdaiModel.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSrtSessionMgmt</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
