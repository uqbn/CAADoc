<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>SDMRuntime Class SdaiString</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../SDMRuntime.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('SdaiString','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SdaiString','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('SdaiString','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SdaiString','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SDMRuntime Class SdaiString</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_SdaiString_10552','SdaiString','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>SdaiString</b>
</p>
<p>
<b><i> Class representing any type supporting a string in SDAI -- C++ Language Binding.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~SdaiString()"><b>~SdaiString</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#operator=(char*)"><b>operator=</b></a>(char*)
<dd>    = operator to construct a SdaiString from a char *
 <dt> o 
    <a href="#operator=(CATString&amp;)"><b>operator=</b></a>(CATString&amp;)
<dd>    = operator to construct a SdaiString from a CATString
 <dt> o 
    <a href="#operator=(SdaiString&amp;)"><b>operator=</b></a>(SdaiString&amp;)
<dd>    = operator to construct a SdaiString from another one
 <dt> o 
    <a href="#operator=(CATUnicodeString&amp;)"><b>operator=</b></a>(CATUnicodeString&amp;)
<dd>    = operator to construct a SdaiString from a CATUnicodeString
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~SdaiString"></a><a name="~SdaiString()"></a> <dt> o <b>~SdaiString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~SdaiString</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="operator="></a><a name="operator=(char*)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiString','SdaiString&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iStr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a char *
</dl>
<a name="operator="></a><a name="operator=(CATString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiString','SdaiString&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iStr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a CATString
</dl>
<a name="operator="></a><a name="operator=(SdaiString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiString','SdaiString&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('SdaiString','SdaiString&amp;')</script> <td><tt>iStr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from another one
</dl>
<a name="operator="></a><a name="operator=(CATUnicodeString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('SdaiString','SdaiString&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iStr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   = operator to construct a SdaiString from a CATUnicodeString
</dl>
<hr>
 This object is included in the file: <b>SdaiString.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSrtSimpleTypes</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
