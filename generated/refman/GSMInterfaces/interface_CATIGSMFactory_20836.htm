<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIGSMFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIGSMFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMFactory_20836','CATIGSMFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMFactory</b>
</p>
<p>
<b><i> Factory of all geometrical elements of Generative Shape Design workshop.</i></b><br>

 <b>Role</b>: Creation of all Generative Shape Design feature.
 <p> 
 All methods described here work on CATISpecObject (for geometrical elements)
 and CATICkeParm (for data such as lengths, angles, ratios...).
 Note: If the creation fails, the methods return NULL_var.
 <p>
 Note: If the creation fails, the methods return NULL_var.
 <p>
 This factory never agregates the created feature.
 You need to agregate your object in a GSMTool feature to see it in 3D and Graph. 
 GSMTool feature can be either HybridBody(Body), Geometrical Set (GS) or Ordered Geometrical Set (OGS). 
 <br>You can use :
 <ul> 
 <li> either the interface CATIMechanicalRootFactory to create the GSMTool and 
 the interface CATIDescendants on GSMTool to agregate the GSM feature.</li>
 <li>  or in a more straigh forward way the method InsertInProceduralView method 
 of CATIGSMProceduralView Interface. (recommended since V5R12) </li>
 </ul> 
 <p>
 Once aggregated the feature has to be updated. 
 <p> 
 If feature is inserted in Body or OGS, you have to call CATMmrLinearBodyServices::Insert() 
 This method checks the linearity of the Parent/Children relationship and ,if needed,
 performed re-arrangement(Replace) to makes sure that created feature depends logically of just previouly created feature 
 <p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMProceduralView','');return false">CATIGSMProceduralView</a>, <a href="#" onClick="openLink('CATIMechanicalRootFactory','');return false">CATIMechanicalRootFactory</a>, <a href="#" onClick="openLink('CATIGSMTool','');return false">CATIGSMTool</a>, <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATICkeParmFactory','');return false">CATICkeParmFactory</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ConvertToDatum(CATISpecObject_var&amp;,CATListValCATISpecObject_var*&amp;,int)"><b>ConvertToDatum</b></a>(CATISpecObject_var&amp;,CATListValCATISpecObject_var*&amp;,int)
<dd>  Converts the spec to a datum feature.
 <dt> o 
    <a href="#Create3DCorner(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)"><b>Create3DCorner</b></a>(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)
<dd>  Creates a 3D corner curve between a point and a curve or 2 curves along a direction.
 <dt> o 
    <a href="#Create3DCurveOffset(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)"><b>Create3DCurveOffset</b></a>(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)
<dd>  Creates a 3D Curve Offset.
 <dt> o 
    <a href="#CreateAffinity(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateAffinity</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates an affinity of a point, curve or surface.
 <dt> o 
    <a href="#CreateAssemble(CATICkeParm_var,CATBoolean)"><b>CreateAssemble</b></a>(CATICkeParm_var,CATBoolean)
<dd>  Creates a composite curve or surface.
 <dt> o 
    <a href="#CreateAssemble(CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATBoolean)"><b>CreateAssemble</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATBoolean)
<dd>  Creates a composite curve or surface from a list of curves or surfaces.
 <dt> o 
    <a href="#CreateAxisExplicit(int&amp;,CATMathPoint*,CATMathDirection*)"><b>CreateAxisExplicit</b></a>(int&amp;,CATMathPoint*,CATMathDirection*)
<dd>  Creates an explicit axis which has no associative father but
 only a geometrical output.
 <dt> o 
    <a href="#CreateAxisLine(CATISpecObject_var,CATGSMAxisLineType,CATIGSMDirection_var)"><b>CreateAxisLine</b></a>(CATISpecObject_var,CATGSMAxisLineType,CATIGSMDirection_var)
<dd>  Creates an Axis from the input element.
 <dt> o 
    <a href="#CreateAxisToAxis(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateAxisToAxis</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a transformation from a reference axis system to a target axis
 system of point, curve or surface.
 <dt> o 
    <a href="#CreateBiDimExplicit()"><b>CreateBiDimExplicit</b></a>()
<dd>  Creates a simple surface.
 <dt> o 
    <a href="#CreateBlend()"><b>CreateBlend</b></a>()
<dd>  Creates a blend surface.
 <dt> o 
    <a href="#CreateBoundary(CATISpecObject_var,CATISpecObject_var,CATIGSMBoundaryPropag,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)"><b>CreateBoundary</b></a>(CATISpecObject_var,CATISpecObject_var,CATIGSMBoundaryPropag,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)
<dd>  Creates a boundary.
 <dt> o 
    <a href="#CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a circle passing through 3 points.
 <dt> o 
    <a href="#CreateCircle(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)"><b>CreateCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)
<dd>    Creates a circle from point and axis.
 <dt> o 
    <a href="#CreateCircle(CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a circle from its center and a radius with respect to a support  surface.
 <dt> o 
    <a href="#CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var)"><b>CreateCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a circle from its center and a passing point with respect to a support  surface.
 <dt> o 
    <a href="#CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATGSMOrientation)"><b>CreateCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATGSMOrientation)
<dd>  Creates a circle passing through 2 points with a given radius with respect to a support surface.
 <dt> o 
    <a href="#CreateCircleExplicit()"><b>CreateCircleExplicit</b></a>()
<dd>  Creates an explicit circle which has no associative father but
 only a geometrical output.
 <dt> o 
    <a href="#CreateCircularSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateCircularSweep</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a sweep with a circular implicit profile.
 <dt> o 
    <a href="#CreateCombine(CATISpecObject_var,CATIGSMDirection_var,CATISpecObject_var,CATIGSMDirection_var,CATGSMCombineSolutionType,CATGSMCombineSolutionTypeCombine)"><b>CreateCombine</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATISpecObject_var,CATIGSMDirection_var,CATGSMCombineSolutionType,CATGSMCombineSolutionTypeCombine)
<dd>  Creates a combined curve.
 <dt> o 
    <a href="#CreateConic(CATISpecObject_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATISpecObject_var,CATICkeParm_var,int)"><b>CreateConic</b></a>(CATISpecObject_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATISpecObject_var,CATICkeParm_var,int)
<dd>  Creates a Conic Curve.
 <dt> o 
    <a href="#CreateConicalSweep(CATISpecObject_var,CATISpecObject_var)"><b>CreateConicalSweep</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a sweep with a conical implicit profile.
 <dt> o 
    <a href="#CreateConnect(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATBoolean)"><b>CreateConnect</b></a>(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATBoolean)
<dd>  Creates a connect curve  between two curves.
 <dt> o 
    <a href="#CreateCorner(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)"><b>CreateCorner</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)
<dd>  Creates a corner curve between a point and a curve or 2 curves on a support surface.
 <dt> o 
    <a href="#CreateCurveCst(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATIGSMDirection_var,CATICkeParm_var)"><b>CreateCurveCst</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATIGSMDirection_var,CATICkeParm_var)
<dd>  Creates a Curve Constraint from Point, Tangency and Curvature Data.
 <dt> o 
    <a href="#CreateCurvePar(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean,int,CATBoolean)"><b>CreateCurvePar</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean,int,CATBoolean)
<dd>  Creates a curve which is an offset (constant) from another curve.
 <dt> o 
    <a href="#CreateCurvePar(CATISpecObject_var,CATISpecObject_var,CATICkeLaw_var,CATBoolean,int,CATBoolean,CATBoolean)"><b>CreateCurvePar</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeLaw_var,CATBoolean,int,CATBoolean,CATBoolean)
<dd>  Creates a curve which is an offset (specified by a law) from another curve.
 <dt> o 
    <a href="#CreateCurveSmooth(CATISpecObject_var)"><b>CreateCurveSmooth</b></a>(CATISpecObject_var)
<dd>  Creates a smoothed curve.
 <dt> o 
    <a href="#CreateCuttingPoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateCuttingPoint</b></a>(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a cutting point from its cartesian coordinates (used to cut or fill twisted areas in sweep feature).
 <dt> o 
    <a href="#CreateCuttingPoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)"><b>CreateCuttingPoint</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)
<dd>  Creates a cutting point on curve at a given curvilinear distance (used to cut or fill twisted areas in sweep feature).
 <dt> o 
    <a href="#CreateCylinder(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"><b>CreateCylinder</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)
<dd>  Creates an extruded surface or an extruded line.
 <dt> o 
    <a href="#CreateDirection(CATISpecObject_var)"><b>CreateDirection</b></a>(CATISpecObject_var)
<dd>  Creates a direction from a line or a iplane.
 <dt> o 
    <a href="#CreateDirection(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateDirection</b></a>(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a direction from 3 componants (X,Y,Z).
 <dt> o 
    <a href="#CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATBoolean)"><b>CreateExplicitSweep</b></a>(CATISpecObject_var,CATISpecObject_var,CATBoolean)
<dd>  Creates a simple sweep with an explicit profile.
 <dt> o 
    <a href="#CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean)"><b>CreateExplicitSweep</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean)
<dd>  Creates a sweep with an explicit profile.
 <dt> o 
    <a href="#CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)"><b>CreateExplicitSweep</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)
<dd>  Creates a sweep with an explicit profile and a reference surface.
 <dt> o 
    <a href="#CreateExtractMulti(CATLISTV(CATISpecObject_var)&amp;)"><b>CreateExtractMulti</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Extract a sub-element of a solid (vertex, edge or face).
 <dt> o 
    <a href="#CreateExtractSolide(CATISpecObject_var,CATIGSMExtractSolidePropag)"><b>CreateExtractSolide</b></a>(CATISpecObject_var,CATIGSMExtractSolidePropag)
<dd>  Extract a sub-element of a solid (vertex, edge or face).
 <dt> o 
    <a href="#CreateExtrapol(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)"><b>CreateExtrapol</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)
<dd>  Creates a surface or a curve by extrapolating a surface or a curve.
 <dt> o 
    <a href="#CreateExtrapol(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)"><b>CreateExtrapol</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)
<dd>  Creates a surface or a curve by extrapolating a curve or a surface.
 <dt> o 
    <a href="#CreateExtremum(CATISpecObject_var,CATIGSMDirection_var,GSMMinMax)"><b>CreateExtremum</b></a>(CATISpecObject_var,CATIGSMDirection_var,GSMMinMax)
<dd>  Creates an Extremum.
 <dt> o 
    <a href="#CreateExtremumPolar(unsigned short int,CATISpecObject_var)"><b>CreateExtremumPolar</b></a>(unsigned short int,CATISpecObject_var)
<dd>  Creates a 2D Extremum in polar coordinates.
 <dt> o 
    <a href="#CreateExtrude(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"><b>CreateExtrude</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)
<dd>  Creates an extruded surface or an extruded line.
 <dt> o 
    <a href="#CreateFill()"><b>CreateFill</b></a>()
<dd>  Creates a fill surface.
 <dt> o 
    <a href="#CreateFill(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity)"><b>CreateFill</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity)
<dd>  Creates a fill surface from a list of boundaries (curves, lines).
 <dt> o 
    <a href="#CreateFill(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity,CATISpecObject_var)"><b>CreateFill</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity,CATISpecObject_var)
<dd>  Creates a fill surface from a list of boundaries (curves, lines).
 <dt> o 
    <a href="#CreateFillet(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATICkeParm_var,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)"><b>CreateFillet</b></a>(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATICkeParm_var,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)
<dd>  Creates a sphere bitangent fillet between two skins.
 <dt> o 
    <a href="#CreateFilletTriTangent(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)"><b>CreateFilletTriTangent</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)
<dd>  Creates a TriTangent fillet between three skins.
 <dt> o 
    <a href="#CreateGridSet(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATBoolean)"><b>CreateGridSet</b></a>(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATBoolean)
<dd>  Creates a GridSet with a point and a direction.
 <dt> o 
    <a href="#CreateHealing(CATLISTV(CATISpecObject_var)&amp;)"><b>CreateHealing</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Creates a composite surface.
 <dt> o 
    <a href="#CreateHealing(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateHealing</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a G0 composite surface from a list of surfaces.
 <dt> o 
    <a href="#CreateHealing(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode)"><b>CreateHealing</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode)
<dd>  Creates a G0 or G1 composite surface from a list of surfaces.
 <dt> o 
    <a href="#CreateHelix(CATISpecObject_var,CATBoolean,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATBoolean)"><b>CreateHelix</b></a>(CATISpecObject_var,CATBoolean,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATBoolean)
<dd>  Creates an helix curve.
 <dt> o 
    <a href="#CreateIntersect(CATISpecObject_var,CATISpecObject_var,CATBoolean)"><b>CreateIntersect</b></a>(CATISpecObject_var,CATISpecObject_var,CATBoolean)
<dd>  Creates the Intersection of two elements.
 <dt> o 
    <a href="#CreateInverse(CATISpecObject_var)"><b>CreateInverse</b></a>(CATISpecObject_var)
<dd>  Inverts the orientation of a curve or a surface.
 <dt> o 
    <a href="#CreateLawDistProj(CATISpecObject_var,CATISpecObject_var,CATBoolean)"><b>CreateLawDistProj</b></a>(CATISpecObject_var,CATISpecObject_var,CATBoolean)
<dd>   Creates a law from two curves : a reference and a definition curve.
 <dt> o 
    <a href="#CreateLine(double*,double*)"><b>CreateLine</b></a>(double*,double*)
<dd>  Creates an explicit line (infinite).
 <dt> o 
    <a href="#CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateLine</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a line between two points.
 <dt> o 
    <a href="#CreateLine(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"><b>CreateLine</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)
<dd>  Creates a line starting at a point and in a given direction.
 <dt> o 
    <a href="#CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,int)"><b>CreateLine</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,int)
<dd>  Creates a line bisecting two other lines.
 <dt> o 
    <a href="#CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)"><b>CreateLine</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)
<dd>  Creates a line at an angle to a reference curve at a given
 point and on a support surface.
 <dt> o 
    <a href="#CreateLineBiTangent(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreateLineBiTangent</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a line tangent to two elements on a support  surface.
 <dt> o 
    <a href="#CreateLineExplicit()"><b>CreateLineExplicit</b></a>()
<dd>  Creates an explicit line which has no associative father but
 only a geometrical output.
 <dt> o 
    <a href="#CreateLineNormal(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)"><b>CreateLineNormal</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)
<dd>  Creates a line normal to a surface at a given point.
 <dt> o 
    <a href="#CreateLinePtPt(double*,double*)"><b>CreateLinePtPt</b></a>(double*,double*)
<dd>  Creates an explicit line between two points (Limited line).
 <dt> o 
    <a href="#CreateLineTangency(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"><b>CreateLineTangency</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)
<dd>  Creates a line tangent to a curve at a given point.
 <dt> o 
    <a href="#CreateLinearSweep(CATISpecObject_var,CATISpecObject_var)"><b>CreateLinearSweep</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a sweep with a linear implicit profile.
 <dt> o 
    <a href="#CreateLoft()"><b>CreateLoft</b></a>()
<dd>  Creates a lofted surface.
 <dt> o 
    <a href="#CreateLoft(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)"><b>CreateLoft</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)
<dd>  Creates a loft.
 <dt> o 
    <a href="#CreateLoft(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)&amp;,CATGSMLoftSpineType,CATISpecObject_var)"><b>CreateLoft</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)&amp;,CATGSMLoftSpineType,CATISpecObject_var)
<dd>  Creates a lofted surface.
 <dt> o 
    <a href="#CreateMonoDimExplicit()"><b>CreateMonoDimExplicit</b></a>()
<dd>  Creates a simple curve.
 <dt> o 
    <a href="#CreateNear(CATISpecObject_var,CATISpecObject_var)"><b>CreateNear</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates the nearest element of a multi-element feature according to a given reference.
 <dt> o 
    <a href="#CreateNewAssemble()"><b>CreateNewAssemble</b></a>()
<dd>  Creates a composite curve or surface.
 <dt> o 
    <a href="#CreateOffset(CATISpecObject_var,CATICkeParm_var,CATBoolean,CATBoolean)"><b>CreateOffset</b></a>(CATISpecObject_var,CATICkeParm_var,CATBoolean,CATBoolean)
<dd>  Creates a surface which is an offset from another surface.
 <dt> o 
    <a href="#CreatePlane(double*,double*,double*)"><b>CreatePlane</b></a>(double*,double*,double*)
<dd>  Creates an explicit iplane.
 <dt> o 
    <a href="#CreatePlane(CATISpecObject_var)"><b>CreatePlane</b></a>(CATISpecObject_var)
<dd>  Creates a iplane passing through a planar curve.
 <dt> o 
    <a href="#CreatePlane(CATLISTV(CATISpecObject_var)&amp;)"><b>CreatePlane</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Creates a mean iplane through a set of points.
 <dt> o 
    <a href="#CreatePlane(CATISpecObject_var,CATISpecObject_var,int)"><b>CreatePlane</b></a>(CATISpecObject_var,CATISpecObject_var,int)
<dd>  Creates a iplane passing through 2 lines.
 <dt> o 
    <a href="#CreatePlane(CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)"><b>CreatePlane</b></a>(CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)
<dd>  Creates a iplane which is offset from another iplane.
 <dt> o 
    <a href="#CreatePlane(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"><b>CreatePlane</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a iplane passing through 3 points.
 <dt> o 
    <a href="#CreatePlane(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreatePlane</b></a>(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a iplane from its equation : Ax+By+Cz=D.
 <dt> o 
    <a href="#CreatePlane(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)"><b>CreatePlane</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)
<dd>     Creates a iplane at an angle to another iplane.
 <dt> o 
    <a href="#CreatePlane1Line1Pt(CATISpecObject_var,CATISpecObject_var)"><b>CreatePlane1Line1Pt</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a iplane passing through 1 line and 1 point.
 <dt> o 
    <a href="#CreatePlaneExplicit()"><b>CreatePlaneExplicit</b></a>()
<dd>  Creates an explicit iplane which has no associative father but
 only a geometrical output.
 <dt> o 
    <a href="#CreatePlaneNormal(CATISpecObject_var,CATISpecObject_var)"><b>CreatePlaneNormal</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a iplane normal to a curve at a given point.
 <dt> o 
    <a href="#CreatePlaneOffsetPt(CATISpecObject_var,CATISpecObject_var)"><b>CreatePlaneOffsetPt</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a iplane which is offset from another iplane.
 <dt> o 
    <a href="#CreatePlaneTangent(CATISpecObject_var,CATISpecObject_var)"><b>CreatePlaneTangent</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a iplane tangent to a surface at a given point.
 <dt> o 
    <a href="#CreatePoint()"><b>CreatePoint</b></a>()
<dd>  Creates a point defined with a formula.
 <dt> o 
    <a href="#CreatePoint(double*)"><b>CreatePoint</b></a>(double*)
<dd>  Creates an explicit point.
 <dt> o 
    <a href="#CreatePoint(CATISpecObject_var)"><b>CreatePoint</b></a>(CATISpecObject_var)
<dd>  Creates a point at the center of a circle.
 <dt> o 
    <a href="#CreatePoint(CATISpecObject_var,CATIGSMDirection_var)"><b>CreatePoint</b></a>(CATISpecObject_var,CATIGSMDirection_var)
<dd>  Creates a point on a given curve where the tangent is colinear to a given direction.
 <dt> o 
    <a href="#CreatePoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreatePoint</b></a>(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a point from its cartesian coordinates.
 <dt> o 
    <a href="#CreatePoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATISpecObject_var)"><b>CreatePoint</b></a>(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATISpecObject_var)
<dd>  Creates a point from its cartesian coordinates.
 <dt> o 
    <a href="#CreatePoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var)"><b>CreatePoint</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a point on a iplane.
 <dt> o 
    <a href="#CreatePoint(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"><b>CreatePoint</b></a>(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)
<dd>  Creates a point on a surface, starting from a reference point
 (which can be implicit) in a given direction and at the given
 distance from this point.
 <dt> o 
    <a href="#CreatePoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)"><b>CreatePoint</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)
<dd>  Creates a point on curve at a given curvilinear distance.
 <dt> o 
    <a href="#CreatePointBetween(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"><b>CreatePointBetween</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)
<dd>  Creates a point between two points.
 <dt> o 
    <a href="#CreatePointExplicit()"><b>CreatePointExplicit</b></a>()
<dd>  Creates an explicit point which has no associative father but
 only a geometrical output.
 <dt> o 
    <a href="#CreatePolyline()"><b>CreatePolyline</b></a>()
<dd>  Creates a polyline curve.
 <dt> o 
    <a href="#CreatePolyline(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)"><b>CreatePolyline</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)
<dd>  Creates a polyline curve.
 <dt> o 
    <a href="#CreateProject(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATBoolean,CATGSMProjectSolutionType)"><b>CreateProject</b></a>(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATBoolean,CATGSMProjectSolutionType)
<dd>  Creates a projection.
 <dt> o 
    <a href="#CreateRefPlane(double*,double*,double*)"><b>CreateRefPlane</b></a>(double*,double*,double*)
<dd>  Creates an explicit reference iplane.
 <dt> o 
    <a href="#CreateReflectLine(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)"><b>CreateReflectLine</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)
<dd>  Creates a reflectine.
 <dt> o 
    <a href="#CreateRevol(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"><b>CreateRevol</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)
<dd>  Creates a revolution surface or curve.
 <dt> o 
    <a href="#CreateRotate()"><b>CreateRotate</b></a>()
<dd>  Creates an empty Rotation.
 <dt> o 
    <a href="#CreateRotate(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"><b>CreateRotate</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)
<dd>  Creates a rotated point, curve or surface.
 <dt> o 
    <a href="#CreateScaling(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"><b>CreateScaling</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)
<dd>  Creates a scaled point, curve or surface.
 <dt> o 
    <a href="#CreateSphere(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"><b>CreateSphere</b></a>(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)
<dd>  Creates a sphere surface.
 <dt> o 
    <a href="#CreateSpine()"><b>CreateSpine</b></a>()
<dd>  Creates a spine curve.
 <dt> o 
    <a href="#CreateSpine(CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)"><b>CreateSpine</b></a>(CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)
<dd>  Creates a spine curve.
 <dt> o 
    <a href="#CreateSpiral(CATIGSMSpiral::Type,CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATBoolean)"><b>CreateSpiral</b></a>(CATIGSMSpiral::Type,CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATBoolean)
<dd>  Creates a spiral curve.
 <dt> o 
    <a href="#CreateSplinePoints()"><b>CreateSplinePoints</b></a>()
<dd>  Creates an empty cubic spline.
 <dt> o 
    <a href="#CreateSplinePoints(CATLISTV(CATISpecObject_var)&amp;)"><b>CreateSplinePoints</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Creates a cubic spline from a list of points.
 <dt> o 
    <a href="#CreateSplit()"><b>CreateSplit</b></a>()
<dd>  Creates a split element by cutting and relimiting an element by several elements.
 <dt> o 
    <a href="#CreateSplit(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation)"><b>CreateSplit</b></a>(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation)
<dd>  Creates a split element by cutting and relimiting an element by another element.
 <dt> o 
    <a href="#CreateSymmetry(CATISpecObject_var,CATISpecObject_var)"><b>CreateSymmetry</b></a>(CATISpecObject_var,CATISpecObject_var)
<dd>  Creates a symmetrical point, curve or surface.
 <dt> o 
    <a href="#CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"><b>CreateTangentCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)
<dd>  Creates a circle with center on the first input curve/point and 
 which is tangent to the second input curve and with a given radius,
 with respect to a support surface.
 <dt> o 
    <a href="#CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)"><b>CreateTangentCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)
<dd>  Creates a circle which is tangent to 2 curves and with a given radius, with respect to a support surface.
 <dt> o 
    <a href="#CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)"><b>CreateTangentCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)
<dd>  Creates a circle which is tangent to 2 curves with respect to a support surface
 and passing through a point which lies on the second curve.
 <dt> o 
    <a href="#CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)"><b>CreateTangentCircle</b></a>(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)
<dd>  Creates a circle which is tangent to 3 curves with respect to a support surface.
 <dt> o 
    <a href="#CreateTranslate()"><b>CreateTranslate</b></a>()
<dd>  Creates an empty translation.
 <dt> o 
    <a href="#CreateTranslate(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"><b>CreateTranslate</b></a>(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)
<dd>  Creates a translated point, curve or surface.
 <dt> o 
    <a href="#CreateTriDimExplicit()"><b>CreateTriDimExplicit</b></a>()
<dd>  Creates a simple volume.
 <dt> o 
    <a href="#CreateTrim(CATISpecObject_var,CATGSMOrientation,CATISpecObject_var,CATGSMOrientation)"><b>CreateTrim</b></a>(CATISpecObject_var,CATGSMOrientation,CATISpecObject_var,CATGSMOrientation)
<dd>  Creates a trim element by cutting and joining two elements.
 <dt> o 
    <a href="#CreateZeroDimExplicit()"><b>CreateZeroDimExplicit</b></a>()
<dd>  Creates a simple point.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ConvertToDatum"></a><a name="ConvertToDatum(CATISpecObject_var&amp;,CATListValCATISpecObject_var*&amp;,int)"></a> <dt> o <b>ConvertToDatum</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConvertToDatum</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iSpecOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATISpecObject_var','CATListValCATISpecObject_var*&amp;')</script> <td><tt>oListDatumSpec</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iVerif</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Converts the spec to a datum feature.
 <br> WARNING : This method is only available for features which do not have any child,
 set Verif=0 if you do not want to check this point.
 <br> Feature to convert should not be in error 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecOrigin</tt>
   <dd>        Spec to convert into datum 
  </dd>
    <dt><tt> oListDatumSpec</tt>
   <dd>       list of resulting datum 
  </dd>
    <dt><tt> iVerif</tt>
   <dd>        Check Spec is correct / No child , Inserted in procedural View 
   <br>Note: for feature Multi-domain, one datum is generated by domain   
</dd>
</dl>
</dl>
</dl>
<a name="Create3DCorner"></a><a name="Create3DCorner(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)"></a> <dt> o <b>Create3DCorner</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCorner','CATIGSMCorner_var')</script>  <b>Create3DCorner</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRayon</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Trim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a 3D corner curve between a point and a curve or 2 curves along a direction.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement1</tt>
   <dd>      First reference curve or point.
   </dd>
    <dt><tt> iElement2</tt>
   <dd>      Second reference curve.
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      iDirection Direction.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>      iRadius of the corner.
   </dd>
    <dt><tt> iOrientation1</tt>
   <dd>      if CATGSMSameOrientation the center of corner is in normal direction to curve
      on support. if CATGSMInvertOrientation reverse direction.
   </dd>
    <dt><tt> iOrientation2</tt>
   <dd>      if CATGSMSameOrientation the center of corner is in normal direction to curve
      on support. if CATGSMInvertOrientation reverse direction.
   </dd>
    <dt><tt> Trim</tt>
   <dd>      if TRUE the 2 curves are trimmed and assembled with the corner.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCorner_var        created curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCorner','');return false">CATIGSMCorner</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="Create3DCurveOffset"></a><a name="Create3DCurveOffset(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;)"></a> <dt> o <b>Create3DCurveOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSM3DCurveOffset','CATIGSM3DCurveOffset_var')</script>  <b>Create3DCurveOffset</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection_var','CATIGSMDirection_var&amp;')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iOffset</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iCornerRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iCornerTension</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a 3D Curve Offset.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      The curve to offset
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      Offset pulling direction.
   </dd>
    <dt><tt> iOffsetValue</tt>
   <dd>      Offset Value.
   </dd>
    <dt><tt> iCornerRadius</tt>
   <dd>      Radius of the 3D corners.
   </dd>
    <dt><tt> iCornerTension</tt>
   <dd>      Tension of the 3D corners.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSM3DCurveOffset_var      created 3DCurveOffset.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSM3DCurveOffset','');return false">CATIGSM3DCurveOffset</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateAffinity"></a><a name="CreateAffinity(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateAffinity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAffinity','CATIGSMAffinity_var')</script>  <b>CreateAffinity</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElemToTransfor</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxisOrigin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxisPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxisFirstDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRatioX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRatioY</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRatioZ</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an affinity of a point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElemToTransfor</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> iAxisOrigin</tt>
   <dd>      Origin point of axis system.
   </dd>
    <dt><tt> iAxisPlane</tt>
   <dd>      iXY iPlane of reference axis system.
   </dd>
    <dt><tt> iAxisFirstDirection</tt>
   <dd>      iLine, iX axis of reference axis system.
   </dd>
    <dt><tt> iRatioX</tt>
   <dd>      Real, ratio of affinity in iX direction.
   </dd>
    <dt><tt> iRatioY</tt>
   <dd>      Real, ratio of affinity in iY direction.
   </dd>
    <dt><tt> iRatioZ</tt>
   <dd>      Real, ratio of affinity in Z direction.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAffinity_var        created affinity.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAffinity','');return false">CATIGSMAffinity</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateAssemble"></a><a name="CreateAssemble(CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateAssemble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAssemble','CATIGSMAssemble_var')</script>  <b>CreateAssemble</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUser</tt><td><tt>=NULL_var</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iConnex</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a composite curve or surface.
 Use the interface CATIGSMAssemble to define the list of elements to be joined.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDevuser</tt>
   <dd>      merging distance fixed by the user 
   </dd>
    <dt><tt> iConnex</tt>
   <dd>      connected mode : FALSE = non connected elements,
                       TRUE  = only connected element
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAssemble_var : the created composite curve of surface. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAssemble','');return false">CATIGSMAssemble</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateAssemble"></a><a name="CreateAssemble(CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateAssemble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAssemble','CATIGSMAssemble_var')</script>  <b>CreateAssemble</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ListElemToAssemble</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUser</tt><td><tt>=NULL_var</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iConnex</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a composite curve or surface from a list of curves or surfaces.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ListElemToAssemble</tt>
   <dd>      List of elements to join (curves or surfaces)
   </dd>
    <dt><tt> iDevuser</tt>
   <dd>      Merging distance fixed by the user 
   </dd>
    <dt><tt> iConnex</tt>
   <dd>      connected mode : FALSE = non connected elements,
                       TRUE  = only connected elements
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAssemble_var : the created composite curve or surface. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAssemble','');return false">CATIGSMAssemble</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateAxisExplicit"></a><a name="CreateAxisExplicit(int&amp;,CATMathPoint*,CATMathDirection*)"></a> <dt> o <b>CreateAxisExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAxisExplicit','CATIGSMAxisExplicit_var')</script>  <b>CreateAxisExplicit</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iAxisReferenceNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint*')</script> <td><tt>iPto</tt><td><tt>=NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection*')</script> <td><tt>iVct</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit axis which has no associative father but
 only a geometrical output.
	
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created axis
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAxisExplicit','');return false">CATIGSMAxisExplicit</a>
</dl>
</dl>
<a name="CreateAxisLine"></a><a name="CreateAxisLine(CATISpecObject_var,CATGSMAxisLineType,CATIGSMDirection_var)"></a> <dt> o <b>CreateAxisLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAxisLine','CATIGSMAxisLine_var')</script>  <b>CreateAxisLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>ihElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMAxisLineType','CATGSMAxisLineType')</script> <td><tt>iAxisType</tt><td><tt>= CATGSMAxisLineType_NormalToCircle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>ihDirection</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an Axis from the input element. Input can be Circle, Ellipse, Oblong,
 Revolution surface, Sphere.  Circle can be full or partial. Similarly ellipse, Revolution surface,
 Sphere.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihElement</tt>
   <dd>       Element for which axis is computed 
   </dd>
    <dt><tt> iAxisType</tt>
   <dd>      Valid for Circle, Ellipse and oblong. For Circle axis can be along the selected
      reference direction, normal to reference direction or  normal to plane of circle
      For Ellipse and oblong axis can be along major axis, minor axis or normal to plane of
      ellipse or oblong
   </dd>
    <dt><tt> ihDirection</tt>
   <dd>      Valid for circle and sphere. To specify the direction for creation of axis.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAxisLine_var: created axis line. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAxisLine','');return false">CATIGSMAxisLine</a>
</dl>
</dl>
<a name="CreateAxisToAxis"></a><a name="CreateAxisToAxis(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateAxisToAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAxisToAxis','CATIGSMAxisToAxis_var')</script>  <b>CreateAxisToAxis</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToTransform</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iReferenceAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iTargetAxis</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a transformation from a reference axis system to a target axis
 system of point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToTransform</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> iReferenceAxis</tt>
   <dd>      Reference axis system
   </dd>
    <dt><tt> iTargetAxis</tt>
   <dd>      Target axis system
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAxisToAxis_var        created transformation.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAxisToAxis','');return false">CATIGSMAxisToAxis</a>
</dl>
</dl>
<a name="CreateBiDimExplicit"></a><a name="CreateBiDimExplicit()"></a> <dt> o <b>CreateBiDimExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateBiDimExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a simple surface.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var         created surface
</dl>
</dl>
<a name="CreateBlend"></a><a name="CreateBlend()"></a> <dt> o <b>CreateBlend</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMBlend','CATIGSMBlend_var')</script>  <b>CreateBlend</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a blend surface.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMBlend_var        created blend.
 Use the interface 
<a href="#" onClick="openLink('CATIGSMBlend','');return false">CATIGSMBlend</a> to define the curves, supports...
</dl>
</dl>
<a name="CreateBoundary"></a><a name="CreateBoundary(CATISpecObject_var,CATISpecObject_var,CATIGSMBoundaryPropag,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>CreateBoundary</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMBoundary','CATIGSMBoundary_var')</script>  <b>CreateBoundary</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIGSMBoundaryPropag','CATIGSMBoundaryPropag')</script> <td><tt>iPropagationType</tt><td><tt>= BOUNDARY_TANGENT_PROPAG</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFrom</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iTo</tt><td><tt>= NULL_var</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientationFrom</tt><td><tt>= CATGSMSameOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientationTo</tt><td><tt>= CATGSMSameOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a boundary.
<br>Note: A close surface has no boundary. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>       Element to which boundaries are required.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>       Support 
   </dd>
    <dt><tt> iPropagationType</tt>
   <dd>       Propagation Mode ( see CATIGSMBoundaryDefs.h) 
   </dd>
    <dt><tt> iFrom</tt>
   <dd>       Starting Element reference 
   </dd>
    <dt><tt> iTo</tt>
   <dd>       Ending element reference 
   </dd>
    <dt><tt> iOrientationFrom</tt>
   <dd>      Orientation use for the starting element reference
   </dd>
    <dt><tt> iOrientationTo</tt>
   <dd>      Orientation use for the ending element reference
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMBoundary_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMBoundary','');return false">CATIGSMBoundary</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATIGSMBoundaryPropag','');return false">CATIGSMBoundaryPropag</a>
</dl>
</dl>
<a name="CreateCircle"></a><a name="CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircle3Points','CATIGSMCircle3Points_var')</script>  <b>CreateCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iThirdPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle passing through 3 points.
 <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstPoint</tt>
   <dd>       first point 
   </dd>
    <dt><tt> iSecondPoint</tt>
   <dd>       second point 
   </dd>
    <dt><tt> iThirdPoint</tt>
   <dd>       third point 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCircle3Points_var        created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircle3Points','');return false">CATIGSMCircle3Points</a>
</dl>
</dl>
<a name="CreateCircle"></a><a name="CreateCircle(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleCenterAxis','CATIGSMCircleCenterAxis_var')</script>  <b>CreateCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iProjection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Creates a circle from point and axis. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxis</tt>
   <dd>      Axis of plane in which circle is lying
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      Point used for center computation. It will be the center if ProjectionMode
      is FALSE. If ProjectionMode = TRUE, this point will be projected on to axis/line
   </dd>
    <dt><tt> iValue</tt>
   <dd>       Radius. Value specified is considered as radius. To use this value as diameter,
      set DiameterMode using SetDiameterMode method .
   </dd>
    <dt><tt> iProjection</tt>
   <dd>        Sets Projection Mode. ProjectionMode = TRUE implies point will be projected on to axis/line,
       ProjectionMode = FALSE implies that point will be center of the circle. 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATIGSMCircleCenterAxis_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleCenterAxis','');return false">CATIGSMCircleCenterAxis</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCircle"></a><a name="CreateCircle(CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleCtrRad','CATIGSMCircleCtrRad_var')</script>  <b>CreateCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCenter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iGeodesic</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle from its center and a radius with respect to a support  surface.
 <br> iGeodesic = TRUE means that the circle lies ON the surface. 
 <br> Otherwise, the surface is only used to compute the circle axis.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenter</tt>
   <dd>       curve
   </dd>
    <dt><tt> iSurface</tt>
   <dd>      surface 
   </dd>
    <dt><tt> iGeodesic</tt>
   <dd>      TRUE means that the line lies ON the surface. 
      Otherwise, the surface is only used to compute the line direction.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>       Value specified is considered as radius. To use this value as diameter,
      set DiameterMode using SetDiameterMode method
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the curve.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the point for the end of the curve.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCircleCtrRad_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleCtrRad','');return false">CATIGSMCircleCtrRad</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCircle"></a><a name="CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleCtrPt','CATIGSMCircleCtrPt_var')</script>  <b>CreateCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCenter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPassingPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iGeodesic</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle from its center and a passing point with respect to a support  surface.
 <br>iGeodesic = TRUE means that the circle lies ON the surface. 
 <br>Otherwise, the surface is only used to compute the circle axis.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenter</tt>
   <dd>       curve
   </dd>
    <dt><tt> iPassingPoint</tt>
   <dd>       passing point 
   </dd>
    <dt><tt> iSurface</tt>
   <dd>      surface 
   </dd>
    <dt><tt> iGeodesic</tt>
   <dd>      TRUE means that the line lies ON the surface. 
      Otherwise, the surface is only used to compute the line direction.
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the curve.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the point for the end of the curve.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCircleCtrPt_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleCtrPt','');return false">CATIGSMCircleCtrPt</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCircle"></a><a name="CreateCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATGSMOrientation)"></a> <dt> o <b>CreateCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircle2PointsRad','CATIGSMCircle2PointsRad_var')</script>  <b>CreateCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iGeodesic</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle passing through 2 points with a given radius with respect to a support surface.
 <br>iGeodesic = TRUE means that the circle lies ON the surface, 
 <br>otherwise, the surface is only used to compute the circle axis.
 <br>Orientation allows to change the resulting circle
 <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstPoint</tt>
   <dd>       first point 
   </dd>
    <dt><tt> iSecondPoint</tt>
   <dd>       second point 
   </dd>
    <dt><tt> iSurface</tt>
   <dd>       surface 
   </dd>
    <dt><tt> iGeodesic</tt>
   <dd>       TRUE means that the line lies ON the surface. 
      Otherwise, the surface is only used to compute the line direction.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>       Value specified is considered as radius. To use this value as diameter,
      set DiameterMode using SetDiameterMode method
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCircle2PointsRad_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircle2PointsRad','');return false">CATIGSMCircle2PointsRad</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreateCircleExplicit"></a><a name="CreateCircleExplicit()"></a> <dt> o <b>CreateCircleExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircle','CATIGSMCircle_var')</script>  <b>CreateCircleExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit circle which has no associative father but
 only a geometrical output.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created circle
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircle','');return false">CATIGSMCircle</a>
</dl>
</dl>
<a name="CreateCircularSweep"></a><a name="CreateCircularSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateCircularSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepCircle','CATIGSMSweepCircle_var')</script>  <b>CreateCircularSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide3</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sweep with a circular implicit profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide1</tt>
   <dd>      First guide corresponding to the first circle arc extremity.
   </dd>
    <dt><tt> iGuide2</tt>
   <dd>      Second guide corresponding to an intermediate point of the circle arc.
   </dd>
    <dt><tt> iGuide3</tt>
   <dd>      Third guide corresponding to the second circle arc extremity.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepCircle_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepCircle','');return false">CATIGSMSweepCircle</a>
</dl>
</dl>
<a name="CreateCombine"></a><a name="CreateCombine(CATISpecObject_var,CATIGSMDirection_var,CATISpecObject_var,CATIGSMDirection_var,CATGSMCombineSolutionType,CATGSMCombineSolutionTypeCombine)"></a> <dt> o <b>CreateCombine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCombine','CATIGSMCombine_var')</script>  <b>CreateCombine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMCombineSolutionType','CATGSMCombineSolutionType')</script> <td><tt>SolutionType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMCombineSolutionTypeCombine','CATGSMCombineSolutionTypeCombine')</script> <td><tt>SolutionTypeCombine</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a combined curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> icurve1</tt>
   <dd>      iElement to combine (curve).
   </dd>
    <dt><tt> idirection1</tt>
   <dd>      idirection for extrude curve1.
   </dd>
    <dt><tt> icurve2</tt>
   <dd>      iElement to combine (curve).
   </dd>
    <dt><tt> idirection2</tt>
   <dd>      idirection for extrude curve2.
   </dd>
    <dt><tt> SolutionType</tt>
   <dd>      Modify Solution itype :  All solutions or Nearest solution (only nearest projection 
      is kept when more than one solution is possible).
      CATGSMNearestSolution or CATGSMAllSolutions.
   </dd>
    <dt><tt> SolutionTypeCombine</tt>
   <dd>      Solution ype 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCombine_var        the projection.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCombine','');return false">CATIGSMCombine</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATGSMCombineSolutionType','');return false">CATGSMCombineSolutionType</a>, <a href="#" onClick="openLink('CATGSMCombineSolutionTypeCombine','');return false">CATGSMCombineSolutionTypeCombine</a>
</dl>
</dl>
<a name="CreateConic"></a><a name="CreateConic(CATISpecObject_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATIGSMCurveCst_var,CATISpecObject_var,CATICkeParm_var,int)"></a> <dt> o <b>CreateConic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMConic','CATIGSMConic_var')</script>  <b>CreateConic</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script> <td><tt>iStartCst</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script> <td><tt>iEndCst</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script> <td><tt>iFirstPassCst</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script> <td><tt>iSecondPassCst</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script> <td><tt>iThirdPassCst</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iTgtIntPoint</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iConicParm</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDefParabol</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Conic Curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>      Support Plane
   </dd>
    <dt><tt> iStartCst</tt>
   <dd>       Start Curve Constraint 
   </dd>
    <dt><tt> iEndCst</tt>
   <dd>      End Curve Constraint
   </dd>
    <dt><tt> iFirstPassCst</tt>
   <dd>      First Intermediate Passing Thru Constraint 
   </dd>
    <dt><tt> iSecondPassCst</tt>
   <dd>      Second Intermediate Passing Thru Constraint
   </dd>
    <dt><tt> iThirdPassCst</tt>
   <dd>      Third Intermediate Passing Thru Constraint
   </dd>
    <dt><tt> iTgtIntPoint</tt>
   <dd>      Tangent Intersection point
   </dd>
    <dt><tt> iConicParm</tt>
   <dd>      Conic Parameter
   </dd>
    <dt><tt> iDefParabol</tt>
   <dd>      Default Parabolic behaviour
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    CATIGSMConic_var       created Conic Curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMConic','');return false">CATIGSMConic</a>, <a href="#" onClick="openLink('CATIGSMCurveCst','');return false">CATIGSMCurveCst</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateConicalSweep"></a><a name="CreateConicalSweep(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateConicalSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepConic','CATIGSMSweepConic_var')</script>  <b>CreateConicalSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sweep with a conical implicit profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide1</tt>
   <dd>      First guide corresponding to the first circle arc extremity.
   </dd>
    <dt><tt> iGuide2</tt>
   <dd>      Second guide corresponding to an intermediate point of the circle arc.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepConic_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepConic','');return false">CATIGSMSweepConic</a>
</dl>
</dl>
<a name="CreateConnect"></a><a name="CreateConnect(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMContinuity,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateConnect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMConnect','CATIGSMConnect_var')</script>  <b>CreateConnect</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iTension1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iTension2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Trim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a connect curve  between two curves.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve1</tt>
   <dd>      First curve to connect.
   </dd>
    <dt><tt> iPoint1</tt>
   <dd>      Start point for the connect, if this point is not on iCurve1, it is projected
      on iCurve1.
   </dd>
    <dt><tt> iOrient1</tt>
   <dd>      If CATGSMSameOrientation, the connect starts tangent to iCurve1
      at iPoint1.
   </dd>
    <dt><tt> iContinuity1</tt>
   <dd>      Continuity itype with first curve.
   </dd>
    <dt><tt> iTension1</tt>
   <dd>      Standard tension 1, increase to straighten connect.
   </dd>
    <dt><tt> iCurve2</tt>
   <dd>      Second curve to connect.
   </dd>
    <dt><tt> iPoint2</tt>
   <dd>      End point for the connect, if this point is not on iCurve2, it is projected
      on iCurve2.
   </dd>
    <dt><tt> iOrient2</tt>
   <dd>      if CATGSMSameOrientation, the connect ends tangent to iCurve2
      at iPoint2.
   </dd>
    <dt><tt> iContinuity2</tt>
   <dd>      Continuity itype with second curve.
   </dd>
    <dt><tt> iTension2</tt>
   <dd>      Standard tension 1, increase to straighten connect.
   </dd>
    <dt><tt> Trim</tt>
   <dd>      if TRUE the 2 curves are trimmed and assembled with the connect.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMConnect_var        created curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMConnect','');return false">CATIGSMConnect</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATGSMContinuity','');return false">CATGSMContinuity</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCorner"></a><a name="CreateCorner(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation,CATBoolean)"></a> <dt> o <b>CreateCorner</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCorner','CATIGSMCorner_var')</script>  <b>CreateCorner</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRayon</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrient2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Trim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a corner curve between a point and a curve or 2 curves on a support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement1</tt>
   <dd>      First reference curve.
   </dd>
    <dt><tt> iElement2</tt>
   <dd>      Second reference curve.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      iSurface support.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>      iRadius of the corner.
   </dd>
    <dt><tt> iOrientation1</tt>
   <dd>      if CATGSMSameOrientation the center of corner is in normal direction to curve
      on support. if CATGSMInvertOrientation reverse direction.
   </dd>
    <dt><tt> iOrientation2</tt>
   <dd>      if CATGSMSameOrientation the center of corner is in normal direction to curve
      on support. if CATGSMInvertOrientation reverse direction.
   </dd>
    <dt><tt> Trim</tt>
   <dd>      if TRUE the 2 curves are trimmed and assembled with the corner.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCorner_var        created curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCorner','');return false">CATIGSMCorner</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreateCurveCst"></a><a name="CreateCurveCst(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATIGSMDirection_var,CATICkeParm_var)"></a> <dt> o <b>CreateCurveCst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCurveCst','CATIGSMCurveCst_var')</script>  <b>CreateCurveCst</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iTgtDirection</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iTgtTension</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iRadiusDirection</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadiusValue</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a Curve Constraint from Point, Tangency and Curvature Data.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>       Point Component
   </dd>
    <dt><tt> iTgtDirection</tt>
   <dd>       Tangent Direction  Component 
   </dd>
    <dt><tt> iTgtTension</tt>
   <dd>      Tangent Tension 
   </dd>
    <dt><tt> iRadiusDirection</tt>
   <dd>      Curvature Radius Direction
   </dd>
    <dt><tt> iRadiusValue</tt>
   <dd>      Curvature Radius Value
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    CATIGSMCurveCst_var       created CurveCst
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCurveCst','');return false">CATIGSMCurveCst</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCurvePar"></a><a name="CreateCurvePar(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean,int,CATBoolean)"></a> <dt> o <b>CreateCurvePar</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCurvePar','CATIGSMCurvePar_var')</script>  <b>CreateCurvePar</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>InvertDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCurveParType</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Geodesic</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a curve which is an offset (constant) from another curve. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      iCurve to be offset.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      iSupport.
   </dd>
    <dt><tt> iDistance</tt>
   <dd>      Offset distance between curve and created parallel curve.
   </dd>
    <dt><tt> InvertDirection</tt>
   <dd>      If FALSE the offset distance is computed in normal direction to curve on support.
      If TRUE reverse normal direction.
   </dd>
    <dt><tt> iCurveParType</tt>
   <dd>      0 : Sharp corner
      1 : Round corner
   </dd>
    <dt><tt> Geodesic</tt>
   <dd>      False : Euclidian mode
      True : Geodesic mode
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCurvePar_var        created curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCurvePar','');return false">CATIGSMCurvePar</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateCurvePar"></a><a name="CreateCurvePar(CATISpecObject_var,CATISpecObject_var,CATICkeLaw_var,CATBoolean,int,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateCurvePar</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCurvePar','CATIGSMCurvePar_var')</script>  <b>CreateCurvePar</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeLaw','CATICkeLaw_var')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>InvertDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCurveParType</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Geodesic</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>InvertLaw</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a curve which is an offset (specified by a law) from another curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      iCurve to be offset.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      iSupport.
   </dd>
    <dt><tt> iOffset</tt>
   <dd>    Law specifying Offset distance between curve and created parallel curve.
   </dd>
    <dt><tt> InvertDirection</tt>
   <dd>      If FALSE the offset distance is computed in normal direction to curve on support.
      If TRUE reverse normal direction.
   </dd>
    <dt><tt> Geodesic</tt>
   <dd>      False : Euclidian mode
      True : Geodesic mode
   </dd>
    <dt><tt> iCurveParType</tt>
   <dd>      0 : Sharp corner
      1 : Round corner
   </dd>
    <dt><tt> InvertLaw</tt>
   <dd>     FALSE : Law is applied from the beginning to the end of the curve (mapping is not inverted).
     True :  Law is applied from the end to the beginning of the curve (mapping is inverted).
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCurvePar_var        created curve
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCurvePar','');return false">CATIGSMCurvePar</a>, <a href="#" onClick="openLink('CATICkeLaw','');return false">CATICkeLaw</a>
</dl>
</dl>
<a name="CreateCurveSmooth"></a><a name="CreateCurveSmooth(CATISpecObject_var)"></a> <dt> o <b>CreateCurveSmooth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCurveSmooth','CATIGSMCurveSmooth_var')</script>  <b>CreateCurveSmooth</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a smoothed curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      Curve to be smoothed.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCurveSmooth_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCurveSmooth','');return false">CATIGSMCurveSmooth</a>
</dl>
</dl>
<a name="CreateCuttingPoint"></a><a name="CreateCuttingPoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateCuttingPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointCoord','CATIGSMPointCoord_var')</script>  <b>CreateCuttingPoint</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iFirstCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iSecondCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iThirdCoord</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a cutting point from its cartesian coordinates (used to cut or fill twisted areas in sweep feature).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstCoord</tt>
   <dd>      iX coordinate for the point
   </dd>
    <dt><tt> iSecondCoord</tt>
   <dd>      iY coordinate for the point
   </dd>
    <dt><tt> iThirdCoord</tt>
   <dd>      Z coordinate for the point
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointCoord_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointCoord','');return false">CATIGSMPointCoord</a>
</dl>
</dl>
<a name="CreateCuttingPoint"></a><a name="CreateCuttingPoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)"></a> <dt> o <b>CreateCuttingPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointOnCurve','CATIGSMPointOnCurve_var')</script>  <b>CreateCuttingPoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMPointOnCurve::DistanceType','CATIGSMPointOnCurve::DistanceType')</script> <td><tt>iType</tt><td><tt>= CATIGSMPointOnCurve::Geodesic</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a cutting point on curve at a given curvilinear distance (used to cut or fill twisted areas in sweep feature).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      iSupport curve.
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      iReference point for computing distance. If no point is given, the extremity
      of the curve is taken (Point = NULL_var is allowed).
   </dd>
    <dt><tt> iDistance</tt>
   <dd>       the distance measured on the curve, it can be either a length or a real (ratio).
      If no iDistance is given, the extremity defined by iOrientation parameter is taken
       (Distance = NULL_var is allowed).
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE means that distance is measured in the other side of reference point (when it exists)
      or from the other extremity.
   </dd>
    <dt><tt> iType</tt>
   <dd>   Set the distance itype : geodesic or euclidean.
  Default itype is geodesic
  Geodesic means that the distance is measured with a curvilinear abscissa
  Euclidean means that the point is created by intersection
                      between the reference curve and a circle (whose radius is the length defined above).
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointOnCurve_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointOnCurve','');return false">CATIGSMPointOnCurve</a>
</dl>
</dl>
<a name="CreateCylinder"></a><a name="CreateCylinder(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateCylinder</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCylinder','CATIGSMCylinder_var')</script>  <b>CreateCylinder</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpecIn</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iSpecDir</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLength1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLength2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an extruded surface or an extruded line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecIn</tt>
   <dd>      iCenter - Center of Cylinder, which may be a point or a vertex.
   </dd>
    <dt><tt> iSpecDir</tt>
   <dd>      The direction of cylinder.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>      Radius of cylinder
   </dd>
    <dt><tt> iLength1</tt>
   <dd>      First length.
   </dd>
    <dt><tt> iLength2</tt>
   <dd>      Second length (on the other side). If length1=10 and length2=10, the height of cylinder
      will be 20.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>       orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMCylinder_var      created Cylinder.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCylinder','');return false">CATIGSMCylinder</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateDirection"></a><a name="CreateDirection(CATISpecObject_var)"></a> <dt> o <b>CreateDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script>  <b>CreateDirection</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iEltDir</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a direction from a line or a iplane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEltDir</tt>
   <dd>       Element reference for direction 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMDirection_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateDirection"></a><a name="CreateDirection(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script>  <b>CreateDirection</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLitX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLitY</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLitZ</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a direction from 3 componants (X,Y,Z).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLitX</tt>
   <dd>      Litterral Value for X direction coordinate 
   </dd>
    <dt><tt> iLitY</tt>
   <dd>      Litterral Value for Y direction coordinate 
   </dd>
    <dt><tt> iLitZ</tt>
   <dd>      Litterral Value for Z direction coordinate 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMDirection_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateExplicitSweep"></a><a name="CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATBoolean)"></a> <dt> o <b>CreateExplicitSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepUnspec','CATIGSMSweepUnspec_var')</script>  <b>CreateExplicitSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iProfile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>ibInstanciateTransfo</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a simple sweep with an explicit profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      First guide curve of the swept surface.
   </dd>
    <dt><tt> iProfile</tt>
   <dd>      iProfile to be swept out.
   </dd>
    <dt><tt> ibInstanciateTransfo</tt>
   <dd>      Flag indicating whether :<br>
       - the user has not done anything (yet) for profile positioning :
       ibInstanciateTransfo = TRUE (default ivalue if not specified) <br>
       - the user has already instanciated a positioning transformation
       of his own, and then will have to use SetPositionedProfile() to
       store it : ibInstanciateTransfo = FALSE <br>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepUnspec_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepUnspec','');return false">CATIGSMSweepUnspec</a>
</dl>
</dl>
<a name="CreateExplicitSweep"></a><a name="CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean)"></a> <dt> o <b>CreateExplicitSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepUnspec','CATIGSMSweepUnspec_var')</script>  <b>CreateExplicitSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iProfile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>ibInstanciateTransfo</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sweep with an explicit profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide1</tt>
   <dd>      First guide curve of the swept surface.
   </dd>
    <dt><tt> iGuide2</tt>
   <dd>      Second guide curve of the swept surface.
   </dd>
    <dt><tt> iProfile</tt>
   <dd>      iProfile to be swept out.
   </dd>
    <dt><tt> iSpine</tt>
   <dd>      iCurve normal to sweep iplanes. If not specified, the first guide is taken as the spine.
      (Spine = NULL_var is allowed).
   </dd>
    <dt><tt> ibInstanciateTransfo</tt>
   <dd>      Flag indicating whether :<br>
       - the user has not done anything (yet) for profile positioning :
       ibInstanciateTransfo = TRUE (default ivalue if not specified) <br>
       - the user has already instanciated a positioning transformation
       of his own, and then will have to use SetPositionedProfile() to
       store it : ibInstanciateTransfo = FALSE <br>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepUnspec_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepUnspec','');return false">CATIGSMSweepUnspec</a>
</dl>
</dl>
<a name="CreateExplicitSweep"></a><a name="CreateExplicitSweep(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateExplicitSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepUnspec','CATIGSMSweepUnspec_var')</script>  <b>CreateExplicitSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iProfile</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>ibInstanciateTransfo</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sweep with an explicit profile and a reference surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide</tt>
   <dd>      First guide curve of the swept surface.
   </dd>
    <dt><tt> iProfile</tt>
   <dd>      iProfile to be swept out.
   </dd>
    <dt><tt> iSpine</tt>
   <dd>      iCurve normal to sweep iplanes. If not specified, the first guide is taken as the spine.
      (Spine = NULL_var is allowed).
   </dd>
    <dt><tt> iReference</tt>
   <dd>      iReference surface of the swept surface.
      (Reference = NULL_var is allowed).
   </dd>
    <dt><tt> iAngle</tt>
   <dd>      iReference angle between the reference surface and the swept profile
      (Angle = NULL_var is allowed if iReference=NULL_var).
   </dd>
    <dt><tt> ibInstanciateTransfo</tt>
   <dd>      Flag indicating whether :<br>
       - the user has not done anything (yet) for profile positioning :
       ibInstanciateTransfo = TRUE (default ivalue if not specified) <br>
       - the user has already instanciated a positioning transformation
       of his own, and then will have to use SetPositionedProfile() to
       store it : ibInstanciateTransfo = FALSE <br>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepUnspec_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepUnspec','');return false">CATIGSMSweepUnspec</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateExtractMulti"></a><a name="CreateExtractMulti(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>CreateExtractMulti</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtractMulti','CATIGSMExtractMulti_var')</script>  <b>CreateExtractMulti</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iReferenceElems</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Extract a sub-element of a solid (vertex, edge or face).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>       Element to extract
   </dd>
    <dt><tt> iTypeExtract</tt>
   <dd>      Type of extract propagation default value : No propagation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtractSolide_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtractMulti','');return false">CATIGSMExtractMulti</a>, <a href="#" onClick="openLink('CATIGSMExtractSolidePropag','');return false">CATIGSMExtractSolidePropag</a>
</dl>
</dl>
<a name="CreateExtractSolide"></a><a name="CreateExtractSolide(CATISpecObject_var,CATIGSMExtractSolidePropag)"></a> <dt> o <b>CreateExtractSolide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtractSolide','CATIGSMExtractSolide_var')</script>  <b>CreateExtractSolide</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMExtractSolidePropag','CATIGSMExtractSolidePropag')</script> <td><tt>iType</tt><td><tt>= ExtractSolide_NoPropag</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Extract a sub-element of a solid (vertex, edge or face).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>       Element to extract
   </dd>
    <dt><tt> iTypeExtract</tt>
   <dd>      Type of extract propagation default value : No propagation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtractSolide_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtractSolide','');return false">CATIGSMExtractSolide</a>, <a href="#" onClick="openLink('CATIGSMExtractSolidePropag','');return false">CATIGSMExtractSolidePropag</a>
</dl>
</dl>
<a name="CreateExtrapol"></a><a name="CreateExtrapol(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)"></a> <dt> o <b>CreateExtrapol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtrapol','CATIGSMExtrapol_var')</script>  <b>CreateExtrapol</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iBoundary</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToExtrapol</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolContinuityType','CATGSMExtrapolContinuityType')</script> <td><tt>iContinuity</tt><td><tt>=CATGSMTangentContinuity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolBorderType','CATGSMExtrapolBorderType')</script> <td><tt>iBorder</tt><td><tt>=CATGSMNormalBorder</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAssemble</tt><td><tt>=TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolPropagationMode','CATGSMExtrapolPropagationMode')</script> <td><tt>iPropagationMode</tt><td><tt>=CATGSMNoPropagation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a surface or a curve by extrapolating a surface or a curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundary</tt>
   <dd>      Start curve or point on surface or curve to extrapolate.
   </dd>
    <dt><tt> iToExtrapol</tt>
   <dd>      iCurve or surface to extrapolate.
   </dd>
    <dt><tt> iLength</tt>
   <dd>      Extrapolation length.
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      CATGSMTangentContinuity or CATGSMCurvatureContinuity.
   </dd>
    <dt><tt> iBorder</tt>
   <dd>      CATGSMNormalBorder or CATGSMTangentBorder
   </dd>
    <dt><tt> iAssemble</tt>
   <dd>      if TRUE extrapolation is assemble with the iToExtrapol element.
	</dd>
    <dt><tt> iPropagationMode</tt>
   <dd>      if 0 No propagation of the extrapolation value.
	   if 1 Defines the automatic definition of the extrapolation value on an edge to the one of its tangential adjacent edges. 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtrapol_var       created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtrapol','');return false">CATIGSMExtrapol</a>, <a href="#" onClick="openLink('CATGSMExtrapolContinuityType','');return false">CATGSMExtrapolContinuityType</a>, <a href="#" onClick="openLink('CATGSMExtrapolBorderType','');return false">CATGSMExtrapolBorderType</a>
</dl>
</dl>
<a name="CreateExtrapol"></a><a name="CreateExtrapol(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMExtrapolContinuityType,CATGSMExtrapolBorderType,CATBoolean,CATGSMExtrapolPropagationMode)"></a> <dt> o <b>CreateExtrapol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtrapol','CATIGSMExtrapol_var')</script>  <b>CreateExtrapol</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iBoundary</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToExtrapol</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iUntil</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolContinuityType','CATGSMExtrapolContinuityType')</script> <td><tt>iContinuity</tt><td><tt>=CATGSMTangentContinuity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolBorderType','CATGSMExtrapolBorderType')</script> <td><tt>iBorder</tt><td><tt>=CATGSMNormalBorder</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAssemble</tt><td><tt>=TRUE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMExtrapolPropagationMode','CATGSMExtrapolPropagationMode')</script> <td><tt>iPropagationMode</tt><td><tt>=CATGSMNoPropagation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a surface or a curve by extrapolating a curve or a surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBoundary</tt>
   <dd>      Start curve or point on surface or curve to extrapolate.
   </dd>
    <dt><tt> iToExtrapol</tt>
   <dd>      iCurve or surface to extrapolate.
   </dd>
    <dt><tt> iUntil</tt>
   <dd>      Extrapolation limit surface.
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      CATGSMTangentContinuity or CATGSMCurvatureContinuity.
   </dd>
    <dt><tt> iBorder</tt>
   <dd>      CATGSMNormalBorder or CATGSMTangentBorder
   </dd>
    <dt><tt> iAssemble</tt>
   <dd>      if TRUE extrapolation is assemble with the iToExtrapol element.
	</dd>
    <dt><tt> iPropagationMode</tt>
   <dd>	   if 0 No propagation of the extrapolation value.	
	   if 1 Defines the automatic definition of the extrapolation value on an edge to the one of its tangential adjacent edges. 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtrapol_var       created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtrapol','');return false">CATIGSMExtrapol</a>, <a href="#" onClick="openLink('CATGSMExtrapolContinuityType','');return false">CATGSMExtrapolContinuityType</a>, <a href="#" onClick="openLink('CATGSMExtrapolBorderType','');return false">CATGSMExtrapolBorderType</a>
</dl>
</dl>
<a name="CreateExtremum"></a><a name="CreateExtremum(CATISpecObject_var,CATIGSMDirection_var,GSMMinMax)"></a> <dt> o <b>CreateExtremum</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtremum','CATIGSMExtremum_var')</script>  <b>CreateExtremum</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpec</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iSpecDir</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('GSMMinMax','GSMMinMax')</script> <td><tt>iMinMax</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an Extremum.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpec</tt>
   <dd>      Element onto extremum is computed
   </dd>
    <dt><tt> iSpecDir</tt>
   <dd>      Extremum direction
   </dd>
    <dt><tt> iMinMax</tt>
   <dd>      Maximum (GSMMax) or Minimum (GSMMin)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtremum_var      created Extremum
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtremum','');return false">CATIGSMExtremum</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateExtremumPolar"></a><a name="CreateExtremumPolar(unsigned short int,CATISpecObject_var)"></a> <dt> o <b>CreateExtremumPolar</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtremumPolar','CATIGSMExtremumPolar_var')</script>  <b>CreateExtremumPolar</b>(<td> const <script type="text/javascript"> activateLink('unsigned short int','unsigned short int')</script> <td><tt>iTypeOfExtremum</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iContour</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a 2D Extremum in polar coordinates.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExtremumType</tt>
   <dd>       Extremum type:
         = 0   Minimum radius
         = 1   Maximum radius
         = 2   Minimum angle
         = 3   Maximum angle
   </dd>
    <dt><tt> iContour</tt>
   <dd>      Element onto extremum is computed
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExtremumPolar_var      created Extremum
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtremumPolar','');return false">CATIGSMExtremumPolar</a>
</dl>
</dl>
<a name="CreateExtrude"></a><a name="CreateExtrude(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateExtrude</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMExtrude','CATIGSMExtrude_var')</script>  <b>CreateExtrude</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpecIn</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iSpecDir</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLength1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLength2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an extruded surface or an extruded line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpecIn</tt>
   <dd>      iProfile for extrusion, which may be a point or a curve.
   </dd>
    <dt><tt> iSpecDir</tt>
   <dd>      The direction of extrusion.
   </dd>
    <dt><tt> iLength1</tt>
   <dd>      First length.
   </dd>
    <dt><tt> iLength2</tt>
   <dd>      Second length (on the other side). If length1=10 and length2=10, the extrusion size
      will be 20.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>       orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMExturde_var      created extrusion.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMExtrude','');return false">CATIGSMExtrude</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateFill"></a><a name="CreateFill()"></a> <dt> o <b>CreateFill</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMFill','CATIGSMFill_var')</script>  <b>CreateFill</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a fill surface.
 Use the interface CATIGSMFill to define your boundaries, supports...
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMFill_var        the fill.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFill','');return false">CATIGSMFill</a>
</dl>
</dl>
<a name="CreateFill"></a><a name="CreateFill(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity)"></a> <dt> o <b>CreateFill</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMFill','CATIGSMFill_var')</script>  <b>CreateFill</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfBoundaries</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a fill surface from a list of boundaries (curves, lines).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfBoundaries</tt>
   <dd>      List of boundaries (the boundaries need to define a closed contour).
   </dd>
    <dt><tt> iListOfSupport</tt>
   <dd>      List of supports. Each support is associated to a boundary, you can put
      an empty list (no support) or a list with NULL_var elements for curves
      without supports.
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      Use only CATGSMContinuity_Point and CATGSMContinuity_Tangency.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMFill_var        created fill surface.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFill','');return false">CATIGSMFill</a>, <a href="#" onClick="openLink('CATGSMContinuity','');return false">CATGSMContinuity</a>
</dl>
</dl>
<a name="CreateFill"></a><a name="CreateFill(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATGSMContinuity,CATISpecObject_var)"></a> <dt> o <b>CreateFill</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMFill','CATIGSMFill_var')</script>  <b>CreateFill</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfBoundaries</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iConstraint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a fill surface from a list of boundaries (curves, lines).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfBoundaries</tt>
   <dd>      List of boundaries (the boundaries need to define a closed contour).
   </dd>
    <dt><tt> iListOfSupport</tt>
   <dd>      List of supports. Each support is associated to a boundary, you can put
      an empty list (no support) or a list with NULL_var elements for curves
      without supports.
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      Use only CATGSMContinuity_Point and CATGSMContinuity_Tangency.
   </dd>
    <dt><tt> iConstraint</tt>
   <dd>      Constraint passing element for fill surface.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMFill_var        created fill surface.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFill','');return false">CATIGSMFill</a>, <a href="#" onClick="openLink('CATGSMContinuity','');return false">CATGSMContinuity</a>
</dl>
</dl>
<a name="CreateFillet"></a><a name="CreateFillet(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATICkeParm_var,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)"></a> <dt> o <b>CreateFillet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMFilletBiTangent','CATIGSMFilletBiTangent_var')</script>  <b>CreateFillet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>ispElement1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>ispElement2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>ispRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMFilletSupportsTrimMode','CATGSMFilletSupportsTrimMode')</script> <td><tt>iSupportsTrimMode</tt><td><tt>=CATGSMTrim</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMFilletExtremitiesMode','CATGSMFilletExtremitiesMode')</script> <td><tt>iRibbonRelimitationMode</tt><td><tt>=CATGSMSmooth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sphere bitangent fillet between two skins.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement1</tt>
   <dd>      First support of fillet.
   </dd>
    <dt><tt> iElement2</tt>
   <dd>      Second support of fillet.
   </dd>
    <dt><tt> iOrientation1</tt>
   <dd>      Manage the fillet center position.
   </dd>
    <dt><tt> iOrientation2</tt>
   <dd>      Manage the fillet center position.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>      iRadius of the fillet.
   </dd>
    <dt><tt> iSupportsTrimMode</tt>
   <dd>      if CATGSMTrim the 2 supports are trimed and asembled with the fillet.
   </dd>
    <dt><tt> RibbonRelimitationMode</tt>
   <dd>      Manage the relimition of fillet boundaries.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFilletBiTangent','');return false">CATIGSMFilletBiTangent</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATGSMFilletSupportsTrimMode','');return false">CATGSMFilletSupportsTrimMode</a>, <a href="#" onClick="openLink('CATGSMFilletExtremitiesMode','');return false">CATGSMFilletExtremitiesMode</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateFilletTriTangent"></a><a name="CreateFilletTriTangent(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMFilletSupportsTrimMode,CATGSMFilletExtremitiesMode)"></a> <dt> o <b>CreateFilletTriTangent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMFilletTriTangent','CATIGSMFilletTriTangent_var')</script>  <b>CreateFilletTriTangent</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iRemoveElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation3</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMFilletSupportsTrimMode','CATGSMFilletSupportsTrimMode')</script> <td><tt>iSupportsTrimMode</tt><td><tt>=CATGSMTrim</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMFilletExtremitiesMode','CATGSMFilletExtremitiesMode')</script> <td><tt>RibbonRelimitationMode</tt><td><tt>=CATGSMSmooth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a TriTangent fillet between three skins.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement1</tt>
   <dd>      First support of fillet.
   </dd>
    <dt><tt> iElement2</tt>
   <dd>      Second support of fillet.
   </dd>
    <dt><tt> iRemoveElement</tt>
   <dd>      third support of fillet called Remove Element.
   </dd>
    <dt><tt> iOrientation1</tt>
   <dd>	   Orientation of iElement1
      Manage the fillet center position.
   </dd>
    <dt><tt> iOrientation2</tt>
   <dd>	   Orientation of iElement2
      Manage the fillet center position.
   </dd>
    <dt><tt> iOrientation3</tt>
   <dd>	   Orientation of iElement3
      Manage the fillet center position.
   </dd>
    <dt><tt> iSupportsTrimMode</tt>
   <dd>      if CATGSMTrim the 2 supports are trimed and asembled with the fillet.
   </dd>
    <dt><tt> RibbonRelimitationMode</tt>
   <dd>      Manage the relimition of fillet boundaries.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFilletBiTangent','');return false">CATIGSMFilletBiTangent</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATGSMFilletSupportsTrimMode','');return false">CATGSMFilletSupportsTrimMode</a>, <a href="#" onClick="openLink('CATGSMFilletExtremitiesMode','');return false">CATGSMFilletExtremitiesMode</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateGridSet"></a><a name="CreateGridSet(CATISpecObject_var&amp;,CATIGSMDirection_var&amp;,CATBoolean)"></a> <dt> o <b>CreateGridSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMGridSet','CATIGSMGridSet_var')</script>  <b>CreateGridSet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>ihIOrigin</tt><td><tt>=NULL_var </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection_var','CATIGSMDirection_var&amp;')</script> <td><tt>ihIDirection</tt><td><tt>=NULL_var </tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientation</tt><td><tt>=TRUE </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a GridSet with a point and a direction.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihIOrigin</tt>
   <dd>      GridSet's origin: a point.
   </dd>
    <dt><tt> ihIDirection</tt>
   <dd>      GridSet's direction.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      GridSet's orientation.
      <br><b>Legal values</b>:
      <tt>TRUE</tt> means that direction is not inverted
      <tt>FALSE</tt> means that direction is inverted
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMGridSet_var      created GridSet.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMGridSet','');return false">CATIGSMGridSet</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateHealing"></a><a name="CreateHealing(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>CreateHealing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMHealing','CATIGSMHealing_var')</script>  <b>CreateHealing</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iBodyToHeal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a composite surface.
 Use the interface CATIGSMHealing to define the body to be healed.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToHeal</tt>
   <dd>      the body to heal.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMHealing_var : the created surface. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMHealing','');return false">CATIGSMHealing</a>
</dl>
</dl>
<a name="CreateHealing"></a><a name="CreateHealing(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateHealing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMHealing','CATIGSMHealing_var')</script>  <b>CreateHealing</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iBodyToHeal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>FixElements</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iMergeDist</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMHealingMode','CATGSMHealingMode')</script> <td><tt>iCanonicFree</tt><td><tt>=CATGSMHealFrozen</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity</tt><td><tt>=CATGSMContinuity_Point</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG0</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG1</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG2</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a G0 composite surface from a list of surfaces.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToHeal</tt>
   <dd>      the list of body to heal.
   </dd>
    <dt><tt> FixElements</tt>
   <dd>      List of elements to fix (surfaces)
   </dd>
    <dt><tt> iMergeDist</tt>
   <dd>      Merging distance fixed by the user 
   </dd>
    <dt><tt> iCanonicFree</tt>
   <dd>      Healing mode for canonics : free = 1, frozen =0
      Healing mode for planar lements : free = 11, frozen =10
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      Continuity type .
   </dd>
    <dt><tt> iDevuserG0</tt>
   <dd>      G0 deviation fixed by the user
   </dd>
    <dt><tt> iDevuserG1</tt>
   <dd>      G1 deviation fixed by the user
   </dd>
    <dt><tt> iDevuserG2</tt>
   <dd>      G2 deviation fixed by the user 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMHealing_var : the created surface. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMHealing','');return false">CATIGSMHealing</a>, <a href="#" onClick="openLink('CATGSMHealingMode','');return false">CATGSMHealingMode</a>, <a href="#" onClick="openLink('CATGSMContinuity','');return false">CATGSMContinuity</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateHealing"></a><a name="CreateHealing(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode,CATGSMContinuity,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMHealingMode)"></a> <dt> o <b>CreateHealing</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMHealing','CATIGSMHealing_var')</script>  <b>CreateHealing</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iBodyToHeal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>FixElements</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>VivEdges</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iMergeDist</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iTangencyAngle</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iCurvatureDev</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMHealingMode','CATGSMHealingMode')</script> <td><tt>iCanonicFree</tt><td><tt>=CATGSMHealFrozen</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMContinuity','CATGSMContinuity')</script> <td><tt>iContinuity</tt><td><tt>=CATGSMContinuity_Point</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG0</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG1</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDevUserG2</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iSharpnessAngle</tt><td><tt>=NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMHealingMode','CATGSMHealingMode')</script> <td><tt>iComputeMode</tt><td><tt>=CATGSMHealStandard</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a G0 or G1 composite surface from a list of surfaces.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBodyToHeal</tt>
   <dd>      the list of body to heal.
   </dd>
    <dt><tt> FixElements</tt>
   <dd>      List of elements to fix (surfaces)
   </dd>
    <dt><tt> VivEdges</tt>
   <dd>      List of edges to keep sharpness 
   </dd>
    <dt><tt> iMergeDist</tt>
   <dd>      Merging distance fixed by the user 
   </dd>
    <dt><tt> iTangencyAngle</tt>
   <dd>      Tangency angle fixed by the user 
   </dd>
    <dt><tt> iCurvatureDev</tt>
   <dd>      Curvature deviation fixed by the user 
   </dd>
    <dt><tt> iCanonicFree</tt>
   <dd>      Healing mode for canonics : free = 1, frozen =0
      Healing mode for planar lements : free = 11, frozen =10
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>      Continuity type 
   </dd>
    <dt><tt> iDevuserG0</tt>
   <dd>      G0 deviation fixed by the user
   </dd>
    <dt><tt> iDevuserG1</tt>
   <dd>      G1 deviation fixed by the user
   </dd>
    <dt><tt> iDevuserG2</tt>
   <dd>      G2 deviation fixed by the user 
   </dd>
    <dt><tt> iSharpnessAngle</tt>
   <dd>		  Sharpness angular limit fixed by the user 
   </dd>
    <dt><tt> iComputeMode</tt>
   <dd>      Computation mode 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMHealing_var : the created surface 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMHealing','');return false">CATIGSMHealing</a>, <a href="#" onClick="openLink('CATGSMHealingMode','');return false">CATGSMHealingMode</a>, <a href="#" onClick="openLink('CATGSMContinuity','');return false">CATGSMContinuity</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateHelix"></a><a name="CreateHelix(CATISpecObject_var,CATBoolean,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateHelix</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMHelix','CATIGSMHelix_var')</script>  <b>CreateHelix</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInvertAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iStartingPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iPitch</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iHeight</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iClockwiseRevolution</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartingAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iTaperAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iTaperOutward</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an helix curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxis</tt>
   <dd>      The helix axis (always a line).
   </dd>
    <dt><tt> iInvertAxis</tt>
   <dd>   </dd>
    <dt><tt> iStartingPoint</tt>
   <dd>      Starting Point.
   </dd>
    <dt><tt> iPitch</tt>
   <dd>      Pitch.
   </dd>
    <dt><tt> iHeight</tt>
   <dd>      Helix height.
   </dd>
    <dt><tt> iClockwiseRevolution</tt>
   <dd>      Revolutions are clockwise if TRUE, counterclockwise if FALSE.
   </dd>
    <dt><tt> iStartingAngle</tt>
   <dd>      Starting angle from starting point measured on the helix itself.
      If no starting angle is given, 0.0 is taken (starting angle = NULL_var is allowed).
   </dd>
    <dt><tt> iTaperAngle</tt>
   <dd>      0 <= Taper Angle <Pi/2
      If no taper angle is given, 0.0 is taken (taper angle = NULL_var is allowed).
   </dd>
    <dt><tt> iTaperOutward</tt>
   <dd>      Helix radius increases if TRUE, decreases if FALSE.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMHelix_var        Created helix curve.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMHelix','');return false">CATIGSMHelix</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateIntersect"></a><a name="CreateIntersect(CATISpecObject_var,CATISpecObject_var,CATBoolean)"></a> <dt> o <b>CreateIntersect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMIntersect','CATIGSMIntersect_var')</script>  <b>CreateIntersect</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElement2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>Extrapolation</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the Intersection of two elements.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement1</tt>
   <dd>      Fisrt element to intersect (curve, surface, iplane, solid).
   </dd>
    <dt><tt> iElement2</tt>
   <dd>      Second element to intersect (curve, surface, iplane, solid).
   </dd>
    <dt><tt> Extrapolation</tt>
   <dd>      extrapolate the support to find the intersection.
      Not yet implemented : DO NOT USE 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMIntersect_var        the intersection.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMIntersect','');return false">CATIGSMIntersect</a>
</dl>
</dl>
<a name="CreateInverse"></a><a name="CreateInverse(CATISpecObject_var)"></a> <dt> o <b>CreateInverse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMInverse','CATIGSMInverse_var')</script>  <b>CreateInverse</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the orientation of a curve or a surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>       Element to invert 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMInverse_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMInverse','');return false">CATIGSMInverse</a>
</dl>
</dl>
<a name="CreateLawDistProj"></a><a name="CreateLawDistProj(CATISpecObject_var,CATISpecObject_var,CATBoolean)"></a> <dt> o <b>CreateLawDistProj</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLawDistProj','CATIGSMLawDistProj_var')</script>  <b>CreateLawDistProj</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iDefinition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iParameterOnDefinition</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Creates a law from two curves : a reference and a definition curve.
 Law is created by measuring distance between each point on reference curve 
 and its projection on definition curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReference</tt>
   <dd>     Reference curve
   </dd>
    <dt><tt> iDefinition</tt>
   <dd>     Definition or "target" curve
      
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLawDistProj','');return false">CATIGSMLawDistProj</a>
</dl>
</dl>
<a name="CreateLine"></a><a name="CreateLine(double*,double*)"></a> <dt> o <b>CreateLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLine','CATIGSMLine_var')</script>  <b>CreateLine</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrRootPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>pVector</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit line (infinite).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtrRootPoint</tt>
   <dd>      Coordinates of the start point of the line (array size 3)
   </dd>
    <dt><tt> pVector</tt>
   <dd>      Components of the direction of the line (array size 3)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLine_var            created line
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLine','');return false">CATIGSMLine</a>
</dl>
</dl>
<a name="CreateLine"></a><a name="CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLinePtPt','CATIGSMLinePtPt_var')</script>  <b>CreateLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line between two points.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint1</tt>
   <dd>      The first point.
   </dd>
    <dt><tt> iPoint2</tt>
   <dd>      The second point.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLinePtPt_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLinePtPt','');return false">CATIGSMLinePtPt</a>
</dl>
</dl>
<a name="CreateLine"></a><a name="CreateLine(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"></a> <dt> o <b>CreateLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLinePtDir','CATIGSMLinePtDir_var')</script>  <b>CreateLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line starting at a point and in a given direction.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>      The point of the line.
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      The direction of the line.
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the line.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>      The distance to the point for the end of the line.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE reverses the line.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLinePtDir_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLinePtDir','');return false">CATIGSMLinePtDir</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateLine"></a><a name="CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,int)"></a> <dt> o <b>CreateLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLineBisecting','CATIGSMLineBisecting_var')</script>  <b>CreateLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iLine1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iLine2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPt</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>SolutionNb</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line bisecting two other lines.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine1</tt>
   <dd>      first line
   </dd>
    <dt><tt> iLine2</tt>
   <dd>      second line
   </dd>
    <dt><tt> iPt</tt>
   <dd>      Reference point. Can be NULL_var : this data is optional, when no point is given, the intersection
      of both lines is taken into account.
   </dd>
    <dt><tt> iSurface</tt>
   <dd>      surface. Can be NULL_var : this data is optional. Useful when Line1 and Line2 are curves lying on a surface
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the reference point for the beginning of the line.
      Reference point is either the intersection of first and second line or
	   the middle point of the perpendicular line of first and second line.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the reference point for the end of the curve.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE reverses the line.
   </dd>
    <dt><tt> SolutionNb</tt>
   <dd>      Selects the current solution.
      2 solutions can be computed.
      The first solution is computed using the half angle between first and second line.
      This angle is oriented using the direction of perpendicular line of first and second line.
      Second solution is perpendicular to the first.
	   Solution number : can be 1 or 2
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLineBisecting_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','CreateLine');return false">CATIGSMFactory.CreateLine</a>
</dl>
</dl>
<a name="CreateLine"></a><a name="CreateLine(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATBoolean,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)"></a> <dt> o <b>CreateLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLineAngle','CATIGSMLineAngle_var')</script>  <b>CreateLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iGeodesic</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line at an angle to a reference curve at a given
 point and on a support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      curve
   </dd>
    <dt><tt> iSurface</tt>
   <dd>      surface 
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      The start point of the line.
   </dd>
    <dt><tt> iGeodesic</tt>
   <dd>      TRUE means that the line lies ON the surface. 
      Otherwise, the surface is only used to compute the line direction.
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the curve.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the point for the end of the curve.
   </dd>
    <dt><tt> iAngle</tt>
   <dd>      The angle in degrees.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE reverses the line.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLineAngle_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLineAngle','');return false">CATIGSMLineAngle</a>
</dl>
</dl>
<a name="CreateLineBiTangent"></a><a name="CreateLineBiTangent(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateLineBiTangent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLineBiTangent','CATIGSMLineBiTangent_var')</script>  <b>CreateLineBiTangent</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Curve1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Element2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Support</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line tangent to two elements on a support  surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Element1</tt>
   <dd>      Fisrt tangency curve lying on the support surface.
   </dd>
    <dt><tt> Element2</tt>
   <dd>      Second tangency element (point, curve) lying on the support surface.
   </dd>
    <dt><tt> Support</tt>
   <dd>      The support surface of the two elements.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLineBiTangent_var: the Bi-Tangent line. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLineBiTangent','');return false">CATIGSMLineBiTangent</a>
</dl>
</dl>
<a name="CreateLineExplicit"></a><a name="CreateLineExplicit()"></a> <dt> o <b>CreateLineExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLine','CATIGSMLine_var')</script>  <b>CreateLineExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit line which has no associative father but
 only a geometrical output.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created line
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLine','');return false">CATIGSMLine</a>
</dl>
</dl>
<a name="CreateLineNormal"></a><a name="CreateLineNormal(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation)"></a> <dt> o <b>CreateLineNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLineNormal','CATIGSMLineNormal_var')</script>  <b>CreateLineNormal</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line normal to a surface at a given point.
 <br> iStartLength is the distance to the point for the beginning of the line.
 <br> iEndLength is the distance to the point for the end of the line.
 <br> iOrientation = TRUE reverses the line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd>      surface 
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      The start point of the line.
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the curve.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the point for the end of the curve.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE reverses the line.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLineAngle_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLineNormal','');return false">CATIGSMLineNormal</a>
</dl>
</dl>
<a name="CreateLinePtPt"></a><a name="CreateLinePtPt(double*,double*)"></a> <dt> o <b>CreateLinePtPt</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLine','CATIGSMLine_var')</script>  <b>CreateLinePtPt</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrPt1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrPt2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit line between two points (Limited line).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtrPt1</tt>
   <dd>      Coordinates of the start point of the line (array size 3)
   </dd>
    <dt><tt>  iPtrPt2</tt>
   <dd>       Coordinates of the end point of the line (array size 3)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLine_var            created line
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLine','');return false">CATIGSMLine</a>
</dl>
</dl>
<a name="CreateLineTangency"></a><a name="CreateLineTangency(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"></a> <dt> o <b>CreateLineTangency</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLineTangency','CATIGSMLineTangency_var')</script>  <b>CreateLineTangency</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iEndLength</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a line tangent to a curve at a given point.
 <br> iStartLength is the distance to the point for the beginning of the line.
 <br> iEndLength is the distance to the point for the end of the line.
 <br> iOrientation = TRUE reverses the line.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      curve
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      The start point of the line.
   </dd>
    <dt><tt> iStartLength</tt>
   <dd>      The distance to the point for the beginning of the curve.
   </dd>
    <dt><tt> iEndLength</tt>
   <dd>       The distance to the point for the end of the curve.
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE reverses the line.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>       support 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLineAngle_var        created line.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLineTangency','');return false">CATIGSMLineTangency</a>
</dl>
</dl>
<a name="CreateLinearSweep"></a><a name="CreateLinearSweep(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateLinearSweep</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSweepSegment','CATIGSMSweepSegment_var')</script>  <b>CreateLinearSweep</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iGuide2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sweep with a linear implicit profile.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGuide1</tt>
   <dd>      First guide.
   </dd>
    <dt><tt> iGuide2</tt>
   <dd>      Second guide.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSweepSegment_var        created sweep.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSweepSegment','');return false">CATIGSMSweepSegment</a>
</dl>
</dl>
<a name="CreateLoft"></a><a name="CreateLoft()"></a> <dt> o <b>CreateLoft</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLoft','CATIGSMLoft_var')</script>  <b>CreateLoft</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a lofted surface.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLoft_var        created loft.
 Use the interface 
<a href="#" onClick="openLink('CATIGSMLoft','');return false">CATIGSMLoft</a> to define your sections, guides...
</dl>
</dl>
<a name="CreateLoft"></a><a name="CreateLoft(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>CreateLoft</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLoft','CATIGSMLoft_var')</script>  <b>CreateLoft</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfSections</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfGuides</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a loft.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfSections</tt>
   <dd>      List of sections curves
   </dd>
    <dt><tt> iListOfGuides</tt>
   <dd>      List of guides curves
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLoft_var        created loft.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLoft','');return false">CATIGSMLoft</a>
</dl>
</dl>
<a name="CreateLoft"></a><a name="CreateLoft(CATLISTV(CATISpecObject_var)&amp;,CATListOfInt&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var,CATISpecObject_var,CATLISTV(CATISpecObject_var)&amp;,CATGSMLoftSpineType,CATISpecObject_var)"></a> <dt> o <b>CreateLoft</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMLoft','CATIGSMLoft_var')</script>  <b>CreateLoft</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfSections</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>iListOfOrientations</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfClosingPoints</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iStartSectionTangent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iEndSectionTangent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfGuides</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMLoftSpineType','CATGSMLoftSpineType')</script> <td><tt>iSpineType</tt><td><tt>= CATGSMLoftCalculatedSpine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpine</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a lofted surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfSections</tt>
   <dd>      List of sections curves
   </dd>
    <dt><tt> iListOfOrientations</tt>
   <dd>      List of orientation of the sections curves
   </dd>
    <dt><tt> iListOfClosingPoints</tt>
   <dd>      List of closing points of the sections curves 
     (to be used Only if sections curves are closed
   </dd>
    <dt><tt> iStartSectionTangent</tt>
   <dd>      tangent surface to be imposed at start section
   </dd>
    <dt><tt> iEndSectionTangent</tt>
   <dd>      tangent surface to be imposed at end section
   </dd>
    <dt><tt> iListOfGuides</tt>
   <dd>      List of guides curves
   </dd>
    <dt><tt> iSpineType</tt>
   <dd>      itype of spine, by default the spine is computed
   </dd>
    <dt><tt> iSpine</tt>
   <dd>      curve to be used as a spine, if iSpineType is CATGSMLoftUserSpine
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMLoft_var        created loft.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLoft','');return false">CATIGSMLoft</a>, <a href="#" onClick="openLink('CATGSMLoftSpineType','');return false">CATGSMLoftSpineType</a>
</dl>
</dl>
<a name="CreateMonoDimExplicit"></a><a name="CreateMonoDimExplicit()"></a> <dt> o <b>CreateMonoDimExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateMonoDimExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a simple curve.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created curve
</dl>
</dl>
<a name="CreateNear"></a><a name="CreateNear(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateNear</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMNear','CATIGSMNear_var')</script>  <b>CreateNear</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iMultiElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iReferenceElement</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the nearest element of a multi-element feature according to a given reference.
 <br> Its gives the sub-element of multi-element that is nearest to the reference element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMultiElement</tt>
   <dd>      Multiple Element  
   </dd>
    <dt><tt> iReferenceElement</tt>
   <dd>      Reference element for nearest evaluation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMNear_var       Created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMNear','');return false">CATIGSMNear</a>
</dl>
</dl>
<a name="CreateNewAssemble"></a><a name="CreateNewAssemble()"></a> <dt> o <b>CreateNewAssemble</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMAssemble','CATIGSMAssemble_var')</script>  <b>CreateNewAssemble</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a composite curve or surface.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMAssemble_var : the created composite curve of surface. 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMAssemble','');return false">CATIGSMAssemble</a>
</dl>
</dl>
<a name="CreateOffset"></a><a name="CreateOffset(CATISpecObject_var,CATICkeParm_var,CATBoolean,CATBoolean)"></a> <dt> o <b>CreateOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMOffset','CATIGSMOffset_var')</script>  <b>CreateOffset</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSpecIn</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iLittMax</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>InvertDirection</tt><td><tt>=FALSE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSuppressMode</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a surface which is an offset from another surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToBeOffset</tt>
   <dd>       The surface to be offset.
   </dd>
    <dt><tt> iDistance</tt>
   <dd>       The offset distance.
   </dd>
    <dt><tt> InvertDirection</tt>
   <dd>       if TRUE the offset distance is computed in the reverse direction of the surface
       orientation.
   </dd>
    <dt><tt> iSuppressMode</tt>
   <dd>       if TRUE the erroneous eleemnts are removed from the offset result.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMOffset_var        created offset surface.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMOffset','');return false">CATIGSMOffset</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(double*,double*,double*)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane','CATIGSMPlane_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrRootPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrUVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrVVector</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit iplane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtrRootPoint</tt>
   <dd>      Coordinates of the center point of the plane (array size 3)
   </dd>
    <dt><tt> iPtrUVector</tt>
   <dd>      Components of the first direction of the plane (array size 3)
   </dd>
    <dt><tt> iPtrVVector</tt>
   <dd>      Components of the second direction of the plane (array size 3)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane_var         created  plane
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane','');return false">CATIGSMPlane</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATISpecObject_var)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane1Curve','CATIGSMPlane1Curve_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlanarCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane passing through a planar curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlanarCurve</tt>
   <dd>      planar curve
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane1Curve_var        created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane1Curve','');return false">CATIGSMPlane1Curve</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneMean','CATIGSMPlaneMean_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfPoints</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a mean iplane through a set of points.
 <br>The points do not necessary lie in this iplane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfPoints</tt>
   <dd>      ListOfPoints 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlaneMean_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneMean','');return false">CATIGSMPlaneMean</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATISpecObject_var,CATISpecObject_var,int)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane2Lines','CATIGSMPlane2Lines_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondLine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCoplanarLines</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane passing through 2 lines.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstLine</tt>
   <dd>      first line
   </dd>
    <dt><tt> iSecondLine</tt>
   <dd>       second line
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane2Lines_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane2Lines','');return false">CATIGSMPlane2Lines</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneOffset','CATIGSMPlaneOffset_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iOffset</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane which is offset from another iplane.
 <br> iOrientation = TRUE reverses the plane
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>       iplane
   </dd>
    <dt><tt> iOffset</tt>
   <dd>      offset 
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>       Orientation 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlaneOffset_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneOffset','');return false">CATIGSMPlaneOffset</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane3Points','CATIGSMPlane3Points_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iThirdPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane passing through 3 points.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstPoint</tt>
   <dd>       first point 
   </dd>
    <dt><tt> iSecondPoint</tt>
   <dd>       second point 
   </dd>
    <dt><tt> iThirdPoint</tt>
   <dd>       third point 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane3Points_var        created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane3Points','');return false">CATIGSMPlane3Points</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneEquation','CATIGSMPlaneEquation_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iA_Coeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iB_Coeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iC_Coeff</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iD_Coeff</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane from its equation : Ax+By+Cz=D.
 <br> A,B,C are real ivalues, D is a length
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iA_Coeff</tt>
   <dd>      A coefficient 
   </dd>
    <dt><tt> iB_Coeff</tt>
   <dd>      B coefficient 
   </dd>
    <dt><tt> iC_Coeff</tt>
   <dd>      C coefficient 
   </dd>
    <dt><tt> iD_Coeff</tt>
   <dd>      D coefficient 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlaneEquation_var        created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneEquation','');return false">CATIGSMPlaneEquation</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreatePlane"></a><a name="CreatePlane(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation)"></a> <dt> o <b>CreatePlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneAngle','CATIGSMPlaneAngle_var')</script>  <b>CreatePlane</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iRotationAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Creates a iplane at an angle to another iplane.
 <br> iAngle is in degrees.
 <br> iOrientation = TRUE reverses the plane
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>       reference plane 
   </dd>
    <dt><tt> iRotationAxis</tt>
   <dd>      rotation axis
   </dd>
    <dt><tt> iAngle</tt>
   <dd>       angle 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlaneAngle_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneAngle','');return false">CATIGSMPlaneAngle</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreatePlane1Line1Pt"></a><a name="CreatePlane1Line1Pt(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreatePlane1Line1Pt</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane1Line1Pt','CATIGSMPlane1Line1Pt_var')</script>  <b>CreatePlane1Line1Pt</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iLine</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane passing through 1 line and 1 point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd>       point 
   </dd>
    <dt><tt> iLine</tt>
   <dd>      line
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane1Line1Pt_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane1Line1Pt','');return false">CATIGSMPlane1Line1Pt</a>
</dl>
</dl>
<a name="CreatePlaneExplicit"></a><a name="CreatePlaneExplicit()"></a> <dt> o <b>CreatePlaneExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane','CATIGSMPlane_var')</script>  <b>CreatePlaneExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit iplane which has no associative father but
 only a geometrical output.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created  plane 
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane','');return false">CATIGSMPlane</a>
</dl>
</dl>
<a name="CreatePlaneNormal"></a><a name="CreatePlaneNormal(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreatePlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneNormal','CATIGSMPlaneNormal_var')</script>  <b>CreatePlaneNormal</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane normal to a curve at a given point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>       curve
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      point on the curve, where the plane has to be normal.
      When no point is given, the curve middle point is taken.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlaneNormal_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneNormal','');return false">CATIGSMPlaneNormal</a>
</dl>
</dl>
<a name="CreatePlaneOffsetPt"></a><a name="CreatePlaneOffsetPt(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreatePlaneOffsetPt</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneOffsetPt','CATIGSMPlaneOffsetPt_var')</script>  <b>CreatePlaneOffsetPt</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane which is offset from another iplane.
 <br> iOffset is defined by the distance beween teh iplane and a point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>        reference plane.
   </dd>
    <dt><tt> iPoint</tt>
   <dd>       the point through which the plane is to pass.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneOffsetPt','');return false">CATIGSMPlaneOffsetPt</a>
</dl>
</dl>
<a name="CreatePlaneTangent"></a><a name="CreatePlaneTangent(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreatePlaneTangent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlaneTangent','CATIGSMPlaneTangent_var')</script>  <b>CreatePlaneTangent</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a iplane tangent to a surface at a given point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd>       surface
   </dd>
    <dt><tt> iPoint</tt>
   <dd>       point 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATIGSMPlaneTangent_var       created  plane.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlaneTangent','');return false">CATIGSMPlaneTangent</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint()"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>CreatePoint</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point defined with a formula. 
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATICkeParm_var        created point.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(double*)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPoint','CATIGSMPoint_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtrPoint</tt>
   <dd>      Coordinates of the point (array size 3)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPoint_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPoint','');return false">CATIGSMPoint</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATISpecObject_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointCenter','CATIGSMPointCenter_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point at the center of a circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      Circle.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointCenter_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointCenter','');return false">CATIGSMPointCenter</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATISpecObject_var,CATIGSMDirection_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointTangent','CATIGSMPointTangent_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point on a given curve where the tangent is colinear to a given direction.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      iReference curve.
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      The computed point will be tangent to the curve with this direction.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointTangent_var        created point.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointTangent','');return false">CATIGSMPointTangent</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointCoord','CATIGSMPointCoord_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iFirstCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iSecondCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iThirdCoord</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point from its cartesian coordinates.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstCoord</tt>
   <dd>      iX coordinate for the point
   </dd>
    <dt><tt> iSecondCoord</tt>
   <dd>      iY coordinate for the point
   </dd>
    <dt><tt> iThirdCoord</tt>
   <dd>      Z coordinate for the point
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointCoord_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointCoord','');return false">CATIGSMPointCoord</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATISpecObject_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointCoord','CATIGSMPointCoord_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iFirstCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iSecondCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iThirdCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point from its cartesian coordinates.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstCoord</tt>
   <dd>      X coordinate for the point
   </dd>
    <dt><tt> iSecondCoord</tt>
   <dd>      Y coordinate for the point
   </dd>
    <dt><tt> iThirdCoord</tt>
   <dd>      Z coordinate for the point
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      Point is a reference point for coordinates (X,Y,Z).<br>
      if no point is given, the origin is taken. (Point = NULL_var is allowed).
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointCoord_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointCoord','');return false">CATIGSMPointCoord</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointOnPlane','CATIGSMPointOnPlane_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPlane</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iY</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point on a iplane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>      iReference iplane
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      iPoint is a reference point for coordinates (X,Y),
      if no point is given, the origin is taken.
      (Point = NULL_var is allowed).
   </dd>
    <dt><tt> iX</tt>
   <dd>      iDistance to the reference point in iX direction
   </dd>
    <dt><tt> iY</tt>
   <dd>      iDistance to the reference point in iY direction
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointOnPlane_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointOnPlane','');return false">CATIGSMPointOnPlane</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointOnSurface','CATIGSMPointOnSurface_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point on a surface, starting from a reference point
 (which can be implicit) in a given direction and at the given
 distance from this point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd>      iReference surface
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      iPoint is a reference point. If no point is given, the origin is taken.
      (Point = NULL_var is allowed).
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      The distance on the surface will be computed in this direction.
   </dd>
    <dt><tt> iDistance</tt>
   <dd>      iDistance to the reference point.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointOnSurface_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointOnSurface','');return false">CATIGSMPointOnSurface</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreatePoint"></a><a name="CreatePoint(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATIGSMPointOnCurve::DistanceType)"></a> <dt> o <b>CreatePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointOnCurve','CATIGSMPointOnCurve_var')</script>  <b>CreatePoint</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMPointOnCurve::DistanceType','CATIGSMPointOnCurve::DistanceType')</script> <td><tt>iType</tt><td><tt>= CATIGSMPointOnCurve::Geodesic</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point on curve at a given curvilinear distance.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurve</tt>
   <dd>      iSupport curve.
   </dd>
    <dt><tt> iPoint</tt>
   <dd>      iReference point for computing distance. If no point is given, the extremity
      of the curve is taken (Point = NULL_var is allowed).
   </dd>
    <dt><tt> iDistance</tt>
   <dd>       the distance measured on the curve, it can be either a length or a real (ratio).
      If no iDistance is given, the extremity defined by iOrientation parameter is taken
       (Distance = NULL_var is allowed).
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      TRUE means that distance is measured in the other side of reference point (when it exists)
      or from the other extremity.
   </dd>
    <dt><tt> iType</tt>
   <dd>   Set the distance itype : geodesic or euclidean.
  Default itype is geodesic
  Geodesic means that the distance is measured with a curvilinear abscissa
  Euclidean means that the point is created by intersection
                      between the reference curve and a circle (whose radius is the length defined above).
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointOnCurve_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointOnCurve','');return false">CATIGSMPointOnCurve</a>
</dl>
</dl>
<a name="CreatePointBetween"></a><a name="CreatePointBetween(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATISpecObject_var)"></a> <dt> o <b>CreatePointBetween</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPointBetween','CATIGSMPointBetween_var')</script>  <b>CreatePointBetween</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>FirstPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>SecondPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>Ratio</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>Orientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a point between two points.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FirstPoint</tt>
   <dd>      First point .
   </dd>
    <dt><tt> SecondPoint</tt>
   <dd>      Second point  
   </dd>
    <dt><tt> Ratio</tt>
   <dd>       the ratio is the ratio of the distance between the two points.
      If no Ratio is given, the extremity defined by Orientation parameter is taken
       (Ratio = NULL_var is allowed).
   </dd>
    <dt><tt> Orientation</tt>
   <dd>      TRUE means that distance is measured in the other side of first point
   </dd>
    <dt><tt> iSupport</tt>
   <dd>     if support is given, the input points should lie on it.
     if no support is given, the point will be created along the straight line joining the input points
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPointBetween_var : the created point 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPointBetween','');return false">CATIGSMPointBetween</a>
</dl>
</dl>
<a name="CreatePointExplicit"></a><a name="CreatePointExplicit()"></a> <dt> o <b>CreatePointExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPoint','CATIGSMPoint_var')</script>  <b>CreatePointExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit point which has no associative father but
 only a geometrical output.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created point
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPoint','');return false">CATIGSMPoint</a>
</dl>
</dl>
<a name="CreatePolyline"></a><a name="CreatePolyline()"></a> <dt> o <b>CreatePolyline</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPolyline','CATIGSMPolyline_var')</script>  <b>CreatePolyline</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a polyline curve.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPolyline_var        created polyline.
</dl>
</dl>
<a name="CreatePolyline"></a><a name="CreatePolyline(CATLISTV(CATISpecObject_var)&amp;,CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)"></a> <dt> o <b>CreatePolyline</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPolyline','CATIGSMPolyline_var')</script>  <b>CreatePolyline</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfPoints</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a polyline curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfPoints</tt>
   <dd>      List of points
   </dd>
    <dt><tt> iListOfRadius</tt>
   <dd>      List of radius
      Radius can be NULL_var
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      Support
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPolyline_var        created polyline.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPolyline','');return false">CATIGSMPolyline</a>
</dl>
</dl>
<a name="CreateProject"></a><a name="CreateProject(CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATBoolean,CATGSMProjectSolutionType)"></a> <dt> o <b>CreateProject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMProject','CATIGSMProject_var')</script>  <b>CreateProject</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToProject</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>BoolNormal</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMProjectSolutionType','CATGSMProjectSolutionType')</script> <td><tt>SolutionType</tt><td><tt>= CATGSMNearestSolution</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a projection.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToProject</tt>
   <dd>      iElement to project (point, curve).
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      iCurve or surface support for projection.
   </dd>
    <dt><tt> iDirection</tt>
   <dd>       Projection direction.
   </dd>
    <dt><tt> BoolNormal</tt>
   <dd>      if TRUE the projection is normal to iSupport (the iDirection is not used).
   </dd>
    <dt><tt> SolutionType</tt>
   <dd>      Modify Solution itype :  All solutions or Nearest solution (only nearest projection 
      is kept when more than one solution is possible).
      CATGSMNearestSolution or CATGSMAllSolutions.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMProject_var        the projection.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMProject','');return false">CATIGSMProject</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATGSMProjectSolutionType','');return false">CATGSMProjectSolutionType</a>
</dl>
</dl>
<a name="CreateRefPlane"></a><a name="CreateRefPlane(double*,double*,double*)"></a> <dt> o <b>CreateRefPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMPlane','CATIGSMPlane_var')</script>  <b>CreateRefPlane</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrRootPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrUVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPtrVVector</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an explicit reference iplane.
 Use this method only to create the three reference iplanes xy, yz and zx.
 This iplane will be fixed. It can't move with constraints.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtrRootPoint</tt>
   <dd>      Coordinates of the center point of the plane (array size 3)
   </dd>
    <dt><tt> iPtrUVector</tt>
   <dd>      Components of the first direction of the plane (array size 3)
   </dd>
    <dt><tt> iPtrVVector</tt>
   <dd>      Components of the second direction of the plane (array size 3)
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMPlane_var         created  plane
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMPlane','');return false">CATIGSMPlane</a>
</dl>
</dl>
<a name="CreateReflectLine"></a><a name="CreateReflectLine(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>CreateReflectLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMReflectLine','CATIGSMReflectLine_var')</script>  <b>CreateReflectLine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientationSupport</tt><td><tt>= CATGSMSameOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientationDirection</tt><td><tt>= CATGSMSameOrientation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a reflectine.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> isupport</tt>
   <dd>      support of the reflectline (surface).
   </dd>
    <dt><tt> idirection</tt>
   <dd>      direction for the reflectline.
   </dd>
    <dt><tt> iangle</tt>
   <dd>      angle of the reflectline.
   </dd>
    <dt><tt> iOrientationSupport</tt>
   <dd>      Orientation use for the support element
   </dd>
    <dt><tt> iOrientationDirection</tt>
   <dd>      Orientation use for the direction
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMReflectLine_var        the reflectline.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMReflectLine','');return false">CATIGSMReflectLine</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateRevol"></a><a name="CreateRevol(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateRevol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMRevol','CATIGSMRevol_var')</script>  <b>CreateRevol</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iProfil</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iDir</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a revolution surface or curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfil</tt>
   <dd>      iProfile for revolution, which may be a point or a curve.
   </dd>
    <dt><tt> iDir</tt>
   <dd>      The axis of revolution (always a line).
   </dd>
    <dt><tt> iAng1</tt>
   <dd>      First angle.
   </dd>
    <dt><tt> iAng2</tt>
   <dd>      Second angle.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMRevol_var        created revolution.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMRevol','');return false">CATIGSMRevol</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateRotate"></a><a name="CreateRotate()"></a> <dt> o <b>CreateRotate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMRotate','CATIGSMRotate_var')</script>  <b>CreateRotate</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an empty Rotation.
</dl>
<a name="CreateRotate"></a><a name="CreateRotate(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"></a> <dt> o <b>CreateRotate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMRotate','CATIGSMRotate_var')</script>  <b>CreateRotate</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToRotate</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a rotated point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToRotate</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> iAxis</tt>
   <dd>      iLine.
   </dd>
    <dt><tt> iAngle</tt>
   <dd>      Rotation angle.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMRotate_var        created rotation.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMRotate','');return false">CATIGSMRotate</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateScaling"></a><a name="CreateScaling(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"></a> <dt> o <b>CreateScaling</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMScaling','CATIGSMScaling_var')</script>  <b>CreateScaling</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToScale</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iReference</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRatio</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a scaled point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToScale</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> iReference</tt>
   <dd>      point or iplane.
   </dd>
    <dt><tt> iRatio</tt>
   <dd>      Real.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMScaling_var        created symmetry.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMScaling','');return false">CATIGSMScaling</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateSphere"></a><a name="CreateSphere(CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var,CATICkeParm_var)"></a> <dt> o <b>CreateSphere</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSphere','CATIGSMSphere_var')</script>  <b>CreateSphere</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCenter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng3</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iAng4</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a sphere surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenter</tt>
   <dd>      The center (a point) of the sphere.
   </dd>
    <dt><tt> iAxis</tt>
   <dd>      The axis of the sphere.
   </dd>
    <dt><tt> iRadius</tt>
   <dd>      The radius of the sphere.
   </dd>
    <dt><tt> iAng1</tt>
   <dd>      First parallel angle.
   </dd>
    <dt><tt> iAng2</tt>
   <dd>      Second parallel angle.
   </dd>
    <dt><tt> iAng3</tt>
   <dd>      First meridian angle.
   </dd>
    <dt><tt> iAng4</tt>
   <dd>      Second meridian angle.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSphere_var        created sphere.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSphere','');return false">CATIGSMSphere</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateSpine"></a><a name="CreateSpine()"></a> <dt> o <b>CreateSpine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSpine','CATIGSMSpine_var')</script>  <b>CreateSpine</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a spine curve.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSpine_var        created spine.
</dl>
</dl>
<a name="CreateSpine"></a><a name="CreateSpine(CATLISTV(CATISpecObject_var)&amp;,CATISpecObject_var)"></a> <dt> o <b>CreateSpine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSpine','CATIGSMSpine_var')</script>  <b>CreateSpine</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iListOfSections</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iStartPoint</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a spine curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfSections</tt>
   <dd>      List of sections curves or planes
   </dd>
    <dt><tt> iStartPoint</tt>
   <dd>      point to be used as a start point
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSpine_var        created spine.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSpine','');return false">CATIGSMSpine</a>
</dl>
</dl>
<a name="CreateSpiral"></a><a name="CreateSpiral(CATIGSMSpiral::Type,CATISpecObject_var,CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var,CATBoolean)"></a> <dt> o <b>CreateSpiral</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSpiral','CATIGSMSpiral_var')</script>  <b>CreateSpiral</b>(<td> const <script type="text/javascript"> activateLink('CATIGSMSpiral::Type','CATIGSMSpiral::Type')</script> <td><tt>iType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCenterPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iAxis</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iStartingRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iClockwiseRevolution</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a spiral curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>       Spiral is defined by AngleRadius, AnglePitch or PitchRadius.
   </dd>
    <dt><tt> iSupport</tt>
   <dd>      Spiral planar support.
   </dd>
    <dt><tt> iCenterPoint</tt>
   <dd>      Center point.
   </dd>
    <dt><tt> iAxis</tt>
   <dd>      Axis.
   </dd>
    <dt><tt> iStartingRadius</tt>
   <dd>      Defines the starting point: distance from the center point on the axis.
   </dd>
    <dt><tt> iClockwiseRevolution</tt>
   <dd>      Revolutions are clockwise if TRUE, counterclockwise if FALSE.

   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSpiral_var        Created spiral curve.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSpiral','');return false">CATIGSMSpiral</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateSplinePoints"></a><a name="CreateSplinePoints()"></a> <dt> o <b>CreateSplinePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSpline','CATIGSMSpline_var')</script>  <b>CreateSplinePoints</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an empty cubic spline.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>    CATIGSMSpline_var       created spline
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSpline','');return false">CATIGSMSpline</a>
</dl>
</dl>
<a name="CreateSplinePoints"></a><a name="CreateSplinePoints(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>CreateSplinePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSpline','CATIGSMSpline_var')</script>  <b>CreateSplinePoints</b>(<td> const <script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>ListOfPoints</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a cubic spline from a list of points.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ListOfPoints</tt>
   <dd>      ListOfPoints 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    CATIGSMSpline_var       created spline
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSpline','');return false">CATIGSMSpline</a>
</dl>
</dl>
<a name="CreateSplit"></a><a name="CreateSplit()"></a> <dt> o <b>CreateSplit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSplit','CATIGSMSplit_var')</script>  <b>CreateSplit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a split element by cutting and relimiting an element by several elements.
 Use the interface CATIGSMSplit to define element to be cut and cutting elements.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSplit_var        created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSplit','');return false">CATIGSMSplit</a>
</dl>
</dl>
<a name="CreateSplit"></a><a name="CreateSplit(CATISpecObject_var,CATISpecObject_var,CATGSMOrientation)"></a> <dt> o <b>CreateSplit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSplit','CATIGSMSplit_var')</script>  <b>CreateSplit</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToCut</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCutting</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a split element by cutting and relimiting an element by another element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToCut</tt>
   <dd>      The feature to cut (curve or surface).
   </dd>
    <dt><tt> iCutting</tt>
   <dd>      The cutting feature (point, curve, surface).
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      Manage the kept side of iToCut
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSplit_var        created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSplit','');return false">CATIGSMSplit</a>
</dl>
</dl>
<a name="CreateSymmetry"></a><a name="CreateSymmetry(CATISpecObject_var,CATISpecObject_var)"></a> <dt> o <b>CreateSymmetry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMSymmetry','CATIGSMSymmetry_var')</script>  <b>CreateSymmetry</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToSymmetry</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>invariant</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a symmetrical point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToSymmetry</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> invariant</tt>
   <dd>      point, line or iplane.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMSymmetry_var        created symmetry.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMSymmetry','');return false">CATIGSMSymmetry</a>
</dl>
</dl>
<a name="CreateTangentCircle"></a><a name="CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var)"></a> <dt> o <b>CreateTangentCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleCenterTangent','CATIGSMCircleCenterTangent_var')</script>  <b>CreateTangentCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iCenterElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iTangentElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle with center on the first input curve/point and 
 which is tangent to the second input curve and with a given radius,
 with respect to a support surface.
  <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCenterElem</tt>
   <dd>      Center element : a curve or a point 
   </dd>
    <dt><tt> iTangentElem</tt>
   <dd>      tangent element : a curve 
   </dd>
    <dt><tt> iSurface</tt>
   <dd>       surface : a support 
   </dd>
    <dt><tt> iRadius</tt>
   <dd>       Value specified is considered as radius. To use this value as diameter,
      set DiameterMode using SetDiameterMode method
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATIGSMCircleCenterTangent_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleCenterTangent','');return false">CATIGSMCircleCenterTangent</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateTangentCircle"></a><a name="CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATICkeParm_var,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>CreateTangentCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleBitangentRadius','CATIGSMCircleBitangentRadius_var')</script>  <b>CreateTangentCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle which is tangent to 2 curves and with a given radius, with respect to a support surface.
 The curves can be degenerated into points.
 <br>Orientations allows to change the resulting circle.
 <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstElem</tt>
   <dd>      first element : a curve or a point 
   </dd>
    <dt><tt> iSecondElem</tt>
   <dd>      second element : a curve or a point
   </dd>
    <dt><tt> iSurface</tt>
   <dd>       surface 
   </dd>
    <dt><tt> iRadius</tt>
   <dd>       Value specified is considered as radius. To use this value as diameter,
      set DiameterMode using SetDiameterMode method
   </dd>
    <dt><tt> iFirstOrientation</tt>
   <dd>      first orientation
   </dd>
    <dt><tt> iSecondOrientation</tt>
   <dd>      secont orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATIGSMCircleBitangentRadius_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleBitangentRadius','');return false">CATIGSMCircleBitangentRadius</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>, <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="CreateTangentCircle"></a><a name="CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>CreateTangentCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleBitangentPoint','CATIGSMCircleBitangentPoint_var')</script>  <b>CreateTangentCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle which is tangent to 2 curves with respect to a support surface
 and passing through a point which lies on the second curve.
 The first curve can be degenerated into a point.
 <br>Orientations allows to change the resulting circle.
 <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstElem</tt>
   <dd>      first element : a curve or a point 
   </dd>
    <dt><tt> iSecondCurve</tt>
   <dd>       second curve 
   </dd>
    <dt><tt> iPoint</tt>
   <dd>       surface 
   </dd>
    <dt><tt> iSurface</tt>
   <dd>       surface 
   </dd>
    <dt><tt> iFirstOrientation</tt>
   <dd>      first orientation
   </dd>
    <dt><tt> iSecondOrientation</tt>
   <dd>      second orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   CATIGSMCircleBitangentPoint_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleBitangentPoint','');return false">CATIGSMCircleBitangentPoint</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreateTangentCircle"></a><a name="CreateTangentCircle(CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATISpecObject_var,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>CreateTangentCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMCircleTritangent','CATIGSMCircleTritangent_var')</script>  <b>CreateTangentCircle</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iThirdElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iThirdOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a circle which is tangent to 3 curves with respect to a support surface.
 The curves can be degenerated into points.
 <br>Orientations allows to change the resulting circle.
 <br>Default creation is direct trimmed circle.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstElem</tt>
   <dd>      first element : a curve or a point 
   </dd>
    <dt><tt> iSecondElem</tt>
   <dd>      second element : a curve or a point 
   </dd>
    <dt><tt> iThirdElem</tt>
   <dd>      third element : a curve or a point 
   </dd>
    <dt><tt> iSurface</tt>
   <dd>       surface 
   </dd>
    <dt><tt> iFirstOrientation</tt>
   <dd>      first orientation
   </dd>
    <dt><tt> iSecondOrientation</tt>
   <dd>      second orientation
   </dd>
    <dt><tt> iThirdOrientation</tt>
   <dd>      third orientation
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    CATIGSMCircleTritangent_var       created circle.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMCircleTritangent','');return false">CATIGSMCircleTritangent</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreateTranslate"></a><a name="CreateTranslate()"></a> <dt> o <b>CreateTranslate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMTranslate','CATIGSMTranslate_var')</script>  <b>CreateTranslate</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an empty translation.
</dl>
<a name="CreateTranslate"></a><a name="CreateTranslate(CATISpecObject_var,CATIGSMDirection_var,CATICkeParm_var)"></a> <dt> o <b>CreateTranslate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMTranslate','CATIGSMTranslate_var')</script>  <b>CreateTranslate</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iToTranslate</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIGSMDirection','CATIGSMDirection_var')</script> <td><tt>iDirection</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a translated point, curve or surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iToTranslate</tt>
   <dd>      point, curve, surface or solid.
   </dd>
    <dt><tt> iDirection</tt>
   <dd>      Translation direction.
   </dd>
    <dt><tt> iDistance</tt>
   <dd>      Translation length.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMTranslate_var        created translation.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMTranslate','');return false">CATIGSMTranslate</a>, <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
</dl>
</dl>
<a name="CreateTriDimExplicit"></a><a name="CreateTriDimExplicit()"></a> <dt> o <b>CreateTriDimExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateTriDimExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a simple volume.
 <br>  Note: requires GSO license, if license  not found creation fails, return NULL_var. 
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var         Created Volume
</dl>
</dl>
<a name="CreateTrim"></a><a name="CreateTrim(CATISpecObject_var,CATGSMOrientation,CATISpecObject_var,CATGSMOrientation)"></a> <dt> o <b>CreateTrim</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIGSMTrim','CATIGSMTrim_var')</script>  <b>CreateTrim</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iFirstElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iSecondElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a trim element by cutting and joining two elements.
 <br>You can trim a surface by a surface or a curve by a curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FisrtElement</tt>
   <dd>      The feature to trim (curve or surface).
   </dd>
    <dt><tt> iOrientation1</tt>
   <dd>      Manage the kept side of iFirstElement.
   </dd>
    <dt><tt> iSecondElement</tt>
   <dd>      The second feature to trim (curve or surface).
   </dd>
    <dt><tt> iOrientation2</tt>
   <dd>      Manage the kept side of iSecondElement.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATIGSMTrim_var        created feature.
 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMTrim','');return false">CATIGSMTrim</a>, <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="CreateZeroDimExplicit"></a><a name="CreateZeroDimExplicit()"></a> <dt> o <b>CreateZeroDimExplicit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateZeroDimExplicit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a simple point.
   
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATISpecObject_var        created point
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
