<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMCorner</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIGSMCorner','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMCorner','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIGSMCorner','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMCorner','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMCorner</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMCorner_19319','CATIGSMCorner','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMCorner</b>
</p>
<p>
<b><i> Corner feature.</i></b><br>
 
 <b>Role</b>: Allows to access data of the Corner feature created by using two elements,
 their orientation (same or inverse than the underlying curve), 
 a support (only for Corner On Support), 
 and a radius
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','CreateCorner');return false">CATIGSMFactory.CreateCorner</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','Create3DCorner');return false">CATIGSMFactory.Create3DCorner</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBeginOfCorner(int&amp;)"><b>GetBeginOfCorner</b></a>(int&amp;)
<dd>  Gets the number of the beginning curve of the corner.
 <dt> o 
    <a href="#GetCornerType(enum CATGSMCornerType&amp;)"><b>GetCornerType</b></a>(enum CATGSMCornerType&amp;)
<dd>  Gets the Corner type .
 <dt> o 
    <a href="#GetDirection(CATIGSMDirection_var&amp;)"><b>GetDirection</b></a>(CATIGSMDirection_var&amp;)
<dd>  Gets the Direction of the 3D corner .
 <dt> o 
    <a href="#GetDiscriminationIndex(int&amp;)"><b>GetDiscriminationIndex</b></a>(int&amp;)
<dd>  Gets the Index of the solution.
 <dt> o 
    <a href="#GetFirstElem(CATISpecObject_var&amp;)"><b>GetFirstElem</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the first reference element  (a curve or a point).
 <dt> o 
    <a href="#GetFirstOrientation(CATGSMOrientation&amp;)"><b>GetFirstOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the first reference element orientation used to compute the corner.
 <dt> o 
    <a href="#GetFirstTangentOrientation(CATGSMOrientation&amp;)"><b>GetFirstTangentOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the first tangent curve orientation for circle computation.
 <dt> o 
    <a href="#GetNbRemainingSharpVertices(int&amp;)"><b>GetNbRemainingSharpVertices</b></a>(int&amp;)
<dd>  Gets the number of remaining sharp vertices in case of corner on vertices of a curve.
 <dt> o 
    <a href="#GetOnVertex(CATBoolean&amp;)"><b>GetOnVertex</b></a>(CATBoolean&amp;)
<dd>  Sets the on vertex creation mode.
 <dt> o 
    <a href="#GetPlaneNormal(CATMathVector&amp;)"><b>GetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Gets the Normal of the plane created when the Support of the curve is not specified
   
 <dt> o 
    <a href="#GetRadius(double&amp;)"><b>GetRadius</b></a>(double&amp;)
<dd>  Gets the radius of the corner.
 <dt> o 
    <a href="#GetRadius(CATICkeParm_var&amp;)"><b>GetRadius</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the radius of the corner.
 <dt> o 
    <a href="#GetSecondElem(CATISpecObject_var&amp;)"><b>GetSecondElem</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the second reference element (a curve).
 <dt> o 
    <a href="#GetSecondOrientation(CATGSMOrientation&amp;)"><b>GetSecondOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the second reference element orientation used to compute the corner.
 <dt> o 
    <a href="#GetSecondTangentOrientation(CATGSMOrientation&amp;)"><b>GetSecondTangentOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the second tangent curve orientation for circle computation.
 <dt> o 
    <a href="#GetSupport(CATISpecObject_var&amp;)"><b>GetSupport</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the support of the corner (a plane or a surface).
 <dt> o 
    <a href="#GetTrim(CATBoolean&amp;)"><b>GetTrim</b></a>(CATBoolean&amp;)
<dd>  Queries whether references curves are trimmed or not.
 <dt> o 
    <a href="#GetTrimMode(CATGSMCornerTrimMode&amp;)"><b>GetTrimMode</b></a>(CATGSMCornerTrimMode&amp;)
<dd>  Queries whether references curves are trimmed or not.
 <dt> o 
    <a href="#InvertFirstOrientation()"><b>InvertFirstOrientation</b></a>()
<dd>  Inverts the first reference element orientation used to compute the corner.
 <dt> o 
    <a href="#InvertSecondOrientation()"><b>InvertSecondOrientation</b></a>()
<dd>  Inverts the second reference element orientation used to compute the corner.
 <dt> o 
    <a href="#SetBeginOfCorner(int)"><b>SetBeginOfCorner</b></a>(int)
<dd>  Sets the number of the beginning curve of the corner.
 <dt> o 
    <a href="#SetCornerType(enum CATGSMCornerType)"><b>SetCornerType</b></a>(enum CATGSMCornerType)
<dd>  Sets the Corner type .
 <dt> o 
    <a href="#SetDirection(CATIGSMDirection_var&amp;)"><b>SetDirection</b></a>(CATIGSMDirection_var&amp;)
<dd>  Sets the Direction of the 3D corner .
 <dt> o 
    <a href="#SetDiscriminationIndex(int)"><b>SetDiscriminationIndex</b></a>(int)
<dd>  Sets the Index of the solution.
 <dt> o 
    <a href="#SetFirstElem(CATISpecObject_var)"><b>SetFirstElem</b></a>(CATISpecObject_var)
<dd>  Sets the first reference element  (a curve or a point).
 <dt> o 
    <a href="#SetFirstOrientation(CATGSMOrientation)"><b>SetFirstOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the first reference element orientation used to compute the corner.
 <dt> o 
    <a href="#SetFirstTangentOrientation(CATGSMOrientation)"><b>SetFirstTangentOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the first tangent curve orientation for circle computation.
 <dt> o 
    <a href="#SetNbRemainingSharpVertices(int)"><b>SetNbRemainingSharpVertices</b></a>(int)
<dd>  Sets the number of remaining sharp vertices in case of corner on vertices of a curve.
 <dt> o 
    <a href="#SetOnVertex(CATBoolean)"><b>SetOnVertex</b></a>(CATBoolean)
<dd>  Gets the creation mode : on vertex or not.
 <dt> o 
    <a href="#SetPlaneNormal(CATMathVector&amp;)"><b>SetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Sets the Normal of the plane created when the Support of the curve is not specified
   
 <dt> o 
    <a href="#SetRadius(double)"><b>SetRadius</b></a>(double)
<dd>  Sets the radius of the corner.
 <dt> o 
    <a href="#SetRadius(CATICkeParm_var)"><b>SetRadius</b></a>(CATICkeParm_var)
<dd>  Sets the radius of the corner.
 <dt> o 
    <a href="#SetSecondElem(CATISpecObject_var)"><b>SetSecondElem</b></a>(CATISpecObject_var)
<dd>  Sets the second reference element (a curve).
 <dt> o 
    <a href="#SetSecondOrientation(CATGSMOrientation)"><b>SetSecondOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the second reference element orientation used to compute the corner.
 <dt> o 
    <a href="#SetSecondTangentOrientation(CATGSMOrientation)"><b>SetSecondTangentOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the second tangent curve orientation for circle computation.
 <dt> o 
    <a href="#SetSupport(CATISpecObject_var)"><b>SetSupport</b></a>(CATISpecObject_var)
<dd>  Sets the support of the corner (a plane or a surface).
 <dt> o 
    <a href="#SetTrim(CATBoolean)"><b>SetTrim</b></a>(CATBoolean)
<dd>  Sets or unsets the trim option of the references curves.
 <dt> o 
    <a href="#SetTrimMode(CATGSMCornerTrimMode)"><b>SetTrimMode</b></a>(CATGSMCornerTrimMode)
<dd>  Sets the trim mode of the references curves.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBeginOfCorner"></a><a name="GetBeginOfCorner(int&amp;)"></a> <dt> o <b>GetBeginOfCorner</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBeginOfCorner</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>NumWire</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of the beginning curve of the corner.
 <br>This parameter is used to stabilize the resulting corner
</dl>
<a name="GetCornerType"></a><a name="GetCornerType(enum CATGSMCornerType&amp;)"></a> <dt> o <b>GetCornerType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCornerType</b>(<td><script type="text/javascript"> activateLink('enum CATGSMCornerType','enum CATGSMCornerType&amp;')</script> <td><tt>oCornerType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Corner type . 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCornerType</tt>
   <dd>     CATGSMCornerOnSupport = 0 : Corner On Support
     CATGSM3DCorner        = 1 : 3D Corner          ( == DO NOT USED == ) 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerType','');return false">CATGSMCornerType</a>
</dl>
</dl>
<a name="GetDirection"></a><a name="GetDirection(CATIGSMDirection_var&amp;)"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirection</b>(<td><script type="text/javascript"> activateLink('CATIGSMDirection_var','CATIGSMDirection_var&amp;')</script> <td><tt>oDir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Direction of the 3D corner .
 -- direction (only for 3D Corner) --- 
 The 3D corner is seen as an arc of a circle along this Direction
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDir</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','Create3DCorner');return false">CATIGSMFactory.Create3DCorner</a>
</dl>
</dl>
<a name="GetDiscriminationIndex"></a><a name="GetDiscriminationIndex(int&amp;)"></a> <dt> o <b>GetDiscriminationIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiscriminationIndex</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oIndexSol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Index of the solution.
<br>  
 Several resulting solutions produced by the operator can be same 
 oriented regarding to the input wire bodies. 
 In such a case, they are sorted in order to distinguish them.<br>
 The Sequence FirstOrientation - SecondOrientation - IndexSol 
 allows you to identifie a unique one-domain solution.<br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIndexSol</tt>
   <dd>     int oIndexSol</dd>
</dl>
</dl>
</dl>
<a name="GetFirstElem"></a><a name="GetFirstElem(CATISpecObject_var&amp;)"></a> <dt> o <b>GetFirstElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstElem</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first reference element  (a curve or a point).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      first reference element 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="GetFirstOrientation"></a><a name="GetFirstOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first reference element orientation used to compute the corner.
 Orientation specifies corner center position

 Orientation is same or inverse than the result of the cross product:
 Normal(support) ^ Tangent(FirstReferenceCurve)

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>      first orientation 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="GetFirstTangentOrientation"></a><a name="GetFirstTangentOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetFirstTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstTangentOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="GetNbRemainingSharpVertices"></a><a name="GetNbRemainingSharpVertices(int&amp;)"></a> <dt> o <b>GetNbRemainingSharpVertices</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbRemainingSharpVertices</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbSharpVertices</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of remaining sharp vertices in case of corner on vertices of a curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbSharpVertices</tt>
   <dd>      The number of remaining sharp vertices</dd>
</dl>
</dl>
</dl>
<a name="GetOnVertex"></a><a name="GetOnVertex(CATBoolean&amp;)"></a> <dt> o <b>GetOnVertex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOnVertex</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOnVertex</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the on vertex creation mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOnVertex</tt>
   <dd>      Mode creation mode on vertex (TRUE or FALSE)</dd>
</dl>
</dl>
</dl>
<a name="GetPlaneNormal"></a><a name="GetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>GetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlaneNormal</b>(<td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Normal of the plane created when the Support of the curve is not specified
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(double&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the radius of the corner.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>      Radius</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the radius of the corner.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>      Radius</dd>
</dl>
</dl>
</dl>
<a name="GetSecondElem"></a><a name="GetSecondElem(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSecondElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondElem</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second reference element (a curve).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      second reference element 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="GetSecondOrientation"></a><a name="GetSecondOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOrientation</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second reference element orientation used to compute the corner.
 Orientation specifies corner center position

 Orientation is same or inverse than the result of the cross product:
 Normal(support) ^ Tangent(SecondReferenceCurve)

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>      second orientation 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="GetSecondTangentOrientation"></a><a name="GetSecondTangentOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetSecondTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondTangentOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecontOrient</tt>
   <dd>      second orientation</dd>
</dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the support of the corner (a plane or a surface).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      support of the corner
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="GetTrim"></a><a name="GetTrim(CATBoolean&amp;)"></a> <dt> o <b>GetTrim</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrim</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oTrim</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries whether references curves are trimmed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Trim</tt>
   <dd>      Trim Option on (TRUE) or off (FALSE)</dd>
</dl>
</dl>
</dl>
<a name="GetTrimMode"></a><a name="GetTrimMode(CATGSMCornerTrimMode&amp;)"></a> <dt> o <b>GetTrimMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrimMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCornerTrimMode','CATGSMCornerTrimMode&amp;')</script> <td><tt>oTrimMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries whether references curves are trimmed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTrimMode</tt>
   <dd> NB : For compatibility reasons, trimming options GSMCornerTrimElement1 & 2 
 are active only if discrimination index is not null.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerTrimMode','');return false">CATGSMCornerTrimMode</a>
</dl>
</dl>
<a name="InvertFirstOrientation"></a><a name="InvertFirstOrientation()"></a> <dt> o <b>InvertFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertFirstOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the first reference element orientation used to compute the corner.
</dl>
<a name="InvertSecondOrientation"></a><a name="InvertSecondOrientation()"></a> <dt> o <b>InvertSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertSecondOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the second reference element orientation used to compute the corner.
</dl>
<a name="SetBeginOfCorner"></a><a name="SetBeginOfCorner(int)"></a> <dt> o <b>SetBeginOfCorner</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBeginOfCorner</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>NumWire</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the number of the beginning curve of the corner.
 <br>This parameter is used to stabilize the resulting corner
</dl>
<a name="SetCornerType"></a><a name="SetCornerType(enum CATGSMCornerType)"></a> <dt> o <b>SetCornerType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCornerType</b>(<td> const <script type="text/javascript"> activateLink('enum CATGSMCornerType','enum CATGSMCornerType')</script> <td><tt>iCornerType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Corner type . 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCornerType</tt>
   <dd>     CATGSMCornerOnSupport = 0 : Corner On Support     (required)    
     CATGSM3DCorner        = 1 : 3D Corner             ( == DO NOT USED == ) 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerType','');return false">CATGSMCornerType</a>
</dl>
</dl>
<a name="SetDirection"></a><a name="SetDirection(CATIGSMDirection_var&amp;)"></a> <dt> o <b>SetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirection</b>(<td> const <script type="text/javascript"> activateLink('CATIGSMDirection_var','CATIGSMDirection_var&amp;')</script> <td><tt>iDir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Direction of the 3D corner .
 -- direction (only for 3D Corner) --- 
 The 3D corner is seen as an arc of a circle along this Direction
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDir</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMDirection','');return false">CATIGSMDirection</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','Create3DCorner');return false">CATIGSMFactory.Create3DCorner</a>
</dl>
</dl>
<a name="SetDiscriminationIndex"></a><a name="SetDiscriminationIndex(int)"></a> <dt> o <b>SetDiscriminationIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDiscriminationIndex</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexSol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Index of the solution.
 <br> 
 Several resulting solutions produced by the operator can be same 
 oriented regarding to the input wire bodies. 
 In such a case, they are sorted in order to distinguish them.<br>
 The Sequence FirstOrientation - SecondOrientation - IndexSol 
 allows you to identifie a unique one-domain solution.<br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexSol</tt>
   <dd>     int iIndexSol</dd>
</dl>
</dl>
</dl>
<a name="SetFirstElem"></a><a name="SetFirstElem(CATISpecObject_var)"></a> <dt> o <b>SetFirstElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstElem</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first reference element  (a curve or a point).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      first reference element 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="SetFirstOrientation"></a><a name="SetFirstOrientation(CATGSMOrientation)"></a> <dt> o <b>SetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first reference element orientation used to compute the corner.
 Orientation specifies corner center position

 Orientation is same or inverse than the result of the cross product:
 Normal(support) ^ Tangent(FirstReferenceCurve)

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>      first orientation 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="SetFirstTangentOrientation"></a><a name="SetFirstTangentOrientation(CATGSMOrientation)"></a> <dt> o <b>SetFirstTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstTangentOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="SetNbRemainingSharpVertices"></a><a name="SetNbRemainingSharpVertices(int)"></a> <dt> o <b>SetNbRemainingSharpVertices</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetNbRemainingSharpVertices</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbSharpVertices</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the number of remaining sharp vertices in case of corner on vertices of a curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbSharpVertices</tt>
   <dd>      The number of remaining sharp vertices</dd>
</dl>
</dl>
</dl>
<a name="SetOnVertex"></a><a name="SetOnVertex(CATBoolean)"></a> <dt> o <b>SetOnVertex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOnVertex</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOnVertex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the creation mode : on vertex or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnVertex</tt>
   <dd>       creation mode on vertex (TRUE or FALSE)</dd>
</dl>
</dl>
</dl>
<a name="SetPlaneNormal"></a><a name="SetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>SetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPlaneNormal</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Normal of the plane created when the Support of the curve is not specified
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(double)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadius</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the radius of the corner.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRadius</tt>
   <dd>      Radius</dd>
</dl>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(CATICkeParm_var)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadius</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the radius of the corner.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Radius</tt>
   <dd>      Radius
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="SetSecondElem"></a><a name="SetSecondElem(CATISpecObject_var)"></a> <dt> o <b>SetSecondElem</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondElem</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second reference element (a curve).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      second reference element 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="SetSecondOrientation"></a><a name="SetSecondOrientation(CATGSMOrientation)"></a> <dt> o <b>SetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second reference element orientation used to compute the corner.
 <br> 
 Orientation specifies corner center position
 Orientation is same or inverse than the result of the cross product:
 Normal(support) ^ Tangent(SecondReferenceCurve)

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrientation</tt>
   <dd>      second orientation 
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMOrientation','');return false">CATGSMOrientation</a>
</dl>
</dl>
<a name="SetSecondTangentOrientation"></a><a name="SetSecondTangentOrientation(CATGSMOrientation)"></a> <dt> o <b>SetSecondTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondTangentOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondOrient</tt>
   <dd>      second  orientation</dd>
</dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSupport</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the support of the corner (a plane or a surface).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      support of the corner
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a>
</dl>
</dl>
<a name="SetTrim"></a><a name="SetTrim(CATBoolean)"></a> <dt> o <b>SetTrim</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrim</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iTrim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets or unsets the trim option of the references curves.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrim</tt>
   <dd>      Trim Option on (TRUE) or off (FALSE)</dd>
</dl>
</dl>
</dl>
<a name="SetTrimMode"></a><a name="SetTrimMode(CATGSMCornerTrimMode)"></a> <dt> o <b>SetTrimMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrimMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCornerTrimMode','CATGSMCornerTrimMode')</script> <td><tt>iTrimMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the trim mode of the references curves.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrimMode</tt>
   <dd> NB : For compatibility reasons, trimming options GSMCornerTrimElement1 & 2 
 are active only if discrimination index is not null.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerTrimMode','');return false">CATGSMCornerTrimMode</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMCorner.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
