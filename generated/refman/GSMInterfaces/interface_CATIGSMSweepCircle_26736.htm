<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMSweepCircle</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIGSMSweepCircle','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMSweepCircle','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIGSMSweepCircle','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMSweepCircle','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMSweepCircle</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMSweepCircle_26736','CATIGSMSweepCircle','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMSweepCircle</b>
</p>
<p>
<b><i> Interface to circular sweep feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the circular sweep.
 <p>  LICENSING INFORMATION: Creation of volume result requires GSO License
 <br> if GSO License is not granted , settting of Volume context has not effect 
 <br> 
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','CreateCircularSweep');return false">CATIGSMFactory.CreateCircularSweep</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DelAngle()"><b>DelAngle</b></a>()
<dd>  Removes all angles.
 <dt> o 
    <a href="#DelGuide()"><b>DelGuide</b></a>()
<dd>  Removes all guide curves.
 <dt> o 
    <a href="#DelRadius()"><b>DelRadius</b></a>()
<dd>  Removes all radius.
 <dt> o 
    <a href="#GetAngle(double&amp;,int)"><b>GetAngle</b></a>(double&amp;,int)
<dd>  Gets the value of an angle given its index.
 <dt> o 
    <a href="#GetAngle(CATICkeParm_var&amp;,int)"><b>GetAngle</b></a>(CATICkeParm_var&amp;,int)
<dd>  Gets the literal feature representing an angle given its index.
 <dt> o 
    <a href="#GetAngleLawInversions(CATBoolean&amp;,CATBoolean&amp;)"><b>GetAngleLawInversions</b></a>(CATBoolean&amp;,CATBoolean&amp;)
<dd>  Gets information whether angle laws have to be inverted or not.
 <dt> o 
    <a href="#GetAngleLawTypes(enum CATGSMBasicLawType&amp;,enum CATGSMBasicLawType&amp;)"><b>GetAngleLawTypes</b></a>(enum CATGSMBasicLawType&amp;,enum CATGSMBasicLawType&amp;)
<dd>  Gets angle law types.
 <dt> o 
    <a href="#GetAngleLaws(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)"><b>GetAngleLaws</b></a>(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)
<dd>  Gets information about both angle laws.
 <dt> o 
    <a href="#GetAngleLaws(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;)"><b>GetAngleLaws</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;)
<dd>  Gets information about both angle laws (including advanced law features).
 <dt> o 
    <a href="#GetCanonicalDetectionMode(CATGSMCanonicalSurfaceDetection&amp;)"><b>GetCanonicalDetectionMode</b></a>(CATGSMCanonicalSurfaceDetection&amp;)
<dd>  Gets information about detection of canonical surfaces of the output surface.
 <dt> o 
    <a href="#GetChoiceNo(int&amp;)"><b>GetChoiceNo</b></a>(int&amp;)
<dd>  Gets a choice number, which corresponds to each solution of a given
 circular sweep case.
 <dt> o 
    <a href="#GetContext(CATGSMFeatureContextType&amp;)"><b>GetContext</b></a>(CATGSMFeatureContextType&amp;)
<dd>  Gets the context of the Sweep.
 <dt> o 
    <a href="#GetGuide(CATISpecObject_var&amp;)"><b>GetGuide</b></a>(CATISpecObject_var&amp;)
<dd>  Gets first guide curve.
 <dt> o 
    <a href="#GetGuide(CATISpecObject_var&amp;,int)"><b>GetGuide</b></a>(CATISpecObject_var&amp;,int)
<dd>  Gets a guide curve given its index.
 <dt> o 
    <a href="#GetGuideDeviation(double&amp;)"><b>GetGuideDeviation</b></a>(double&amp;)
<dd>  Gets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 <dt> o 
    <a href="#GetGuideDeviation(CATICkeParm_var&amp;)"><b>GetGuideDeviation</b></a>(CATICkeParm_var&amp;)
<dd>  Gets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 <dt> o 
    <a href="#GetGuideDeviationActivity(CATBoolean&amp;)"><b>GetGuideDeviationActivity</b></a>(CATBoolean&amp;)
<dd>  Gets information whether a deviation from guide curves is allowed or not
 during sweeping operation in order to smooth it.
 <dt> o 
    <a href="#GetLongitudinalRelimiters(CATISpecObject_var&amp;,CATBoolean&amp;,CATISpecObject_var&amp;,CATBoolean&amp;)"><b>GetLongitudinalRelimiters</b></a>(CATISpecObject_var&amp;,CATBoolean&amp;,CATISpecObject_var&amp;,CATBoolean&amp;)
<dd>  Gets the elements relimiting the spine (or the default spine).
 <dt> o 
    <a href="#GetMode(enum CATGSMCircularSweepCase&amp;)"><b>GetMode</b></a>(enum CATGSMCircularSweepCase&amp;)
<dd>  Gets circular sweep case number (also called mode).
 <dt> o 
    <a href="#GetNbAngle(int&amp;)"><b>GetNbAngle</b></a>(int&amp;)
<dd>  Gets the number of angles.
 <dt> o 
    <a href="#GetNbGuide(int&amp;)"><b>GetNbGuide</b></a>(int&amp;)
<dd>  Gets the number of guide curves.
 <dt> o 
    <a href="#GetNbRadius(int&amp;)"><b>GetNbRadius</b></a>(int&amp;)
<dd>  Gets the number of radius.
 <dt> o 
    <a href="#GetRadius(double&amp;,int)"><b>GetRadius</b></a>(double&amp;,int)
<dd>  Gets the value of a radius given its index.
 <dt> o 
    <a href="#GetRadius(CATICkeParm_var&amp;,int)"><b>GetRadius</b></a>(CATICkeParm_var&amp;,int)
<dd>  Gets the literal feature representing a radius given its index.
 <dt> o 
    <a href="#GetRadiusLaw(CATICkeLaw_var&amp;)"><b>GetRadiusLaw</b></a>(CATICkeLaw_var&amp;)
<dd>  Gets radius law feature.
 <dt> o 
    <a href="#GetRadiusLaw(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)"><b>GetRadiusLaw</b></a>(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)
<dd>  Gets information about radius law.
 <dt> o 
    <a href="#GetRadiusLawInversion(CATBoolean&amp;)"><b>GetRadiusLawInversion</b></a>(CATBoolean&amp;)
<dd>  Gets information whether radius law has to be inverted or not.
 <dt> o 
    <a href="#GetRadiusLawType(enum CATGSMBasicLawType&amp;)"><b>GetRadiusLawType</b></a>(enum CATGSMBasicLawType&amp;)
<dd>  Gets radius law type.
 <dt> o 
    <a href="#GetReference(CATISpecObject_var&amp;)"><b>GetReference</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the reference (functional curve or guide surface).
 <dt> o 
    <a href="#GetSmoothActivity(CATBoolean&amp;)"><b>GetSmoothActivity</b></a>(CATBoolean&amp;)
<dd>  Gets information whether sweeping operation is smoothed or not.
 <dt> o 
    <a href="#GetSmoothAngleThreshold(double&amp;)"><b>GetSmoothAngleThreshold</b></a>(double&amp;)
<dd>  Gets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
 <dt> o 
    <a href="#GetSmoothAngleThreshold(CATICkeParm_var&amp;)"><b>GetSmoothAngleThreshold</b></a>(CATICkeParm_var&amp;)
<dd>  Gets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
 <dt> o 
    <a href="#GetSpine(CATISpecObject_var&amp;)"><b>GetSpine</b></a>(CATISpecObject_var&amp;)
<dd>  Gets the spine.
 <dt> o 
    <a href="#GetTangencyChoiceNo(int&amp;,int&amp;,int&amp;)"><b>GetTangencyChoiceNo</b></a>(int&amp;,int&amp;,int&amp;)
<dd> Gets a sequence which identifies a solution amongst all possibilities
 of a circular profile sweep tangent to a surface
 (case CATGSMCircularSweep_GuideAndTangencyAndRadius).
 <dt> o 
    <a href="#GetTrimOption(enum CATGSMSweepTrimMode&amp;)"><b>GetTrimOption</b></a>(enum CATGSMSweepTrimMode&amp;)
<dd>  Gets trim option status.
 <dt> o 
    <a href="#SetAngle(double,int)"><b>SetAngle</b></a>(double,int)
<dd>  Sets the value of an angle given its index.
 <dt> o 
    <a href="#SetAngle(CATICkeParm_var,int)"><b>SetAngle</b></a>(CATICkeParm_var,int)
<dd>  Sets the literal feature representing an angle given its index.
 <dt> o 
    <a href="#SetAngleLawInversions(CATBoolean,CATBoolean)"><b>SetAngleLawInversions</b></a>(CATBoolean,CATBoolean)
<dd>  Sets information whether angle laws have to be inverted or not.
 <dt> o 
    <a href="#SetAngleLawTypes(enum CATGSMBasicLawType,enum CATGSMBasicLawType)"><b>SetAngleLawTypes</b></a>(enum CATGSMBasicLawType,enum CATGSMBasicLawType)
<dd>  Sets angle law types.
 <dt> o 
    <a href="#SetAngleLaws(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)"><b>SetAngleLaws</b></a>(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)
<dd>  Sets information about both angle laws.
 <dt> o 
    <a href="#SetAngleLaws(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType)"><b>SetAngleLaws</b></a>(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType)
<dd>  Sets information about both angle laws (including advanced law features).
 <dt> o 
    <a href="#SetCanonicalDetectionMode(CATGSMCanonicalSurfaceDetection)"><b>SetCanonicalDetectionMode</b></a>(CATGSMCanonicalSurfaceDetection)
<dd>  Sets information about detection of canonical surfaces of the output surface.
 <dt> o 
    <a href="#SetChoiceNo(int)"><b>SetChoiceNo</b></a>(int)
<dd>  Sets a choice number, given a circular sweep case.
 <dt> o 
    <a href="#SetContext(CATGSMFeatureContextType)"><b>SetContext</b></a>(CATGSMFeatureContextType)
<dd>  Sets the context of the Sweep.
 <dt> o 
    <a href="#SetGuide(CATISpecObject_var)"><b>SetGuide</b></a>(CATISpecObject_var)
<dd>  Sets first guide curve.
 <dt> o 
    <a href="#SetGuide(CATISpecObject_var,int)"><b>SetGuide</b></a>(CATISpecObject_var,int)
<dd>  Sets a guide curve given its index.
 <dt> o 
    <a href="#SetGuideDeviation(double)"><b>SetGuideDeviation</b></a>(double)
<dd>  Sets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 <dt> o 
    <a href="#SetGuideDeviation(CATICkeParm_var&amp;)"><b>SetGuideDeviation</b></a>(CATICkeParm_var&amp;)
<dd>  Sets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 <dt> o 
    <a href="#SetGuideDeviationActivity(CATBoolean)"><b>SetGuideDeviationActivity</b></a>(CATBoolean)
<dd>  Sets information whether a deviation from guide curves is allowed or not
 during sweeping operation in order to smooth it.
 <dt> o 
    <a href="#SetLongitudinalRelimiters(CATISpecObject_var&amp;,CATBoolean,CATISpecObject_var&amp;,CATBoolean)"><b>SetLongitudinalRelimiters</b></a>(CATISpecObject_var&amp;,CATBoolean,CATISpecObject_var&amp;,CATBoolean)
<dd>  Sets the elements relimiting the spine (or the default spine).
 <dt> o 
    <a href="#SetMode(enum CATGSMCircularSweepCase)"><b>SetMode</b></a>(enum CATGSMCircularSweepCase)
<dd>  Sets circular sweep case number.
 <dt> o 
    <a href="#SetRadius(double,int)"><b>SetRadius</b></a>(double,int)
<dd>  Sets the value of a radius given its index.
 <dt> o 
    <a href="#SetRadius(CATICkeParm_var,int)"><b>SetRadius</b></a>(CATICkeParm_var,int)
<dd>  Sets the literal feature representing a radius given its index.
 <dt> o 
    <a href="#SetRadiusLaw(CATICkeLaw_var&amp;)"><b>SetRadiusLaw</b></a>(CATICkeLaw_var&amp;)
<dd>  Modify radius law feature.
 <dt> o 
    <a href="#SetRadiusLaw(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)"><b>SetRadiusLaw</b></a>(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)
<dd>  Sets information about radius law.
 <dt> o 
    <a href="#SetRadiusLawInversion(CATBoolean)"><b>SetRadiusLawInversion</b></a>(CATBoolean)
<dd>  Sets information whether radius law has to be inverted or not.
 <dt> o 
    <a href="#SetRadiusLawType(enum CATGSMBasicLawType)"><b>SetRadiusLawType</b></a>(enum CATGSMBasicLawType)
<dd>  Sets radius law type.
 <dt> o 
    <a href="#SetReference(CATISpecObject_var)"><b>SetReference</b></a>(CATISpecObject_var)
<dd>  Sets the reference (functional curve or guide surface).
 <dt> o 
    <a href="#SetSmoothActivity(CATBoolean)"><b>SetSmoothActivity</b></a>(CATBoolean)
<dd>  Sets information whether sweeping operation is smoothed or not.
 <dt> o 
    <a href="#SetSmoothAngleThreshold(double)"><b>SetSmoothAngleThreshold</b></a>(double)
<dd>  Sets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
 <dt> o 
    <a href="#SetSmoothAngleThreshold(CATICkeParm_var&amp;)"><b>SetSmoothAngleThreshold</b></a>(CATICkeParm_var&amp;)
<dd>  Sets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
 <dt> o 
    <a href="#SetSpine(CATISpecObject_var)"><b>SetSpine</b></a>(CATISpecObject_var)
<dd>  Sets the spine.
 <dt> o 
    <a href="#SetTangencyChoiceNo(int,int,int)"><b>SetTangencyChoiceNo</b></a>(int,int,int)
<dd>  Sets a sequence which identifies a solution (see above).
 <dt> o 
    <a href="#SetTrimOption(enum CATGSMSweepTrimMode)"><b>SetTrimOption</b></a>(enum CATGSMSweepTrimMode)
<dd>  Sets trim option status.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="DelAngle"></a><a name="DelAngle()"></a> <dt> o <b>DelAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DelAngle</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes all angles.
</dl>
<a name="DelGuide"></a><a name="DelGuide()"></a> <dt> o <b>DelGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DelGuide</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes all guide curves.
</dl>
<a name="DelRadius"></a><a name="DelRadius()"></a> <dt> o <b>DelRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DelRadius</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Removes all radius.
</dl>
<a name="GetAngle"></a><a name="GetAngle(double&amp;,int)"></a> <dt> o <b>GetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngle</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the value of an angle given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Angle value
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the angle (starting from one)</dd>
</dl>
</dl>
</dl>
<a name="GetAngle"></a><a name="GetAngle(CATICkeParm_var&amp;,int)"></a> <dt> o <b>GetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngle</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the literal feature representing an angle given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Angle literal feature
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the angle (starting from one)
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="GetAngleLawInversions"></a><a name="GetAngleLawInversions(CATBoolean&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetAngleLawInversions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLawInversions</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oInversion1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oInversion2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information whether angle laws have to be inverted or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInversion1</tt>
   <dd>      TRUE or FALSE (FALSE if not specified) for first angle law.
   </dd>
    <dt><tt> oInversion2</tt>
   <dd>      TRUE or FALSE (FALSE if not specified) for second angle law.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetAngleLawTypes"></a><a name="GetAngleLawTypes(enum CATGSMBasicLawType&amp;,enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetAngleLawTypes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLawTypes</b>(<td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eFirstType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets angle law types.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration).
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration).
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetAngleLaws"></a><a name="GetAngleLaws(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetAngleLaws</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLaws</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>FirstParamStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>FirstParamEnd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eFirstType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>SecondParamStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>SecondParamEnd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information about both angle laws. PREFER PREVIOUS METHOD WHICH
 INCLUDES ADVANCED LAW FEATURES.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FirstParamStart</tt>
   <dd>      Start first angle literal feature
   </dd>
    <dt><tt> FirstParamEnd</tt>
   <dd>      End first angle literal feature
   </dd>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
    <dt><tt> SecondParamStart</tt>
   <dd>      Start second angle literal feature
   </dd>
    <dt><tt> SecondParamEnd</tt>
   <dd>      End second angle literal feature
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration).</dd>
</dl>
</dl>
</dl>
<a name="GetAngleLaws"></a><a name="GetAngleLaws(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetAngleLaws</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLaws</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>FirstParamStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>FirstParamEnd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eFirstType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>SecondParamStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>SecondParamEnd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information about both angle laws (including advanced law features).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FirstParamStart</tt>
   <dd>      Start first angle literal feature, or law feature if advanced
   </dd>
    <dt><tt> FirstParamEnd</tt>
   <dd>      End first angle literal feature, or NULL_var if advanced
   </dd>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
    <dt><tt> SecondParamStart</tt>
   <dd>      Start second angle literal feature, or law feature if advanced
   </dd>
    <dt><tt> SecondParamEnd</tt>
   <dd>      End second angle literal feature, or NULL_var if advanced
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration).</dd>
</dl>
</dl>
</dl>
<a name="GetCanonicalDetectionMode"></a><a name="GetCanonicalDetectionMode(CATGSMCanonicalSurfaceDetection&amp;)"></a> <dt> o <b>GetCanonicalDetectionMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCanonicalDetectionMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCanonicalSurfaceDetection','CATGSMCanonicalSurfaceDetection&amp;')</script> <td><tt>oDetection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information about detection of canonical surfaces of the output surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDetection</tt>
   <dd>     If canonical surfaces are detected not.
     Possible values are CATGSMNoDetection and CATGSMCanonicalDetection.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCanonicalSurfaceDetection','');return false">CATGSMCanonicalSurfaceDetection</a>
</dl>
</dl>
<a name="GetChoiceNo"></a><a name="GetChoiceNo(int&amp;)"></a> <dt> o <b>GetChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChoiceNo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets a choice number, which corresponds to each solution of a given
 circular sweep case. <BR>
 Example : a circular sweep with two guide curves and a radius leads
 to four possible solutions.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Choice number</dd>
</dl>
</dl>
</dl>
<a name="GetContext"></a><a name="GetContext(CATGSMFeatureContextType&amp;)"></a> <dt> o <b>GetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetContext</b>(<td><script type="text/javascript"> activateLink('CATGSMFeatureContextType','CATGSMFeatureContextType&amp;')</script> <td><tt>oContext</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Gets the context of the Sweep.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oContextType</tt>
   <dd>      CATGSMSurfaceCtxt if the result is surface, CATGSMVolumeCtxt if it is volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMFeatureContextType','');return false">CATGSMFeatureContextType</a>
</dl>
</dl>
<a name="GetGuide"></a><a name="GetGuide(CATISpecObject_var&amp;)"></a> <dt> o <b>GetGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGuide</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets first guide curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      First guide curve feature.</dd>
</dl>
</dl>
</dl>
<a name="GetGuide"></a><a name="GetGuide(CATISpecObject_var&amp;,int)"></a> <dt> o <b>GetGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGuide</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets a guide curve given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Guide curve feature.
   </dd>
    <dt><tt> iI</tt>
   <dd>      Guide curve index : 1 or 2</dd>
</dl>
</dl>
</dl>
<a name="GetGuideDeviation"></a><a name="GetGuideDeviation(double&amp;)"></a> <dt> o <b>GetGuideDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGuideDeviation</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="GetGuideDeviation"></a><a name="GetGuideDeviation(CATICkeParm_var&amp;)"></a> <dt> o <b>GetGuideDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGuideDeviation</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="GetGuideDeviationActivity"></a><a name="GetGuideDeviationActivity(CATBoolean&amp;)"></a> <dt> o <b>GetGuideDeviationActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGuideDeviationActivity</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oActi</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information whether a deviation from guide curves is allowed or not
 during sweeping operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSmooth</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).</dd>
</dl>
</dl>
</dl>
<a name="GetLongitudinalRelimiters"></a><a name="GetLongitudinalRelimiters(CATISpecObject_var&amp;,CATBoolean&amp;,CATISpecObject_var&amp;,CATBoolean&amp;)"></a> <dt> o <b>GetLongitudinalRelimiters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLongitudinalRelimiters</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>boInv1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>boInv2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the elements relimiting the spine (or the default spine).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem1</tt>
   <dd>      First relimiting feature (plane or point)
   </dd>
    <dt><tt> boInv1</tt>
   <dd>      Split direction for the first relimitation<br>
      FALSE means that the beginning of the spine (considering its orientation) is removed, TRUE means that the end of the spine is removed
   </dd>
    <dt><tt> oElem2</tt>
   <dd>      Second relimiting feature (plane or point)
   </dd>
    <dt><tt> boInv2</tt>
   <dd>      Split direction for the second relimitation</dd>
</dl>
</dl>
</dl>
<a name="GetMode"></a><a name="GetMode(enum CATGSMCircularSweepCase&amp;)"></a> <dt> o <b>GetMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMode</b>(<td><script type="text/javascript"> activateLink('enum CATGSMCircularSweepCase','enum CATGSMCircularSweepCase&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets circular sweep case number (also called mode).
 Possible cases are : <BR>
  - CATGSMCircularSweep_None : unidentified mode <BR>
  - CATGSMCircularSweep_ThreeGuides : three guide curves <BR>
  - CATGSMCircularSweep_TwoGuidesAndRadius : two guide curves and a radius <BR>
  - CATGSMCircularSweep_CenterAndAngleCurve : a center curve, a reference
     angle curve and two angle values <BR>
  - CATGSMCircularSweep_CenterAndRadius : a center curve and a radius <BR>
  - CATGSMCircularSweep_TwoGuidesAndTangency : two guide curves with a tangency
     condition on the second one (with reference surface) <BR>
  - CATGSMCircularSweep_GuideAndTangencyAndRadius : one guide curve, one tangency surface and a radius.
  - CATGSMCircularSweep_LimitCurveAndTangencyAndRadius : One tangency surface, one limit curve lying on the tangency surface and a radius
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Case number
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCircularSweepCase','');return false">CATGSMCircularSweepCase</a>
</dl>
</dl>
<a name="GetNbAngle"></a><a name="GetNbAngle(int&amp;)"></a> <dt> o <b>GetNbAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbAngle</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of angles.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oI</tt>
   <dd>      Number of angles</dd>
</dl>
</dl>
</dl>
<a name="GetNbGuide"></a><a name="GetNbGuide(int&amp;)"></a> <dt> o <b>GetNbGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbGuide</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of guide curves.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oI</tt>
   <dd>      Number of guide curves</dd>
</dl>
</dl>
</dl>
<a name="GetNbRadius"></a><a name="GetNbRadius(int&amp;)"></a> <dt> o <b>GetNbRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbRadius</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of radius.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oI</tt>
   <dd>      Number of radius</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(double&amp;,int)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadius</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the value of a radius given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Radius value
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the radius (starting from one)</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(CATICkeParm_var&amp;,int)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the literal feature representing a radius given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Radius literal feature
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the radius (starting from one)
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="GetRadiusLaw"></a><a name="GetRadiusLaw(CATICkeLaw_var&amp;)"></a> <dt> o <b>GetRadiusLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadiusLaw</b>(<td><script type="text/javascript"> activateLink('CATICkeLaw_var','CATICkeLaw_var&amp;')</script> <td><tt>Elem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets radius law feature.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Elem</tt>
   <dd>      Radius law feature
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="GetRadiusLaw"></a><a name="GetRadiusLaw(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetRadiusLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadiusLaw</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ParamStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ParamEnd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information about radius law.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ParamStart</tt>
   <dd>      Start radius literal feature
   </dd>
    <dt><tt> ParamEnd</tt>
   <dd>      End radius literal feature
   </dd>
    <dt><tt> eType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="GetRadiusLawInversion"></a><a name="GetRadiusLawInversion(CATBoolean&amp;)"></a> <dt> o <b>GetRadiusLawInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadiusLawInversion</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oInversion</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information whether radius law has to be inverted or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInversion</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetRadiusLawType"></a><a name="GetRadiusLawType(enum CATGSMBasicLawType&amp;)"></a> <dt> o <b>GetRadiusLawType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadiusLawType</b>(<td><script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType&amp;')</script> <td><tt>eType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets radius law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> eType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="GetReference"></a><a name="GetReference(CATISpecObject_var&amp;)"></a> <dt> o <b>GetReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetReference</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the reference (functional curve or guide surface).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Reference feature</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothActivity"></a><a name="GetSmoothActivity(CATBoolean&amp;)"></a> <dt> o <b>GetSmoothActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSmoothActivity</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oSmooth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets information whether sweeping operation is smoothed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSmooth</tt>
   <dd>      TRUE or FALSE (FALSE if not specified).</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothAngleThreshold"></a><a name="GetSmoothAngleThreshold(double&amp;)"></a> <dt> o <b>GetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSmoothAngleThreshold</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="GetSmoothAngleThreshold"></a><a name="GetSmoothAngleThreshold(CATICkeParm_var&amp;)"></a> <dt> o <b>GetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSmoothAngleThreshold</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Angular literal feature.</dd>
</dl>
</dl>
</dl>
<a name="GetSpine"></a><a name="GetSpine(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSpine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSpine</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the spine.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Spine feature</dd>
</dl>
</dl>
</dl>
<a name="GetTangencyChoiceNo"></a><a name="GetTangencyChoiceNo(int&amp;,int&amp;,int&amp;)"></a> <dt> o <b>GetTangencyChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTangencyChoiceNo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oShellOri</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oGuideOri</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
Gets a sequence which identifies a solution amongst all possibilities
 of a circular profile sweep tangent to a surface
 (case CATGSMCircularSweep_GuideAndTangencyAndRadius).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNo</tt>
   <dd>      Given the orientations, solution number in a distance ordered list.
   </dd>
    <dt><tt> oShellOri</tt>
   <dd>      This orientation allows to compute just the results that are tangent
      to a specific side of the shell. It can take 3 values: <BR>
      * +1 : the result is on the normal side of the shell, <BR>
      * -1 : the result is on the side of the shell opposite to the normal, <BR>
      * 0  : no orientation is specified. <BR>
   </dd>
    <dt><tt> oGuideOri</tt>
   <dd>      This orientation allows to compute just the results that are on the
      "left" or the "right" side of the shell, when looking in
      the guide direction. It can take 3 values: <BR>
      * +1 : the result is on the "left" side, <BR>
      * -1 : the result is on the "right" side, <BR>
      * 0  : no orientation is specified. <BR></dd>
</dl>
</dl>
</dl>
<a name="GetTrimOption"></a><a name="GetTrimOption(enum CATGSMSweepTrimMode&amp;)"></a> <dt> o <b>GetTrimOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrimOption</b>(<td><script type="text/javascript"> activateLink('enum CATGSMSweepTrimMode','enum CATGSMSweepTrimMode&amp;')</script> <td><tt>oElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets trim option status.
 Possible cases are : <BR>
  - CATGSMSweepTrimMode_None: no trim computed or undefined <BR>
  - CATGSMSweepTrimMode_On: trim computed
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Trim option value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMSweepTrimMode','');return false">CATGSMSweepTrimMode</a>
</dl>
</dl>
<a name="SetAngle"></a><a name="SetAngle(double,int)"></a> <dt> o <b>SetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngle</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of an angle given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Angle value
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the angle (starting from one)</dd>
</dl>
</dl>
</dl>
<a name="SetAngle"></a><a name="SetAngle(CATICkeParm_var,int)"></a> <dt> o <b>SetAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngle</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the literal feature representing an angle given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Angle literal feature
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the angle (starting from one)
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="SetAngleLawInversions"></a><a name="SetAngleLawInversions(CATBoolean,CATBoolean)"></a> <dt> o <b>SetAngleLawInversions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLawInversions</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInversion1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInversion2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information whether angle laws have to be inverted or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInversion1</tt>
   <dd>      TRUE or FALSE for first angle law.
   </dd>
    <dt><tt> iInversion2</tt>
   <dd>      TRUE or FALSE for second angle law.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetAngleLawTypes"></a><a name="SetAngleLawTypes(enum CATGSMBasicLawType,enum CATGSMBasicLawType)"></a> <dt> o <b>SetAngleLawTypes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLawTypes</b>(<td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eFirstType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets angle law types.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration).
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration).
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetAngleLaws"></a><a name="SetAngleLaws(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType,CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)"></a> <dt> o <b>SetAngleLaws</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLaws</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>FirstParamStart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>FirstParamEnd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eFirstType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>SecondParamStart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>SecondParamEnd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information about both angle laws. PREFER PREVIOUS METHOD WHICH
 INCLUDES ADVANCED LAW FEATURES.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FirstParamStart</tt>
   <dd>      Start first angle literal feature
   </dd>
    <dt><tt> FirstParamEnd</tt>
   <dd>      End first angle literal feature
   </dd>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType.
   </dd>
    <dt><tt> SecondParamStart</tt>
   <dd>      Start second angle literal feature
   </dd>
    <dt><tt> SecondParamEnd</tt>
   <dd>      End second angle literal feature
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration except
      CATGSMBasicLawType_Advanced).</dd>
</dl>
</dl>
</dl>
<a name="SetAngleLaws"></a><a name="SetAngleLaws(CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType,CATISpecObject_var&amp;,CATISpecObject_var&amp;,enum CATGSMBasicLawType)"></a> <dt> o <b>SetAngleLaws</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLaws</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>FirstParamStart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>FirstParamEnd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eFirstType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>SecondParamStart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>SecondParamEnd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eSecondType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information about both angle laws (including advanced law features).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> FirstParamStart</tt>
   <dd>      Start first angle literal feature, or law feature if advanced
   </dd>
    <dt><tt> FirstParamEnd</tt>
   <dd>      End first angle literal feature, or NULL_var if advanced
   </dd>
    <dt><tt> eFirstType</tt>
   <dd>      First type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
    <dt><tt> SecondParamStart</tt>
   <dd>      Start second angle literal feature, or law feature if advanced
   </dd>
    <dt><tt> SecondParamEnd</tt>
   <dd>      End second angle literal feature, or NULL_var if advanced
   </dd>
    <dt><tt> eSecondType</tt>
   <dd>      Second type of law (from CATGSMBasicLawType enumeration).</dd>
</dl>
</dl>
</dl>
<a name="SetCanonicalDetectionMode"></a><a name="SetCanonicalDetectionMode(CATGSMCanonicalSurfaceDetection)"></a> <dt> o <b>SetCanonicalDetectionMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCanonicalDetectionMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCanonicalSurfaceDetection','CATGSMCanonicalSurfaceDetection')</script> <td><tt>iDetection</tt><td><tt>= CATGSMNoDetection</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information about detection of canonical surfaces of the output surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDetection</tt>
   <dd>     If canonical surfaces are detected or not.
     Possible values are CATGSMNoDetection and CATGSMCanonicalDetection.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCanonicalSurfaceDetection','');return false">CATGSMCanonicalSurfaceDetection</a>
</dl>
</dl>
<a name="SetChoiceNo"></a><a name="SetChoiceNo(int)"></a> <dt> o <b>SetChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetChoiceNo</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a choice number, given a circular sweep case.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Choice number</dd>
</dl>
</dl>
</dl>
<a name="SetContext"></a><a name="SetContext(CATGSMFeatureContextType)"></a> <dt> o <b>SetContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetContext</b>(<td> const <script type="text/javascript"> activateLink('CATGSMFeatureContextType','CATGSMFeatureContextType')</script> <td><tt>iContext</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the context of the Sweep.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContextType</tt>
   <dd>      CATGSMSurfaceCtxt to generate a surface, CATGSMVolumeCtxt (requires GSO License) to generate a volume
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMFeatureContextType','');return false">CATGSMFeatureContextType</a>
</dl>
</dl>
<a name="SetGuide"></a><a name="SetGuide(CATISpecObject_var)"></a> <dt> o <b>SetGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGuide</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets first guide curve.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      First guide curve feature.</dd>
</dl>
</dl>
</dl>
<a name="SetGuide"></a><a name="SetGuide(CATISpecObject_var,int)"></a> <dt> o <b>SetGuide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGuide</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a guide curve given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Guide curve feature.
   </dd>
    <dt><tt> iI</tt>
   <dd>      Guide curve index : 1 or 2</dd>
</dl>
</dl>
</dl>
<a name="SetGuideDeviation"></a><a name="SetGuideDeviation(double)"></a> <dt> o <b>SetGuideDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGuideDeviation</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="SetGuideDeviation"></a><a name="SetGuideDeviation(CATICkeParm_var&amp;)"></a> <dt> o <b>SetGuideDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGuideDeviation</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Length literal feature.</dd>
</dl>
</dl>
</dl>
<a name="SetGuideDeviationActivity"></a><a name="SetGuideDeviationActivity(CATBoolean)"></a> <dt> o <b>SetGuideDeviationActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGuideDeviationActivity</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iActi</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information whether a deviation from guide curves is allowed or not
 during sweeping operation in order to smooth it.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSmooth</tt>
   <dd>      TRUE or FALSE.</dd>
</dl>
</dl>
</dl>
<a name="SetLongitudinalRelimiters"></a><a name="SetLongitudinalRelimiters(CATISpecObject_var&amp;,CATBoolean,CATISpecObject_var&amp;,CATBoolean)"></a> <dt> o <b>SetLongitudinalRelimiters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLongitudinalRelimiters</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iElem1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>biInv1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iElem2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>biInv2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the elements relimiting the spine (or the default spine).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem1</tt>
   <dd>      First relimiting feature (plane or point)
   </dd>
    <dt><tt> biInv1</tt>
   <dd>      Split direction for the first relimitation<br>
      FALSE means that the beginning of the spine (considering its orientation) is removed, TRUE means that the end of the spine is removed
   </dd>
    <dt><tt> iElem2</tt>
   <dd>      Second relimiting feature (plane or point)
   </dd>
    <dt><tt> biInv2</tt>
   <dd>      Split direction for the second relimitation</dd>
</dl>
</dl>
</dl>
<a name="SetMode"></a><a name="SetMode(enum CATGSMCircularSweepCase)"></a> <dt> o <b>SetMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMode</b>(<td> const <script type="text/javascript"> activateLink('enum CATGSMCircularSweepCase','enum CATGSMCircularSweepCase')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets circular sweep case number.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Case number
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCircularSweepCase','');return false">CATGSMCircularSweepCase</a>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(double,int)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadius</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of a radius given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Radius value
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the radius (starting from one)</dd>
</dl>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(CATICkeParm_var,int)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadius</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iElem</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iI</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the literal feature representing a radius given its index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Radius literal feature
   </dd>
    <dt><tt> iI</tt>
   <dd>      Index of the radius (starting from one)
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="SetRadiusLaw"></a><a name="SetRadiusLaw(CATICkeLaw_var&amp;)"></a> <dt> o <b>SetRadiusLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadiusLaw</b>(<td> const <script type="text/javascript"> activateLink('CATICkeLaw_var','CATICkeLaw_var&amp;')</script> <td><tt>Elem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modify radius law feature.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Elem</tt>
   <dd>      Radius law feature
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="SetRadiusLaw"></a><a name="SetRadiusLaw(CATICkeParm_var&amp;,CATICkeParm_var&amp;,enum CATGSMBasicLawType)"></a> <dt> o <b>SetRadiusLaw</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadiusLaw</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ParamStart</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ParamEnd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information about radius law.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ParamStart</tt>
   <dd>      Start radius literal feature
   </dd>
    <dt><tt> ParamEnd</tt>
   <dd>      End radius literal feature
   </dd>
    <dt><tt> eType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</dl>
<a name="SetRadiusLawInversion"></a><a name="SetRadiusLawInversion(CATBoolean)"></a> <dt> o <b>SetRadiusLawInversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadiusLawInversion</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iInversion</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information whether radius law has to be inverted or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInversion</tt>
   <dd>      TRUE or FALSE.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetRadiusLawType"></a><a name="SetRadiusLawType(enum CATGSMBasicLawType)"></a> <dt> o <b>SetRadiusLawType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadiusLawType</b>(<td> const <script type="text/javascript"> activateLink('enum CATGSMBasicLawType','enum CATGSMBasicLawType')</script> <td><tt>eType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets radius law type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> eType</tt>
   <dd>      Type of law (from CATGSMBasicLawType enumeration): <BR>
       - CATGSMBasicLawType_None, <BR>
       - CATGSMBasicLawType_Constant, <BR>
       - CATGSMBasicLawType_Linear, <BR>
       - CATGSMBasicLawType_SType, <BR>
       - CATGSMBasicLawType_Advanced.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMBasicLawType','');return false">CATGSMBasicLawType</a>
</dl>
</dl>
<a name="SetReference"></a><a name="SetReference(CATISpecObject_var)"></a> <dt> o <b>SetReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetReference</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the reference (functional curve or guide surface).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Reference feature</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothActivity"></a><a name="SetSmoothActivity(CATBoolean)"></a> <dt> o <b>SetSmoothActivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSmoothActivity</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSmooth</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets information whether sweeping operation is smoothed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSmooth</tt>
   <dd>      TRUE or FALSE.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothAngleThreshold"></a><a name="SetSmoothAngleThreshold(double)"></a> <dt> o <b>SetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSmoothAngleThreshold</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Numerical value.</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothAngleThreshold"></a><a name="SetSmoothAngleThreshold(CATICkeParm_var&amp;)"></a> <dt> o <b>SetSmoothAngleThreshold</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSmoothAngleThreshold</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets angular threshold under which discontinuities (moving frame,
 tangency net on reference surface) will be smoothed when sweeping.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Angular literal feature.</dd>
</dl>
</dl>
</dl>
<a name="SetSpine"></a><a name="SetSpine(CATISpecObject_var)"></a> <dt> o <b>SetSpine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSpine</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the spine.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Spine feature</dd>
</dl>
</dl>
</dl>
<a name="SetTangencyChoiceNo"></a><a name="SetTangencyChoiceNo(int,int,int)"></a> <dt> o <b>SetTangencyChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTangencyChoiceNo</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShellOri</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iGuideOri</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNo</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a sequence which identifies a solution (see above).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNo</tt>
   <dd>   </dd>
    <dt><tt> iShellOri</tt>
   <dd>   </dd>
    <dt><tt> iGuideOri</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="SetTrimOption"></a><a name="SetTrimOption(enum CATGSMSweepTrimMode)"></a> <dt> o <b>SetTrimOption</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrimOption</b>(<td> const <script type="text/javascript"> activateLink('enum CATGSMSweepTrimMode','enum CATGSMSweepTrimMode')</script> <td><tt>iElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets trim option status.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElem</tt>
   <dd>      Trim option value
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMSweepTrimMode','');return false">CATGSMSweepTrimMode</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMSweepCircle.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
