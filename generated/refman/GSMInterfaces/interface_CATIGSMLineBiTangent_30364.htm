<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GSMInterfaces Interface CATIGSMLineBiTangent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GSMInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIGSMLineBiTangent','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMLineBiTangent','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIGSMLineBiTangent','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMLineBiTangent','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GSMInterfaces Interface CATIGSMLineBiTangent</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMLineBiTangent_30364','CATIGSMLineBiTangent','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMLineBiTangent</b>
</p>
<p>
<b><i> Interface to line bitangent feature.</i></b><br>

 <b>Role</b>: Allows to access data of the line feature created to
 be tangent to two elements.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMLine','');return false">CATIGSMLine</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIGSMFactory','CreateLineBiTangent');return false">CATIGSMFactory.CreateLineBiTangent</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetChoiceNo(int&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;)"><b>GetChoiceNo</b></a>(int&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;)
<dd>  Gets a sequence which identifies a solution among all possibilities
 of curve/point or curve/curve tangent lines.
 <dt> o 
    <a href="#GetFirstTangentElement(CATISpecObject_var&amp;)"><b>GetFirstTangentElement</b></a>(CATISpecObject_var&amp;)
<dd>  Get the first curve to which the line is tangent.
 <dt> o 
    <a href="#GetLengthType(CATGSMLineLengthType&amp;)"><b>GetLengthType</b></a>(CATGSMLineLengthType&amp;)
<dd>  Gets the length type : length or infinite or infinite start point or infinite end point.
 <dt> o 
    <a href="#GetPlaneNormal(CATMathVector&amp;)"><b>GetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Get the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#GetSecondTangentElement(CATISpecObject_var&amp;)"><b>GetSecondTangentElement</b></a>(CATISpecObject_var&amp;)
<dd>  Get the second element to which the line is tangent (curve or point).
 <dt> o 
    <a href="#GetSupport(CATISpecObject_var&amp;)"><b>GetSupport</b></a>(CATISpecObject_var&amp;)
<dd>  Get the support surface.
 <dt> o 
    <a href="#SetChoiceNo(int,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)"><b>SetChoiceNo</b></a>(int,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)
<dd>  Sets a sequence which identifies a solution (see above).
 <dt> o 
    <a href="#SetFirstTangentElement(CATISpecObject_var)"><b>SetFirstTangentElement</b></a>(CATISpecObject_var)
<dd>  Set the first curve to which the line will be tangent.
 <dt> o 
    <a href="#SetLengthType(CATGSMLineLengthType)"><b>SetLengthType</b></a>(CATGSMLineLengthType)
<dd>  Sets the length type : length or infinite or infinite start point or infinite end point.
 <dt> o 
    <a href="#SetPlaneNormal(CATMathVector&amp;)"><b>SetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Set the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#SetSecondTangentElement(CATISpecObject_var)"><b>SetSecondTangentElement</b></a>(CATISpecObject_var)
<dd>  Set the second element to which the line will be tangent (curve or point).
 <dt> o 
    <a href="#SetSupport(CATISpecObject_var)"><b>SetSupport</b></a>(CATISpecObject_var)
<dd>  Set the support surface.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetChoiceNo"></a><a name="GetChoiceNo(int&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;,CATGSMOrientation&amp;)"></a> <dt> o <b>GetChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetChoiceNo</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOriTgt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOriCvt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOriTgt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oOriCvt2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets a sequence which identifies a solution among all possibilities
 of curve/point or curve/curve tangent lines. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNo</tt>
   <dd>      Given the orientations, solution number in a distance ordered list.
   </dd>
    <dt><tt> oOriTgt1</tt>
   <dd>      This orientation allows to compute just the results that are tangent
      to a specific region of the first curve. It can take 3 values: <BR>
       CATGSMSameOrientation   : the result has the same orientation as the curve, <BR>
       CATGSMInvertOrientation : the result has the opposite orientation of the curve, <BR>
       CATGSMKoOrientation     : no orientation is specified. <BR>
   </dd>
    <dt><tt> oOriCvt1</tt>
   <dd>      This orientation allows to compute just the results that are tangent
      to a specific side of the first curve. It can take 3 values: <BR>
       CATGSMSameOrientation : curvature direction of curve and cross product of support normal and result direction 
				are in the same direction, <BR>
       CATGSMInvertOrientation : curvature direction of curve and cross product of support normal and result direction
				are in opposite directions, <BR>
       CATGSMKoOrientation  : no orientation is specified. <BR>
   </dd>
    <dt><tt> oOriTgt2</tt>
   <dd>      In case of curve/curve bitangent line, this orientation allows to compute just the results that are tangent
      to a specific region of the second curve . It can take 3 values: <BR>
       CATGSMSameOrientation   : the result has the same orientation as the curve, <BR>
       CATGSMInvertOrientation : the result has the opposite orientation of the curve, <BR>
       CATGSMKoOrientation     : no orientation is specified. <BR>
   </dd>
    <dt><tt> oOriCvt2</tt>
   <dd>      In case of curve/curve bitangent line this orientation allows to compute just the results that are tangent
      to a specific side of the second curve. It can take 3 values: <BR>
       CATGSMSameOrientation : curvature direction of curve and cross product of support normal and result direction 
				are in the same direction, <BR>
       CATGSMInvertOrientation : curvature direction of curve and cross product of support normal and result direction
				are in opposite directions, <BR>
       CATGSMKoOrientation  : no orientation is specified. <BR></dd>
</dl>
</dl>
</dl>
<a name="GetFirstTangentElement"></a><a name="GetFirstTangentElement(CATISpecObject_var&amp;)"></a> <dt> o <b>GetFirstTangentElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstTangentElement</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>Element1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the first curve to which the line is tangent.
</dl>
<a name="GetLengthType"></a><a name="GetLengthType(CATGSMLineLengthType&amp;)"></a> <dt> o <b>GetLengthType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLengthType</b>(<td><script type="text/javascript"> activateLink('CATGSMLineLengthType','CATGSMLineLengthType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the length type : length or infinite or infinite start point or infinite end point.
 <br>Note: Default is Length.
 <br> Length means that the line is limited by its extremities
 Infinite means that the line is infinite
 InfStartPoint means that the line is infinite on the side of the start point
 InfEndPoint means that the line is infinite on the side of the end point
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>    distance type  enum {Length, Infinite, InfStartPoint, InfEndPoint}</dd>
</dl>
</dl>
</dl>
<a name="GetPlaneNormal"></a><a name="GetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>GetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlaneNormal</b>(<td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="GetSecondTangentElement"></a><a name="GetSecondTangentElement(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSecondTangentElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondTangentElement</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>Element2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the second element to which the line is tangent (curve or point).
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATISpecObject_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>Support</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the support surface. The line lies on it.
</dl>
<a name="SetChoiceNo"></a><a name="SetChoiceNo(int,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation,CATGSMOrientation)"></a> <dt> o <b>SetChoiceNo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetChoiceNo</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNo</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOriTgt1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOriCvt1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOriTgt2</tt><td><tt>=CATGSMKoOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iOriCvt2</tt><td><tt>=CATGSMKoOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a sequence which identifies a solution (see above).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNo</tt>
   <dd>      Given the orientations, solution number in a distance ordered list.
   </dd>
    <dt><tt> iOriTgt1</tt>
   <dd>      This orientation allows to compute just the results that are tangent
      to a specific region of the first curve. It can take 3 values: <BR>
       CATGSMSameOrientation   : the result has the same orientation as the curve, <BR>
       CATGSMInvertOrientation : the result has the opposite orientation of the curve, <BR>
       CATGSMKoOrientation     : no orientation is specified. <BR>
   </dd>
    <dt><tt> iOriCvt1</tt>
   <dd>      This orientation allows to compute just the results that are tangent
      to a specific side of the first curve. It can take 3 values: <BR>
       CATGSMSameOrientation : curvature direction of curve and cross product of support normal and result direction 
				are in the same direction, <BR>
       CATGSMInvertOrientation : curvature direction of curve and cross product of support normal and result direction
				are in opposite directions, <BR>
       CATGSMKoOrientation  : no orientation is specified. <BR>
   </dd>
    <dt><tt> iOriTgt2</tt>
   <dd>      In case of curve/curve bitangent line, this orientation allows to compute just the results that are tangent
      to a specific region of the second curve . It can take 3 values: <BR>
       CATGSMSameOrientation   : the result has the same orientation as the curve, <BR>
       CATGSMInvertOrientation : the result has the opposite orientation of the curve, <BR>
       CATGSMKoOrientation     : no orientation is specified. <BR>
   </dd>
    <dt><tt> iOriCvt2</tt>
   <dd>      In case of curve/curve bitangent line this orientation allows to compute just the results that are tangent
      to a specific side of the second curve. It can take 3 values: <BR>
       CATGSMSameOrientation : curvature direction of curve and cross product of support normal and result direction 
				are in the same direction, <BR>
       CATGSMInvertOrientation : curvature direction of curve and cross product of support normal and result direction
				are in opposite directions, <BR>
       CATGSMKoOrientation  : no orientation is specified. <BR></dd>
</dl>
</dl>
</dl>
<a name="SetFirstTangentElement"></a><a name="SetFirstTangentElement(CATISpecObject_var)"></a> <dt> o <b>SetFirstTangentElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstTangentElement</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Element1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the first curve to which the line will be tangent.
</dl>
<a name="SetLengthType"></a><a name="SetLengthType(CATGSMLineLengthType)"></a> <dt> o <b>SetLengthType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLengthType</b>(<td><script type="text/javascript"> activateLink('CATGSMLineLengthType','CATGSMLineLengthType')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the length type : length or infinite or infinite start point or infinite end point.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    length type:   enum {Length, Infinite, InfStartPoint, InfEndPoint}</dd>
</dl>
</dl>
</dl>
<a name="SetPlaneNormal"></a><a name="SetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>SetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPlaneNormal</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="SetSecondTangentElement"></a><a name="SetSecondTangentElement(CATISpecObject_var)"></a> <dt> o <b>SetSecondTangentElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondTangentElement</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Element2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the second element to which the line will be tangent (curve or point).
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATISpecObject_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSupport</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>Support</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the support surface. The line will lie on it.
</dl>
<hr>
 This object is included in the file: <b>CATIGSMLineBiTangent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGitInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
