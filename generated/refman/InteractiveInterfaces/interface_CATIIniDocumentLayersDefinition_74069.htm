<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InteractiveInterfaces Interface CATIIniDocumentLayersDefinition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../InteractiveInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIIniDocumentLayersDefinition','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIIniDocumentLayersDefinition','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIIniDocumentLayersDefinition','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIIniDocumentLayersDefinition','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>InteractiveInterfaces Interface CATIIniDocumentLayersDefinition</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIIniDocumentLayersDefinition_74069','CATIIniDocumentLayersDefinition','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIIniDocumentLayersDefinition</b>
</p>
<p>
<b><i> Interface for layer management.</i></b><br>

 <b>Role</b>:
 This interface is implemented on all V5 documents.
 To query or modify the layers do not implement this interface, just query the document on this interface.
 A layer is managed by a pointer to the <a href="#" onClick="openLink('CATIIniLayer','');return false">CATIIniLayer</a> interface. The layers you will manage with this interface depend on the context.<ul>
 <li>If the ui-active document is edited in an assembly (for example a CATPart in a CATProduct), the layers managed by this interface can be:</li><ul>
   <li>The layers saved in the document (only applied to this document)
       if the setting defined in Tools/Options/General/Display/Layer Filter is set to "Current filter of the document"</li>
   <li>The layers saved in the CATSettings (applied to any assembly opened in the session)
       if the setting defined in Tools/Options/General/Display/Layer Filter is set to "Current filter on all documents"</li></ul>
 <li>If the ui-active document is a CATProduct, the layers managed are those of the CATSettings.</li>
 <li>If the current document is edited outside of an asembly (it's a CATPart, a CATDrawing, etc...), the layers managed are those of the document.</li></ul>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Add(CATIIniLayer*&amp;,int,CATUnicodeString,CATUnicodeString)"><b>Add</b></a>(CATIIniLayer*&amp;,int,CATUnicodeString,CATUnicodeString)
<dd>  Adds a Layer.
 <dt> o 
    <a href="#Find(int,CATIIniLayer*&amp;)"><b>Find</b></a>(int,CATIIniLayer*&amp;)
<dd>  Retrieves a layer by its number.
 <dt> o 
    <a href="#Find(CATUnicodeString,CATIIniLayer*&amp;)"><b>Find</b></a>(CATUnicodeString,CATIIniLayer*&amp;)
<dd>  Retrieves a layer by its name.
 <dt> o 
    <a href="#GetCurrent(CATIIniLayer*&amp;)"><b>GetCurrent</b></a>(CATIIniLayer*&amp;)
<dd>  Retrieves the current layer.
 <dt> o 
    <a href="#GetList(CATListPtrCATIIniLayer*&amp;)"><b>GetList</b></a>(CATListPtrCATIIniLayer*&amp;)
<dd>  Retrieves the layer list.
 <dt> o 
    <a href="#Remove(CATIIniLayer*&amp;)"><b>Remove</b></a>(CATIIniLayer*&amp;)
<dd>  Removes a layer.
 <dt> o 
    <a href="#SetCurrent(CATIIniLayer*&amp;)"><b>SetCurrent</b></a>(CATIIniLayer*&amp;)
<dd>  Changes the current layer.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Add"></a><a name="Add(CATIIniLayer*&amp;,int,CATUnicodeString,CATUnicodeString)"></a> <dt> o <b>Add</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Add</b>(<td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>opLayer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLayerNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iLayerName</tt><td><tt>= ""</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iLayerComment</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Adds a Layer.
 <b>Role</b>:
 Adds a new layer to the layers list.
 Notice: you do not create the layer. All the layers always exist, you may just change their default name or give them a description.
 The layers list only contains the modified layers.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opLayer</tt>
   <dd>   The created layer.<ul>
   <li>If a new layer was created, opLayer is set and the returned HRESULT is S_OK ;</li>
   <li>If an existing layer with the same number but with a different name was found, this layer is renamed, opLayer is set NULL and the returned HRESULT is S_OK ;</li>
   <li>If an existing layer with the same number and the same name was found, opLayer is set to this layer and the returned HRESULT is S_FALSE ;</li></ul>
 </dd>
    <dt><tt> iLayerNumber</tt>
   <dd>   The layer number.
 </dd>
    <dt><tt> iLayerName</tt>
   <dd>   The layer name (optional). If this name is blank, the default name of the layer will be kept.
   The default name is built with the "Layer" word (depends on your language) and the layer number.
 </dd>
    <dt><tt> iLayerComment</tt>
   <dd>   The layer comment (optional).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the layer was correctly added</li>
 <li>S_FALSE if this layer already exists in the list</li>
 <li>E_FAIL if the layer could not be added</li></ul>
</dl>
</dl>
<a name="Find"></a><a name="Find(int,CATIIniLayer*&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Find</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLayerNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>opLayer</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a layer by its number.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLayerNumber</tt>
   <dd>   The layer number.
 </dd>
    <dt><tt> opLayer</tt>
   <dd>   The layer found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the layer was found</li>
 <li>E_FAIL if the layer does not exist</li></ul>
</dl>
</dl>
<a name="Find"></a><a name="Find(CATUnicodeString,CATIIniLayer*&amp;)"></a> <dt> o <b>Find</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Find</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>opLayer</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a layer by its name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>   The layer name.
 </dd>
    <dt><tt> opLayer</tt>
   <dd>   The layer found.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the layer was found</li>
 <li>E_FAIL if the layer does not exist</li></ul>
</dl>
</dl>
<a name="GetCurrent"></a><a name="GetCurrent(CATIIniLayer*&amp;)"></a> <dt> o <b>GetCurrent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCurrent</b>(<td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>opLayer</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the current layer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opLayer</tt>
   <dd>   The Layer. (<tt>NULL</tt> if there is no current layer)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the current layer was found</li>
 <li>E_FAIL if no current layer was found</li></ul>
</dl>
</dl>
<a name="GetList"></a><a name="GetList(CATListPtrCATIIniLayer*&amp;)"></a> <dt> o <b>GetList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetList</b>(<td><script type="text/javascript"> activateLink('CATListPtrCATIIniLayer','CATListPtrCATIIniLayer*&amp;')</script> <td><tt>opList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the layer list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opList</tt>
   <dd>   The list of layers. This pointer must be NULL when calling the method.
   You have to Release each object of the returned list and then Release the returned list pointer after use.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if a layers list was found</li>
 <li>E_FAIL no layers list was found</li></ul>
</dl>
</dl>
<a name="Remove"></a><a name="Remove(CATIIniLayer*&amp;)"></a> <dt> o <b>Remove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>ipLayer</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a layer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipLayer</tt>
   <dd> The layer to remove from the list.
 Notice: you do not delete the layer. All the layers always exist, the layers list only contains the modified layers.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the layer was correctly removed</li>
 <li>E_FAIL if the layer does not exist</li></ul>
</dl>
</dl>
<a name="SetCurrent"></a><a name="SetCurrent(CATIIniLayer*&amp;)"></a> <dt> o <b>SetCurrent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetCurrent</b>(<td><script type="text/javascript"> activateLink('CATIIniLayer','CATIIniLayer*&amp;')</script> <td><tt>ipLayer</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Changes the current layer.
 <b>Role</b>:
 Set a layer as the current one.
 This recomputes the visualization because the current layer is always visible so it belongs to the current visualization filter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipLayer</tt>
   <dd>   The layer. (<tt>NULL</tt> if no current layer is needed)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:<ul>
 <li>S_OK if the current layer was changed</li>
 <li>E_FAIL if no current layer was found</li></ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIIniDocumentLayersDefinition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATInteractiveInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
