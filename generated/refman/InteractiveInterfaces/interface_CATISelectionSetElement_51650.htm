<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InteractiveInterfaces Interface CATISelectionSetElement</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../InteractiveInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISelectionSetElement','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISelectionSetElement','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISelectionSetElement','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISelectionSetElement','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>InteractiveInterfaces Interface CATISelectionSetElement</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISelectionSetElement_51650','CATISelectionSetElement','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISelectionSetElement</b>
</p>
<p>
<b><i> Interface to handle a Selection Set element.</i></b><br>

 <br><b>Role:</b> A Selection Set element is managed by <a href="#" onClick="openLink('CATISelectionSet','');return false">CATISelectionSet</a> .                  <br>A Selection Set contains elements. An element is a feature 
                  or a sub-element (face, edge, vertex, ...) and is refered by a CATPathElement. As the element
                  can change with the design, the path can be modified. So the path that is used the first 
                  time to create the Selection Set element is named initial path.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Compare(CATPathElement*)"><b>Compare</b></a>(CATPathElement*)
<dd>  Compares the path of this and another path.
 <dt> o 
    <a href="#Compare(CATISelectionSetElement*)"><b>Compare</b></a>(CATISelectionSetElement*)
<dd>  Compares this with another Selection Set element.
 <dt> o 
    <a href="#ComputePath(CATPathElement*&amp;,CATPathElement*)"><b>ComputePath</b></a>(CATPathElement*&amp;,CATPathElement*)
<dd>    Computes the initial path of the Selection Set element.
 <dt> o 
    <a href="#ComputePathWithContext(CATLISTP(CATPathElement)&amp;,CATPathElement*)"><b>ComputePathWithContext</b></a>(CATLISTP(CATPathElement)&amp;,CATPathElement*)
<dd>    Computes the updated path of the Selection Set element.
 <dt> o 
    <a href="#GetPointedElement(CATBaseUnknown*&amp;)"><b>GetPointedElement</b></a>(CATBaseUnknown*&amp;)
<dd>  Returns pointed element.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Compare"></a><a name="Compare(CATPathElement*)"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iPathElement</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Compares the path of this and another path.
 <br><b>Role</b>:
 This method compares the initial path of this and another path.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathElement</tt>
   <dd>   The path of the element to be compared with.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The status.
   <br><b>Legal values</b>: <ul>
   <li><tt>0</tt>: the two paths are identical.</li>
   <li><tt>1</tt>: the two paths are different.</li></ul>
</dl>
</dl>
<a name="Compare"></a><a name="Compare(CATISelectionSetElement*)"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATISelectionSetElement','CATISelectionSetElement*')</script> <td><tt>iSetElement</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Compares this with another Selection Set element.
 <br><b>Role</b>:
 Returns the result of the comparison of the two Selection Set elements.
 This comparison is made on the initial paths returned by 
<a href="#" onClick="openLink('','ComputePath');return false">ComputePath</a>. The elements can be identical even if they are not in the same Selection Set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetElement</tt>
   <dd>   The Selection Set element to be compared with.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The status.
   <br><b>Legal values</b>: <ul>
   <li><tt>0</tt>: the two Selection Set element are identical.</li>
   <li><tt>1</tt>: the two Selection Set element are different.</li></ul>
</dl>
</dl>
<a name="ComputePath"></a><a name="ComputePath(CATPathElement*&amp;,CATPathElement*)"></a> <dt> o <b>ComputePath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ComputePath</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*&amp;')</script> <td><tt>oElementPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iDocInstancePath</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
   Computes the initial path of the Selection Set element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElementPath</tt>
   <dd>      The initial path of this.
      <br>The path can be relative to the document or an absolute path, depending on the content of the value
          of iDocInstancePath.
   </dd>
    <dt><tt> iDocInstancePath</tt>
   <dd>       The path of the instance of the document containing the Selection Set which includes this, or NULL.
      <ul> 
         <li> NULL (the default value) if you want that the returned path is relative to the document. </li>
         <li> the path of the instance of the document containing the Selection Set if you want that
              the returned path of the element is an absolute path in the Product context. </li>
      </ul>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>E_FAIL</tt>: if the path is not computed.</li>
   <li><tt>S_OK</tt>: if the path is computed.</li></ul>
</dl>
</dl>
<a name="ComputePathWithContext"></a><a name="ComputePathWithContext(CATLISTP(CATPathElement)&amp;,CATPathElement*)"></a> <dt> o <b>ComputePathWithContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ComputePathWithContext</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATPathElement)','CATLISTP(CATPathElement)&amp;')</script> <td><tt>oListElementPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iDocInstancePath</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Computes the updated path of the Selection Set element.
   <br><b>Role:</b>  The 
<a href="#" onClick="openLink('','ComputePath');return false">ComputePath</a> method returns the initial path of the Selection Set element   (the one used in the 
<a href="#" onClick="openLink('CATISelectionSet','AddElement');return false">CATISelectionSet.AddElement</a> method) while the    <tt>ComputePathWithContext</tt> method returns the path in the last feature containing the element.
   For example if a face has been created in a feature and this feature has been absorbed by another feature, 
   this method retrieves the path of the element in the last feature.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListElementPath</tt>
   <dd>      The paths of this, updated with the context.
      <br>Note that it is possible to have several paths for a Selection Set element : for example if a face is pointed by a
      Selection Set element and this face is divided in several faces by a pocket or another feature
      this method returns the paths of all the faces.
      <br>If the Selection Set element is not visible, the path is nul.
      <br>Release is needed on each element of the list except if nul.
      <br>The path can be relative to the document or an absolute path, depending on the content of the value
          of iDocInstancePath.
   </dd>
    <dt><tt> iDocInstancePath</tt>
   <dd>       The path of the instance of the document containing the Selection Set which includes this, or NULL.
      <ul> 
         <li> NULL (the default value) if you want that the returned path is relative to the document. </li>
         <li> the path of the instance of the document containing the Selection Set if you want that
              the returned path of the element is an absolute path in the Product context. </li>
      </ul>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>E_FAIL</tt>: if the path is not computed. In this case, you can retrieve the error 
        using the CATError::CATGetLastError method. On this error, you can get the message using 
        the GetNLSMessage on the error to have more information.
        Do not forget to release the error then.</li>
   <li><tt>S_OK</tt>: if the path is computed.</li></ul>
</dl>
</dl>
<a name="GetPointedElement"></a><a name="GetPointedElement(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetPointedElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPointedElement</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oPointedElement</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Returns pointed element.
 <br><b>Role</b>: This method retrieves the element pointed by <tt>this</tt> (only if in same document).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>E_FAIL</tt>: the pointed element has not been retrieved.</li>
   <li><tt>S_OK</tt>: the pointed element has been retrieved.</li></ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISelectionSetElement.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATInteractiveInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
