<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATICGMTopHelixOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMTopHelixOperator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMTopHelixOperator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMTopHelixOperator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMTopHelixOperator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Class CATICGMTopHelixOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATICGMTopHelixOperator_49088','CATICGMTopHelixOperator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATICGMTopHelixOperator</b>
</p>
<p>
<b><i> Class defining a topological operator that builds an helix Body.</i></b><br>

 <br>An helix is defined by:
 <dl><dt><tt>iHelixAxis</tt></dt><dd> The body containing a wire with a single linear
 edge. 
 <dt><tt>iHelixAxisOrientation</tt></dt><dd>The orientation of the helix
 with regards to the axis: <tt>iHelixAxisOrientation=1</tt> if the helix and
 <tt>iHelixAxis</tt> have the same orientation, <tt>-1</tt> otherwise.
 <dt><tt>iHelixOrigin</tt></dt><dd>The body containing a vertex which point 
 is the origin point of the helix. 
  <dt><tt>iStartAngle</tt></dt><dd>The first limitation of the helix from the
 origin point. This angle is considered on the helix itself, rotating about iHelixAxis
 according to iTrigoOrientation parameter.
  <dt><tt>iEndAngle</tt></dt><dd>The last limitation of the helix from the
 origin point. This angle is considered on the helix itself, rotating about iHelixAxis
 according to iTrigoOrientation parameter.
  <dt><tt>iPitch</tt></dt><dd>The heigth between two turns.
  <dt><tt>iTrigoOrientation</tt></dt><dd>The orientation of the rotation about
 the axis oriented by <tt>iHelixAxisOrientation</tt>: <tt>1</tt> to turn counterclockwise,
 <-1> to turn clockwise.
  <dt><tt>iTaperAngle</tt></dt><dd>Defines the half angle of the cone on which the helix
 is laying: if <tt>0</tt>, the helix is computed on a cylinder.
  <dt><tt>iTaperAngleOrientation</tt></dt><dd>Defines the location of the cone apex: 
 if <tt>1</tt>, the cone is widening along the oriented axis, <tt>-1</tt>, the cone is
 sharpening along the oriented axis.  
</dl>
 Notice the following definition rules:  
 <ul>
 <li> <tt>iStartAngle < iEndAngle</tt>
 <li> <tt>iHelixOrigin</tt> is not on the axis.
 <li> <tt>0 <= iTaperAngle < CATPIBY2 </tt>
</ul>
<br> An topological helix can be created using two modes:
 <ul>
 <li>Basic mode: use directly the <tt>CATCGMCreateTopHelix</tt> global function,
 that returns the pointer to the created body.
 <li>Advanced mode: use the CATICGMTopHelixOperator as any topological operator:
<ul>
<li> Create the operator with the function <tt>CATCGMCreateTopHelixOperator</tt>,
<li> Set the parameters to tune the helix properties such as <tt>SetTaperAngle</tt>, 
<li> Run,
<li> Get the resulting body, 
<li> Release the operator with the <tt>Release</tt> method after use.
</ul>
 </ul>
<br>The created body can be removed from the factory with the <a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a>  method as any CATICGMObject.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATICGMTopHelixOperator()"><b>CATICGMTopHelixOperator</b></a>()
<dd>  Constructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SetProfile(CATBody*,CATBody*)"><b>SetProfile</b></a>(CATBody*,CATBody*)
<dd>  Defines the radius profile of the helix.
 <dt> o 
    <a href="#SetTaperAngle(CATAngle)"><b>SetTaperAngle</b></a>(CATAngle)
<dd>  Defines the half angle of the cone on which the helix is laying.
 <dt> o 
    <a href="#SetTaperAngleOrientation(CATLONG32)"><b>SetTaperAngleOrientation</b></a>(CATLONG32)
<dd>  Defines the location of the cone apex.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATICGMTopHelixOperator"></a><a name="CATICGMTopHelixOperator()"></a> <dt> o <b>CATICGMTopHelixOperator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATICGMTopHelixOperator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
 <h2>Methods</h2> <br>
<a name="SetProfile"></a><a name="SetProfile(CATBody*,CATBody*)"></a> <dt> o <b>SetProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetProfile</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iProfileBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iPlaneBody</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the radius profile of the helix.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProfile</tt>
   <dd> The pointer to the wire body containing a single planar wire.
 This wire describes the radius variation of the helix along the helix axis.
 The wire may be composed of several edges. 
 For each edge of the wire, a helix piece is be built. 
 The result body returned by GetResult() contains a single wire where all 
 the helix pieces are connected.
 The helix axis and the profile must be logically coplanar. They must have been projected
 or laid down on the same plane.
 </dd>
    <dt><tt> iPlaneBody</tt>
   <dd> The pointer to a single shell body, which face is lying on a planar surface.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetTaperAngle"></a><a name="SetTaperAngle(CATAngle)"></a> <dt> o <b>SetTaperAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetTaperAngle</b>(<td><script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iTaperAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the half angle of the cone on which the helix is laying.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTaperAngle</tt>
   <dd> if <tt>0</tt> the helix is computed on a cylinder.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<a name="SetTaperAngleOrientation"></a><a name="SetTaperAngleOrientation(CATLONG32)"></a> <dt> o <b>SetTaperAngleOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>SetTaperAngleOrientation</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iTaperAngleOrientation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the location of the cone apex.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTaperAngleOrientation</tt>
   <dd> if <tt>1</tt>, the cone is widening along the oriented axis,
 <tt>-1</tt>, the cone is sharpening along the oriented axis.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Not null in case of error.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMTopHelixOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
