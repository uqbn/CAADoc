<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATConvertCrvToNurbsCrv</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATConvertCrvToNurbsCrv','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATConvertCrvToNurbsCrv','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATConvertCrvToNurbsCrv','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATConvertCrvToNurbsCrv','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Class CATConvertCrvToNurbsCrv</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATConvertCrvToNurbsCrv_49191','CATConvertCrvToNurbsCrv','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATConvertCrvToNurbsCrv</b>
</p>
<p>
<b><i> </i></b><br>
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R10 CATCrvFittingToNurbsCrv
 Class defining a geometric operator that computes the NURBS representation of a CATCurve.
 <br>The following conversions are available:
 <ul>
 <li>An input CATNurbsCurve or CATPNurbs is directly output: 
 the <tt>GetResult</tt> method outputs the same pointer.
 <li>A CATCircle and CATEllipse give a rational CATNurbsCurve.
 <li>A CATSplineCurve and CATLine give a CATNurbsCurve.
 <li>A CATPNurbs, CATPCircle, CATPEllipse, CATPSpline, CATPLine can always be converted into a CATPNurbs,
 that is rational for a CATPCircle and a CATPEllipse.
 Moreover, if the supporting surface is a CATPlane they can also be converted into a CATNurbsCurve.
 <li>A CATPLine can be converted in a CATNurbsCurve, if it is an iso-parametric curve that can be retrieved
 by its supporting surface (<tt>ExtractIsopar</tt>) as a curve of an other type than a CATPLine.
 <li>The CATEdgeCurve is converted according to the types of its inside curves.
 </ul>
 The CATConvertCrvToNurbsCrv operator follows the global frame of the geometric operators: 
<ul>
 <li>A CATConvertCrvToNurbsCrv operator is created with the <tt>CreateConvertCrvToNurbsCrv</tt> global method 
 and must be
 directly <tt>delete</tt>d with the usual C++ delete operator after use.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>In both cases, the result is accessed with the <tt>Getxxx</tt> methods. 
</ul>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATConvertCrvToNurbsCrv()"><b>~CATConvertCrvToNurbsCrv</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ComputeNewParameter(CATCrvParam&amp;)"><b>ComputeNewParameter</b></a>(CATCrvParam&amp;)
<dd>  Maps a parameter on the initial curve to the corresponding parameter on the computed Nurbs representation.
 <dt> o 
    <a href="#ForbidPeriodicity()"><b>ForbidPeriodicity</b></a>()
<dd>  Avoids to create periodic Nurbs representation.
 <dt> o 
    <a href="#GetNurbsCurve()"><b>GetNurbsCurve</b></a>()
<dd>  Returns the corresponding CATNurbsCurve, if the output dimension is 3.
 <dt> o 
    <a href="#GetPNurbs()"><b>GetPNurbs</b></a>()
<dd>  Returns the corresponding CATPNurbs, if the output dimension is 2.
 <dt> o 
    <a href="#ImposeQuinticConversion()"><b>ImposeQuinticConversion</b></a>()
<dd>  Sets the Nurbs degree to 5 for input circle or ellipse.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#RunWithSameParametrisation()"><b>RunWithSameParametrisation</b></a>()
<dd>  Runs <tt>this</tt> operator by keeping the same parameterization for the input
 and resulting curve (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetOutputDimension(CATLONG32&amp;)"><b>SetOutputDimension</b></a>(CATLONG32&amp;)
<dd>  Defines the dimension of the output Nurbs (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATConvertCrvToNurbsCrv"></a><a name="~CATConvertCrvToNurbsCrv()"></a> <dt> o <b>~CATConvertCrvToNurbsCrv</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATConvertCrvToNurbsCrv</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="ComputeNewParameter"></a><a name="ComputeNewParameter(CATCrvParam&amp;)"></a> <dt> o <b>ComputeNewParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam')</script>  <b>ComputeNewParameter</b>(<td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iParamOnCurve</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Maps a parameter on the initial curve to the corresponding parameter on the computed Nurbs representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParamOnCurve</tt>
   <dd> The parameter on the initial curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter on the computed Nurbs representation.
</dl>
</dl>
<a name="ForbidPeriodicity"></a><a name="ForbidPeriodicity()"></a> <dt> o <b>ForbidPeriodicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ForbidPeriodicity</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Avoids to create periodic Nurbs representation.
 <br>By default, periodic representations can be created.
</dl>
<a name="GetNurbsCurve"></a><a name="GetNurbsCurve()"></a> <dt> o <b>GetNurbsCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsCurve','CATNurbsCurve *')</script>  <b>GetNurbsCurve</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the corresponding CATNurbsCurve, if the output dimension is 3.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATNurbsCurve. Use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="GetPNurbs"></a><a name="GetPNurbs()"></a> <dt> o <b>GetPNurbs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPNurbs','CATPNurbs *')</script>  <b>GetPNurbs</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the corresponding CATPNurbs, if the output dimension is 2.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATPNurbs. Use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="ImposeQuinticConversion"></a><a name="ImposeQuinticConversion()"></a> <dt> o <b>ImposeQuinticConversion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ImposeQuinticConversion</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Nurbs degree to 5 for input circle or ellipse.
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator (<tt>ADVANCED</tt> mode).
</dl>
<a name="RunWithSameParametrisation"></a><a name="RunWithSameParametrisation()"></a> <dt> o <b>RunWithSameParametrisation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>RunWithSameParametrisation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator by keeping the same parameterization for the input
 and resulting curve (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>0</tt> if the the parameterization is not kept, <tt>1</tt> if it is kept.
</dl>
</dl>
<a name="SetOutputDimension"></a><a name="SetOutputDimension(CATLONG32&amp;)"></a> <dt> o <b>SetOutputDimension</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetOutputDimension</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32&amp;')</script> <td><tt>iOutputDim</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the dimension of the output Nurbs (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOutputDim</tt>
   <dd> The dimension of the output Nurbs. By default (<tt>BASIC</tt> mode), the output dimension is 3.
 <br><b>Legal values</b>:
 <dl>
 <dt>2</dt><dd> The result is a CATPNurbs. In this case, use the
 <tt>GetPNurbs</tt> method to retrieve it.
 <dt>3</dt><dd> The result is a CATNurbsCurve. In this case, use the
 <tt>GetNurbsCurve</tt> method to retrieve it.
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATConvertCrvToNurbsCrv.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
