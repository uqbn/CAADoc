<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATICGMHybIntersect</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMHybIntersect','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMHybIntersect','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMHybIntersect','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMHybIntersect','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Class CATICGMHybIntersect</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATICGMHybIntersect_40391','CATICGMHybIntersect','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATICGMHybIntersect</b>
</p>
<p>
<b><i> Class defining the operator that intersects two bodies.</i></b><br>

 <br>
 This operator operates on the 1D and 2D bodies. 
 It follows the general frame of all operator and satisfies to the smart mechanism: the
 input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
 <ul>
  <li>CATICGMHybIntersect is created with the <tt>CATCGMCreateTopIntersect</tt> global function.
  <li>It must be directly released with the <tt>Release</tt> method after use.
  <li>It is not streamable. 
  <li>The intersection can be restricted on a given domain on each body with the methods
    <tt>SetFirstDomainToIntersect</tt> and <tt>SetSecondDomainToIntersect</tt>
  <li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method to remove it from the  geometric factory.
  <li>When two coplanar skins are intersected, the returned body is a wire body along the boundary 
 of the intersection.
 </ul>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATCGMCreateTopIntersect','');return false">CATCGMCreateTopIntersect</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATICGMHybIntersect()"><b>CATICGMHybIntersect</b></a>()
<dd>  Constructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SetFirstDomainToIntersect(CATDomain*)"><b>SetFirstDomainToIntersect</b></a>(CATDomain*)
<dd>  Defines which domain of the first body must be intersected.
 <dt> o 
    <a href="#SetSecondDomainToIntersect(CATDomain*)"><b>SetSecondDomainToIntersect</b></a>(CATDomain*)
<dd>  Defines which domain of the second body must be intersected.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATICGMHybIntersect"></a><a name="CATICGMHybIntersect()"></a> <dt> o <b>CATICGMHybIntersect</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATICGMHybIntersect</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
 <h2>Methods</h2> <br>
<a name="SetFirstDomainToIntersect"></a><a name="SetFirstDomainToIntersect(CATDomain*)"></a> <dt> o <b>SetFirstDomainToIntersect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFirstDomainToIntersect</b>(<td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iDomainOnFirstBody</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines which domain of the first body must be intersected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomainOnFirstBody</tt>
   <dd> The pointer to the domain to intersect.</dd>
</dl>
</dl>
</dl>
<a name="SetSecondDomainToIntersect"></a><a name="SetSecondDomainToIntersect(CATDomain*)"></a> <dt> o <b>SetSecondDomainToIntersect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSecondDomainToIntersect</b>(<td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iDomainOnSecondBody</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines which domain of the second body must be intersected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDomainOnSecondBody</tt>
   <dd> The pointer to the domain to intersect.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMHybIntersect.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
