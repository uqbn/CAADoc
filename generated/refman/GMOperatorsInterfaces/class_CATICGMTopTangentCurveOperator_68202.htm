<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATICGMTopTangentCurveOperator</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMTopTangentCurveOperator','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMTopTangentCurveOperator','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMTopTangentCurveOperator','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMTopTangentCurveOperator','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Class CATICGMTopTangentCurveOperator</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATICGMTopTangentCurveOperator_68202','CATICGMTopTangentCurveOperator','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATICGMTopTangentCurveOperator</b>
</p>
<p>
<b><i> Class of the topological operators that create the bodies tangent to other bodies.</i></b><br>
 
 This class is the base class for some supplied operators, but you must not derive it yourself.
<br>
 This operator follows the general scheme of the topological operators producing several resulting bodies:
 <ul>
<li> Create the operator with the appropriate global function 
<li> Set the parameters
<li> Run
<li> Get the resulting bodies (use the iterator on the resulting bodies, because
 several line bodies can result from the computation)
<li> Release the operator with the <tt>Release</tt> method.
</ul>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICGMTopMultiResult','');return false">CATICGMTopMultiResult</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATICGMTopTangentCurveOperator()"><b>CATICGMTopTangentCurveOperator</b></a>()
<dd>  Constructor
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCurvatureOrientation(int)"><b>GetCurvatureOrientation</b></a>(int)
<dd>  Returns the curvature orientation of the resulting line bodie.
 <dt> o 
    <a href="#GetDiscriminationIndex(int&amp;)"><b>GetDiscriminationIndex</b></a>(int&amp;)
<dd>  Defines an index to distinguish the current resulting line body.
 <dt> o 
    <a href="#GetOrientationOnWire(int&amp;,int&amp;,int&amp;,int)"><b>GetOrientationOnWire</b></a>(int&amp;,int&amp;,int&amp;,int)
<dd>  Defines the orientation of the current resulting line body.
 <dt> o 
    <a href="#GetResultWithConditions(CATOrientation*,CATOrientation*,int,CATBoolean&amp;,CATBoolean&amp;,CATCGMJournalList*)"><b>GetResultWithConditions</b></a>(CATOrientation*,CATOrientation*,int,CATBoolean&amp;,CATBoolean&amp;,CATCGMJournalList*)
<dd>  Creates the nearest line from conditions.
 <dt> o 
    <a href="#GetTangentOrientation(int)"><b>GetTangentOrientation</b></a>(int)
<dd>  Returns the tangent orientation of the current resulting line body.
 <dt> o 
    <a href="#SetCurvatureOrientation(int,int)"><b>SetCurvatureOrientation</b></a>(int,int)
<dd>  Defines the curvature orientation of the resulting line bodies to output.
 <dt> o 
    <a href="#SetTangentOrientation(int,int)"><b>SetTangentOrientation</b></a>(int,int)
<dd>  Defines the tangent orientation of the resulting line bodies to output.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATICGMTopTangentCurveOperator"></a><a name="CATICGMTopTangentCurveOperator()"></a> <dt> o <b>CATICGMTopTangentCurveOperator</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATICGMTopTangentCurveOperator</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructor
</dl>
 <h2>Methods</h2> <br>
<a name="GetCurvatureOrientation"></a><a name="GetCurvatureOrientation(int)"></a> <dt> o <b>GetCurvatureOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCurvatureOrientation</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankWire</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the curvature orientation of the resulting line bodie.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The curvature orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl>
     <dt><tt>1</tt></dt><dd>The resulting line body is on the side of the
                            vector product of the normal to the shell and the tangent to the itself
     <dt><tt>-1</tt></dt><dd>The resulting line body is on the opposite side of the
                            vector product of the normal to the shell and the tangent to the itself
 </dl>
</dl>
</dl>
<a name="GetDiscriminationIndex"></a><a name="GetDiscriminationIndex(int&amp;)"></a> <dt> o <b>GetDiscriminationIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetDiscriminationIndex</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>ioIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines an index to distinguish the current resulting line body.
 <br>To call after the <tt>Run</tt> method, 
 during the iterative step of the result recovery, see 
<a href="#" onClick="openLink('CATICGMTopMultiResult','');return false">CATICGMTopMultiResult</a> . <br>Several resulting tangent line bodies produced by the operator can be same oriented
 regarding to the input wire bodies. In such a case, they are sorted by length in order to
 distinguish them.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioIndex</tt>
   <dd> The index value in the list of same oriented (in tangent and curvature) resulting line bodies.</dd>
</dl>
</dl>
</dl>
<a name="GetOrientationOnWire"></a><a name="GetOrientationOnWire(int&amp;,int&amp;,int&amp;,int)"></a> <dt> o <b>GetOrientationOnWire</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetOrientationOnWire</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>ioTangentOrient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>ioCurvatureOrient</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>ioIdem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankWire</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the orientation of the current resulting line body.
 <br>To call after the <tt>Run</tt> method, 
 during the iterative step of the result recovery, see 
<a href="#" onClick="openLink('CATICGMTopMultiResult','');return false">CATICGMTopMultiResult</a> . 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioTangentOrient</tt>
   <dd> The tangent orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl><dt><tt>0</tt></dt><dd>All the resulting line bodies are output
     <dt><tt>1</tt></dt><dd>Are kept the resulting line bodies whose orientation is the same as  
                            the orientation of the <tt>iRankWire</tt>-th input body
     <dt><tt>-1</tt></dt><dd>Are kept the resulting line bodies whose orientation is opposite to 
                            the orientation of the <tt>iRankWire</tt>-th input body
 </dl>
 </dd>
    <dt><tt> ioCurvatureOrient</tt>
   <dd> The curvature orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl><dt><tt>0</tt></dt><dd>All the resulting line bodies are output
     <dt><tt>1</tt></dt><dd>Are kept the resulting line bodies that are on the side of the
                            vector product of the normal to the shell and the tangent to the resulting line body
     <dt><tt>-1</tt></dt><dd>Are kept the resulting line bodies that are on the opposite side of the
                            vector product of the normal to the shell and the tangent to the resulting line body
 </dl>
 </dd>
    <dt><tt> ioIdem</tt>
   <dd> The test of whether the current resulting line body can be distinguished from another one.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt></dt><dd>If the current resulting line body can be distinguished in terms of orientations from
 the other resulting line bodies
     <dt><tt>2</tt></dt><dd>If the current resulting line body has the same orientations than another resulting line body
                            and its length is equal (at the factory resolution) 
                            to the length of at least one of them.
 </dl>
 </dd>
    <dt><tt> iRankWire</tt>
   <dd> The rank of the input body to consider. 
 <br>Legal values</b>: <tt>iRankWire=1</tt> in case of <tt>CATICGMTopLineTangentPtCrvOperator</tt>,
 <tt>1 <= iRankWire <= 2</tt> in case of <tt>CATICGMTopLineTangentCrvCrvOperator</tt>.</dd>
</dl>
</dl>
</dl>
<a name="GetResultWithConditions"></a><a name="GetResultWithConditions(CATOrientation*,CATOrientation*,int,CATBoolean&amp;,CATBoolean&amp;,CATCGMJournalList*)"></a> <dt> o <b>GetResultWithConditions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetResultWithConditions</b>(<td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation*')</script> <td><tt>iCrvOr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation*')</script> <td><tt>iTngOr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUseOrientationCondition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oUseIndexCondition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCGMJournalList','CATCGMJournalList*')</script> <td><tt>CurJourn</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the nearest line from conditions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCrvOr</tt>
   <dd> The array of two curvature orientations for first and second input body.
 Acceptables values: 0,-1,1. Use 0 if you don't want to use this condition.
 </dd>
    <dt><tt> iTngOr</tt>
   <dd> The array of two tangent orientations between the line result and the first and second input body.
 Acceptables values: 0,-1,1. Use 0 if you don't want to use this condition.
 </dd>
</dl>
    <dt><tt> oUseOrientationCondition</tt>
   <dd> Return TRUE if the line solution use the orientation condition.
 </dd>
    <dt><tt> oUseIndexCondition</tt>
   <dd> Return TRUE if the line solution use the index condition.
 </dd>
    <dt><tt> CurJourn</tt>
   <dd> The pointer to the journal corresponding to the creation of the current line.
 If <tt>NULL</tt>, the journal is not written.
 </dd>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created body, or NULL if we cannot find it. If you do not want to keep it,
 use the @CATICGMContainer#Remove method to remove it from the geometric factory, after the deletion
 of <tt>this</tt> operator.
 Put the iterator of the resulting lines on the solution.
</dl>
</dl>
<a name="GetTangentOrientation"></a><a name="GetTangentOrientation(int)"></a> <dt> o <b>GetTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetTangentOrientation</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankWire</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the tangent orientation of the current resulting line body.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The tangent orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl>
     <dt><tt>1</tt></dt><dd>The resulting line body has the same orientation as  
                            the <tt>iRankWire</tt>-th input body
     <dt><tt>-1</tt></dt><dd>The resulting line body has the opposite orientation to 
                            the <tt>iRankWire</tt>-th input body
 </dl>
</dl>
</dl>
<a name="SetCurvatureOrientation"></a><a name="SetCurvatureOrientation(int,int)"></a> <dt> o <b>SetCurvatureOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCurvatureOrientation</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCurvatureOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIWire</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the curvature orientation of the resulting line bodies to output.
 <br>To call before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTangentOrientation</tt>
   <dd> The curvature orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl><dt><tt>0</tt></dt><dd>All the resulting line bodies are output
     <dt><tt>1</tt></dt><dd>Are kept the resulting line bodies that are on the side of the
                            vector product of the normal to the shell and the tangent to the resulting line body
     <dt><tt>-1</tt></dt><dd>Are kept the resulting line bodies that are on the opposite side of the
                            vector product of the normal to the shell and the tangent to the resulting line body
 </dl>
 </dd>
    <dt><tt> iRankWire</tt>
   <dd> The rank of the input body to consider. 
 <br>Legal values</b>: <tt>iRankWire=1</tt> in case of <tt>CATICGMTopLineTangentPtCrvOperator</tt>,
 <tt>1 <= iRankWire <= 2</tt> in case of <tt>CATICGMTopLineTangentCrvCrvOperator</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetTangentOrientation"></a><a name="SetTangentOrientation(int,int)"></a> <dt> o <b>SetTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTangentOrientation</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTangentOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankWire</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the tangent orientation of the resulting line bodies to output.
 <br>To call before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTangentOrientation</tt>
   <dd> The tangent orientation with regards to the <tt>iRankWire</tt>-th input body.
 <br><b>Legal values</b>: 
 <dl><dt><tt>0</tt></dt><dd>All the resulting line bodies are output
     <dt><tt>1</tt></dt><dd>Are kept the resulting line bodies whose orientation is the same as  
                            the orientation of the <tt>iRankWire</tt>-th input body
     <dt><tt>-1</tt></dt><dd>Are kept the resulting line bodies whose orientation is opposite to 
                            the orientation of the <tt>iRankWire</tt>-th input body
 </dl>
 </dd>
    <dt><tt> iRankWire</tt>
   <dd> The rank of the input body to consider. 
 <br>Legal values</b>: <tt>iRankWire=1</tt> in case of <tt>CATICGMTopLineTangentPtCrvOperator</tt>,
 <tt>1 <= iRankWire <= 2</tt> in case of <tt>CATICGMTopLineTangentCrvCrvOperator</tt>.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMTopTangentCurveOperator.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
