<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Class CATDynFaceFaceFilletRibbon</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDynFaceFaceFilletRibbon','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDynFaceFaceFilletRibbon','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDynFaceFaceFilletRibbon','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDynFaceFaceFilletRibbon','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Class CATDynFaceFaceFilletRibbon</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDynFaceFaceFilletRibbon_55496','CATDynFaceFaceFilletRibbon','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynFaceFaceFilletRibbon</b>
</p>
<p>
<b><i> Class defining a fillet ribbon between two faces.</i></b><br>

 <br>A ribbon is an elementary process of the filleting operator.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDynFaceFaceFilletRibbon()"><b>CATDynFaceFaceFilletRibbon</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATDynFaceFaceFilletRibbon(CATLISTP(CATFace)&amp;,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATDynEdgeCrossing,CATLISTP(CATEdge)&amp;)"><b>CATDynFaceFaceFilletRibbon</b></a>(CATLISTP(CATFace)&amp;,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATDynEdgeCrossing,CATLISTP(CATEdge)&amp;)
<dd>  Constructs a ribbon between two faces.
 <dt> o 
    <a href="#CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;)"><b>CATDynFaceFaceFilletRibbon</b></a>(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;)
<dd>  Constructs a ribbon between two faces.
 <dt> o 
    <a href="#CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*)"><b>CATDynFaceFaceFilletRibbon</b></a>(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*)
<dd>  Constructs a ribbon between two faces  with a spine and same external radius law for both supports
 
 <dt> o 
    <a href="#CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*)"><b>CATDynFaceFaceFilletRibbon</b></a>(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*)
<dd>  Constructs a ribbon between two faces with a spine and different external radius law for both supports
 
 <dt> o 
    <a href="#~CATDynFaceFaceFilletRibbon()"><b>~CATDynFaceFaceFilletRibbon</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetLeftBody()"><b>GetLeftBody</b></a>()
<dd>  Returns the body of the opposite faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetLeftDomain()"><b>GetLeftDomain</b></a>()
<dd>  Returns the domain of the opposite faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetLeftOrientation()"><b>GetLeftOrientation</b></a>()
<dd>  Returns the orientation of the shell domain of the opposite faces to take into account 
 for <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetLeftSupport()"><b>GetLeftSupport</b></a>()
<dd>  Returns the opposite faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetRadii()"><b>GetRadii</b></a>()
<dd>  Returns the radius definitions of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetRightBody()"><b>GetRightBody</b></a>()
<dd>  Returns the body of the first faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetRightDomain()"><b>GetRightDomain</b></a>()
<dd>  Returns the domain of the first faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetRightOrientation()"><b>GetRightOrientation</b></a>()
<dd>  Returns the orientation of the shell domain of the first faces to take into account 
 for <tt>this</tt> ribbon.
 <dt> o 
    <a href="#GetRightSupport()"><b>GetRightSupport</b></a>()
<dd>  Returns the first faces of <tt>this</tt> ribbon.
 <dt> o 
    <a href="#SetFaceFaceInitMode(CATDynFilletFaceFaceInitMode)"><b>SetFaceFaceInitMode</b></a>(CATDynFilletFaceFaceInitMode)
<dd>   Defines the multi-ribbon behaviour for the face/face ribbon.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDynFaceFaceFilletRibbon"></a><a name="CATDynFaceFaceFilletRibbon()"></a> <dt> o <b>CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynFaceFaceFilletRibbon</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATDynFaceFaceFilletRibbon"></a><a name="CATDynFaceFaceFilletRibbon(CATLISTP(CATFace)&amp;,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;,CATDynEdgeCrossing,CATLISTP(CATEdge)&amp;)"></a> <dt> o <b>CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynFaceFaceFilletRibbon</b>(<td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iLeftSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iRightSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATDynFilletRadius)','CATLISTP(CATDynFilletRadius)&amp;')</script> <td><tt>iRadii</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDynEdgeCrossing','CATDynEdgeCrossing')</script> <td><tt>iDefaultBehaviour</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATEdge)','CATLISTP(CATEdge)&amp;')</script> <td><tt>iSpecialEdges</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a ribbon between two faces.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRightSupport</tt>
   <dd> The list of pointers to the first faces.
 </dd>
    <dt><tt> iLeftSupport</tt>
   <dd> The list of pointers to the opposite faces.
 </dd>
    <dt><tt> iRadii</tt>
   <dd> The list of radius definitions.</dd>
</dl>
</dl>
</dl>
<a name="CATDynFaceFaceFilletRibbon"></a><a name="CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATLISTP(CATDynFilletRadius)&amp;)"></a> <dt> o <b>CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynFaceFaceFilletRibbon</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iLeftBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iLeftDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iLeftOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iLeftSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iRightBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iRightDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iRightOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iRightSupport</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATDynFilletRadius)','CATLISTP(CATDynFilletRadius)&amp;')</script> <td><tt>iRadii</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a ribbon between two faces.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRightBody</tt>
   <dd> The pointer to the body of the first faces.
 </dd>
    <dt><tt> iRightDomain</tt>
   <dd> The pointer to the domain of the first faces.
 </dd>
    <dt><tt> iRightOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iRightSupport</tt>
   <dd> The list of pointers to the first faces (belonging to <tt>iRightDomain</tt> and <tt>iRightBody</tt>).
 </dd>
    <dt><tt> iLeftBody</tt>
   <dd> The pointer to the body of the opposite faces.
 </dd>
    <dt><tt> iLeftDomain</tt>
   <dd> The pointer to the domain of the opposite faces.
 </dd>
    <dt><tt> iLeftOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iLeftSupport</tt>
   <dd> The list of pointers to the opposite faces (belonging to <tt>iLefttDomain</tt> and <tt>iLeftBody</tt>).
 </dd>
    <dt><tt> iRadii</tt>
   <dd> The list of radius definitions.</dd>
</dl>
</dl>
</dl>
<a name="CATDynFaceFaceFilletRibbon"></a><a name="CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*)"></a> <dt> o <b>CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynFaceFaceFilletRibbon</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iLeftBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iLeftDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iLeftOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iLeftSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iRightBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iRightDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iRightOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iRightSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iSpineBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iMappingLaw</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iDistanceLaw</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a ribbon between two faces  with a spine and same external radius law for both supports
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLeftBody</tt>
   <dd> The pointer to the body of the opposite faces.
 </dd>
    <dt><tt> iLeftDomain</tt>
   <dd> The pointer to the domain of the opposite faces.
 </dd>
    <dt><tt> iLeftOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iLeftSupport</tt>
   <dd> The list of pointers to the opposite faces (belonging to <tt>iLefttDomain</tt> and <tt>iLeftBody</tt>).
 </dd>
    <dt><tt> iRightBody</tt>
   <dd> The pointer to the body of the first faces.
 </dd>
    <dt><tt> iRightDomain</tt>
   <dd> The pointer to the domain of the first faces.
 </dd>
    <dt><tt> iRightOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iRightSupport</tt>
   <dd> The list of pointers to the first faces (belonging to <tt>iRightDomain</tt> and <tt>iRightBody</tt>).
 </dd>
    <dt><tt> iSpineBody</tt>
   <dd> The pointer to the spine object.
 </dd>
    <dt><tt> iMappingLaw</tt>
   <dd> The pointer to the mapping law
 </dd>
    <dt><tt> iDistanceLaw</tt>
   <dd> The pointer to the distance law.</dd>
</dl>
</dl>
</dl>
<a name="CATDynFaceFaceFilletRibbon"></a><a name="CATDynFaceFaceFilletRibbon(CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATDomain*,CATOrientation,CATLISTP(CATFace)&amp;,CATBody*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*,CATCompositeLaw*)"></a> <dt> o <b>CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDynFaceFaceFilletRibbon</b>(<td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iLeftBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iLeftDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iLeftOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iLeftSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iRightBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDomain','CATDomain*')</script> <td><tt>iRightDomain</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iRightOrientation</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLISTP(CATFace)','CATLISTP(CATFace)&amp;')</script> <td><tt>iRightSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iSpineBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iLeftMappingLaw</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iRightMappingLaw</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iLeftDistLaw</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw*')</script> <td><tt>iRightDistLaw</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a ribbon between two faces with a spine and different external radius law for both supports
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLeftBody</tt>
   <dd> The pointer to the body of the opposite faces.
 </dd>
    <dt><tt> iLeftDomain</tt>
   <dd> The pointer to the domain of the opposite faces.
 </dd>
    <dt><tt> iLeftOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iLeftSupport</tt>
   <dd> The list of pointers to the opposite faces (belonging to <tt>iLefttDomain</tt> and <tt>iLeftBody</tt>).
 </dd>
    <dt><tt> iRightBody</tt>
   <dd> The pointer to the body of the first faces.
 </dd>
    <dt><tt> iRightDomain</tt>
   <dd> The pointer to the domain of the first faces.
 </dd>
    <dt><tt> iRightOrientation</tt>
   <dd> The orientation to take into account for the ribbon computation
 <br><b>Legal values</b>: <tt>CATOrientationPositive</tt> to take the natural orientation of the shell domain,
 <tt>CATOrientationNegative</tt> for the opposite orientation.
 </dd>
    <dt><tt> iRightSupport</tt>
   <dd> The list of pointers to the first faces (belonging to <tt>iRightDomain</tt> and <tt>iRightBody</tt>).
 </dd>
    <dt><tt> iSpineBody</tt>
   <dd> The pointer to the spine object.
 </dd>
    <dt><tt> iLeftMappingLaw</tt>
   <dd> The pointer to the mapping law corresponding to the left body
 </dd>
    <dt><tt> iRightMappingLaw</tt>
   <dd> The pointer to the mapping law corresponding to the right body
 </dd>
    <dt><tt> iLeftDistLaw</tt>
   <dd> The pointer to the distance law corresponding to the left body
 </dd>
    <dt><tt> iRightDistLaw</tt>
   <dd> The pointer to the distance law corresponding to the right body</dd>
</dl>
</dl>
</dl>
<a name="~CATDynFaceFaceFilletRibbon"></a><a name="~CATDynFaceFaceFilletRibbon()"></a> <dt> o <b>~CATDynFaceFaceFilletRibbon</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDynFaceFaceFilletRibbon</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetLeftBody"></a><a name="GetLeftBody()"></a> <dt> o <b>GetLeftBody</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetLeftBody</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the body of the opposite faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the body of the opposite faces.
</dl>
</dl>
<a name="GetLeftDomain"></a><a name="GetLeftDomain()"></a> <dt> o <b>GetLeftDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDomain','CATDomain *')</script>  <b>GetLeftDomain</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the domain of the opposite faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the domain of the opposite faces.
</dl>
</dl>
<a name="GetLeftOrientation"></a><a name="GetLeftOrientation()"></a> <dt> o <b>GetLeftOrientation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATOrientation','const CATOrientation')</script>  <b>GetLeftOrientation</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the orientation of the shell domain of the opposite faces to take into account 
 for <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The relative orientation.
</dl>
</dl>
<a name="GetLeftSupport"></a><a name="GetLeftSupport()"></a> <dt> o <b>GetLeftSupport</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATFace)','const CATLISTP(CATFace)&')</script>  <b>GetLeftSupport</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the opposite faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of the pointers to the opposite faces.
</dl>
</dl>
<a name="GetRadii"></a><a name="GetRadii()"></a> <dt> o <b>GetRadii</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATDynFilletRadius)','const CATLISTP(CATDynFilletRadius)&')</script>  <b>GetRadii</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the radius definitions of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of the radius definitions.
</dl>
</dl>
<a name="GetRightBody"></a><a name="GetRightBody()"></a> <dt> o <b>GetRightBody</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetRightBody</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the body of the first faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the body of the first faces.
</dl>
</dl>
<a name="GetRightDomain"></a><a name="GetRightDomain()"></a> <dt> o <b>GetRightDomain</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDomain','CATDomain *')</script>  <b>GetRightDomain</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the domain of the first faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the domain of the first faces.
</dl>
</dl>
<a name="GetRightOrientation"></a><a name="GetRightOrientation()"></a> <dt> o <b>GetRightOrientation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATOrientation','const CATOrientation')</script>  <b>GetRightOrientation</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the orientation of the shell domain of the first faces to take into account 
 for <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The relative orientation.
</dl>
</dl>
<a name="GetRightSupport"></a><a name="GetRightSupport()"></a> <dt> o <b>GetRightSupport</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLISTP(CATFace)','const CATLISTP(CATFace)&')</script>  <b>GetRightSupport</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the first faces of <tt>this</tt> ribbon.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The list of the pointers to the first faces.
</dl>
</dl>
<a name="SetFaceFaceInitMode"></a><a name="SetFaceFaceInitMode(CATDynFilletFaceFaceInitMode)"></a> <dt> o <b>SetFaceFaceInitMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFaceFaceInitMode</b>(<td><script type="text/javascript"> activateLink('CATDynFilletFaceFaceInitMode','CATDynFilletFaceFaceInitMode')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Defines the multi-ribbon behaviour for the face/face ribbon.
 <br>If used, multiple face/face ribbons will be performed in one step and possible self-intersection areas of the ribbons will be solved.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> The mode that should be applied to the face/face ribbon.
 <br><b>Legal values</b>: <tt>CATDynDefaultNoMultiSolutionAllowed</tt> no multi-ribbon is performed - default value
 <tt>CATDynMultiSolutionAllowed</tt> multi-ribbon is performed.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDynFilletRibbon.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
