<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GMOperatorsInterfaces Interface CATICGMFrFSmoothingOper</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GMOperatorsInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICGMFrFSmoothingOper','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMFrFSmoothingOper','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICGMFrFSmoothingOper','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICGMFrFSmoothingOper','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GMOperatorsInterfaces Interface CATICGMFrFSmoothingOper</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICGMFrFSmoothingOper_51065','CATICGMFrFSmoothingOper','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICGMFrFSmoothingOper</b>
</p>
<p>
<b><i> Class defining a geometric operator that smoothes a set of iNbrePts points to create a set of curves "SetOfCurves".</i></b><br>

 <br>The CATICGMFrFSmoothingOper operator follows the global frame of the geometric operators:
 <ul>
 <li>A CATICGMFrFSmoothingOper operator is created with the <tt>CATFrFCreateSmoothingOper</tt> global method
 and must be directly <tt>delete</tt>d with the usual C++ delete operator after use.
 It is is not streamable.
 <li>Options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method.
 <li>In both cases, the result is accessed with the <tt>Getxxx</tt> methods.
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CuttingUntilReachTolerance(CATBoolean)"><b>CuttingUntilReachTolerance</b></a>(CATBoolean)
<dd>  Defines automatically the maximum number of arcs of the created curve.
 <dt> o 
    <a href="#GetAverageDeviation()"><b>GetAverageDeviation</b></a>()
<dd>  Returns the Average deviation between set of points and the SetOfCurves Result.
 <dt> o 
    <a href="#GetCurvatureVect(int,double&amp;,CATMathVector&amp;)"><b>GetCurvatureVect</b></a>(int,double&amp;,CATMathVector&amp;)
<dd>  Returns the curvature constraint corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#GetDeviation(int)"><b>GetDeviation</b></a>(int)
<dd>  Returns the deviation at each point of the initial set of points.
 <dt> o 
    <a href="#GetGeometricCuttingpoints(CATListOfInt&amp;)"><b>GetGeometricCuttingpoints</b></a>(CATListOfInt&amp;)
<dd>  Returns List of indexes corresponding to Vertex of the SetOfCurves result
 <dt> o 
    <a href="#GetIndexMaxDeviation(double&amp;)"><b>GetIndexMaxDeviation</b></a>(double&amp;)
<dd>  Returns the maximum deviation between set of points and the SetOfCurves Result.
 <dt> o 
    <a href="#GetParametricCuttingpoints(CATListOfInt&amp;)"><b>GetParametricCuttingpoints</b></a>(CATListOfInt&amp;)
<dd>  Returns List of indexes corresponding to internal Arc limit of the SetOfCurves result
 <dt> o 
    <a href="#GetParametrization(int&amp;,double*&amp;)"><b>GetParametrization</b></a>(int&amp;,double*&amp;)
<dd>  Returns The parametrization.
 <dt> o 
    <a href="#GetResult(CATCurve**&amp;)"><b>GetResult</b></a>(CATCurve**&amp;)
<dd>  Returns the SetOfCurves Result.
 <dt> o 
    <a href="#GetTangentVect(int,CATMathVector&amp;)"><b>GetTangentVect</b></a>(int,CATMathVector&amp;)
<dd>  Returns the tangency constraint corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#ImposedCuttingPoints(CATListOfInt&amp;,CATBoolean)"><b>ImposedCuttingPoints</b></a>(CATListOfInt&amp;,CATBoolean)
<dd>  Defines List of Parametric Cutting points corresponding to list of points of the initial set of points.
 <dt> o 
    <a href="#ResetConstraint(int)"><b>ResetConstraint</b></a>(int)
<dd>  Reset the constraint corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#ResetTopConstraint(int)"><b>ResetTopConstraint</b></a>(int)
<dd>  Resets the Topological constraint corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator .
 <dt> o 
    <a href="#SetConstraint(int,CATFrFContinuity,CATMathVector*,double)"><b>SetConstraint</b></a>(int,CATFrFContinuity,CATMathVector*,double)
<dd>  Defines the PassPoint constraint corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#SetCuttingByCurvatureAnalysis(double,double,CATFrFInflexionTreatment,CATBoolean)"><b>SetCuttingByCurvatureAnalysis</b></a>(double,double,CATFrFInflexionTreatment,CATBoolean)
<dd>  Compute automatically the number of Arcs by CurvatureAnalysis.
 <dt> o 
    <a href="#SetCuttingDefault(CATFrFCuttingOption)"><b>SetCuttingDefault</b></a>(CATFrFCuttingOption)
<dd>  Defines CuttingDefault Option.
 <dt> o 
    <a href="#SetDegree(int)"><b>SetDegree</b></a>(int)
<dd>  Defines the degree of the resulting curve.
 <dt> o 
    <a href="#SetMaxDegree(int)"><b>SetMaxDegree</b></a>(int)
<dd>  Defines the Maxdegree of the resulting curve.
 <dt> o 
    <a href="#SetMaxNumberOfArcs(int,int)"><b>SetMaxNumberOfArcs</b></a>(int,int)
<dd>  Defines the maximum number of arcs of the created curve.
 <dt> o 
    <a href="#SetParamType(CATFrFSmoothingParamType)"><b>SetParamType</b></a>(CATFrFSmoothingParamType)
<dd>  Defaults Options for parametrisation of set of points.
 <dt> o 
    <a href="#SetParametrization(int,double*)"><b>SetParametrization</b></a>(int,double*)
<dd>  Defines the parameters corresponding to each point of the initial set of points.
 <dt> o 
    <a href="#SetSlideIterations(int)"><b>SetSlideIterations</b></a>(int)
<dd>  Defines the number of iterations necessary to obtain the best resulting curve.
 <dt> o 
    <a href="#SetTolerance(double,CATFrFTestOfConvergence)"><b>SetTolerance</b></a>(double,CATFrFTestOfConvergence)
<dd>  Defines the Tolerance of the result.
 <dt> o 
    <a href="#SetTopConstraint(int,CATFrFContinuity,CATMathVector*,double,CATMathVector*,double)"><b>SetTopConstraint</b></a>(int,CATFrFContinuity,CATMathVector*,double,CATMathVector*,double)
<dd>  Defines the Topological PassPoint constraint corresponding to each internal point of the initial set of points.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CuttingUntilReachTolerance"></a><a name="CuttingUntilReachTolerance(CATBoolean)"></a> <dt> o <b>CuttingUntilReachTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>CuttingUntilReachTolerance</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iRespectTolerance</tt><td><tt>= TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines automatically the maximum number of arcs of the created curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRespectTolerance</tt>
   <dd> if (TRUE), we imposed automatically cutting points until that tolerance is reached.</dd>
</dl>
</dl>
</dl>
<a name="GetAverageDeviation"></a><a name="GetAverageDeviation()"></a> <dt> o <b>GetAverageDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetAverageDeviation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Average deviation between set of points and the SetOfCurves Result.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The Mean deviation value.
</dl>
</dl>
<a name="GetCurvatureVect"></a><a name="GetCurvatureVect(int,double&amp;,CATMathVector&amp;)"></a> <dt> o <b>GetCurvatureVect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetCurvatureVect</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oCvt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oNormale</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the curvature constraint corresponding to each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 <= iRankPoint <= iNbrePts
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the curvature value and Normal vector at the current point,  1 <= iRankPoint <= iNbrePts.
</dl>
</dl>
<a name="GetDeviation"></a><a name="GetDeviation(int)"></a> <dt> o <b>GetDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetDeviation</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the deviation at each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 <= iRankPoint <= iNbrePts
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The deviation at each point.
</dl>
</dl>
<a name="GetGeometricCuttingpoints"></a><a name="GetGeometricCuttingpoints(CATListOfInt&amp;)"></a> <dt> o <b>GetGeometricCuttingpoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetGeometricCuttingpoints</b>(<td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oGeomList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns List of indexes corresponding to Vertex of the SetOfCurves result
</dl>
<a name="GetIndexMaxDeviation"></a><a name="GetIndexMaxDeviation(double&amp;)"></a> <dt> o <b>GetIndexMaxDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetIndexMaxDeviation</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oMaxdeviation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum deviation between set of points and the SetOfCurves Result.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The maximum deviation value.
 
  <dt> <b>Returns:</b> 
  <dd>  Index of point with max deviation.
</dl>
</dl>
<a name="GetParametricCuttingpoints"></a><a name="GetParametricCuttingpoints(CATListOfInt&amp;)"></a> <dt> o <b>GetParametricCuttingpoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetParametricCuttingpoints</b>(<td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oParamList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns List of indexes corresponding to internal Arc limit of the SetOfCurves result
</dl>
<a name="GetParametrization"></a><a name="GetParametrization(int&amp;,double*&amp;)"></a> <dt> o <b>GetParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetParametrization</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbreOfPts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>oParameters</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns The parametrization.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The array of the parameter values that correspond on the SetOfCurves to
 each point of the input set.
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult(CATCurve**&amp;)"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetResult</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve**&amp;')</script> <td><tt>oResultCurves</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the SetOfCurves Result.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oNbreOfCurve : The Number of curves of the Result
 
  <dt> <b>Returns:</b> 
  <dd>  Array of oNbreOfCurve curves result according to SetTopConstraint option
</dl>
</dl>
<a name="GetTangentVect"></a><a name="GetTangentVect(int,CATMathVector&amp;)"></a> <dt> o <b>GetTangentVect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetTangentVect</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oTangentVect</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the tangency constraint corresponding to each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 <= iRankPoint <= iNbrePts
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the tangent vector at the current point,  1 <= iRankPoint <= iNbrePts.
</dl>
</dl>
<a name="ImposedCuttingPoints"></a><a name="ImposedCuttingPoints(CATListOfInt&amp;,CATBoolean)"></a> <dt> o <b>ImposedCuttingPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ImposedCuttingPoints</b>(<td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>iListOfPoints</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iWithImposedPoint</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines List of Parametric Cutting points corresponding to list of points of the initial set of points.
 The point iListOfPoints[index] is an Arc limit in the result SetOfCurves .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfPoints</tt>
   <dd> List of Parametric Cutting points,  1 < iListOfPoints[index] < iNbrePts
 </dd>
    <dt><tt> iWithImposedPoint</tt>
   <dd> if (TRUE) each cutting point is imposed by passpoint constraint; else No Constraint.</dd>
</dl>
</dl>
</dl>
<a name="ResetConstraint"></a><a name="ResetConstraint(int)"></a> <dt> o <b>ResetConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetConstraint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Reset the constraint corresponding to each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 <= iRankPoint <= iNbrePts</dd>
</dl>
</dl>
</dl>
<a name="ResetTopConstraint"></a><a name="ResetTopConstraint(int)"></a> <dt> o <b>ResetTopConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ResetTopConstraint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Resets the Topological constraint corresponding to each point of the initial set of points.
 The point iPoints[iRankPoint-1] is not a limitCurve in the result SetOfCurves.
 Size of SetOfCurves decrease by one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 < iRankPoint < iNbrePts</dd>
</dl>
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator .
</dl>
<a name="SetConstraint"></a><a name="SetConstraint(int,CATFrFContinuity,CATMathVector*,double)"></a> <dt> o <b>SetConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetConstraint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrFContinuity','CATFrFContinuity')</script> <td><tt>iContinuity</tt><td><tt>= CATFrFPointCont</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector*')</script> <td><tt>iTangVect</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iratio</tt><td><tt>= 1.0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the PassPoint constraint corresponding to each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 <= iRankPoint <= iNbrePts
 </dd>
    <dt><tt> iContinuity</tt>
   <dd> <ul>
 <li> iContinuity = CATFrFNoCont        -> Reset constraint,
 <li> iContinuity = CATFrFPointCont     -> PassPoint constraint,
 <li> iContinuity = CATFrFTangentCont   -> tangency constraint
 <li> iContinuity = CATFrFCurvatureCont -> curvature constraint
 </ul>
 </dd>
    <dt><tt> iTangVect</tt>
   <dd> The Tangency vector (normalized) corresponding to each point of the initial set of points.
 (if 0, a default value is computed)
 </dd>
    <dt><tt> iratio</tt>
   <dd> parameter to increase or decrease the norm of tangency vector (which is computed automatically)</dd>
</dl>
</dl>
</dl>
<a name="SetCuttingByCurvatureAnalysis"></a><a name="SetCuttingByCurvatureAnalysis(double,double,CATFrFInflexionTreatment,CATBoolean)"></a> <dt> o <b>SetCuttingByCurvatureAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCuttingByCurvatureAnalysis</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCurvatureVariationThreshold</tt><td><tt>= 5</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCurvatureRatio</tt><td><tt>= 0.5</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrFInflexionTreatment','CATFrFInflexionTreatment')</script> <td><tt>iCase</tt><td><tt>= CATFrFSurroundingInflexion</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iWithImposedPoint</tt><td><tt>= FALSE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Compute automatically the number of Arcs by CurvatureAnalysis.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCurvatureVariationThreshold</tt>
   <dd> Criteria used to decide to insert arc limit is based on a factor of curvature variation
 between the beginning and the end of the curve, for example 5.
 </dd>
    <dt><tt> iCurvatureRatio</tt>
   <dd> The position of the arc limit is computed at best using area repartition criteria.
 A parameter defining the ratio between the surfaces is then used to compute this position.
 </dd>
    <dt><tt> iCase</tt>
   <dd> : CATFrFInflexionTreatment The type of Inflexion Treatment :
 <ul>
 <li>CATFrFNone  = 0
 <li>CATFrFInsertAtInflexion = 1
 <li>CATFrFSurroundingInflexion = 2
 </ul>
 </dd>
    <dt><tt> iWithImposedPoint</tt>
   <dd> if ( TRUE ) each cutting point computed is imposed by passpoint constraint; else No Constraint</dd>
</dl>
</dl>
</dl>
<a name="SetCuttingDefault"></a><a name="SetCuttingDefault(CATFrFCuttingOption)"></a> <dt> o <b>SetCuttingDefault</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCuttingDefault</b>(<td><script type="text/javascript"> activateLink('CATFrFCuttingOption','CATFrFCuttingOption')</script> <td><tt>iCuttingType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines CuttingDefault Option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCuttingType</tt>
   <dd> The type of Cutting Option :
 <ul>
 <li>CATFrFCuttingAutoLength  = 1
 <li>CATFrFCuttingAutoAreaCurvatr = 2
 <li>CATFrFCuttingAutoLengthCurvatr = 3
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetDegree"></a><a name="SetDegree(int)"></a> <dt> o <b>SetDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetDegree</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegree</tt><td><tt>= 5</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the degree of the resulting curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegree</tt>
   <dd> The degree value for each curve .</dd>
</dl>
</dl>
</dl>
<a name="SetMaxDegree"></a><a name="SetMaxDegree(int)"></a> <dt> o <b>SetMaxDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxDegree</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegree</tt><td><tt>= 5</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the Maxdegree of the resulting curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegree</tt>
   <dd> The Max degree value for each curve .</dd>
</dl>
</dl>
</dl>
<a name="SetMaxNumberOfArcs"></a><a name="SetMaxNumberOfArcs(int,int)"></a> <dt> o <b>SetMaxNumberOfArcs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxNumberOfArcs</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaxNumberOfArcs</tt><td><tt>= 64</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iInternalContinuity</tt><td><tt>= 3</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum number of arcs of the created curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxNumberOfArcs</tt>
   <dd> The maximum number of arcs of each created curve
 </dd>
    <dt><tt> iInternalContinuity</tt>
   <dd> The Internal continuity of each created curve, iInternalContinuity = 2, 3, 4.</dd>
</dl>
</dl>
</dl>
<a name="SetParamType"></a><a name="SetParamType(CATFrFSmoothingParamType)"></a> <dt> o <b>SetParamType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetParamType</b>(<td><script type="text/javascript"> activateLink('CATFrFSmoothingParamType','CATFrFSmoothingParamType')</script> <td><tt>iParamType</tt><td><tt>= CATFrFSmoothingParamChordal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defaults Options for parametrisation of set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParamType</tt>
   <dd> The type of parametrization. Examples :
 <ul>
 <li>CATFrFSmoothingParamUniform = 0
 <li>CATFrFSmoothingParamChordal = 1
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetParametrization"></a><a name="SetParametrization(int,double*)"></a> <dt> o <b>SetParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetParametrization</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbreOfPts</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iParameters</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the parameters corresponding to each point of the initial set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbreOfPts</tt>
   <dd> Number of initial set of points.
 </dd>
    <dt><tt> iParameters</tt>
   <dd> The array of the parameter values that correspond on the smoothed curve to
 each point of the input set.</dd>
</dl>
</dl>
</dl>
<a name="SetSlideIterations"></a><a name="SetSlideIterations(int)"></a> <dt> o <b>SetSlideIterations</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSlideIterations</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIterations</tt><td><tt>= 5</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the number of iterations necessary to obtain the best resulting curve.
 Each iteration gives a different result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIterations</tt>
   <dd> The Iteration value for each curve.</dd>
</dl>
</dl>
</dl>
<a name="SetTolerance"></a><a name="SetTolerance(double,CATFrFTestOfConvergence)"></a> <dt> o <b>SetTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTolerance</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol3d</tt><td><tt>= 0.001</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrFTestOfConvergence','CATFrFTestOfConvergence')</script> <td><tt>iTest</tt><td><tt>= CATFrFTestByAverageDeviation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the Tolerance of the result.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTol3d</tt>
   <dd> The maximum distance between the input points and the SetOfCurves.
 </dd>
    <dt><tt> iTest</tt>
   <dd> <ul>
 <li>iTest = CATFrFTestByAverageDeviation : Average Deviation is satisfied
 <li>iTest = CATFrFTestByMaxDeviation     : Max Deviation is satisfied
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetTopConstraint"></a><a name="SetTopConstraint(int,CATFrFContinuity,CATMathVector*,double,CATMathVector*,double)"></a> <dt> o <b>SetTopConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTopConstraint</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATFrFContinuity','CATFrFContinuity')</script> <td><tt>iContinuity</tt><td><tt>= CATFrFPointCont</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector*')</script> <td><tt>iTangentVect</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRatio</tt><td><tt>= 1.</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector*')</script> <td><tt>iCurvatureVect</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iCurvatureValue</tt><td><tt>= 0.0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the Topological PassPoint constraint corresponding to each internal point of the initial set of points.
 The point iPoints[iRankPoint-1] is an Extremity of curve in the SetOfCurves result.
 Size of SetOfCurves increase by one.
 The final size of SetOfCurves is equal to Number of Internal Topological PassPoint Constraint + 1 .
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankPoint</tt>
   <dd> The Rank of the point in iPoints,  1 < iRankPoint < iNbrePts.
 </dd>
    <dt><tt> iContinuity</tt>
   <dd> <ul>
  <li>iContinuity = CATFrFNoCont        -> Reset Geometrical constraint,
  <li>iContinuity = CATFrFPointCont     -> SetOfCurves is G0 at this point,
  <li>iContinuity = CATFrFTangentCont   -> SetOfCurves is G1 at this point,
  <li>iContinuity = CATFrFCurvatureCont -> SetOfCurves is G2 at this point.
 </ul>
 </dd>
    <dt><tt> iTangentVect</tt>
   <dd> The Tangency vector (normalized) corresponding to each point of the initial set of points.
 (if 0, a default value is computed)
 </dd>
    <dt><tt> iratio</tt>
   <dd> Parameter to increase or decrease the norm of tangency vector (which is computed automatically).
 </dd>
    <dt><tt> iCurvatureVect</tt>
   <dd> The Normal vector (normalized) corresponding to each point of the initial set of points.
 (if 0, a default value is computed)
 </dd>
    <dt><tt> iCurvatureValue</tt>
   <dd> Imposed curvature value at the iRankPoint point.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICGMFrFSmoothingOper.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGMOperatorsInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
