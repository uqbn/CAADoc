<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Interface CATIPrism</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../PartInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIPrism','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPrism','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIPrism','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPrism','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>PartInterfaces Interface CATIPrism</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPrism_16857','CATIPrism','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrism</b>
</p>
<p>
<b><i> Interface associated to the Pad and Pocket features.</i></b><br>

 <b>Role</b>: This interface allows users to manage the specifications of a Prism (Pad or Pocket).
 A Prism extrudes a profile along a specific direction. A Pad adds material, a Pocket removes material.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIPad','');return false">CATIPad</a>, <a href="#" onClick="openLink('CATIPocket','');return false">CATIPocket</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAxis()"><b>GetAxis</b></a>()
<dd>  Returns the direction internal component.
 <dt> o 
    <a href="#GetDirection()"><b>GetDirection</b></a>()
<dd>  Returns the extrusion direction.
 <dt> o 
    <a href="#GetEndInit()"><b>GetEndInit</b></a>()
<dd>  Returns the first limit limiting element.
 <dt> o 
    <a href="#GetEndLimit()"><b>GetEndLimit</b></a>()
<dd>  Returns the internal first limit component.
 <dt> o 
    <a href="#GetEndOffset()"><b>GetEndOffset</b></a>()
<dd>  Returns the first limit offset value.
 <dt> o 
    <a href="#GetEndType()"><b>GetEndType</b></a>()
<dd>  Returns the first limit type.
 <dt> o 
    <a href="#GetInnerSide()"><b>GetInnerSide</b></a>()
<dd>  Returns the closing side of the open profile.
 <dt> o 
    <a href="#GetMergeThin(int&amp;)"><b>GetMergeThin</b></a>(int&amp;)
<dd>  Returns the lateral relimitation status for a thin prism.
 <dt> o 
    <a href="#GetNeutralFiber(int&amp;)"><b>GetNeutralFiber</b></a>(int&amp;)
<dd>  Returns the neutral fiber status for a thin prism.
 <dt> o 
    <a href="#GetProfile()"><b>GetProfile</b></a>()
<dd>  Returns the profile internal component.
 <dt> o 
    <a href="#GetReferenceDir()"><b>GetReferenceDir</b></a>()
<dd>  Returns the reference element which specifies the direction.
 <dt> o 
    <a href="#GetStartInit()"><b>GetStartInit</b></a>()
<dd>  Returns the second limit limiting element.
 <dt> o 
    <a href="#GetStartLimit()"><b>GetStartLimit</b></a>()
<dd>  Returns the second limit internal component.
 <dt> o 
    <a href="#GetStartOffset()"><b>GetStartOffset</b></a>()
<dd>  Returns the second limit offset value.
 <dt> o 
    <a href="#GetStartType()"><b>GetStartType</b></a>()
<dd>  Returns the second limit type.
 <dt> o 
    <a href="#GetSym()"><b>GetSym</b></a>()
<dd>  Tests whether the symmetrical extension is set or not.
 <dt> o 
    <a href="#GetThickThin1(double&amp;)"><b>GetThickThin1</b></a>(double&amp;)
<dd>  Returns the value of the first thickness of a thin prism.
 <dt> o 
    <a href="#GetThickThin1(CATICkeParm_var&amp;)"><b>GetThickThin1</b></a>(CATICkeParm_var&amp;)
<dd>  Returns the parameter links to the first thickness of a thin prism.
 <dt> o 
    <a href="#GetThickThin2(double&amp;)"><b>GetThickThin2</b></a>(double&amp;)
<dd>  Returns the value of the second thickness of a thin prism.
 <dt> o 
    <a href="#GetThickThin2(CATICkeParm_var&amp;)"><b>GetThickThin2</b></a>(CATICkeParm_var&amp;)
<dd>  Returns the parameter links to the second thickness of a thin prism.
 <dt> o 
    <a href="#GetThinCheck(int&amp;)"><b>GetThinCheck</b></a>(int&amp;)
<dd>  Returns the thin status for a prism.
 <dt> o 
    <a href="#IsDirectionReversed()"><b>IsDirectionReversed</b></a>()
<dd>  Tests whether the direction is opposite to the reference or not.
 <dt> o 
    <a href="#ModifyDirection(CATMathDirection&amp;)"><b>ModifyDirection</b></a>(CATMathDirection&amp;)
<dd>  Specifies a mathematical extrusion direction.
 <dt> o 
    <a href="#ModifyDirection(CATISpecObject_var&amp;)"><b>ModifyDirection</b></a>(CATISpecObject_var&amp;)
<dd>  Specifies an element as reference for the direction.
 <dt> o 
    <a href="#ModifyEndInit(CATISpecObject_var&amp;)"><b>ModifyEndInit</b></a>(CATISpecObject_var&amp;)
<dd>  Sets the first limit limiting element in case the type is <tt>catUpToPlaneLimit</tt> or <tt>catUpToSurfaceLimit</tt>.
 <dt> o 
    <a href="#ModifyEndOffset(double)"><b>ModifyEndOffset</b></a>(double)
<dd>  Sets the first limit offset value in case the type is <tt>catOffsetLimit</tt>.
 <dt> o 
    <a href="#ModifyEndType(int)"><b>ModifyEndType</b></a>(int)
<dd>  Sets the first limit type.
 <dt> o 
    <a href="#ModifyInnerSide(int)"><b>ModifyInnerSide</b></a>(int)
<dd>  When the profile is open, specifies which side of the profile will be used for closing.
 <dt> o 
    <a href="#ModifyProfile(CATISpecObject_var&amp;)"><b>ModifyProfile</b></a>(CATISpecObject_var&amp;)
<dd>  Sets a new element as profile.
 <dt> o 
    <a href="#ModifyStartInit(CATISpecObject_var&amp;)"><b>ModifyStartInit</b></a>(CATISpecObject_var&amp;)
<dd>  Sets the first limit limiting element in case the type is <tt>catUpToPlaneLimit</tt> or <tt>catUpToSurfaceLimit</tt>.
 <dt> o 
    <a href="#ModifyStartOffset(double)"><b>ModifyStartOffset</b></a>(double)
<dd>  Sets the second limit offset value in case the type is <tt>catOffsetLimit</tt>.
 <dt> o 
    <a href="#ModifyStartType(int)"><b>ModifyStartType</b></a>(int)
<dd>  Sets the second limit type.
 <dt> o 
    <a href="#ModifySym(int)"><b>ModifySym</b></a>(int)
<dd>  Sets the symmetrical extension property.
 <dt> o 
    <a href="#ReverseDirection()"><b>ReverseDirection</b></a>()
<dd>  Reverses the specified direction.
 <dt> o 
    <a href="#SetMergeThin(int)"><b>SetMergeThin</b></a>(int)
<dd>  Sets the lateral relimitation status for a thin prism.
 <dt> o 
    <a href="#SetNeutralFiber(int)"><b>SetNeutralFiber</b></a>(int)
<dd>  Sets the neutral fiber status for a thin prism.
 <dt> o 
    <a href="#SetThickThin1(double)"><b>SetThickThin1</b></a>(double)
<dd>  Sets the value of the first thickness of a thin prism.
 <dt> o 
    <a href="#SetThickThin2(double)"><b>SetThickThin2</b></a>(double)
<dd>  Sets the value of the second thickness of a thin prism.
 <dt> o 
    <a href="#SetThinCheck(int)"><b>SetThinCheck</b></a>(int)
<dd>  Sets the thin status for a prism.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAxis"></a><a name="GetAxis()"></a> <dt> o <b>GetAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetAxis</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the direction internal component.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The axis feature.
</dl>
</dl>
<a name="GetDirection"></a><a name="GetDirection()"></a> <dt> o <b>GetDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection')</script>  <b>GetDirection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the extrusion direction.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The extrusion vector.
</dl>
</dl>
<a name="GetEndInit"></a><a name="GetEndInit()"></a> <dt> o <b>GetEndInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetEndInit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first limit limiting element.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The element.
</dl>
</dl>
<a name="GetEndLimit"></a><a name="GetEndLimit()"></a> <dt> o <b>GetEndLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetEndLimit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the internal first limit component.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The limit feature.
</dl>
</dl>
<a name="GetEndOffset"></a><a name="GetEndOffset()"></a> <dt> o <b>GetEndOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetEndOffset</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first limit offset value.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The offset value.
</dl>
</dl>
<a name="GetEndType"></a><a name="GetEndType()"></a> <dt> o <b>GetEndType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetEndType</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first limit type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The type.
</dl>
</dl>
<a name="GetInnerSide"></a><a name="GetInnerSide()"></a> <dt> o <b>GetInnerSide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetInnerSide</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the closing side of the open profile.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The side flag.
</dl>
</dl>
<a name="GetMergeThin"></a><a name="GetMergeThin(int&amp;)"></a> <dt> o <b>GetMergeThin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetMergeThin</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oMergeThin</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the lateral relimitation status for a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   = 0 no lateral relimitation 
  = 1 lateral relimitation
</dl>
</dl>
<a name="GetNeutralFiber"></a><a name="GetNeutralFiber(int&amp;)"></a> <dt> o <b>GetNeutralFiber</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetNeutralFiber</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNeutralFiber</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the neutral fiber status for a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   = 0 neutral fiber inactivated 
  = 1 neutral fiber activated
</dl>
</dl>
<a name="GetProfile"></a><a name="GetProfile()"></a> <dt> o <b>GetProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetProfile</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the profile internal component.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The profile.
</dl>
</dl>
<a name="GetReferenceDir"></a><a name="GetReferenceDir()"></a> <dt> o <b>GetReferenceDir</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetReferenceDir</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the reference element which specifies the direction.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The reference element.
</dl>
</dl>
<a name="GetStartInit"></a><a name="GetStartInit()"></a> <dt> o <b>GetStartInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetStartInit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the second limit limiting element.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The element.
</dl>
</dl>
<a name="GetStartLimit"></a><a name="GetStartLimit()"></a> <dt> o <b>GetStartLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetStartLimit</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the second limit internal component.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The limit feature.
</dl>
</dl>
<a name="GetStartOffset"></a><a name="GetStartOffset()"></a> <dt> o <b>GetStartOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetStartOffset</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the second limit offset value.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The offset value.
</dl>
</dl>
<a name="GetStartType"></a><a name="GetStartType()"></a> <dt> o <b>GetStartType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetStartType</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the second limit type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The type.
</dl>
</dl>
<a name="GetSym"></a><a name="GetSym()"></a> <dt> o <b>GetSym</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSym</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the symmetrical extension is set or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The symmetry flag.
   <br><b>Legal values</b>: 1 for symmetry, 0 otherwise.
</dl>
</dl>
<a name="GetThickThin1"></a><a name="GetThickThin1(double&amp;)"></a> <dt> o <b>GetThickThin1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThickThin1</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oThick</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the value of the first thickness of a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The value.
</dl>
</dl>
<a name="GetThickThin1"></a><a name="GetThickThin1(CATICkeParm_var&amp;)"></a> <dt> o <b>GetThickThin1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThickThin1</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oThickParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the parameter links to the first thickness of a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The parameter.
</dl>
</dl>
<a name="GetThickThin2"></a><a name="GetThickThin2(double&amp;)"></a> <dt> o <b>GetThickThin2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThickThin2</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oThick</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the value of the second thickness of a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The value.
</dl>
</dl>
<a name="GetThickThin2"></a><a name="GetThickThin2(CATICkeParm_var&amp;)"></a> <dt> o <b>GetThickThin2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThickThin2</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oThickParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the parameter links to the second thickness of a thin prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The parameter.
</dl>
</dl>
<a name="GetThinCheck"></a><a name="GetThinCheck(int&amp;)"></a> <dt> o <b>GetThinCheck</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetThinCheck</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oThinCheck</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the thin status for a prism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   = 0 prism not thin 
  = 1 prism thin
</dl>
</dl>
<a name="IsDirectionReversed"></a><a name="IsDirectionReversed()"></a> <dt> o <b>IsDirectionReversed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsDirectionReversed</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the direction is opposite to the reference or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    0 if the direction is same,
   1 if the direction has been reversed.
</dl>
</dl>
<a name="ModifyDirection"></a><a name="ModifyDirection(CATMathDirection&amp;)"></a> <dt> o <b>ModifyDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyDirection</b>(<td> const <script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iDir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies a mathematical extrusion direction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDir</tt>
   <dd>   The direction vector.</dd>
</dl>
</dl>
</dl>
<a name="ModifyDirection"></a><a name="ModifyDirection(CATISpecObject_var&amp;)"></a> <dt> o <b>ModifyDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyDirection</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>ihDir</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Specifies an element as reference for the direction.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihDir</tt>
   <dd>   The reference element.</dd>
</dl>
</dl>
</dl>
<a name="ModifyEndInit"></a><a name="ModifyEndInit(CATISpecObject_var&amp;)"></a> <dt> o <b>ModifyEndInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyEndInit</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>ihInit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first limit limiting element in case the type is <tt>catUpToPlaneLimit</tt> or <tt>catUpToSurfaceLimit</tt>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihInit</tt>
   <dd>   The limiting element.
   <br>For the <tt>catUpToPlaneLimit</tt> type, it must be a plane feature or a planar FSur feature (CATIMfFsur).
   <br>For the <tt>catUpToSurfaceLimit</tt> type, it must be a face feature.
   <br>If this face belongs to some surfacic geometry, it must be a FSur feature. Then the entire surface 
   is used to limit the shape.
   <br>If it is a face of a volume, it must be a RSur feature (CATIMfRsur) which belongs to the body in 
   which the limited feature is created. In this case the limiting surface is defined by a propagation 
   on the surface of the body starting from the init face.</dd>
</dl>
</dl>
</dl>
<a name="ModifyEndOffset"></a><a name="ModifyEndOffset(double)"></a> <dt> o <b>ModifyEndOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyEndOffset</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first limit offset value in case the type is <tt>catOffsetLimit</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd>   The offset value.</dd>
</dl>
</dl>
</dl>
<a name="ModifyEndType"></a><a name="ModifyEndType(int)"></a> <dt> o <b>ModifyEndType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyEndType</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first limit type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The type.
   <br><b>Legal values</b>: They are provided with the <tt>CatLimitMode</tt> enum.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIPrtSimpleLimit','');return false">CATIPrtSimpleLimit</a>
</dl>
</dl>
<a name="ModifyInnerSide"></a><a name="ModifyInnerSide(int)"></a> <dt> o <b>ModifyInnerSide</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyInnerSide</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSide</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 When the profile is open, specifies which side of the profile will be used for closing.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSide</tt>
   <dd>   The side information.
   <br>To determine the closing side users must compute a three vectors axis at a point of the contour: 
   <br>- the tangent to the contour oriented according to the contour orientation,
   <br>- the normal to the contour belonging to the profile plane, oriented towards the desired closing side,
   <br>- the normal to the plane supporting the contour.
   <br><b>Legal values</b>: 1 for direct axis, -1 for indirect axis.</dd>
</dl>
</dl>
</dl>
<a name="ModifyProfile"></a><a name="ModifyProfile(CATISpecObject_var&amp;)"></a> <dt> o <b>ModifyProfile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyProfile</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>ihElt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets a new element as profile.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihElt</tt>
   <dd>   The profile element. Typically a Sketch.</dd>
</dl>
</dl>
</dl>
<a name="ModifyStartInit"></a><a name="ModifyStartInit(CATISpecObject_var&amp;)"></a> <dt> o <b>ModifyStartInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyStartInit</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>ihInit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first limit limiting element in case the type is <tt>catUpToPlaneLimit</tt> or <tt>catUpToSurfaceLimit</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihInit</tt>
   <dd>   The limiting element.
   <br>For the <tt>catUpToPlaneLimit</tt> type, it must be a plane feature or a planar FSur feature (CATIMfFsur).
   <br>For the <tt>catUpToSurfaceLimit</tt> type, it must be a face feature.
   <br>If this face belongs to some surfacic geometry, it must be a FSur feature. Then the entire surface 
   is used to limit the shape.
   <br>If it is a face of a volume, it must be a RSur feature (CATIMfRsur) which belongs to the body in 
   which the limited feature is created. In this case the limiting surface is defined by a propagation 
   on the surface of the body starting from the init face.</dd>
</dl>
</dl>
</dl>
<a name="ModifyStartOffset"></a><a name="ModifyStartOffset(double)"></a> <dt> o <b>ModifyStartOffset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyStartOffset</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second limit offset value in case the type is <tt>catOffsetLimit</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd>   The offset value.</dd>
</dl>
</dl>
</dl>
<a name="ModifyStartType"></a><a name="ModifyStartType(int)"></a> <dt> o <b>ModifyStartType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyStartType</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second limit type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The type.
   <br><b>Legal values</b>: They are provided with the <tt>CatLimitMode</tt> enum.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIPrtSimpleLimit','');return false">CATIPrtSimpleLimit</a>
</dl>
</dl>
<a name="ModifySym"></a><a name="ModifySym(int)"></a> <dt> o <b>ModifySym</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifySym</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSym</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the symmetrical extension property.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSym</tt>
   <dd>   The symmetry flag.
   <br><b>Legal values</b>: 1 for symmetry, 0 otherwise.</dd>
</dl>
</dl>
</dl>
<a name="ReverseDirection"></a><a name="ReverseDirection()"></a> <dt> o <b>ReverseDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ReverseDirection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Reverses the specified direction.
</dl>
<a name="SetMergeThin"></a><a name="SetMergeThin(int)"></a> <dt> o <b>SetMergeThin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMergeThin</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMergeThin</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the lateral relimitation status for a thin prism.
  = 0 no lateral relimitation 
  = 1 lateral relimitation
</dl>
<a name="SetNeutralFiber"></a><a name="SetNeutralFiber(int)"></a> <dt> o <b>SetNeutralFiber</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNeutralFiber</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNeutralFiber</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the neutral fiber status for a thin prism.
  = 0 neutral fiber inactivated 
  = 1 neutral fiber activated
</dl>
<a name="SetThickThin1"></a><a name="SetThickThin1(double)"></a> <dt> o <b>SetThickThin1</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetThickThin1</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThick</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the first thickness of a thin prism.
</dl>
<a name="SetThickThin2"></a><a name="SetThickThin2(double)"></a> <dt> o <b>SetThickThin2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetThickThin2</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThick</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the second thickness of a thin prism.
</dl>
<a name="SetThinCheck"></a><a name="SetThinCheck(int)"></a> <dt> o <b>SetThinCheck</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetThinCheck</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iThinCheck</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the thin status for a prism.
  = 0 prism not thin 
  = 1 prism thin
</dl>
<hr>
 This object is included in the file: <b>CATIPrism.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPartInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
