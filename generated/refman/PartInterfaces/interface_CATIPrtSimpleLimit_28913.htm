<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Interface CATIPrtSimpleLimit</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../PartInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIPrtSimpleLimit','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPrtSimpleLimit','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIPrtSimpleLimit','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPrtSimpleLimit','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>PartInterfaces Interface CATIPrtSimpleLimit</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPrtSimpleLimit_28913','CATIPrtSimpleLimit','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPrtSimpleLimit</b>
</p>
<p>
<b><i> Interface which provides a basic limit behaviour to a limit feature.</i></b><br>

 <b>Role</b>: Some features contain one or several limit components which 
 describe how their own shape is limited.
 <br>A simple limit allows users to set specifications and to retrieve associated data 
 deduced from those specifications. Offsets are not managed.    
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIPrtLimit','');return false">CATIPrtLimit</a>, <a href="#" onClick="openLink('CATIPrismLimit','');return false">CATIPrismLimit</a>, <a href="#" onClick="openLink('CATIHoleLimit','');return false">CATIHoleLimit</a>, <a href="#" onClick="openLink('CATISweepLimit','');return false">CATISweepLimit</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ClearData()"><b>ClearData</b></a>()
<dd>  Releases the data associated to the specifications.
 <dt> o 
    <a href="#ExtractData()"><b>ExtractData</b></a>()
<dd>  Computes the data associated to the specifications.
 <dt> o 
    <a href="#GetExtentType()"><b>GetExtentType</b></a>()
<dd>  Returns the limit type specification.
 <dt> o 
    <a href="#GetInit()"><b>GetInit</b></a>()
<dd>  Returns the limiting element specification.
 <dt> o 
    <a href="#GetInitGeom(CATGeometry_var&amp;)"><b>GetInitGeom</b></a>(CATGeometry_var&amp;)
<dd>  Gets the geometrical limiting element associated to the specifications.
 <dt> o 
    <a href="#GetInitGeomList(ListPOfCATCell&amp;)"><b>GetInitGeomList</b></a>(ListPOfCATCell&amp;)
<dd>  Gets the geometrical limiting elements associated to the specifications.
 <dt> o 
    <a href="#GetLimitType(CATTopLimitType&amp;)"><b>GetLimitType</b></a>(CATTopLimitType&amp;)
<dd>  Gets the topological limit type associated to the specifications.
 <dt> o 
    <a href="#GetNamingSpec(CATBaseUnknown_var&amp;)"><b>GetNamingSpec</b></a>(CATBaseUnknown_var&amp;)
<dd>  Gets the specification used to create the scope associated to the feature.
 <dt> o 
    <a href="#GetPropagGeom(CATGeometry_var&amp;)"><b>GetPropagGeom</b></a>(CATGeometry_var&amp;)
<dd>  Gets the geometrical element used for propagation associated to the specifications.
 <dt> o 
    <a href="#GetPropagType(CATTopPropagationType&amp;)"><b>GetPropagType</b></a>(CATTopPropagationType&amp;)
<dd>  Gets the topological propagation type associated to the specifications.
 <dt> o 
    <a href="#SetExtentType(int)"><b>SetExtentType</b></a>(int)
<dd>  Sets the limit type specification.
 <dt> o 
    <a href="#SetInit(CATISpecObject_var)"><b>SetInit</b></a>(CATISpecObject_var)
<dd>  Sets the limiting element for the <tt>catUpToPlaneLimit</tt> and <tt>catUpToSurfaceLimit</tt> types.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ClearData"></a><a name="ClearData()"></a> <dt> o <b>ClearData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ClearData</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Releases the data associated to the specifications.
 <br><b>Role</b>: After a call to this method, the computed data are released 
 and not available anymore.
</dl>
<a name="ExtractData"></a><a name="ExtractData()"></a> <dt> o <b>ExtractData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ExtractData</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Computes the data associated to the specifications.
 <br><b>Role</b>: These data should be needed to build topological operators  
 or scopes associated to the feature containing the limit.
</dl>
<a name="GetExtentType"></a><a name="GetExtentType()"></a> <dt> o <b>GetExtentType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetExtentType</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the limit type specification.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The limit type.
</dl>
</dl>
<a name="GetInit"></a><a name="GetInit()"></a> <dt> o <b>GetInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>GetInit</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the limiting element specification.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The limiting element.
</dl>
</dl>
<a name="GetInitGeom"></a><a name="GetInitGeom(CATGeometry_var&amp;)"></a> <dt> o <b>GetInitGeom</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetInitGeom</b>(<td><script type="text/javascript"> activateLink('CATGeometry_var','CATGeometry_var&amp;')</script> <td><tt>ohInitGeom</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the geometrical limiting element associated to the specifications.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohInitGeom</tt>
   <dd>   The geometrical limiting element.</dd>
</dl>
</dl>
</dl>
<a name="GetInitGeomList"></a><a name="GetInitGeomList(ListPOfCATCell&amp;)"></a> <dt> o <b>GetInitGeomList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetInitGeomList</b>(<td><script type="text/javascript"> activateLink('ListPOfCATCell','ListPOfCATCell&amp;')</script> <td><tt>oInitGeomList</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the geometrical limiting elements associated to the specifications.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInitGeomList</tt>
   <dd>   The geometrical limiting elements.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitType"></a><a name="GetLimitType(CATTopLimitType&amp;)"></a> <dt> o <b>GetLimitType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitType</b>(<td><script type="text/javascript"> activateLink('CATTopLimitType','CATTopLimitType&amp;')</script> <td><tt>oLimitType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the topological limit type associated to the specifications.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLimitType</tt>
   <dd>   The topological limit type.</dd>
</dl>
</dl>
</dl>
<a name="GetNamingSpec"></a><a name="GetNamingSpec(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetNamingSpec</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetNamingSpec</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>ohNamingSpec</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the specification used to create the scope associated to the feature.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohNamingSpec</tt>
   <dd>   The specification used to create scopes.</dd>
</dl>
</dl>
</dl>
<a name="GetPropagGeom"></a><a name="GetPropagGeom(CATGeometry_var&amp;)"></a> <dt> o <b>GetPropagGeom</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPropagGeom</b>(<td><script type="text/javascript"> activateLink('CATGeometry_var','CATGeometry_var&amp;')</script> <td><tt>ohPropagGeom</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the geometrical element used for propagation associated to the specifications.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohPropagGeom</tt>
   <dd>   The geometrical element used for propagation.</dd>
</dl>
</dl>
</dl>
<a name="GetPropagType"></a><a name="GetPropagType(CATTopPropagationType&amp;)"></a> <dt> o <b>GetPropagType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPropagType</b>(<td><script type="text/javascript"> activateLink('CATTopPropagationType','CATTopPropagationType&amp;')</script> <td><tt>oPropagType</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the topological propagation type associated to the specifications.
 <br><b>Precondition</b>: The data must have been computed with ExtractData()
 before calling this method.
 <br><b>Postcondition</b>: Do not forget to release the data with ClearData()
 after reading.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPropagType</tt>
   <dd>   The topological propagation type.</dd>
</dl>
</dl>
</dl>
<a name="SetExtentType"></a><a name="SetExtentType(int)"></a> <dt> o <b>SetExtentType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetExtentType</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the limit type specification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>   The limit type.
   <br><b>Legal values</b>: They are provided with the <tt>CatLimitMode</tt> enum.
 <br>
 Prismatic elements and holes are limited with surfaces or offset values.
 The <tt>CatLimitMode</tt> enum lists appropriate values to set this property.
 <br>- <tt>catOffsetLimit</tt>: The shape is limited with an offset value.
 <br>- <tt>catUpToNextLimit</tt>: The shape is limited with the next boundary encountered in its mechanical body.
 <br>- <tt>catUpToLastLimit</tt>: The shape is limited with the last boundary encountered in its mechanical body.
 <br>- <tt>catUpToPlaneLimit</tt>: The shape is limited with a selected plane.
 <br>- <tt>catUpToSurfaceLimit</tt>: The shape is limited with a selected surface.
 <br>- <tt>catUpThruNextLimit</tt>: The shape is limited with the next boundary encountered and always removes material.</dd>
</dl>
</dl>
</dl>
<a name="SetInit"></a><a name="SetInit(CATISpecObject_var)"></a> <dt> o <b>SetInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetInit</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script> <td><tt>ihInit</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the limiting element for the <tt>catUpToPlaneLimit</tt> and <tt>catUpToSurfaceLimit</tt> types.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihInit</tt>
   <dd>   The limiting element specification.
   <br>For the <tt>catUpToPlaneLimit</tt> type, it must be a plane feature or a planar FSur feature (CATIMfFsur).
   <br>For the <tt>catUpToSurfaceLimit</tt> type, it must be a face feature.
   <br>If this face belongs to some surfacic geometry, it must be a FSur feature. Then the entire surface 
   is used to limit the shape.
   <br>If it is a face of a volume, it must be a RSur feature (CATIMfRsur) which belongs to the body in 
   which the limited feature is created. In this case, the limiting surface is defined by a propagation 
   on the surface of the body starting from the initial face.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPrtSimpleLimit.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATPartInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
