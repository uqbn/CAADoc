<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FreeFormOperators Class CATCrvFittingToNurbsCrv</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../FreeFormOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATCrvFittingToNurbsCrv','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCrvFittingToNurbsCrv','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATCrvFittingToNurbsCrv','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCrvFittingToNurbsCrv','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>FreeFormOperators Class CATCrvFittingToNurbsCrv</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCrvFittingToNurbsCrv_41696','CATCrvFittingToNurbsCrv','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCrvFittingToNurbsCrv</b>
</p>
<p>
<b><i> Class defining a geometric operator that computes a (possibly approximated) NURBS representation of a CATCurve.</i></b><br>

 <br>If a curve has no corresponding NURBS representation, the operator uses a fitting operation to
 compute the best approximating NURBS representation. Hence, a maximum deviation must be given as input of 
 the operator. 
 <ul>
 <li>An input CATNurbsCurve or CATPNurbs is directly output: 
 the <tt>GetResult</tt> method outputs the same pointer.
 <li>By default, a CATPCurve is retrieved as a CATPNurbs. To force the creation of the corresponding CATNurbsCurve,
 use the <a href="#" onClick="openLink('CATCrvFittingToNurbsCrv','Set3DCurveCreation');return false">CATCrvFittingToNurbsCrv.Set3DCurveCreation</a> method. <li>Some canonic curves/pcurves will be transformed into rational 
 CATNurbsCurve/CATPNurbs. However, setting <tt>iRationalAllowed = 0</tt> at the operator creation 
 or using the 
<a href="#" onClick="openLink('CATCrvFittingToNurbsCrv','SetRationalAllowed');return false">CATCrvFittingToNurbsCrv.SetRationalAllowed</a> method,  will force the fitting into a non rational curve (default is <tt>iRationalAllowed = 1</tt>).
 <li>The CATEdgeCurve is converted according to the types of its inside curves.
 </ul>
 The CATCrvFittingToNurbsCrv operator follows the global frame of the geometric operators: 
<ul>
 <li>A CATCrvFittingToNurbsCrv operator is created with the <tt>CATCreateCrvFittingToNurbsCrv</tt> global function 
 and must be directly deleted with the usual C++ <tt>delete</tt> operator after use.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. 
<li>In both cases, the result is accessed with the <tt>Getxxx</tt> methods. 
 If a curve does not need to be converted because it already is of the required type, the same pointer 
 is returned. In this case, using the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method on the result curve will remove the input curve, because they are the same.
</ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATCrvFittingToNurbsCrv()"><b>~CATCrvFittingToNurbsCrv</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ComputeNewParameter(CATCrvParam&amp;)"><b>ComputeNewParameter</b></a>(CATCrvParam&amp;)
<dd>  Maps a parameter on the initial curve to the corresponding parameter on the computed NURBS representation.
 <dt> o 
    <a href="#ForbidPeriodicity()"><b>ForbidPeriodicity</b></a>()
<dd>  Declares that the result NURBS must not be periodic.
 <dt> o 
    <a href="#GetMaxDeviation()"><b>GetMaxDeviation</b></a>()
<dd>  Returns the maximum deviation computed for the result curve.
 <dt> o 
    <a href="#GetNurbsCurve()"><b>GetNurbsCurve</b></a>()
<dd>  Returns the result CATNurbsCurve.
 <dt> o 
    <a href="#GetPNurbs()"><b>GetPNurbs</b></a>()
<dd>  Returns the result CATPNurbs.
 <dt> o 
    <a href="#ImposeKnotVector(CATKnotVector*)"><b>ImposeKnotVector</b></a>(CATKnotVector*)
<dd>  Defines the knot vector to be used for the conversion.
 <dt> o 
    <a href="#ImposeSameParametrization()"><b>ImposeSameParametrization</b></a>()
<dd>  Declares that the result curve must have the same parameterization than the input curve to fit.
 <dt> o 
    <a href="#IsExactTransformation()"><b>IsExactTransformation</b></a>()
<dd>  Returns whether the transformation between the input and output curves is exact.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>   Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#Set3DCurveCreation()"><b>Set3DCurveCreation</b></a>()
<dd>  Imposes the conversion of a CATPCurve in a (3D) CATNurbsCurve.
 <dt> o 
    <a href="#SetInternalMinLength(double)"><b>SetInternalMinLength</b></a>(double)
<dd>  Defines the minimal length of an internal arc of the result curve.
 <dt> o 
    <a href="#SetMaxArcs(CATLONG32)"><b>SetMaxArcs</b></a>(CATLONG32)
<dd>  Defines the maximum number of arcs of the result curve.
 <dt> o 
    <a href="#SetMaxDegree(CATLONG32)"><b>SetMaxDegree</b></a>(CATLONG32)
<dd>  Defines the maximum degree of the result NURBS representation.
 <dt> o 
    <a href="#SetRationalAllowed(CATLONG32)"><b>SetRationalAllowed</b></a>(CATLONG32)
<dd>  Defines whether the result NURBS representation can be rational.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATCrvFittingToNurbsCrv"></a><a name="~CATCrvFittingToNurbsCrv()"></a> <dt> o <b>~CATCrvFittingToNurbsCrv</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATCrvFittingToNurbsCrv</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="ComputeNewParameter"></a><a name="ComputeNewParameter(CATCrvParam&amp;)"></a> <dt> o <b>ComputeNewParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam')</script>  <b>ComputeNewParameter</b>(<td> const <script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iParamOnCurve</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Maps a parameter on the initial curve to the corresponding parameter on the computed NURBS representation.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParamOnCurve</tt>
   <dd> The parameter on the initial curve.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The parameter on the computed NURBS representation.
</dl>
</dl>
<a name="ForbidPeriodicity"></a><a name="ForbidPeriodicity()"></a> <dt> o <b>ForbidPeriodicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ForbidPeriodicity</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Declares that the result NURBS must not be periodic.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
</dl>
<a name="GetMaxDeviation"></a><a name="GetMaxDeviation()"></a> <dt> o <b>GetMaxDeviation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetMaxDeviation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum deviation computed for the result curve.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The maximum deviation value.
</dl>
</dl>
<a name="GetNurbsCurve"></a><a name="GetNurbsCurve()"></a> <dt> o <b>GetNurbsCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsCurve','CATNurbsCurve *')</script>  <b>GetNurbsCurve</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the result CATNurbsCurve.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATNurbsCurve. Use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="GetPNurbs"></a><a name="GetPNurbs()"></a> <dt> o <b>GetPNurbs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPNurbs','CATPNurbs *')</script>  <b>GetPNurbs</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the result CATPNurbs.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created CATPNurbs. Use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> if you do not want to keep it in the geometric factory.
</dl>
</dl>
<a name="ImposeKnotVector"></a><a name="ImposeKnotVector(CATKnotVector*)"></a> <dt> o <b>ImposeKnotVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ImposeKnotVector</b>(<td> const <script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector*')</script> <td><tt>iKnotVector</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the knot vector to be used for the conversion. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotVector</tt>
   <dd> The knot vector.</dd>
</dl>
</dl>
</dl>
<a name="ImposeSameParametrization"></a><a name="ImposeSameParametrization()"></a> <dt> o <b>ImposeSameParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ImposeSameParametrization</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Declares that the result curve must have the same parameterization than the input curve to fit.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
</dl>
<a name="IsExactTransformation"></a><a name="IsExactTransformation()"></a> <dt> o <b>IsExactTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsExactTransformation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns whether the transformation between the input and output curves is exact.
 <br> To call after the operator ran.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>1</tt> if the transformation is exact, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  Runs <tt>this</tt> operator.
 <br>To call in <tt>ADVANCED</tt> mode.
</dl>
<a name="Set3DCurveCreation"></a><a name="Set3DCurveCreation()"></a> <dt> o <b>Set3DCurveCreation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Set3DCurveCreation</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Imposes the conversion of a CATPCurve in a (3D) CATNurbsCurve.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 <br>By default (if this method is not called), a CATPCurve is transformed into a CATPNurbs.
</dl>
<a name="SetInternalMinLength"></a><a name="SetInternalMinLength(double)"></a> <dt> o <b>SetInternalMinLength</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetInternalMinLength</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iInternalMinLength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the minimal length of an internal arc of the result curve.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInternalMinLength</tt>
   <dd> The minimum length value.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxArcs"></a><a name="SetMaxArcs(CATLONG32)"></a> <dt> o <b>SetMaxArcs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxArcs</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxArcs</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum number of arcs of the result curve. 
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxArcs</tt>
   <dd> The maximum number of arcs. If <tt>SetMaxDegree</tt> and <tt>SetMaxArcs</tt> are both used, 
 the operator tries to get as few arcs as possible, even with a larger number of arcs with
 <tt>MaxDegree</tt>.</dd>
</dl>
</dl>
</dl>
<a name="SetMaxDegree"></a><a name="SetMaxDegree(CATLONG32)"></a> <dt> o <b>SetMaxDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxDegree</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iMaxDegree</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the maximum degree of the result NURBS representation.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxDegree</tt>
   <dd> The degree maximum value.</dd>
</dl>
</dl>
</dl>
<a name="SetRationalAllowed"></a><a name="SetRationalAllowed(CATLONG32)"></a> <dt> o <b>SetRationalAllowed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRationalAllowed</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iAllowRational</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether the result NURBS representation can be rational.
 <br>To call in <tt>ADVANCED</tt> mode before the <tt>Run</tt> method.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAllowRational</tt>
   <dd> <tt>1</tt> if the result curve can be rational (default value when the method is not called), 
 <tt>0</tt> if the result curve must not be rational.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCrvFittingToNurbsCrv.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFreeFormOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
