<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Interface CATISAXErrorHandler</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../XMLParser.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISAXErrorHandler','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISAXErrorHandler','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISAXErrorHandler','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISAXErrorHandler','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>XMLParser Interface CATISAXErrorHandler</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISAXErrorHandler_24514','CATISAXErrorHandler','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATISAXErrorHandler</b>
</p>
<p>
<b><i> Interface for SAX error handlers.</i></b><br>


 <p>If a SAX application needs to implement customized error
 handling, it must implement this interface and then register an
 instance with the SAX parser using the parser's <a href="#" onClick="openLink('CATISAXParser','SetErrorHandler');return false">CATISAXParser.SetErrorHandler</a> method.  The parser will then report all errors and warnings
 through this interface.</p>

 <p> The parser shall use this interface instead of raising an
 error: it is up to the application whether to raise an
 error for different types of errors and warnings.  Note,
 however, that there is no requirement that the parser continue to
 provide useful information after a call to 
<a href="#" onClick="openLink('','FatalError');return false">FatalError</a> (in other words, a SAX driver class could catch an error and report a
 fatalError).</p>

 <p>The 
<a href="#" onClick="openLink('CATSAXHandlerBase','');return false">CATSAXHandlerBase</a> class provides a default implementation of this interface, ignoring warnings and recoverable errors and raising a
 CATSAXParseException error for fatal errors.  An application may extend
 that class rather than implementing the complete interface
 itself.</p>

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATISAXParser','SetErrorHandler');return false">CATISAXParser.SetErrorHandler</a>, <a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a>, <a href="#" onClick="openLink('CATSAXHandlerBase','');return false">CATSAXHandlerBase</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Error(CATSAXParseException*)"><b>Error</b></a>(CATSAXParseException*)
<dd>  Receives notification of a recoverable error.
 <dt> o 
    <a href="#FatalError(CATSAXParseException*)"><b>FatalError</b></a>(CATSAXParseException*)
<dd>  Receives notification of a non-recoverable error.
 <dt> o 
    <a href="#Warning(CATSAXParseException*)"><b>Warning</b></a>(CATSAXParseException*)
<dd>  Receives notification of a warning.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Error"></a><a name="Error(CATSAXParseException*)"></a> <dt> o <b>Error</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Error</b>(<td><script type="text/javascript"> activateLink('CATSAXParseException','CATSAXParseException*')</script> <td><tt>iException</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Receives notification of a recoverable error.

 <p>This corresponds to the definition of "error" in section 1.2
 of the W3C XML 1.0 Recommendation.  For example, a validating
 parser would use this callback to report the violation of a
 validity constraint.  The default behaviour is to take no
 action.</p>

 <p>The SAX parser must continue to provide normal parsing events
 after invoking this method: it should still be possible for the
 application to process the document through to the end.  If the
 application cannot do so, then the parser should report a fatal
 error even if the XML 1.0 recommendation does not require it to
 do so.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd> The error information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a>
</dl>
</dl>
</dl>
<a name="FatalError"></a><a name="FatalError(CATSAXParseException*)"></a> <dt> o <b>FatalError</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FatalError</b>(<td><script type="text/javascript"> activateLink('CATSAXParseException','CATSAXParseException*')</script> <td><tt>iException</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Receives notification of a non-recoverable error.

 <p>This corresponds to the definition of "fatal error" in
 section 1.2 of the W3C XML 1.0 Recommendation.  For example, a
 parser would use this callback to report the violation of a
 well-formedness constraint.</p>

 <p>The application must assume that the document is unusable
 after the parser has invoked this method, and should continue
 (if at all) only for the sake of collecting addition error
 messages: in fact, SAX parsers are free to stop reporting any
 other events once this method has been invoked.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd>  The error information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a>
</dl>
</dl>
</dl>
<a name="Warning"></a><a name="Warning(CATSAXParseException*)"></a> <dt> o <b>Warning</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Warning</b>(<td><script type="text/javascript"> activateLink('CATSAXParseException','CATSAXParseException*')</script> <td><tt>iException</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Receives notification of a warning.

 <p>SAX parsers will use this method to report conditions that
 are not errors or fatal errors as defined by the XML 1.0
 recommendation.  The default behaviour is to take no action.</p>

 <p>The SAX parser must continue to provide normal parsing events
 after invoking this method: it should still be possible for the
 application to process the document through to the end.</p>

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iException</tt>
   <dd> The warning information encapsulated in a SAX parse exception.

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd"></dd>
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">The method can raise a CATSAXException</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a> </td>        <td class="errtd">XMLParserERR_2002</td>
        <td class="errtd">The method can raise a CATSAXParseException</td>
     </tr>
   </table>
 </dd>
 

 
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISAXErrorHandler.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
