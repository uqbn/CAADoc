<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Interface CATIXMLDOMDocumentBuilder</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../XMLParser.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIXMLDOMDocumentBuilder','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIXMLDOMDocumentBuilder','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIXMLDOMDocumentBuilder','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIXMLDOMDocumentBuilder','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>XMLParser Interface CATIXMLDOMDocumentBuilder</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIXMLDOMDocumentBuilder_37297','CATIXMLDOMDocumentBuilder','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIXMLDOMDocumentBuilder</b>
</p>
<p>
<b><i> Interface to parse or to create DOM documents.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateDocument(CATIDOMDocument_var&amp;)"><b>CreateDocument</b></a>(CATIDOMDocument_var&amp;)
<dd>  Creates a new empty DOM document.
 <dt> o 
    <a href="#GetDOMImplementation(CATIDOMImplementation_var&amp;)"><b>GetDOMImplementation</b></a>(CATIDOMImplementation_var&amp;)
<dd>  Retrieves the DOM implementation object for this implementation.
 <dt> o 
    <a href="#GetSupportedOptions(CATListOfCATUnicodeString&amp;)"><b>GetSupportedOptions</b></a>(CATListOfCATUnicodeString&amp;)
<dd>  Returns the list of options which can be used to customize
 the <tt>Parse</tt> methods.
 <dt> o 
    <a href="#Parse(CATUnicodeString&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)"><b>Parse</b></a>(CATUnicodeString&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)
<dd>  Parses the supplied URI to generate a DOM document.
 <dt> o 
    <a href="#Parse(CATISAXInputSource_var&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)"><b>Parse</b></a>(CATISAXInputSource_var&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)
<dd>  Parses the supplied input source to generate a DOM document.
 <dt> o 
    <a href="#Write(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"><b>Write</b></a>(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)
<dd>  Writes the node in a <tt>CATUnicodeString</tt>.
 <dt> o 
    <a href="#WriteToFile(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"><b>WriteToFile</b></a>(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)
<dd>  Writes the node to the specified file.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateDocument"></a><a name="CreateDocument(CATIDOMDocument_var&amp;)"></a> <dt> o <b>CreateDocument</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateDocument</b>(<td><script type="text/javascript"> activateLink('CATIDOMDocument_var','CATIDOMDocument_var&amp;')</script> <td><tt>oDocument</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new empty DOM document.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDocument</tt>
   <dd> The resulting </dd>
<a href="#" onClick="openLink('CATIDOMDocument','');return false">CATIDOMDocument</a>
</dl>
</dl>
</dl>
<a name="GetDOMImplementation"></a><a name="GetDOMImplementation(CATIDOMImplementation_var&amp;)"></a> <dt> o <b>GetDOMImplementation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDOMImplementation</b>(<td><script type="text/javascript"> activateLink('CATIDOMImplementation_var','CATIDOMImplementation_var&amp;')</script> <td><tt>oImplementation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the DOM implementation object for this implementation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oImplementation</tt>
   <dd> the DOM implementation object for this implementation</dd>
</dl>
</dl>
</dl>
<a name="GetSupportedOptions"></a><a name="GetSupportedOptions(CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>GetSupportedOptions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupportedOptions</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>oOptions</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of options which can be used to customize
 the <tt>Parse</tt> methods.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOptions</tt>
   <dd> The list of options supported by the </dd>
<a href="#" onClick="openLink('','Parse');return false">Parse</a> methods. The current list of options is
 <table border="1">
 <tr bgcolor="a4f4a4">
  <td><b>Option name</b></td>
  <td><b>Description</b></td>
  <td><b>Possible values</b></td>
  <td><b>Default value</b></td>
 </tr>
 <tr>
  <td>CATDoValidation</td>
  <td>Specifies if validation check is performed during parse</td>
  <td>true or false</td>
  <td>true</td>
 </tr>
 <tr>
  <td>CATEnableNameSpaces</td>
  <td>Specifies if the builder is XML namespace aware</td>
  <td>true or false</td>
  <td>false</td>
 </tr>
 <tr>
  <td>CATExpandEntityReferences</td>
  <td>Specifies if the builder expands entity reference at parse time</td>
  <td>true or false</td>
  <td>false</td>
 </tr>
 </table>
</dl>
</dl>
</dl>
<a name="Parse"></a><a name="Parse(CATUnicodeString&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)"></a> <dt> o <b>Parse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Parse</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSystemId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDOMDocument_var','CATIDOMDocument_var&amp;')</script> <td><tt>oDocument</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptions</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptionValues</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISAXEntityResolver_var','CATISAXEntityResolver_var&amp;')</script> <td><tt>iEntityResolver</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISAXErrorHandler_var','CATISAXErrorHandler_var&amp;')</script> <td><tt>iErrorHandler</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Parses the supplied URI to generate a DOM document.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSystemId</tt>
   <dd> The URI of the entity to parse
 </dd>
    <dt><tt> oDocument</tt>
   <dd> The resulting </dd>
<a href="#" onClick="openLink('CATIDOMDocument','');return false">CATIDOMDocument</a> 
    <dt><tt> iOptions</tt>
   <dd> The names of the options to set
 </dd>
    <dt><tt> iOptionValues</tt>
   <dd> The values of the options to set.
 </dd>
    <dt><tt> iEntityResolver</tt>
   <dd> An optional </dd>
<a href="#" onClick="openLink('CATISAXEntityResolver','');return false">CATISAXEntityResolver</a> which can be used to resolve entities during parse. 
    <dt><tt> iErrorHandler</tt>
   <dd> An optional </dd>
<a href="#" onClick="openLink('CATISAXErrorHandler','');return false">CATISAXErrorHandler</a> which can be used to control the errors during parse.
 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2100</td>
        <td class="errtd">Invalid options definition</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2101</td>
        <td class="errtd">Unsupported option</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2102</td>
        <td class="errtd">Illegal option value</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">If an error (such as a not well formed XML document) occurs during parse</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2001</td>
        <td class="errtd">If an I/O error occurs during parse</td>
     </tr>
   </table>
 </dd>

</dl>
</dl>
</dl>
<a name="Parse"></a><a name="Parse(CATISAXInputSource_var&amp;,CATIDOMDocument_var&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATISAXEntityResolver_var&amp;,CATISAXErrorHandler_var&amp;)"></a> <dt> o <b>Parse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Parse</b>(<td> const <script type="text/javascript"> activateLink('CATISAXInputSource_var','CATISAXInputSource_var&amp;')</script> <td><tt>iInputSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDOMDocument_var','CATIDOMDocument_var&amp;')</script> <td><tt>oDocument</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptions</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptionValues</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISAXEntityResolver_var','CATISAXEntityResolver_var&amp;')</script> <td><tt>iEntityResolver</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISAXErrorHandler_var','CATISAXErrorHandler_var&amp;')</script> <td><tt>iErrorHandler</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Parses the supplied input source to generate a DOM document.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInputSource</tt>
   <dd> The </dd>
<a href="#" onClick="openLink('CATISAXInputSource','');return false">CATISAXInputSource</a> to parse 
    <dt><tt> oDocument</tt>
   <dd> The resulting </dd>
<a href="#" onClick="openLink('CATIDOMDocument','');return false">CATIDOMDocument</a> 
    <dt><tt> iOptions</tt>
   <dd> The names of the options to set
 </dd>
    <dt><tt> iOptionValues</tt>
   <dd> The values of the options to set.
 </dd>
    <dt><tt> iEntityResolver</tt>
   <dd> An optional </dd>
<a href="#" onClick="openLink('CATISAXEntityResolver','');return false">CATISAXEntityResolver</a> which can be used to resolve entities during parse. 
    <dt><tt> iErrorHandler</tt>
   <dd> An optional </dd>
<a href="#" onClick="openLink('CATISAXErrorHandler','');return false">CATISAXErrorHandler</a> which can be used to control the errors during parse.
 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2100</td>
        <td class="errtd">Invalid options definition</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2101</td>
        <td class="errtd">Unsupported option</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2102</td>
        <td class="errtd">Illegal option value</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2000</td>
        <td class="errtd">If an error (such as a not well formed XML document) occurs during parse</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a> </td>        <td class="errtd">XMLParserERR_2001</td>
        <td class="errtd">If an I/O error occurs during parse</td>
     </tr>
   </table>
 </dd>

</dl>
</dl>
</dl>
<a name="Write"></a><a name="Write(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>Write</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Write</b>(<td> const <script type="text/javascript"> activateLink('CATIDOMNode_var','CATIDOMNode_var&amp;')</script> <td><tt>iNode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oResult</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptions</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptionValues</tt><td><tt>= CATListOfCATUnicodeString()</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Writes the node in a <tt>CATUnicodeString</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd> the root of the DOM tree to write
 </dd>
    <dt><tt> oResult</tt>
   <dd> the resulting </dd>
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> 
    <dt><tt> iOptions</tt>
   <dd> The names of the options to set
 </dd>
    <dt><tt> iOptionValues</tt>
   <dd> The values of the options to set.
 The current list of options is
 <table border="1">
 <tr bgcolor="a4f4a4">
  <td><b>Option name</b></td>
  <td><b>Description</b></td>
  <td><b>Possible values</b></td>
  <td><b>Default value</b></td>
 </tr>
 <tr>
   <td>CATExpandEntityReferences</td>
   <td>Specifies if the entities references are to be expanded in the generated XML text</td>
   <td>true or false</td><td>false</td>
 </tr>
 <tr>
  <td>CATEncoding</td>
  <td>If the node is a document node, the supplied value will
      be inserted in the 'encoding' attribute of the XML header
      Do not specify this attribute if you want the XML parser
      to autodetect the encoding.</td>
  <td>encoding value</td><td>empty </dd>
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> </td> </tr>
 <tr>
  <td>CATSortAttributes</td>
  <td>Sorts the attributes of each elements alphabetically.</td>
  <td>true or false</td><td>false</td>
 </tr>
 <tr>
  <td>CATIndentation</td>
  <td>Controls how the output is formatted to produce human-readable indented XML.</td>
  <td>A positive or null integer specifying the number of 
      indentation characters to insert before each element</td>
  <td>0 (no identation)</td>
 </tr>
 <tr>
  <td>CATIndentationCharacter</td>
  <td>Specifies the indentation character to use when indentation is requested.</td>
  <td>A valid indentation character (space or tab)</td>
  <td>space</td>
 </tr>
 </table>

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2100</td>
        <td class="errtd">Invalid options definition</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2101</td>
        <td class="errtd">Unsupported option</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2102</td>
        <td class="errtd">Illegal option value</td>
     </tr>
   </table>
 </dd>

</dl>
</dl>
</dl>
<a name="WriteToFile"></a><a name="WriteToFile(CATIDOMNode_var&amp;,CATUnicodeString&amp;,CATListOfCATUnicodeString&amp;,CATListOfCATUnicodeString&amp;)"></a> <dt> o <b>WriteToFile</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>WriteToFile</b>(<td> const <script type="text/javascript"> activateLink('CATIDOMNode_var','CATIDOMNode_var&amp;')</script> <td><tt>iNode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptions</tt><td><tt>= CATListOfCATUnicodeString()</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>iOptionValues</tt><td><tt>= CATListOfCATUnicodeString()</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Writes the node to the specified file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd> the root of the DOM tree to write
 </dd>
    <dt><tt> iPath</tt>
   <dd> the path of the file to write
 </dd>
    <dt><tt> iOptions</tt>
   <dd> The names of the options to set
 </dd>
    <dt><tt> iOptionValues</tt>
   <dd> The values of the options to set.
 The current list of options is
 <table border="1">
 <tr bgcolor="a4f4a4">
  <td><b>Option name</b></td>
  <td><b>Description</b></td>
  <td><b>Possible values</b></td>
  <td><b>Default value</b></td>
 </tr>
 <tr>
   <td>CATExpandEntityReferences</td>
   <td>Specifies if the entities references are to be expanded in the generated XML text</td>
   <td>true or false</td><td>false</td>
 </tr>
 <tr>
  <td>CATEncoding</td>
  <td>The encoding to use to write the file. Furthermore
      if the node is a document node, the supplied value will
      be inserted in the 'encoding' attribute of the XML header.
      Note that you should not normally use an empty </dd>
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> value       since it makes the XML file not portable
      from one platform to another. However, if you want to edit the XML file with
      an external, plain text editor which does not support UTF-8 and you do not
      wish to exchange files, this value can exceptionally be used.
 </td>
  <td>UTF-8, UTF-16 or empty 
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> </td>  <td>UTF-8</td>
 </tr>
 <tr>
  <td>CATSortAttributes</td>
  <td>Sorts the attributes of each elements alphabetically.</td>
  <td>true or false</td><td>false</td>
 </tr>
 <tr>
  <td>CATIndentation</td>
  <td>Controls how the output is formatted to produce human-readable indented XML.</td>
  <td>A positive or null integer specifying the number of 
      indentation characters to insert before each element</td>
  <td>0 (no identation)</td>
 </tr>
 <tr>
  <td>CATIndentationCharacter</td>
  <td>Specifies the indentation character to use when indentation is requested.</td>
  <td>A valid indentation character (space or tab)</td>
  <td>space</td>
 </tr>
 </table>

 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2100</td>
        <td class="errtd">Invalid options definition</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2101</td>
        <td class="errtd">Unsupported option</td>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2102</td>
        <td class="errtd">Illegal option value</td>
     </tr>
   </table>
 </dd>

</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIXMLDOMDocumentBuilder.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
