<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Exception CATSAXParseException</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../XMLParser.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSAXParseException','exception','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSAXParseException','exception','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSAXParseException','exception','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSAXParseException','exception','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>XMLParser Exception CATSAXParseException</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSAXParseException_24450','CATSAXParseException','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSAXParseException</b>
</p>
<p>
<b><i> Class to encapsulate an XML parse error or warning.</i></b><br>


 <p>This exception will include information for locating the error
 in the original XML document.  Note that although the application
 will receive a <a href="#" onClick="openLink('CATSAXParseException','');return false">CATSAXParseException</a> as the argument to the handlers in the 
<a href="#" onClick="openLink('CATISAXErrorHandler','');return false">CATISAXErrorHandler</a> interface, the application is not actually required to raise an error; instead, it can simply read the
 information in it and take a different action.</p>

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSAXException','');return false">CATSAXException</a>, <a href="#" onClick="openLink('CATISAXLocator','');return false">CATISAXLocator</a>, <a href="#" onClick="openLink('CATISAXErrorHandler','');return false">CATISAXErrorHandler</a>
</dl>
</p>
<hr>
</dl>
</dl>
<dl>
</dl>
<dl>
</dl>
<hr>
 This object is included in the file: <b>CATSAXParseException.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
