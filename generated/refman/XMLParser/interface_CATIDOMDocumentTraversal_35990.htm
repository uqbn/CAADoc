<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>XMLParser Interface CATIDOMDocumentTraversal</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../XMLParser.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDOMDocumentTraversal','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDOMDocumentTraversal','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDOMDocumentTraversal','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDOMDocumentTraversal','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>XMLParser Interface CATIDOMDocumentTraversal</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDOMDocumentTraversal_35990','CATIDOMDocumentTraversal','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIDOMDocumentTraversal</b>
</p>
<p>
<b><i> Interface which contains methods that create iterators and 
 tree-walkers to traverse a node and its children in document order (depth 
 first, pre-order traversal, which is equivalent to the order in which the 
 start tags occur in the text representation of the document).</i></b><br>
 In DOMs 
 which support the Traversal feature, <a href="#" onClick="openLink('CATIDOMDocumentTraversal','');return false">CATIDOMDocumentTraversal</a> will  be implemented by the same objects that implement the 
<a href="#" onClick="openLink('CATIDOMDocument','');return false">CATIDOMDocument</a> interface. <p>See also the <a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>Document Object Model (DOM) Level 2 Traversal and Range Specification</a>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateNodeIterator(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMNodeIterator_var&amp;)"><b>CreateNodeIterator</b></a>(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMNodeIterator_var&amp;)
<dd>  Creates a new <tt>CATIDOMNodeIterator</tt> over the subtree rooted at the 
 specified node.
 <dt> o 
    <a href="#CreateTreeWalker(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMTreeWalker_var&amp;)"><b>CreateTreeWalker</b></a>(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMTreeWalker_var&amp;)
<dd>  Creates a new <tt>CATIDOMTreeWalker</tt> over the subtree rooted at the 
 specified node.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateNodeIterator"></a><a name="CreateNodeIterator(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMNodeIterator_var&amp;)"></a> <dt> o <b>CreateNodeIterator</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateNodeIterator</b>(<td> const <script type="text/javascript"> activateLink('CATIDOMNode_var','CATIDOMNode_var&amp;')</script> <td><tt>iRoot</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iWhatToShow</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIDOMNodeFilter_var','CATIDOMNodeFilter_var&amp;')</script> <td><tt>iFilter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iEntityReferenceExpansion</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDOMNodeIterator_var','CATIDOMNodeIterator_var&amp;')</script> <td><tt>oNodeIterator</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new <tt>CATIDOMNodeIterator</tt> over the subtree rooted at the 
 specified node.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd> The node which will be iterated together with its children. 
 The iterator is initially positioned just before this node. The 
 <tt>iWhatToShow</tt> flags and the filter, if any, are not 
 considered when setting this position. The root must not be 
 <tt>NULL_var</tt>.
 </dd>
    <dt><tt> iWhatToShow</tt>
   <dd> This flag specifies which node types may appear in 
 the logical view of the tree presented by the iterator. See the 
 description of </dd>
<a href="#" onClick="openLink('CATIDOMNodeFilter','');return false">CATIDOMNodeFilter</a> for the set of possible  <tt>SHOW_</tt> values.These flags can be combined using 
 <tt>OR</tt>.
 
    <dt><tt> iFilter</tt>
   <dd> The </dd>
<a href="#" onClick="openLink('CATIDOMNodeFilter','');return false">CATIDOMNodeFilter</a> to be used with this 
<a href="#" onClick="openLink('CATIDOMTreeWalker','');return false">CATIDOMTreeWalker</a>,  or <tt>NULL_var</tt> to indicate no filter.
 
    <dt><tt> iEntityReferenceExpansion</tt>
   <dd> The value of this flag determines 
 whether entity reference nodes are expanded.
 </dd>
    <dt><tt> oNodeIterator</tt>
   <dd> The newly created </dd>
<a href="#" onClick="openLink('CATIDOMNodeIterator','');return false">CATIDOMNodeIterator</a>.
 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2209</td>
        <td class="errtd">NOT_SUPPORTED_ERR: Raised if the specified root is <tt>NULL_var</tt>.</td>
     </tr>
   </table>
 </dd>

</dl>
</dl>
</dl>
<a name="CreateTreeWalker"></a><a name="CreateTreeWalker(CATIDOMNode_var&amp;,unsigned int,CATIDOMNodeFilter_var&amp;,CATBoolean,CATIDOMTreeWalker_var&amp;)"></a> <dt> o <b>CreateTreeWalker</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateTreeWalker</b>(<td> const <script type="text/javascript"> activateLink('CATIDOMNode_var','CATIDOMNode_var&amp;')</script> <td><tt>iRoot</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iWhatToShow</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIDOMNodeFilter_var','CATIDOMNodeFilter_var&amp;')</script> <td><tt>iFilter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iEntityReferenceExpansion</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIDOMTreeWalker_var','CATIDOMTreeWalker_var&amp;')</script> <td><tt>oTreeWalker</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a new <tt>CATIDOMTreeWalker</tt> over the subtree rooted at the 
 specified node.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRoot</tt>
   <dd> The node which will serve as the root for the </dd>
<a href="#" onClick="openLink('CATIDOMTreeWalker','');return false">CATIDOMTreeWalker</a>.  The <tt>iWhatToShow</tt> flags and the  
<a href="#" onClick="openLink('CATIDOMNodeFilter','');return false">CATIDOMNodeFilter</a> are not  considered when setting this value; 
 any node type will be accepted as the root. The 
 currentNode of the 
<a href="#" onClick="openLink('CATIDOMTreeWalker','');return false">CATIDOMTreeWalker</a> is  initialized to this node, whether or not it is visible. The 
 root functions as a stopping point for traversal 
 methods that look upward in the document structure, such as 
 
<a href="#" onClick="openLink('CATIDOMTreeWalker','ParentNode');return false">CATIDOMTreeWalker.ParentNode</a> and 
<a href="#" onClick="openLink('CATIDOMTreeWalker','NextNode');return false">CATIDOMTreeWalker.NextNode</a>.  The root must not be <tt>NULL_var</tt>.
 
    <dt><tt> iWhatToShow</tt>
   <dd> This flag specifies which node types may appear in 
 the logical view of the tree presented by the tree-walker. See the 
 description of </dd>
<a href="#" onClick="openLink('CATIDOMNodeFilter','');return false">CATIDOMNodeFilter</a> for the set of possible  SHOW_ values.These flags can be combined using <tt>OR</tt>.
 
    <dt><tt> iFilter</tt>
   <dd> The </dd>
<a href="#" onClick="openLink('CATIDOMNodeFilter','');return false">CATIDOMNodeFilter</a> to be used with this  
<a href="#" onClick="openLink('CATIDOMTreeWalker','');return false">CATIDOMTreeWalker</a>,  or <tt>NULL_var</tt> to indicate no filter.
 
    <dt><tt> iEntityReferenceExpansion</tt>
   <dd> If this flag is false, the contents of </dd>
<a href="#" onClick="openLink('CATIDOMEntityReference','');return false">CATIDOMEntityReference</a> nodes  are not presented in the logical view.
 
    <dt><tt> oTreeWalker</tt>
   <dd> The newly created </dd>
<a href="#" onClick="openLink('CATIDOMTreeWalker','');return false">CATIDOMTreeWalker</a>.
 </dl>
 <dt><b>Errors Returned</b>:</dt>
 <dd>
   <table class="errtab">
     <tr>
       <th class="errth">Error Class</th>
       <th class="errth">Error Id</th>
       <th class="errth">Description</th>
     </tr>
     <tr>
        <td class="errtd">
<a href="#" onClick="openLink('CATDOMException','');return false">CATDOMException</a> </td>        <td class="errtd">XMLParserERR_2209</td>
        <td class="errtd">NOT_SUPPORTED_ERR: Raised if the specified root is <tt>NULL_var</tt>.</td>
     </tr>
   </table>
 </dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDOMDocumentTraversal.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATXMLParserItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
