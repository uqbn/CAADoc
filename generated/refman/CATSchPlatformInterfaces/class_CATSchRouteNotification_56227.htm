<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces Notification CATSchRouteNotification</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATSchPlatformInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSchRouteNotification','notification','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSchRouteNotification','notification','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSchRouteNotification','notification','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSchRouteNotification','notification','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATSchPlatformInterfaces Notification CATSchRouteNotification</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSchRouteNotification_56227','CATSchRouteNotification','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSchRouteNotification</b>
</p>
<p>
<b><i> Schematic application routing notification.</i></b><br>

 <b>Role</b>: To assist the creation of a route.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATSchRouteNotification()"><b>CATSchRouteNotification</b></a>()
<dd>  Constructs an empty CATSchRouteNotification.
 <dt> o 
    <a href="#~CATSchRouteNotification()"><b>~CATSchRouteNotification</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetApplicationData(CATBaseUnknown**)"><b>GetApplicationData</b></a>(CATBaseUnknown**)
<dd>  Get the data to be sent along with the notification
 Only the application needs to know the structure.
 <dt> o 
    <a href="#GetFromToObjects(CATBaseUnknown**,CATBaseUnknown**,CATBoolean*)"><b>GetFromToObjects</b></a>(CATBaseUnknown**,CATBaseUnknown**,CATBoolean*)
<dd>  Get the From and To objects to be sent along with the notification.
 <dt> o 
    <a href="#SetApplicationData(CATBaseUnknown*)"><b>SetApplicationData</b></a>(CATBaseUnknown*)
<dd>  Set the data to be sent along with the notification
 Only the application needs to know the structure.
 <dt> o 
    <a href="#SetFromToObjects(CATBaseUnknown*,CATBaseUnknown*,CATBoolean)"><b>SetFromToObjects</b></a>(CATBaseUnknown*,CATBaseUnknown*,CATBoolean)
<dd>  Set the From and To objects to be sent along with the notification.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATSchRouteNotification"></a><a name="CATSchRouteNotification()"></a> <dt> o <b>CATSchRouteNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATSchRouteNotification</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATSchRouteNotification.
</dl>
<a name="~CATSchRouteNotification"></a><a name="~CATSchRouteNotification()"></a> <dt> o <b>~CATSchRouteNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATSchRouteNotification</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetApplicationData"></a><a name="GetApplicationData(CATBaseUnknown**)"></a> <dt> o <b>GetApplicationData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplicationData</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oAppData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the data to be sent along with the notification
 Only the application needs to know the structure. The schematic platform
 will have no need to try to interpret the data
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAppRouteData</tt>
   <dd> [out, CATBaseUnknown#Release]   pointer to the information sent with the notification
   calling routine needs to release the output pointer upon finish
   using it. The caller must allocate memory for 
   the first level pointer (i.e. oAppData) and release the second level
   pointer (i.e. *oAppData) after usage.</dd>
</dl>
</dl>
</dl>
<a name="GetFromToObjects"></a><a name="GetFromToObjects(CATBaseUnknown**,CATBaseUnknown**,CATBoolean*)"></a> <dt> o <b>GetFromToObjects</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFromToObjects</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oFrom</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oTo</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBAutoRoute</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the From and To objects to be sent along with the notification.  
 The From and To objects will be used by the route command to
 complete the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFrom</tt>
   <dd>  [out, CATBaseUnknown#Release]   pointer to the object from which the route will start.  
   The calling routine must release the pointer when finished
   using it. 
 </dd>
    <dt><tt> oTo</tt>
   <dd> [out, CATBaseUnknown#Release]   pointer to the object to which the route will end.  
   The calling routine must release the pointer when finished
   using it. 
 </dd>
    <dt><tt> oAutoRoute</tt>
   <dd>   Specifies how the route command will perform the route.  
   If true, the route will be automatically performed.  If false, 
   the route command will allow user interaction.</dd>
</dl>
</dl>
</dl>
<a name="SetApplicationData"></a><a name="SetApplicationData(CATBaseUnknown*)"></a> <dt> o <b>SetApplicationData</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetApplicationData</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iAppData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the data to be sent along with the notification
 Only the application needs to know the structure. The schematic platform
 will have no need to try to interpret the data
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAppData</tt>
   <dd>   pointer to the information to be sent with the notification
   This method will add reference count to iAppData.</dd>
</dl>
</dl>
</dl>
<a name="SetFromToObjects"></a><a name="SetFromToObjects(CATBaseUnknown*,CATBaseUnknown*,CATBoolean)"></a> <dt> o <b>SetFromToObjects</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFromToObjects</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iFrom</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iTo</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iBAutoRoute</tt><td><tt>= TRUE </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the From and To objects to be sent along with the notification.  
 The From and To objects will be used by the route command to
 complete the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFrom</tt>
   <dd>   pointer to the object from which the route will start.  
 </dd>
    <dt><tt> iTo</tt>
   <dd>   pointer to the object to which the route will end.
   This method will add reference count to iFrom and iTo.
 </dd>
    <dt><tt> iAutoRoute</tt>
   <dd>   Specifies how the route command will perform the route.  
   If true, the route will be automatically performed.  If false,
   the route command will allow user interaction.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSchRouteNotification.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSchItfCPP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
