<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces Interface CATISchRoute</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATSchPlatformInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISchRoute','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISchRoute','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISchRoute','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISchRoute','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATSchPlatformInterfaces Interface CATISchRoute</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISchRoute_38984','CATISchRoute','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISchRoute</b>
</p>
<p>
<b><i> Interface to manage a Schematic route object.</i></b><br>
 
 <b>Role</b>: Defines Schematic route object behaviors</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddPoints(CATISchGRRRoute*,double*,int,int)"><b>AddPoints</b></a>(CATISchGRRRoute*,double*,int,int)
<dd>  Add a list of point to a route.
 <dt> o 
    <a href="#Branch(CATISchGRRRoute*,CATISchRoute*,CATISchAppConnector*,CATISchAppConnection**,CATISchAppConnector**)"><b>Branch</b></a>(CATISchGRRRoute*,CATISchRoute*,CATISchAppConnector*,CATISchAppConnection**,CATISchAppConnector**)
<dd>  Create a branch from this route.
 <dt> o 
    <a href="#Break(CATISchGRRRoute*,double[2],double*,CATISchRoute**)"><b>Break</b></a>(CATISchGRRRoute*,double[2],double*,CATISchRoute**)
<dd>  Break a route into 2 pieces.
 <dt> o 
    <a href="#Compress()"><b>Compress</b></a>()
<dd>  Compress a the defining points of a route, removing coincident points.
 <dt> o 
    <a href="#Concatenate(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)"><b>Concatenate</b></a>(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)
<dd>  Concatenate 2 routes into one.
 <dt> o 
    <a href="#ConcatenateKeepRoute2(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)"><b>ConcatenateKeepRoute2</b></a>(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)
<dd>  Concatenate 2 routes into one.
 <dt> o 
    <a href="#GetExtremityCntrs(CATISchGRRRoute*,CATISchAppConnector**,CATISchAppConnector**)"><b>GetExtremityCntrs</b></a>(CATISchGRRRoute*,CATISchAppConnector**,CATISchAppConnector**)
<dd>  Get extremity connectors of the route.
 <dt> o 
    <a href="#GetPath(CATISchGRRRoute*,double**,int*)"><b>GetPath</b></a>(CATISchGRRRoute*,double**,int*)
<dd>  Get the defining points of a route.
 <dt> o 
    <a href="#OKToBranch(CATISchGRRRoute*,char*,CATBoolean*)"><b>OKToBranch</b></a>(CATISchGRRRoute*,char*,CATBoolean*)
<dd>  Query whether it is OK to create a branch.
 <dt> o 
    <a href="#OKToBreak(CATISchGRRRoute*,CATBoolean*)"><b>OKToBreak</b></a>(CATISchGRRRoute*,CATBoolean*)
<dd>  Query whether it is OK to break.
 <dt> o 
    <a href="#OKToConcatenate(CATISchGRRRoute*,CATBoolean*)"><b>OKToConcatenate</b></a>(CATISchGRRRoute*,CATBoolean*)
<dd>  Query whether it is OK to concatenate.
 <dt> o 
    <a href="#OKToModifyPoints(CATISchGRRRoute*,CATBoolean*)"><b>OKToModifyPoints</b></a>(CATISchGRRRoute*,CATBoolean*)
<dd>  Query whether it is OK to modify (add or remove) the points.
 <dt> o 
    <a href="#RemovePoints(CATISchGRRRoute*,int,int)"><b>RemovePoints</b></a>(CATISchGRRRoute*,int,int)
<dd>  Remove points from route.
 <dt> o 
    <a href="#ReshapeExtremity(CATISchGRRRoute*,CATISchAppConnector*,double[2])"><b>ReshapeExtremity</b></a>(CATISchGRRRoute*,CATISchAppConnector*,double[2])
<dd>  Change the position of the extremity of the route.
 <dt> o 
    <a href="#ReshapeExtremity(CATSchRouteMode,CATISchGRRRoute*,CATISchAppConnector*,double[2])"><b>ReshapeExtremity</b></a>(CATSchRouteMode,CATISchGRRRoute*,CATISchAppConnector*,double[2])
<dd>  Change the position of the extremity of the route.
 <dt> o 
    <a href="#SetPath(CATISchGRRRoute*,double*,int)"><b>SetPath</b></a>(CATISchGRRRoute*,double*,int)
<dd>  Set the defining points of a route.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddPoints"></a><a name="AddPoints(CATISchGRRRoute*,double*,int,int)"></a> <dt> o <b>AddPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddPoints</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPathToAdd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAfterWhichPtNum</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a list of point to a route. 
 Modify the route according to the route mode
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to add points to
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iLDbPtPathToAdd</tt>
   <dd>   A list of X-Y coordinates of points to be added. 2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number to add the points after. Use 0 to indicate adding
   before the first point.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Branch"></a><a name="Branch(CATISchGRRRoute*,CATISchRoute*,CATISchAppConnector*,CATISchAppConnection**,CATISchAppConnector**)"></a> <dt> o <b>Branch</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Branch</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRRMain</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchRoute','CATISchRoute*')</script> <td><tt>iSchBranchRoute</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iSchBranchRouteCntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnection','CATISchAppConnection**')</script> <td><tt>oBranchCntn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector**')</script> <td><tt>oNewBranchCntr</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Create a branch from this route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRRMain</tt>
   <dd>   graphical primitive of the "this" route to branch from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iSchBranchRoute</tt>
   <dd>   The route to create a branch connection to (from this route)
 </dd>
    <dt><tt> iSchBranchRouteCntr</tt>
   <dd>   The extremity connector of the branch
 </dd>
    <dt><tt> oBranchCntn</tt>
   <dd>   The branch connection created
 </dd>
    <dt><tt> oNewBranchCntr</tt>
   <dd>   The new branch connector created on "this" route
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Break"></a><a name="Break(CATISchGRRRoute*,double[2],double*,CATISchRoute**)"></a> <dt> o <b>Break</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Break</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2Pt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iDb2Pt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchRoute','CATISchRoute**')</script> <td><tt>oNewSchRoute</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Break a route into 2 pieces. The old route is shortened and a new
 route is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to be broken
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iDb2Pt1</tt>
   <dd>   X-Y coordinates of point 1 to break the route at (this point is
   <b>mandatory</b>).
 </dd>
    <dt><tt> iDb2Pt2</tt>
   <dd>   X-Y coordinates of point 2 to break the route at (this point is
   <b>optional</b>). If provided the points in between point 1 and this
   point will be eliminated. Point 1 is the last point of the shortened
   old route and point 2 is the first point of the new route. If this point
   is not provided (sends in a NULL). point 1 and point 2 are the same.
 </dd>
    <dt><tt> oNewSchRoute</tt>
   <dd>   The new Schematic route object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Compress"></a><a name="Compress()"></a> <dt> o <b>Compress</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compress</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Compress a the defining points of a route, removing coincident points.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Concatenate"></a><a name="Concatenate(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)"></a> <dt> o <b>Concatenate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Concatenate</b>(<td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iSchRoute1Cntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchRoute','CATISchRoute*')</script> <td><tt>iSchRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iSchRoute2Cntr</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Concatenate 2 routes into one. Only works for those that have only one
 line graphic object. The first route is elongated and is modified.
 The second route is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSchRoute1Cntr</tt>
   <dd>   Connector of this route
   to concatenate with the second route.
 </dd>
    <dt><tt> iSchRoute2</tt>
   <dd>   Second route to be concatenate to the first. iSchRoute2 will be deleted.
 </dd>
    <dt><tt> iSchRoute2Cntr</tt>
   <dd>   Connector of second route to concatenate with the first route.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="ConcatenateKeepRoute2"></a><a name="ConcatenateKeepRoute2(CATISchAppConnector*,CATISchRoute*,CATISchAppConnector*)"></a> <dt> o <b>ConcatenateKeepRoute2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConcatenateKeepRoute2</b>(<td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iSchRoute1Cntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchRoute','CATISchRoute*')</script> <td><tt>iSchRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iSchRoute2Cntr</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Concatenate 2 routes into one. Only works for those that have only one
 line graphic object. The first route is elongated and is modified.
 The second route is unchanged.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSchRoute1Cntr</tt>
   <dd>   Connector of this route
   to concatenate with the second route.
 </dd>
    <dt><tt> iSchRoute2</tt>
   <dd>   Second route to be concatenate to the first. iSchRoute2 will be unchanged.
 </dd>
    <dt><tt> iSchRoute2Cntr</tt>
   <dd>   Connector of second route to concatenate with the first route.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetExtremityCntrs"></a><a name="GetExtremityCntrs(CATISchGRRRoute*,CATISchAppConnector**,CATISchAppConnector**)"></a> <dt> o <b>GetExtremityCntrs</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExtremityCntrs</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector**')</script> <td><tt>oRouteCntr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector**')</script> <td><tt>oRouteCntr2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get extremity connectors of the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oRouteCntr1</tt>
   <dd>   Route connector at first extremity
 </dd>
    <dt><tt> oRouteCntr2</tt>
   <dd>   Route connector at second extremity
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetPath"></a><a name="GetPath(CATISchGRRRoute*,double**,int*)"></a> <dt> o <b>GetPath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPath</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oLDb2PtPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oSizeOfPath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the defining points of a route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route get the path from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of points. 2 doubles per point.
 </dd>
    <dt><tt> oSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="OKToBranch"></a><a name="OKToBranch(CATISchGRRRoute*,char*,CATBoolean*)"></a> <dt> o <b>OKToBranch</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OKToBranch</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iBranchClassType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBYes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Query whether it is OK to create a branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iBranchClassType</tt>
   <dd>   Class type of the branch to create.
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to create a branch from a route
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="OKToBreak"></a><a name="OKToBreak(CATISchGRRRoute*,CATBoolean*)"></a> <dt> o <b>OKToBreak</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OKToBreak</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBYes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Query whether it is OK to break.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to break the route
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="OKToConcatenate"></a><a name="OKToConcatenate(CATISchGRRRoute*,CATBoolean*)"></a> <dt> o <b>OKToConcatenate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OKToConcatenate</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBYes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Query whether it is OK to concatenate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to concatenate the route with another
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="OKToModifyPoints"></a><a name="OKToModifyPoints(CATISchGRRRoute*,CATBoolean*)"></a> <dt> o <b>OKToModifyPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>OKToModifyPoints</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean*')</script> <td><tt>oBYes</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Query whether it is OK to modify (add or remove) the points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to add or remove the points from the route
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="RemovePoints"></a><a name="RemovePoints(CATISchGRRRoute*,int,int)"></a> <dt> o <b>RemovePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePoints</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumOfPtsToRemove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAfterWhichPtNum</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Remove points from route. 
 Modify the route according to the route mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to remove the points from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iNumOfPtsToRemove</tt>
   <dd>   The number of points to be removed
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number at which to start removing the point.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="ReshapeExtremity"></a><a name="ReshapeExtremity(CATISchGRRRoute*,CATISchAppConnector*,double[2])"></a> <dt> o <b>ReshapeExtremity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReshapeExtremity</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iRouteCntr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2DeltaXY</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Change the position of the extremity of the route. 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to reshape
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iRouteCntr</tt>
   <dd>   Route connector whose position is to be modified (CATISchAppConnector
   interface pointer).
 </dd>
    <dt><tt> iDb2DeltaXY</tt>
   <dd>   Delta X-Y coordinates of the extremity move
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="ReshapeExtremity"></a><a name="ReshapeExtremity(CATSchRouteMode,CATISchGRRRoute*,CATISchAppConnector*,double[2])"></a> <dt> o <b>ReshapeExtremity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReshapeExtremity</b>(<td> const <script type="text/javascript"> activateLink('CATSchRouteMode','CATSchRouteMode')</script> <td><tt>iERouteMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchAppConnector','CATISchAppConnector*')</script> <td><tt>iRouteCntr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2PtToMoveCntrTo</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Change the position of the extremity of the route. 
 Modify the route according to the route mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iERouteMode</tt>
   <dd>   Routing mode.
   </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSchRouteMode','');return false">CATSchRouteMode</a>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to reshape
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iRouteCntr</tt>
   <dd>   Route connector whose position is to be modified (CATISchConnector
   interface pointer).
 </dd>
    <dt><tt> iDb2PtToMoveCntrTo</tt>
   <dd>   X-Y coordinates of the point to move the connector to.
 </dd>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetPath"></a><a name="SetPath(CATISchGRRRoute*,double*,int)"></a> <dt> o <b>SetPath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPath</b>(<td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the defining points of a route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to set the path on
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISchRoute.h</b><br>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
