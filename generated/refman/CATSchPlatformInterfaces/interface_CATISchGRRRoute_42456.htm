<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces Interface CATISchGRRRoute</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATSchPlatformInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISchGRRRoute','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISchGRRRoute','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISchGRRRoute','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISchGRRRoute','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATSchPlatformInterfaces Interface CATISchGRRRoute</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISchGRRRoute_42456','CATISchGRRRoute','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISchGRRRoute</b>
</p>
<p>
<b><i> Interface to manage a Schematic route graphic object.</i></b><br>
 
 <b>Role</b>: Defines Schematic route graphic object content.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddPoints(double*,int,int)"><b>AddPoints</b></a>(double*,int,int)
<dd>  Add a list of point to a route.
 <dt> o 
    <a href="#Break(double[2],double*,CATISchGRRRoute**)"><b>Break</b></a>(double[2],double*,CATISchGRRRoute**)
<dd>  Break a route graphic into 2 pieces.
 <dt> o 
    <a href="#Compress()"><b>Compress</b></a>()
<dd>  Compress a the defining points of a route graphic, removing coincident points.
 <dt> o 
    <a href="#Compress2(CATSchRouteUnsetGapsMode)"><b>Compress2</b></a>(CATSchRouteUnsetGapsMode)
<dd>  Compress the defining points of a route graphic, removing coincident points.
 <dt> o 
    <a href="#Concatenate(int,CATISchGRRRoute*,int)"><b>Concatenate</b></a>(int,CATISchGRRRoute*,int)
<dd>  Concatenate 2 route graphic objects into one.
 <dt> o 
    <a href="#ConcatenateKeepGRR2(int,CATISchGRRRoute*,int)"><b>ConcatenateKeepGRR2</b></a>(int,CATISchGRRRoute*,int)
<dd>  Concatenate 2 route graphic objects into one.
 <dt> o 
    <a href="#CreateRouteSymbol(int&amp;,double&amp;,CATISchGRR*,CATISchRouteSymbol**)"><b>CreateRouteSymbol</b></a>(int&amp;,double&amp;,CATISchGRR*,CATISchRouteSymbol**)
<dd>  Place a symbol on the route.
 <dt> o 
    <a href="#GetEndPoint(double*)"><b>GetEndPoint</b></a>(double*)
<dd>  Get the end point of the route graphic.
 <dt> o 
    <a href="#GetPath(double**,int*)"><b>GetPath</b></a>(double**,int*)
<dd>  Get the defining points of a route graphic.
 <dt> o 
    <a href="#GetStartPoint(double*)"><b>GetStartPoint</b></a>(double*)
<dd>  Get the start point of the route graphic.
 <dt> o 
    <a href="#ListRouteSymbols(CATIUnknownList**)"><b>ListRouteSymbols</b></a>(CATIUnknownList**)
<dd>  List route symbols on the route.
 <dt> o 
    <a href="#RemovePoints(int,int)"><b>RemovePoints</b></a>(int,int)
<dd>  Remove points from route graphic.
 <dt> o 
    <a href="#SetEndPoint(double[2])"><b>SetEndPoint</b></a>(double[2])
<dd>  Set the end point of the route graphic.
 <dt> o 
    <a href="#SetPath(double*,int,CATSchRouteCompressMode)"><b>SetPath</b></a>(double*,int,CATSchRouteCompressMode)
<dd>  Set the defining points of a route graphic.
 <dt> o 
    <a href="#SetPath2(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode)"><b>SetPath2</b></a>(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode)
<dd>  Set the defining points of a route graphic.
 <dt> o 
    <a href="#SetPath3(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode,CATSchRouteSymbolUpdateMode)"><b>SetPath3</b></a>(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode,CATSchRouteSymbolUpdateMode)
<dd>  Set the defining points of a route graphic.
 <dt> o 
    <a href="#SetStartPoint(double[2])"><b>SetStartPoint</b></a>(double[2])
<dd>  Set the start point of the route graphic.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddPoints"></a><a name="AddPoints(double*,int,int)"></a> <dt> o <b>AddPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddPoints</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPathToAdd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAfterWhichPtNum</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a list of point to a route. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPathToAdd</tt>
   <dd>   A list of X-Y coordinates of the points to be added. 
   2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number to add the points after. Use 0 to indicate adding
   before the first point.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Break"></a><a name="Break(double[2],double*,CATISchGRRRoute**)"></a> <dt> o <b>Break</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Break</b>(<td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2Pt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iDb2Pt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute**')</script> <td><tt>oNewGRRRoute</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Break a route graphic into 2 pieces. The old graphic is shortened and a new
 graphic is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2Pt1</tt>
   <dd>   X-Y coordinates of point 1 to break the route at (this point is
   <b>mandatory</b>).
 </dd>
    <dt><tt> iDb2Pt2</tt>
   <dd>   X-Y coordinates of point 2 to break the route at (this point is
   <b>optional</b>). If provided the points in between point 1 and this
   point will be eliminated. Point 1 is the last point of the shortened
   old route and point 2 is the first point of the new route. If this point
   is not provided (i.e. sends in a NULL). point 1 and point 2 are the same.
 </dd>
    <dt><tt> oNewGRRRoute</tt>
   <dd>   The new line string graphic created (CATISchGRRRoute interface pointer)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Compress"></a><a name="Compress()"></a> <dt> o <b>Compress</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compress</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Compress a the defining points of a route graphic, removing coincident points.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Compress2"></a><a name="Compress2(CATSchRouteUnsetGapsMode)"></a> <dt> o <b>Compress2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Compress2</b>(<td><script type="text/javascript"> activateLink('CATSchRouteUnsetGapsMode','CATSchRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt><td><tt>= SchUnsetGapsOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Compress the defining points of a route graphic, removing coincident points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = SchUnsetGapsOn   : unset gaps
        = SchUnsetGapsOff  : don't unset gaps
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="Concatenate"></a><a name="Concatenate(int,CATISchGRRRoute*,int)"></a> <dt> o <b>Concatenate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Concatenate</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iWhichEnd1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRRRoute2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iWhichEnd2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Concatenate 2 route graphic objects into one. 
 The first route graphic is elongated and the second object is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhichEnd1</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
    <dt><tt> iGRRRoute2</tt>
   <dd>   Second route graphic object (CATISchGRRRoute interface pointer)
   to be concatenated to the first. This route graphic will be deleted.
 </dd>
    <dt><tt> iWhichEnd2</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="ConcatenateKeepGRR2"></a><a name="ConcatenateKeepGRR2(int,CATISchGRRRoute*,int)"></a> <dt> o <b>ConcatenateKeepGRR2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ConcatenateKeepGRR2</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iWhichEnd1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchGRRRoute','CATISchGRRRoute*')</script> <td><tt>iGRRRoute2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iWhichEnd2</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Concatenate 2 route graphic objects into one. 
 The first route graphic is elongated and the second object is unchanged.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWhichEnd1</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
    <dt><tt> iGRRRoute2</tt>
   <dd>   Second route graphic object (CATISchGRRRoute interface pointer)
   to be concatenated to the first. This route graphic will be unchanged.
 </dd>
    <dt><tt> iWhichEnd2</tt>
   <dd>   =1 at start point; =2 at end point
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="CreateRouteSymbol"></a><a name="CreateRouteSymbol(int&amp;,double&amp;,CATISchGRR*,CATISchRouteSymbol**)"></a> <dt> o <b>CreateRouteSymbol</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateRouteSymbol</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iSegNum</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iSegParm</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISchGRR','CATISchGRR*')</script> <td><tt>iGRRSymbol</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISchRouteSymbol','CATISchRouteSymbol**')</script> <td><tt>oRouteSymbol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Place a symbol on the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSegNum</tt>
   <dd>   The route segment number to place the symbol on.
 </dd>
    <dt><tt> iSegParm</tt>
   <dd>   The parameter along the segment used to place the symbol on (0.<=iSegParm<=1.).
 </dd>
    <dt><tt> iGRRSymbol</tt>
   <dd>   The graphical primitive (detail) to be used for the symbol.
 </dd>
    <dt><tt> oRouteSymbol</tt>
   <dd>   The created route symbol (ditto).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetEndPoint"></a><a name="GetEndPoint(double*)"></a> <dt> o <b>GetEndPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEndPoint</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oDb2EndPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the end point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDb2EndPt</tt>
   <dd>   X-Y coordinates of the end point of the route graphic object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetPath"></a><a name="GetPath(double**,int*)"></a> <dt> o <b>GetPath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPath</b>(<td><script type="text/javascript"> activateLink('double','double**')</script> <td><tt>oLDb2PtPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oSizeOfPath</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points. 2 doubles per point.
 </dd>
    <dt><tt> oSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="GetStartPoint"></a><a name="GetStartPoint(double*)"></a> <dt> o <b>GetStartPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStartPoint</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oDb2StartPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the start point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDb2StartPt</tt>
   <dd>   X-Y coordinates of the start point of the route graphic object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="ListRouteSymbols"></a><a name="ListRouteSymbols(CATIUnknownList**)"></a> <dt> o <b>ListRouteSymbols</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListRouteSymbols</b>(<td><script type="text/javascript"> activateLink('CATIUnknownList','CATIUnknownList**')</script> <td><tt>oLRouteSymbol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 List route symbols on the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLRouteSymbol</tt>
   <dd>   A list of route symbols.
   (members are CATISchRouteSymbol interface pointers).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="RemovePoints"></a><a name="RemovePoints(int,int)"></a> <dt> o <b>RemovePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemovePoints</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumOfPtsToRemove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAfterWhichPtNum</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Remove points from route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumOfPtsToRemove</tt>
   <dd>   The number of points to be removed
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number at which to start removing the point.  
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetEndPoint"></a><a name="SetEndPoint(double[2])"></a> <dt> o <b>SetEndPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetEndPoint</b>(<td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2EndPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the end point of the route graphic. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2EndPt</tt>
   <dd>   X-Y coordinates of the end point of the route graphic object to be set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetPath"></a><a name="SetPath(double*,int,CATSchRouteCompressMode)"></a> <dt> o <b>SetPath</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPath</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteCompressMode','CATSchRouteCompressMode')</script> <td><tt>iCompress</tt><td><tt>= SchCompressOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = SchCompressOn   : compress
        = SchCompressOff  : don't compress
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetPath2"></a><a name="SetPath2(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode)"></a> <dt> o <b>SetPath2</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPath2</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteCompressMode','CATSchRouteCompressMode')</script> <td><tt>iCompress</tt><td><tt>= SchCompressOn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteUnsetGapsMode','CATSchRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt><td><tt>= SchUnsetGapsOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = SchCompressOn   : compress
        = SchCompressOff  : don't compress
 </dd>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = SchUnsetGapsOn   : unset gaps
        = SchUnsetGapsOff  : don't unset gaps
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetPath3"></a><a name="SetPath3(double*,int,CATSchRouteCompressMode,CATSchRouteUnsetGapsMode,CATSchRouteSymbolUpdateMode)"></a> <dt> o <b>SetPath3</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPath3</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iLDb2PtPath</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSizeOfPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteCompressMode','CATSchRouteCompressMode')</script> <td><tt>iCompress</tt><td><tt>= SchCompressOn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteUnsetGapsMode','CATSchRouteUnsetGapsMode')</script> <td><tt>iUnsetGaps</tt><td><tt>= SchUnsetGapsOn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSchRouteSymbolUpdateMode','CATSchRouteSymbolUpdateMode')</script> <td><tt>iRouteUpdateSymbols</tt><td><tt>= SchSymbolUpdateOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the defining points of a route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of the points to be set. 2 doubles per point.
 </dd>
    <dt><tt> iSizeOfPath</tt>
   <dd>   Total number of points in the list. 2 times the number of points.
 </dd>
    <dt><tt> iCompress</tt>
   <dd>    Whether to compress the route (i.e., remove duplicate pts, colinear
   segments, etc.) or not
        = SchCompressOn   : compress
        = SchCompressOff  : don't compress
 </dd>
    <dt><tt> iUnsetGaps</tt>
   <dd>   Whether to unset gaps (in all the effected routes: this route and
   other routes intersecting it) or not
        = SchUnsetGapsOn   : unset gaps
        = SchUnsetGapsOff  : don't unset gaps
 </dd>
    <dt><tt> iRouteSymbolUpdate</tt>
   <dd>   Whether to update route symbols' positions
        = SchSymbolUpdateOff  : don't update route symbols
        = SchSymbolUpdateOn   : update route symbols
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<a name="SetStartPoint"></a><a name="SetStartPoint(double[2])"></a> <dt> o <b>SetStartPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetStartPoint</b>(<td> const <script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>iDb2StartPt</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the start point of the route graphic.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDb2StartPt</tt>
   <dd>   X-Y coordinates of the start point of the route graphic object to be set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value.
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>operation is successful</dd>
     <dt>E_FAIL</dt>
     <dd>operation failed</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISchGRRRoute.h</b><br>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
