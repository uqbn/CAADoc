<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATTopExtrapolWireOpe</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTopExtrapolWireOpe','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopExtrapolWireOpe','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTopExtrapolWireOpe','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopExtrapolWireOpe','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>TopologicalOperators Class CATTopExtrapolWireOpe</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopExtrapolWireOpe_42956','CATTopExtrapolWireOpe','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopExtrapolWireOpe</b>
</p>
<p>
<b><i> Class defining the topological operator to extrapol a wire.</i></b><br>

 <br>
 The operator produces a wire topology result of the extrapolation of the input wire.
 The user can customize the extrapolation with the Setxxx methods to
<ul>
 <li> define the type of continuity : tangency or curvature. 
 <li> define the extremity from which the extrapolation starts.
 <li> define the length of extrapolation or the body to reach.
</ul>
 <p>
 When no support is defined, 
 the extrapolation in curvature "up to" is only possible if the body to reach is a wire and a plane; 
 the extrapolation in curvature of a given length is the extrapolated wire relimited by the plane
 created at the given length from the chosen extremity.
 When a support is defined, 
 the extrapolation in curvature is only possible on the faces with same geometry. 
</p>
 This operator follows the general scheme of the topological operators:
 <ul>
<li> Create the operator with the <tt>CATCreateTopExtrapolWireOpe</tt> global function.
<li> Set the extrapolation parameters: continuity, extremity, length...
<li> Run with the <tt>Run</tt> method. 
<li> Get the result body by the <tt>GetResult</tt> method. 
<li> Delete the operator with the usual C++ <tt>delete</tt> operator after use.
</ul></p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns the result of <tt>this</tt> operator.
 <dt> o 
    <a href="#GetResult(CATCGMJournalList*)"><b>GetResult</b></a>(CATCGMJournalList*)
<dd>  Returns the pointer to the resulting body.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetContinuityType(int)"><b>SetContinuityType</b></a>(int)
<dd>  Defines the type of continuity.
 <dt> o 
    <a href="#SetExtrapolLimit(CATVertex*,double)"><b>SetExtrapolLimit</b></a>(CATVertex*,double)
<dd>  Defines the extremity from which the extrapolation must start and the length of the extrapolation.
 <dt> o 
    <a href="#SetExtrapolLimit(CATVertex*,CATBody*)"><b>SetExtrapolLimit</b></a>(CATVertex*,CATBody*)
<dd>  Defines the extremity from which extrapolation must start and the body to reach.
 <dt> o 
    <a href="#SetNoSimplifOnLine()"><b>SetNoSimplifOnLine</b></a>()
<dd>  By default the result of the extrapolation of a line in tangency 
 when no support is defined gives a body which only contains one edge.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetResult</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the result of <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created body.
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult(CATCGMJournalList*)"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody *')</script>  <b>GetResult</b>(<td><script type="text/javascript"> activateLink('CATCGMJournalList','CATCGMJournalList*')</script> <td><tt>iJourn</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the pointer to the resulting body.
 The pointer to the journal of the operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iJourn</tt>
   <dd> The pointer to the journal to fill.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the resulting body.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator. Returns 0 if the operation completes properly.
</dl>
<a name="SetContinuityType"></a><a name="SetContinuityType(int)"></a> <dt> o <b>SetContinuityType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetContinuityType</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>type</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the type of continuity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> type</tt>
   <dd> 1 for tangency continuity
 2 for curvature continuity.</dd>
</dl>
</dl>
</dl>
<a name="SetExtrapolLimit"></a><a name="SetExtrapolLimit(CATVertex*,double)"></a> <dt> o <b>SetExtrapolLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetExtrapolLimit</b>(<td><script type="text/javascript"> activateLink('CATVertex','CATVertex*')</script> <td><tt>iVertex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>ilength</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the extremity from which the extrapolation must start and the length of the extrapolation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVertex</tt>
   <dd> The vertex must be one of the two extremities of the wire to extrapolate. 
 The extrapolation is only possible from one vertex.
 </dd>
    <dt><tt> ilength</tt>
   <dd> The length must be a positive value.</dd>
</dl>
</dl>
</dl>
<a name="SetExtrapolLimit"></a><a name="SetExtrapolLimit(CATVertex*,CATBody*)"></a> <dt> o <b>SetExtrapolLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetExtrapolLimit</b>(<td><script type="text/javascript"> activateLink('CATVertex','CATVertex*')</script> <td><tt>iVertex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBody','CATBody*')</script> <td><tt>iLimBody</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Defines the extremity from which extrapolation must start and the body to reach.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVertex</tt>
   <dd> The vertex must be one of the two extremities of the wire to extrapolate. 
 The extrapolation is only possible from one vertex.
 </dd>
    <dt><tt> iLimBody</tt>
   <dd> The body to reach can be:
 <ul>
   <li> a wire (laid on the same support than the body to extrapol)
   <li> a shell (must be plane when extrapolation in curvature mode and no support defined).
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetNoSimplifOnLine"></a><a name="SetNoSimplifOnLine()"></a> <dt> o <b>SetNoSimplifOnLine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNoSimplifOnLine</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 By default the result of the extrapolation of a line in tangency 
 when no support is defined gives a body which only contains one edge.
 The intermediate vertex has been cleaned.
 To avoid this behaviour and keep the vertex use the following option.
</dl>
<hr>
 This object is included in the file: <b>CATTopExtrapolWireOpe.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
