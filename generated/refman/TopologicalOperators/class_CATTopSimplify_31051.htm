<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATTopSimplify</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTopSimplify','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopSimplify','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTopSimplify','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopSimplify','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>TopologicalOperators Class CATTopSimplify</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopSimplify_31051','CATTopSimplify','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopSimplify</b>
</p>
<p>
<b><i> Class representing the operator that simplifies a whole body or selected cells of a body.</i></b><br>

 <br>The CATTopSimplify operator follows the global frame of the topological operators
 and satisfies the smart mechanism: the
 input bodies are not modified. A new resulting body is created, 
 possibly sharing data with the input bodies.
<ul>
 <li>A CATTopSimplify operator is created with the <tt>CATCreateTopSimplify</tt> global function.
 It must be directly deleted with the usual C++ <tt>delete</tt> operator after use. 
 It is not streamable. 
<li>The computation is done by the <tt>Run</tt> function. 
<li>The result is accessed with the <tt>GetResult</tt> method. If you do not want 
 to keep the resulting body, use the <a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method to remove it from the  geometric container, after the operator deletion.
</ul>
<ul>
 <li>Volumes , faces or edges can be simplified.
 <li>During the simplification, new cells are created to replace several adjacent cells 
 linked to the same or equivalent geometry.
 <li>In case of edges border of faces, the simplification can only be done 
 <li>The simplification can only be done between adjacent cells of the same domain
 <li>To enhance performance, it is strongly recommended to use the <tt>SetCellsToSimplify</tt> 
 method, if you want to simplify only some cells and not the whole body.
</ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopSimplify()"><b>~CATTopSimplify</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns a pointer to the resulting body.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetCellsToRemove(CATLISTP(CATCell)&amp;)"><b>SetCellsToRemove</b></a>(CATLISTP(CATCell)&amp;)
<dd>  Defines the cells to remove during simplification.
 <dt> o 
    <a href="#SetCellsToSimplify(CATLISTP(CATCell)&amp;)"><b>SetCellsToSimplify</b></a>(CATLISTP(CATCell)&amp;)
<dd>  Defines the cells to simplify.
 <dt> o 
    <a href="#SetFreezeMode(short)"><b>SetFreezeMode</b></a>(short)
<dd>  Defines the state of the resulting body.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopSimplify"></a><a name="~CATTopSimplify()"></a> <dt> o <b>~CATTopSimplify</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTopSimplify</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBody','CATBody*')</script>  <b>GetResult</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a pointer to the resulting body.
 <br> Must be called after the <tt>Run</tt> method only once. A second call returns a <tt>NULL</tt>
 pointer.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the resulting body. Use 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> if you do not want to keep it.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
</dl>
<a name="SetCellsToRemove"></a><a name="SetCellsToRemove(CATLISTP(CATCell)&amp;)"></a> <dt> o <b>SetCellsToRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCellsToRemove</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iCellsToRemove</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the cells to remove during simplification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCellsToRemove</tt>
   <dd> The list of cells to remove. This restricts the simplification to the cells bounded
 to these cells only.
 This method is only currently available for edges.
 This method can not be called together with the <tt>SetCellsToSimplify</tt> method.</dd>
</dl>
</dl>
</dl>
<a name="SetCellsToSimplify"></a><a name="SetCellsToSimplify(CATLISTP(CATCell)&amp;)"></a> <dt> o <b>SetCellsToSimplify</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCellsToSimplify</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>iCellsToSimplify</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the cells to simplify.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCellsToSimplify</tt>
   <dd> The list of cells to simplify. This restricts the simplification to these cells only.
 This method is only currently available for faces.
 This method can not be called together with the <tt>SetCellsToRemove</tt> method.</dd>
</dl>
</dl>
</dl>
<a name="SetFreezeMode"></a><a name="SetFreezeMode(short)"></a> <dt> o <b>SetFreezeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFreezeMode</b>(<td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iMode</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the state of the resulting body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> The state of the resulting body. 
 <br><b>Legal values</b>:
 <dl>
 <dt>0</dt><dd>The resulting CATBody is not frozen: it can be modified afterwards.
 <dt>1</dt><dd>The resulting CATBody is frozen: it cannot be modified afterwards.
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopSimplify.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
