<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>TopologicalOperators Class CATDynTransformation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../TopologicalOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDynTransformation','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDynTransformation','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDynTransformation','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDynTransformation','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>TopologicalOperators Class CATDynTransformation</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDynTransformation_41752','CATDynTransformation','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDynTransformation</b>
</p>
<p>
<b><i> Class representing the topological operator that transforms a CATBody.</i></b><br>

 <br>
 It follows the use frame of all operator and satisfies to the smart mechanism: the
 input body is not modified. A new resulting body is created, 
 possibly sharing data with the input one.
<ul>
 <li>A CATDynTransformation is created with the <tt>CATCreateDynTransformation</tt> global function:
 It must be
 directly deleted after use with the usual C++ <tt>delete</tt> operator.
 It is not streamable. 
<li>Options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. In particular, the operator can be re-use to
 transform the same body with different transformations; in this case, you can precise another journal to
 be filled, with the <tt>SetNewJournal</tt> method. 
<li>The result is accessed with the <tt>GetResult</tt> method. 
</ul>
 This operator is optimized and simplified with regards to the <a href="#" onClick="openLink('CATTransfoManager','');return false">CATTransfoManager</a> : The CATDynTransfomation operator chooses the best way to call the CATTransfoManager. In another way, the CATTransfoManager provides more
 options.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATDynTransformation()"><b>~CATDynTransformation</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#SetAffinity(CATMathPlane&amp;,CATLength)"><b>SetAffinity</b></a>(CATMathPlane&amp;,CATLength)
<dd>  Defines <tt>this</tt> CATDynTransformation as an affinity.
 <dt> o 
    <a href="#SetJournalInfo(CATBoolean)"><b>SetJournalInfo</b></a>(CATBoolean)
<dd>  Defines whether a CATCGMJournalInfo has to be added to the item corresponding to <tt>this</tt> operation.
 <dt> o 
    <a href="#SetNewJournal(CATCGMJournalList*)"><b>SetNewJournal</b></a>(CATCGMJournalList*)
<dd>  Defines another journal to be filled after another run of <tt>this</tt> operator.
 <dt> o 
    <a href="#SetReportMode(CATDynReportMode)"><b>SetReportMode</b></a>(CATDynReportMode)
<dd>  Defines the type of follow-up of the modifications to write in the journal.
 <dt> o 
    <a href="#SetRotation(CATAngle,CATMathLine&amp;)"><b>SetRotation</b></a>(CATAngle,CATMathLine&amp;)
<dd>  Defines <tt>this</tt> CATDynTransformation as a rotation.
 <dt> o 
    <a href="#SetScaling(CATMathPoint&amp;,CATLength)"><b>SetScaling</b></a>(CATMathPoint&amp;,CATLength)
<dd>  Defines <tt>this</tt> CATDynTransformation as a scaling.
 <dt> o 
    <a href="#SetSymmetry(CATMathPlane&amp;)"><b>SetSymmetry</b></a>(CATMathPlane&amp;)
<dd>  Defines <tt>this</tt> CATDynTransformation as a symmetry.
 <dt> o 
    <a href="#SetTransformation(CATMathTransformation&amp;)"><b>SetTransformation</b></a>(CATMathTransformation&amp;)
<dd>  Sets to <tt>this</tt> CATDynTransformation the parameters of a given transformation.
 <dt> o 
    <a href="#SetTranslation(CATMathVector&amp;)"><b>SetTranslation</b></a>(CATMathVector&amp;)
<dd>  Defines <tt>this</tt> CATDynTransformation as a translation.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATDynReportMode"><b>CATDynReportMode</b></a>
<dd>  Type of follow-up to be written in the journal.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATDynTransformation"></a><a name="~CATDynTransformation()"></a> <dt> o <b>~CATDynTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDynTransformation</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="SetAffinity"></a><a name="SetAffinity(CATMathPlane&amp;,CATLength)"></a> <dt> o <b>SetAffinity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAffinity</b>(<td> const <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>iReflectPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLength','CATLength')</script> <td><tt>iRatio</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> CATDynTransformation as an affinity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReflectPlane</tt>
   <dd> The plane for the reflecting part of the affinity.
 </dd>
    <dt><tt> iRatio</tt>
   <dd> The value of the ratio for the scaling part of the affinity.<br>
 The value <tt>iRatio=-1</tt> is the only value allowed for the moment.
 Use better the <tt>SetSymmetry</tt> method.</dd>
</dl>
</dl>
</dl>
<a name="SetJournalInfo"></a><a name="SetJournalInfo(CATBoolean)"></a> <dt> o <b>SetJournalInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetJournalInfo</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iTrueOrFalse</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines whether a CATCGMJournalInfo has to be added to the item corresponding to <tt>this</tt> operation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrueOrFalse</tt>
   <dd> <tt>TRUE</tt> if an additional information must be added to the item, <tt>FALSE</tt> otherwise. In case of
 adding the additional information, this information is put to 0.</dd>
</dl>
</dl>
</dl>
<a name="SetNewJournal"></a><a name="SetNewJournal(CATCGMJournalList*)"></a> <dt> o <b>SetNewJournal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNewJournal</b>(<td><script type="text/javascript"> activateLink('CATCGMJournalList','CATCGMJournalList*')</script> <td><tt>iJournal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines another journal to be filled after another run of <tt>this</tt> operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iJournal</tt>
   <dd> The pointer to the new journal to be filled in another run. This can be used in case of
 pattern transformation, if you want that each occurence has a different journal.</dd>
</dl>
</dl>
</dl>
<a name="SetReportMode"></a><a name="SetReportMode(CATDynReportMode)"></a> <dt> o <b>SetReportMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetReportMode</b>(<td><script type="text/javascript"> activateLink('CATDynReportMode','CATDynReportMode')</script> <td><tt>iTypeOfFollowUp</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the type of follow-up of the modifications to write in the journal.<br>
 This information is used by applications, depending on the type of operations they want to 
 perform after calling the transformation. This information has no impact on the objects of the
 geometric modeler itself.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeOfFollowUp</tt>
   <dd> The type of report mode.
 <br><b>Legal values</b>:
 <dl><dt><tt>CATDynModification</tt></dt>
 <dd>The transformation is seen as a modification: the body is always duplicated, but the application
 wants to mask the input body for showing only the resulting body (case of an applicative
 transformation). This is the default of a CATDynTransformation.
 <dt><tt>CATDynCreation</tt></dt>
 <dd>The transformation is seen as a creation: The application keeps the input body and
 the duplicated body, and wants to union them for example:
 this is a typical case of an applicative operation of mirror.
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetRotation"></a><a name="SetRotation(CATAngle,CATMathLine&amp;)"></a> <dt> o <b>SetRotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRotation</b>(<td> const <script type="text/javascript"> activateLink('CATAngle','CATAngle')</script> <td><tt>iAngle</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathLine','CATMathLine&amp;')</script> <td><tt>iAxis</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> CATDynTransformation as a rotation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngle</tt>
   <dd> The angle of the rotation (in radians).
 </dd>
    <dt><tt> iAxis</tt>
   <dd> The direction of the rotation.</dd>
</dl>
</dl>
</dl>
<a name="SetScaling"></a><a name="SetScaling(CATMathPoint&amp;,CATLength)"></a> <dt> o <b>SetScaling</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetScaling</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iOrigin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLength','CATLength')</script> <td><tt>iRatio</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> CATDynTransformation as a scaling.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOrigin</tt>
   <dd> The origin of the scaling.
 </dd>
    <dt><tt> iRatio</tt>
   <dd> The value of the scaling</dd>
</dl>
</dl>
</dl>
<a name="SetSymmetry"></a><a name="SetSymmetry(CATMathPlane&amp;)"></a> <dt> o <b>SetSymmetry</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSymmetry</b>(<td> const <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>iSymmetryPlane</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> CATDynTransformation as a symmetry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSymmetryPlane</tt>
   <dd> The plane of symmetry.</dd>
</dl>
</dl>
</dl>
<a name="SetTransformation"></a><a name="SetTransformation(CATMathTransformation&amp;)"></a> <dt> o <b>SetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTransformation</b>(<td> const <script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation&amp;')</script> <td><tt>iTransformation</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets to <tt>this</tt> CATDynTransformation the parameters of a given transformation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTransformation</tt>
   <dd> The mathematical definition of the transformation.</dd>
</dl>
</dl>
</dl>
<a name="SetTranslation"></a><a name="SetTranslation(CATMathVector&amp;)"></a> <dt> o <b>SetTranslation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTranslation</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iTranslationVector</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines <tt>this</tt> CATDynTransformation as a translation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTranslationVector</tt>
   <dd> The vector of the translation.</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATDynReportMode"> <dt> o <b>CATDynReportMode</b>
<dl>
  <dd>
<pre>
enum <b>CATDynReportMode</b> {
  CATDynModification,
  CATDynCreation
}
</pre>
 Type of follow-up to be written in the journal.<br>
 This information is used by applications, depending on the type of operations they want to 
 perform after calling the transformation. This information has no impact on the objects of the
 geometrical modeler itself.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> CATDynModification</tt>
   <dd> The transformation is seen as a modification: the body is always duplicated, but the application
 wants to mask the input body for showing only the resulting body (case of an applicative
 transformation). This is the default of a CATDynTransformation.
 </dd>
    <dt><tt> CATDynCreation</tt>
   <dd> The transformation is seen as a creation: The application keeps the input body and
 the duplicated body, and wants to union them for example:
 this is a typical case of an applicative operation of mirror.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDynTransformation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
