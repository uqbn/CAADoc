<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMUseItf Interface CATIGSMUseCircleBitangentRadius</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATGSMUseItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIGSMUseCircleBitangentRadius','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMUseCircleBitangentRadius','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIGSMUseCircleBitangentRadius','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIGSMUseCircleBitangentRadius','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATGSMUseItf Interface CATIGSMUseCircleBitangentRadius</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIGSMUseCircleBitangentRadius_57189','CATIGSMUseCircleBitangentRadius','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIGSMUseCircleBitangentRadius</b>
</p>
<p>
<b><i> Interface to circle tangent to two curves feature.</i></b><br>

 <b>Role</b>: Allows you to access data of the circle feature created to
 be tangent to 2 curves with a given radius, 
 with respect to a support surface.
 The curves can be degenerated into points.
 <dl>
  <dt> <b>See also:</b> 
  <dd> CATIGSMUseFactory
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBeginOfCircle(int&amp;)"><b>GetBeginOfCircle</b></a>(int&amp;)
<dd>  Gets the number of the beginning curve of the circle.
 <dt> o 
    <a href="#GetDiameter(CATICkeParm_var&amp;)"><b>GetDiameter</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the diameter of the circle.
 <dt> o 
    <a href="#GetDiameterMode(CATBoolean&amp;)"><b>GetDiameterMode</b></a>(CATBoolean&amp;)
<dd>  Gets DiameterMode.
 <dt> o 
    <a href="#GetDiscriminationIndex(int&amp;)"><b>GetDiscriminationIndex</b></a>(int&amp;)
<dd>  Get the Index of the solution.
 <dt> o 
    <a href="#GetFirstCurve(CATIMmiMechanicalFeature_var&amp;)"><b>GetFirstCurve</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the first element to which the circle will be tangent.
 <dt> o 
    <a href="#GetFirstOrientation(CATGSMOrientation&amp;)"><b>GetFirstOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the first curve orientation for circle computation.
 <dt> o 
    <a href="#GetFirstTangentOrientation(CATGSMOrientation&amp;)"><b>GetFirstTangentOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the first tangent curve orientation for circle computation.
 <dt> o 
    <a href="#GetPlaneNormal(CATMathVector&amp;)"><b>GetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Get the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#GetRadius(CATICkeParm_var&amp;)"><b>GetRadius</b></a>(CATICkeParm_var&amp;)
<dd>  Gets the radius of the circle.
 <dt> o 
    <a href="#GetSecondCurve(CATIMmiMechanicalFeature_var&amp;)"><b>GetSecondCurve</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the second element to which the circle will be tangent.
 <dt> o 
    <a href="#GetSecondOrientation(CATGSMOrientation&amp;)"><b>GetSecondOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the second curve orientation for circle computation.
 <dt> o 
    <a href="#GetSecondTangentOrientation(CATGSMOrientation&amp;)"><b>GetSecondTangentOrientation</b></a>(CATGSMOrientation&amp;)
<dd>  Gets the second tangent curve orientation for circle computation.
 <dt> o 
    <a href="#GetSupport(CATIMmiMechanicalFeature_var&amp;)"><b>GetSupport</b></a>(CATIMmiMechanicalFeature_var&amp;)
<dd>  Gets the support surface.
 <dt> o 
    <a href="#GetTrimMode(CATGSMCornerTrimMode&amp;)"><b>GetTrimMode</b></a>(CATGSMCornerTrimMode&amp;)
<dd>  Queries whether reference curves are trimmed or not.
 <dt> o 
    <a href="#InvertFirstOrientation()"><b>InvertFirstOrientation</b></a>()
<dd>  Inverts the first curve orientation for circle computation.
 <dt> o 
    <a href="#InvertSecondOrientation()"><b>InvertSecondOrientation</b></a>()
<dd>  Inverts the second curve orientation for circle computation.
 <dt> o 
    <a href="#SetBeginOfCircle(int)"><b>SetBeginOfCircle</b></a>(int)
<dd>  Sets the number of the beginning curve of the circle.
 <dt> o 
    <a href="#SetDiameter(CATICkeParm_var)"><b>SetDiameter</b></a>(CATICkeParm_var)
<dd>  Sets DiameterMode to TRUE and then sets the diameter.
 <dt> o 
    <a href="#SetDiameterMode(CATBoolean)"><b>SetDiameterMode</b></a>(CATBoolean)
<dd>  Sets DiameterMode.
 <dt> o 
    <a href="#SetDiscriminationIndex(int)"><b>SetDiscriminationIndex</b></a>(int)
<dd>  Set the Index of the solution.
 <dt> o 
    <a href="#SetFirstCurve(CATIMmiMechanicalFeature_var)"><b>SetFirstCurve</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the first element to which the circle will be tangent.
 <dt> o 
    <a href="#SetFirstOrientation(CATGSMOrientation)"><b>SetFirstOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the first curve orientation for circle computation.
 <dt> o 
    <a href="#SetFirstTangentOrientation(CATGSMOrientation)"><b>SetFirstTangentOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the first tangent curve orientation for circle computation.
 <dt> o 
    <a href="#SetPlaneNormal(CATMathVector&amp;)"><b>SetPlaneNormal</b></a>(CATMathVector&amp;)
<dd>  Set the Normal of the plane created when the Support of the curve is not specified.
 <dt> o 
    <a href="#SetRadius(CATICkeParm_var)"><b>SetRadius</b></a>(CATICkeParm_var)
<dd>  Sets DiameterMode to FALSE and then sets the radius.
 <dt> o 
    <a href="#SetSecondCurve(CATIMmiMechanicalFeature_var)"><b>SetSecondCurve</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the second element to which the circle will be tangent.
 <dt> o 
    <a href="#SetSecondOrientation(CATGSMOrientation)"><b>SetSecondOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the second curve orientation for circle computation.
 <dt> o 
    <a href="#SetSecondTangentOrientation(CATGSMOrientation)"><b>SetSecondTangentOrientation</b></a>(CATGSMOrientation)
<dd>  Sets the second tangent curve orientation for circle computation.
 <dt> o 
    <a href="#SetSupport(CATIMmiMechanicalFeature_var)"><b>SetSupport</b></a>(CATIMmiMechanicalFeature_var)
<dd>  Sets the support surface.
 <dt> o 
    <a href="#SetTrimMode(CATGSMCornerTrimMode)"><b>SetTrimMode</b></a>(CATGSMCornerTrimMode)
<dd>  Sets the trim mode of the reference curves.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBeginOfCircle"></a><a name="GetBeginOfCircle(int&amp;)"></a> <dt> o <b>GetBeginOfCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBeginOfCircle</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>NumWire</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the number of the beginning curve of the circle.
 <br>This parameter is used to stabilize the resulting circle
</dl>
<a name="GetDiameter"></a><a name="GetDiameter(CATICkeParm_var&amp;)"></a> <dt> o <b>GetDiameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiameter</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>ohDiameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the diameter of the circle.
 <br> Note: Succeeds only if DiameterMode is set to TRUE
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ohDiameter</tt>
   <dd>      diameter</dd>
</dl>
</dl>
</dl>
<a name="GetDiameterMode"></a><a name="GetDiameterMode(CATBoolean&amp;)"></a> <dt> o <b>GetDiameterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiameterMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oDiameterMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets DiameterMode. DiameterMode = FALSE implies radius (default), 
 <br> Note: DiameterMode = TRUE implies diameter
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDiameterMode</tt>
   <dd>      Diameter Mode</dd>
</dl>
</dl>
</dl>
<a name="GetDiscriminationIndex"></a><a name="GetDiscriminationIndex(int&amp;)"></a> <dt> o <b>GetDiscriminationIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDiscriminationIndex</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oIndexSol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Index of the solution.<br>
 Several resulting solutions produced by the operator can be same 
 oriented regarding to the input wire bodies. 
 In such a case, they are sorted in order to distinguish them.<br>
 The Sequence FirstOrientation - SecondOrientation - IndexSol 
 allows you to identifie a unique one-domain solution.<br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIndexSol</tt>
   <dd>     int oIndexSol</dd>
</dl>
</dl>
</dl>
<a name="GetFirstCurve"></a><a name="GetFirstCurve(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetFirstCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstCurve</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oFirstElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first element to which the circle will be tangent.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstElem</tt>
   <dd>      first element : a curve or a point</dd>
</dl>
</dl>
</dl>
<a name="GetFirstOrientation"></a><a name="GetFirstOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="GetFirstTangentOrientation"></a><a name="GetFirstTangentOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetFirstTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstTangentOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the first tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="GetPlaneNormal"></a><a name="GetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>GetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlaneNormal</b>(<td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="GetRadius"></a><a name="GetRadius(CATICkeParm_var&amp;)"></a> <dt> o <b>GetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRadius</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the radius of the circle. 
 <br> Note: Succeeds only if DiameterMode is set to FALSE
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRadius</tt>
   <dd>      radius</dd>
</dl>
</dl>
</dl>
<a name="GetSecondCurve"></a><a name="GetSecondCurve(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetSecondCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondCurve</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oSecondElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second element to which the circle will be tangent.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecondElem</tt>
   <dd>       second element : a curve or a point</dd>
</dl>
</dl>
</dl>
<a name="GetSecondOrientation"></a><a name="GetSecondOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecondOrient</tt>
   <dd>      second orientation</dd>
</dl>
</dl>
</dl>
<a name="GetSecondTangentOrientation"></a><a name="GetSecondTangentOrientation(CATGSMOrientation&amp;)"></a> <dt> o <b>GetSecondTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondTangentOrientation</b>(<td><script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation&amp;')</script> <td><tt>oSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the second tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecontOrient</tt>
   <dd>      second orientation</dd>
</dl>
</dl>
</dl>
<a name="GetSupport"></a><a name="GetSupport(CATIMmiMechanicalFeature_var&amp;)"></a> <dt> o <b>GetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('CATIMmiMechanicalFeature_var','CATIMmiMechanicalFeature_var&amp;')</script> <td><tt>oSupport</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSupport</tt>
   <dd>       support</dd>
</dl>
</dl>
</dl>
<a name="GetTrimMode"></a><a name="GetTrimMode(CATGSMCornerTrimMode&amp;)"></a> <dt> o <b>GetTrimMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrimMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCornerTrimMode','CATGSMCornerTrimMode&amp;')</script> <td><tt>oTrimMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Queries whether reference curves are trimmed or not.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTrimMode</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerTrimMode','');return false">CATGSMCornerTrimMode</a>
</dl>
</dl>
<a name="InvertFirstOrientation"></a><a name="InvertFirstOrientation()"></a> <dt> o <b>InvertFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertFirstOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the first curve orientation for circle computation.
</dl>
<a name="InvertSecondOrientation"></a><a name="InvertSecondOrientation()"></a> <dt> o <b>InvertSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>InvertSecondOrientation</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the second curve orientation for circle computation.
</dl>
<a name="SetBeginOfCircle"></a><a name="SetBeginOfCircle(int)"></a> <dt> o <b>SetBeginOfCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetBeginOfCircle</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>NumWire</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the number of the beginning curve of the circle.
 <br>This parameter is used to stabilize the resulting circle
</dl>
<a name="SetDiameter"></a><a name="SetDiameter(CATICkeParm_var)"></a> <dt> o <b>SetDiameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDiameter</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>ihDiameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets DiameterMode to TRUE and then sets the diameter.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ihDiameter</tt>
   <dd>      diameter</dd>
</dl>
</dl>
</dl>
<a name="SetDiameterMode"></a><a name="SetDiameterMode(CATBoolean)"></a> <dt> o <b>SetDiameterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDiameterMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iDiameterMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets DiameterMode. 
 <br>DiameterMode = FALSE implies radius (default), 
 <br>DiameterMode = TRUE implies diameter. 
 <br>Note: When DiameterMode is changed, Radius/Diameter value which is stored will not be modified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDiameterMode</tt>
   <dd>      Diameter Mode</dd>
</dl>
</dl>
</dl>
<a name="SetDiscriminationIndex"></a><a name="SetDiscriminationIndex(int)"></a> <dt> o <b>SetDiscriminationIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDiscriminationIndex</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndexSol</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the Index of the solution.
 Several resulting solutions produced by the operator can be same 
 oriented regarding to the input wire bodies. 
 In such a case, they are sorted in order to distinguish them.<br>
 The Sequence FirstOrientation - SecondOrientation - IndexSol
 allows you to identifie a unique one-domain solution.<br>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexSol</tt>
   <dd>     int iIndexSol</dd>
</dl>
</dl>
</dl>
<a name="SetFirstCurve"></a><a name="SetFirstCurve(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetFirstCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstCurve</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iFirstElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first element to which the circle will be tangent.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstElem</tt>
   <dd>      first element : a curve or a point</dd>
</dl>
</dl>
</dl>
<a name="SetFirstOrientation"></a><a name="SetFirstOrientation(CATGSMOrientation)"></a> <dt> o <b>SetFirstOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="SetFirstTangentOrientation"></a><a name="SetFirstTangentOrientation(CATGSMOrientation)"></a> <dt> o <b>SetFirstTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstTangentOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iFirstOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the first tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstOrient</tt>
   <dd>      first orientation</dd>
</dl>
</dl>
</dl>
<a name="SetPlaneNormal"></a><a name="SetPlaneNormal(CATMathVector&amp;)"></a> <dt> o <b>SetPlaneNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPlaneNormal</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iNormal</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the Normal of the plane created when the Support of the curve is not specified.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNormal</tt>
   <dd>    CATMathVector</dd>
</dl>
</dl>
</dl>
<a name="SetRadius"></a><a name="SetRadius(CATICkeParm_var)"></a> <dt> o <b>SetRadius</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRadius</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script> <td><tt>iRadius</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets DiameterMode to FALSE and then sets the radius.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRadius</tt>
   <dd>      radius</dd>
</dl>
</dl>
</dl>
<a name="SetSecondCurve"></a><a name="SetSecondCurve(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetSecondCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondCurve</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iSecondElem</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second element to which the circle will be tangent.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondElem</tt>
   <dd>      second element : a curve or a point</dd>
</dl>
</dl>
</dl>
<a name="SetSecondOrientation"></a><a name="SetSecondOrientation(CATGSMOrientation)"></a> <dt> o <b>SetSecondOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondOrient</tt>
   <dd>      second orientation</dd>
</dl>
</dl>
</dl>
<a name="SetSecondTangentOrientation"></a><a name="SetSecondTangentOrientation(CATGSMOrientation)"></a> <dt> o <b>SetSecondTangentOrientation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondTangentOrientation</b>(<td> const <script type="text/javascript"> activateLink('CATGSMOrientation','CATGSMOrientation')</script> <td><tt>iSecondOrient</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the second tangent curve orientation for circle computation.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondOrient</tt>
   <dd>      second  orientation</dd>
</dl>
</dl>
</dl>
<a name="SetSupport"></a><a name="SetSupport(CATIMmiMechanicalFeature_var)"></a> <dt> o <b>SetSupport</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSupport</b>(<td> const <script type="text/javascript"> activateLink('CATIMmiMechanicalFeature','CATIMmiMechanicalFeature_var')</script> <td><tt>iSupport</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the support surface.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>       support</dd>
</dl>
</dl>
</dl>
<a name="SetTrimMode"></a><a name="SetTrimMode(CATGSMCornerTrimMode)"></a> <dt> o <b>SetTrimMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrimMode</b>(<td><script type="text/javascript"> activateLink('CATGSMCornerTrimMode','CATGSMCornerTrimMode')</script> <td><tt>iTrimMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the trim mode of the reference curves.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrimMode</tt>
   <dd> </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATGSMCornerTrimMode','');return false">CATGSMCornerTrimMode</a>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIGSMUseCircleBitangentRadius.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGSMUseItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
