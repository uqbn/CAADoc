<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIMf3DAxisSystem</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMf3DAxisSystem','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMf3DAxisSystem','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMf3DAxisSystem','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMf3DAxisSystem','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>MecModInterfaces Interface CATIMf3DAxisSystem</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMf3DAxisSystem_31420','CATIMf3DAxisSystem','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMf3DAxisSystem</b>
</p>
<p>
<b><i> Interface for an axis system.</i></b><br>

 <b>Role:</b>This interface enables you to modify or retrieve the 
 characterictics of an axis system created by the <a href="#" onClick="openLink('CATIMf3DAxisSystemFactory','');return false">CATIMf3DAxisSystemFactory</a> interface.  An axis system is a feature defined by an origin and three axis directions. 

 <p><b>Axis System Origin</b>
 <br>An axis system is located at a position in the absolute axis system 
 which represents the origin. This location can be defined either by three 
 coordinates , see 
<a href="#" onClick="openLink('','SetOrigin');return false">SetOrigin</a> / 
<a href="#" onClick="openLink('','SetMathAxis');return false">SetMathAxis</a> , it can be  defined by a geometrical feature, or it can be at the origin of the three 
 axis directions. For the last two cases, refer to the 
<a href="#" onClick="openLink('','SetOriginPoint');return false">SetOriginPoint</a>  method.</p>

 <p><b>Axis Directions</b>
 <br>An axis system is defined by three orthonormal axis 
 directions. If the three axis directions are not orthogonal, the update 
 operation on the feature will generate an error.
 <br>There are three ways to define the axis directions of an axis system, 
 each of them depends on the axis system type 
 ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ): <ul>
 <li><b>Standard</b> Axis System :</b></li>

 <p>The three directions are defined either by coordinates, see 
 
<a href="#" onClick="openLink('','SetVectors');return false">SetVectors</a> / 
<a href="#" onClick="openLink('','SetMathAxis');return false">SetMathAxis</a> or with geometrical features  thanks to the 
<a href="#" onClick="openLink('','SetAxisDirection');return false">SetAxisDirection</a> method. </p>
 <li><b>Axis Rotation</b> Axis System:</b></li>

 <p>The rotation's axis direction is defined either by coordinates or with a 
 geometrical feature like any axis with the <tt>Standard</tt> way. 
 The rotation about this axis is defined by the rotation of a geometry 
 projected in the orthogonal plane to the rotation's axis. The rotation's 
 angle value is a knowledge parameter consultable and modifiable with the 
 
<a href="#" onClick="openLink('','GetAxisRotationParm');return false">GetAxisRotationParm</a> method. The geometry is a geometrical  feature, named reference, that you can set with the 
 
<a href="#" onClick="openLink('','SetAxisRotationReference');return false">SetAxisRotationReference</a> method and that you can retrieve with the  
<a href="#" onClick="openLink('','GetAxisRotationReference');return false">GetAxisRotationReference</a> method.</p>
 <li><b>Euler Angles Axis</b> System:</li> 
 <p>The three directions are automatically computed thanks to three 
 angle values. You retrieve the knowledge parameters to consult the angle values 
 or modify them thanks to the 
<a href="#" onClick="openLink('','GetEulerAnglesParm');return false">GetEulerAnglesParm</a> method. In this case, the axis system already forms an orthonormal and right-handed axis system.</p>
 </ul></p>

 <p><b> The Axis System Internal Data</b>
 <br>An axis system is internally defined by twelve knowledge parameters 
 that you can retrieve by the 
<a href="#" onClick="openLink('','GetParm');return false">GetParm</a> methods.  These parameters are computed from the origin and the axes valuations.

 <p><b> The Axis Order </b>
 <br>The axis order enables to compute an ortho-normal axis system if its internal data
 do not form one. Except the Euler axis system where the axis order is not customizable, it 
 can be important to control the axis order. 
 <ul>
 <li>In the <tt>Standard</tt> axis system, the first direction 
 is never modified, the second and the third axis directions can be 
 re-computed to have an orthogonal axis system</li>
 <li>In the <tt>Axis Rotation</tt> axis system,
 the axis of rotation is defined by the first axis direction. The second axis direction
 is the rotation's reference and the third can be 
 re-computed to have an orthogonal axis system</li>
 </ul>
 To change the axis direction order there are two steps to follow:
 <ol>
 <li>Call for each axis direction the 
<a href="#" onClick="openLink('','SetAxisType');return false">SetAxisType</a> method  with the <tt>CATAxisSystemSameDirection</tt> value</li>
 <li>Call the 
<a href="#" onClick="openLink('','SetAxisDirection');return false">SetAxisDirection</a> method with the  
<a href="#" onClick="openLink('CATAxisSystemXYZNumber','');return false">CATAxisSystemXYZNumber</a> in the order</li> </ol>
 Refer to the article entitled "Creating Axis Systems" in the CAA Encyclopedia 
 for more details about the axis order implementation.

 <p><b> The Axis System Orientation </b>
 <br>The axis system orientation is consultable with the 
<a href="#" onClick="openLink('','IsDirect');return false">IsDirect</a>  method. Except the Euler axis system which is always right-handed, you can 
 control the axis system orientation. It is enough to control the vector 
 coordinates or to control the geometrical feature direction. 
 In this last case, with the 
<a href="#" onClick="openLink('','SetAxisType');return false">SetAxisType</a> method you can inverse an  axis direction with <tt>CATAxisSystemOppositeDirection</tt> option.</p>

 <p><b> The Explicit Axis System</b>
 <br>It is possible to "fix" the geometry, the associated <tt>CATBody</tt>, 
 of the feature. In this case, the feature is isolated and you cannot modify 
 it. See the 
<a href="#" onClick="openLink('','SetAxisSystemType');return false">SetAxisSystemType</a> method. 
 <p><b> The Axis System Sub-Elements </b>
 <br>The sub-elements are the three planes, the three axes and the origin 
 point of the axis system. There are BRep objects, in other words objects
 handled by the 
<a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a> interface. You retrieve them by the  
<a href="#" onClick="openLink('','GetPlaneBRepAccess');return false">GetPlaneBRepAccess</a> , 
<a href="#" onClick="openLink('','GetAxisBRepAccess');return false">GetAxisBRepAccess</a> and  
<a href="#" onClick="openLink('','GetOriginPointBRepAccess');return false">GetOriginPointBRepAccess</a> methods respectively. You should featurize  them ( 
<a href="#" onClick="openLink('CATIFeaturize','');return false">CATIFeaturize</a> ) before using them as input of features.</p>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAxisBRepAccess(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)"><b>GetAxisBRepAccess</b></a>(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)
<dd>  Retrieves the BRep object of the X, Y or Z axis.
 <dt> o 
    <a href="#GetAxisDirection(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)"><b>GetAxisDirection</b></a>(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)
<dd>  Retrieves the geometrical feature which defines an axis direction.
 <dt> o 
    <a href="#GetAxisRotationParm(CATICkeParm_var&amp;)"><b>GetAxisRotationParm</b></a>(CATICkeParm_var&amp;)
<dd>  Retrieves the rotation angle parameter.
 <dt> o 
    <a href="#GetAxisRotationReference(CATBaseUnknown_var&amp;)"><b>GetAxisRotationReference</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the reference's geometry for the rotation about the rotation axis.
 <dt> o 
    <a href="#GetAxisSystemType(CATAxisSystemType&amp;)"><b>GetAxisSystemType</b></a>(CATAxisSystemType&amp;)
<dd>  Retrieves the axis system type.
 <dt> o 
    <a href="#GetAxisType(CATAxisSystemXYZNumber,CATAxisSystemDirectionType&amp;)"><b>GetAxisType</b></a>(CATAxisSystemXYZNumber,CATAxisSystemDirectionType&amp;)
<dd>  Retrieves the axis direction definition mode.
 <dt> o 
    <a href="#GetBRepAlias(CATCell_var&amp;,CATUnicodeString&amp;)"><b>GetBRepAlias</b></a>(CATCell_var&amp;,CATUnicodeString&amp;)
<dd>  Retrieves the name of a BRep object of the axis system.
 <dt> o 
    <a href="#GetEulerAnglesParm(CATICkeParm_var[3])"><b>GetEulerAnglesParm</b></a>(CATICkeParm_var[3])
<dd>  Retrieves the Euler angle parameters.
 <dt> o 
    <a href="#GetMathAxis(CATMathAxis&amp;)"><b>GetMathAxis</b></a>(CATMathAxis&amp;)
<dd>  Retrieves the mathematical axis system.
 <dt> o 
    <a href="#GetOrigin(CATMathPoint&amp;)"><b>GetOrigin</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the origin location with a mathematical point.
 <dt> o 
    <a href="#GetOriginPoint(CATBaseUnknown_var&amp;)"><b>GetOriginPoint</b></a>(CATBaseUnknown_var&amp;)
<dd>  Retrieves the geometrical feature which defines the origin.
 <dt> o 
    <a href="#GetOriginPointBRepAccess(CATIBRepAccess_var&amp;)"><b>GetOriginPointBRepAccess</b></a>(CATIBRepAccess_var&amp;)
<dd>  Retrieves the BRep object of the origin point.
 <dt> o 
    <a href="#GetOriginType(CATAxisSystemPointType&amp;)"><b>GetOriginType</b></a>(CATAxisSystemPointType&amp;)
<dd>  Retrieves the origin definition mode.
 <dt> o 
    <a href="#GetParm(CATICkeParm_var[4][3])"><b>GetParm</b></a>(CATICkeParm_var[4][3])
<dd>  Retrieves the internal parameters of the axis system.
 <dt> o 
    <a href="#GetPlaneBRepAccess(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)"><b>GetPlaneBRepAccess</b></a>(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)
<dd>  Retrieves the BRep object of the YZ, ZX or XY plane.
 <dt> o 
    <a href="#GetVectors(CATMathVector&amp;,CATMathVector&amp;)"><b>GetVectors</b></a>(CATMathVector&amp;,CATMathVector&amp;)
<dd>  Retrieves the X axis and Y axis directions.
 <dt> o 
    <a href="#IsCurrent(CATBoolean&amp;)"><b>IsCurrent</b></a>(CATBoolean&amp;)
<dd>  Retrieves if the axis system is the current one.
 <dt> o 
    <a href="#IsDirect(CATAxisSystemIsDirect&amp;)"><b>IsDirect</b></a>(CATAxisSystemIsDirect&amp;)
<dd>  Retrieves the axis system orientation.
 <dt> o 
    <a href="#SetAxisDirection(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)"><b>SetAxisDirection</b></a>(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)
<dd>  Sets a geometrical feature to define an axis direction.
 <dt> o 
    <a href="#SetAxisRotationReference(CATBaseUnknown_var&amp;)"><b>SetAxisRotationReference</b></a>(CATBaseUnknown_var&amp;)
<dd>  Valuates the reference's geometry for the rotation about the rotation axis.
 <dt> o 
    <a href="#SetAxisSystemType(CATAxisSystemType)"><b>SetAxisSystemType</b></a>(CATAxisSystemType)
<dd>  Sets the axis system type.
 <dt> o 
    <a href="#SetAxisType(CATAxisSystemXYZNumber,CATAxisSystemDirectionType)"><b>SetAxisType</b></a>(CATAxisSystemXYZNumber,CATAxisSystemDirectionType)
<dd>  Sets the axis direction definition mode.
 <dt> o 
    <a href="#SetMathAxis(CATMathAxis&amp;)"><b>SetMathAxis</b></a>(CATMathAxis&amp;)
<dd>  Valuates the axis system with a mathematical axis system.
 <dt> o 
    <a href="#SetOrigin(CATMathPoint&amp;)"><b>SetOrigin</b></a>(CATMathPoint&amp;)
<dd>  Valuates the origin location with a mathematical point.
 <dt> o 
    <a href="#SetOriginPoint(CATBaseUnknown_var&amp;)"><b>SetOriginPoint</b></a>(CATBaseUnknown_var&amp;)
<dd>  Sets a geometrical feature to define the origin.
 <dt> o 
    <a href="#SetOriginType(CATAxisSystemPointType)"><b>SetOriginType</b></a>(CATAxisSystemPointType)
<dd>  Sets the origin definition mode.
 <dt> o 
    <a href="#SetVectors(CATMathVector&amp;,CATMathVector&amp;)"><b>SetVectors</b></a>(CATMathVector&amp;,CATMathVector&amp;)
<dd>  Valuates the axis directions.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAxisBRepAccess"></a><a name="GetAxisBRepAccess(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)"></a> <dt> o <b>GetAxisBRepAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisBRepAccess</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIBRepAccess_var','CATIBRepAccess_var&amp;')</script> <td><tt>oAxisBRepAccess</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the BRep object of the X, Y or Z axis.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the axis.
   </dd>
    <dt><tt> oAxisBRepAccess</tt>
   <dd>	    The BRep object of the axis.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <ul>
	  <li>E_FAIL: If an internal error or if the topological body ( the <tt>CATBody</tt> ) 
            does not exist,</li>
     <li>S_OK: otherwise.</li>
     </ul>
</dl>
</dl>
<a name="GetAxisDirection"></a><a name="GetAxisDirection(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAxisDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisDirection</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oPointLineOrPlane</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the geometrical feature which defines an axis direction. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the axis.
   </dd>
    <dt><tt> oPointLineOrPlane</tt>
   <dd>      The geometrical element defining the axis. If the 
      </dd>
<a href="#" onClick="openLink('','SetAxisDirection');return false">SetAxisDirection</a> method has never been called,      the returned value is <tt>NULL_var</tt>.
</dl>
</dl>
</dl>
<a name="GetAxisRotationParm"></a><a name="GetAxisRotationParm(CATICkeParm_var&amp;)"></a> <dt> o <b>GetAxisRotationParm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisRotationParm</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oAngleParm</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the rotation angle parameter.
 <br><b>Role:</b>This method returns the knowledge parameter which defines 
 the rotation angle about the rotation's axis. You can change the 
 parameter value to modify the angle value.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAngleParm</tt>
   <dd>	   The parameter of the rotation angle.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <ul>
		<li>E_FAIL: If an internal error or if the axis system is not 
               <tt>CATAxisSystemAxisRotation</tt>, </li>
       <li>S_OK: otherwise .</li>
   </ul>
</dl>
</dl>
<a name="GetAxisRotationReference"></a><a name="GetAxisRotationReference(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetAxisRotationReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisRotationReference</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oReference</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the reference's geometry for the rotation about the rotation axis.
 <br><b>Role:</b>This method returns the geometrical feature which represents the 
 reference for the rotation about the rotation axis.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oReference</tt>
   <dd>   <ul>
		<li>E_FAIL: If an internal error or if the axis system is not 
               <tt>CATAxisSystemAxisRotation</tt>, </li>
       <li>S_OK: otherwise .</li>
   </ul></dd>
</dl>
</dl>
</dl>
<a name="GetAxisSystemType"></a><a name="GetAxisSystemType(CATAxisSystemType&amp;)"></a> <dt> o <b>GetAxisSystemType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisSystemType</b>(<td><script type="text/javascript"> activateLink('CATAxisSystemType','CATAxisSystemType&amp;')</script> <td><tt>oAxisSystemType</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the axis system type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAxisSystemType</tt>
   <dd>			The axis system type.</dd>
</dl>
</dl>
</dl>
<a name="GetAxisType"></a><a name="GetAxisType(CATAxisSystemXYZNumber,CATAxisSystemDirectionType&amp;)"></a> <dt> o <b>GetAxisType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAxisType</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAxisSystemDirectionType','CATAxisSystemDirectionType&amp;')</script> <td><tt>oDirectionType</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the axis direction definition mode. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the axis direction.
   </dd>
    <dt><tt> oDirectionType</tt>
   <dd>       The axis direction definition mode.</dd>
</dl>
</dl>
</dl>
<a name="GetBRepAlias"></a><a name="GetBRepAlias(CATCell_var&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetBRepAlias</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBRepAlias</b>(<td> const <script type="text/javascript"> activateLink('CATCell_var','CATCell_var&amp;')</script> <td><tt>iCell</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oBRepName</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of a BRep object of the axis system.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCell</tt>
   <dd>	   A cell (vertex, edge or face) of the axis system. 
   </dd>
    <dt><tt> oBRepName</tt>
   <dd>      The name of the BRep object. 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
      <li>E_FAIL: If an internal error or if <tt>iCell</tt> is not a cell
           of the axis system,</li>
      <li>E_INVALIDARG: If <tt>iCell</tt> is equal to <tt>NULL_var</tt>,</li>
      <li>S_OK: otherwise. </li>
      </ul>
</dl>
</dl>
<a name="GetEulerAnglesParm"></a><a name="GetEulerAnglesParm(CATICkeParm_var[3])"></a> <dt> o <b>GetEulerAnglesParm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEulerAnglesParm</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var[3','CATICkeParm_var[3]')</script> <td><tt>oEulerAngles</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Euler angle parameters. 
 <br><b>Role:</b>This method returns the three knowledge parameters which define the 
 Euler angles. You can change the parameter values to modify the angle values.
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEulerAngles</tt>
   <dd>	    The three Euler angles parameters.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
		<li>E_FAIL: If an internal error or if the axis system is not 
               <tt>CATAxisSystemEulerAngles</tt>, </li>
       <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
<a name="GetMathAxis"></a><a name="GetMathAxis(CATMathAxis&amp;)"></a> <dt> o <b>GetMathAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMathAxis</b>(<td><script type="text/javascript"> activateLink('CATMathAxis','CATMathAxis&amp;')</script> <td><tt>oMathAxis</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the mathematical axis system.
 <br><b>Role:</b>This method retrieves from the axis system parameters
 a mathematical axis system.  Any way the axis directions or the origin has 
 been defined, this method returns a mathematical axis system. But attention, 
 the result can be false if an axis direction or the origin is 
 geometry dependant. An axis system update ensures the result. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMathAxis</tt>
   <dd>      The mathematical axis</dd>
</dl>
</dl>
</dl>
<a name="GetOrigin"></a><a name="GetOrigin(CATMathPoint&amp;)"></a> <dt> o <b>GetOrigin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOrigin</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>oOriginPoint</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the origin location with a mathematical point.
 <br><b>Role:</b>This method retrieves from the axis system parameters the 
 location of the axis system origin. Any way the origin has been 
 defined, with a mathematical point, with a geometry or at 
 the origin of the three axis, this method returns the location of the 
 origin. But attention, the result can be false if the origin is 
 geometry dependant. An axis system update ensures the result. 
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOriginPoint</tt>
   <dd>      The mathematical point of the origin.</dd>
</dl>
</dl>
</dl>
<a name="GetOriginPoint"></a><a name="GetOriginPoint(CATBaseUnknown_var&amp;)"></a> <dt> o <b>GetOriginPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOriginPoint</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oOriginPoint</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the geometrical feature which defines the origin. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOriginPoint</tt>
   <dd>      The geometrical point ( </dd>
<a href="#" onClick="openLink('CATPoint','');return false">CATPoint</a> ) or vertex ( 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> ) which defines       the origin. If the 
<a href="#" onClick="openLink('','SetOriginPoint');return false">SetOriginPoint</a> method      has never been called, the returned value is <tt>NULL_var</tt>.
</dl>
</dl>
</dl>
<a name="GetOriginPointBRepAccess"></a><a name="GetOriginPointBRepAccess(CATIBRepAccess_var&amp;)"></a> <dt> o <b>GetOriginPointBRepAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOriginPointBRepAccess</b>(<td><script type="text/javascript"> activateLink('CATIBRepAccess_var','CATIBRepAccess_var&amp;')</script> <td><tt>oOriginPointBRepAccess</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the BRep object of the origin point.
 <br><b>Role:</b>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOriginPointBRepAccess</tt>
   <dd>     The BRep object of the origin point.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <ul>
	  <li>E_FAIL: If an internal error or if the topological body ( the <tt>CATBody</tt> ) 
            does not exist,</li>
     <li>S_OK: otherwise.</li>
     </ul>
</dl>
</dl>
<a name="GetOriginType"></a><a name="GetOriginType(CATAxisSystemPointType&amp;)"></a> <dt> o <b>GetOriginType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOriginType</b>(<td><script type="text/javascript"> activateLink('CATAxisSystemPointType','CATAxisSystemPointType&amp;')</script> <td><tt>oPointType</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the origin definition mode. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPointType</tt>
   <dd>       The definition type of the origin.</dd>
</dl>
</dl>
</dl>
<a name="GetParm"></a><a name="GetParm(CATICkeParm_var[4][3])"></a> <dt> o <b>GetParm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParm</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var[4][3','CATICkeParm_var[4][3]')</script> <td><tt>oCoord</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the internal parameters of the axis system.
 <br><b>Role:</b>This method retrieves the internal parameters which 
 define the origin and the three axes. The value of each parameter can be 
 wrong if the axis system is not up to date. 
 <br>If you modify a parameter, its value can be changed to have an 
 orthogonal axis system. If the parameters form a null vector or form two
 colinear vectors, the axis system is not valid. Its update generates an 
 error.
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoord</tt>
   <dd>	Twelve parameters representing the three coordinates (x,y,z) of :
    <ul>
      <li>The origin point</li>	
      <li>Three vectors,the X,Y Z axis respectively </li>
    </ul></dd>
</dl>
</dl>
</dl>
<a name="GetPlaneBRepAccess"></a><a name="GetPlaneBRepAccess(CATAxisSystemXYZNumber,CATIBRepAccess_var&amp;)"></a> <dt> o <b>GetPlaneBRepAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPlaneBRepAccess</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIBRepAccess_var','CATIBRepAccess_var&amp;')</script> <td><tt>oPlaneBRepAccess</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the BRep object of the YZ, ZX or XY plane.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the plane.
       <ul>
			<li><tt>CATAxisSystemXNumber</tt>: the plane YZ.</li>
			<li><tt>CATAxisSystemYNumber</tt>: the plane ZX.</li>
			<li><tt>CATAxisSystemZNumber</tt>: the plane XY.</li>
       </ul>
   </dd>
    <dt><tt> oPlaneBRepAccess</tt>
   <dd>			The Brep object of the plane.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <ul>
	  <li>E_FAIL: If an internal error or if the topological body ( the <tt>CATBody</tt> ) 
            does not exist,</li>
     <li>S_OK: otherwise.</li>
     </ul>
</dl>
</dl>
<a name="GetVectors"></a><a name="GetVectors(CATMathVector&amp;,CATMathVector&amp;)"></a> <dt> o <b>GetVectors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVectors</b>(<td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oVectorX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>oVectorY</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the X axis and Y axis directions.
 <br><b>Role:</b>This method retrieves from the axis system parameters the 
 mathematical vectors wich define the X axis and the Y axis directions. 
 Any way the axis directions has been defined, 
 with mathematical vectors, with geometries or automatically computed, 
 this method returns the vector coordinates. But attention, the result can 
 be false if an axis direction is geometry dependant. An axis system 
 update ensures the result. 
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVectorX</tt>
   <dd>      The mathematical vector of the X axis
   </dd>
    <dt><tt> oVectorY</tt>
   <dd>      The mathematical vector of the Y axis
</dd>
</dl>
</dl>
</dl>
<a name="IsCurrent"></a><a name="IsCurrent(CATBoolean&amp;)"></a> <dt> o <b>IsCurrent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsCurrent</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oIsCurrent</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves if the axis system is the current one.
 <br><b>Role:</b>An axis system can be the current one with the 
 
<a href="#" onClick="openLink('CATIMf3DAxisSystemManager','SetAxisSystemCurrent');return false">CATIMf3DAxisSystemManager.SetAxisSystemCurrent</a> method. This method allows you to know if this axis system is the current one.
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIsCurrent</tt>
   <dd>      Equal to TRUE if the axis system is the current one, else 
      equal to FALSE.
</dd>
</dl>
</dl>
</dl>
<a name="IsDirect"></a><a name="IsDirect(CATAxisSystemIsDirect&amp;)"></a> <dt> o <b>IsDirect</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsDirect</b>(<td><script type="text/javascript"> activateLink('CATAxisSystemIsDirect','CATAxisSystemIsDirect&amp;')</script> <td><tt>oIsDirect</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the axis system orientation.
 <br><b>Role:</b>This method enables you to know if the axis system is 
 right-handed (direct) or left-handed (reverse) or not orthogonal. The 
 update operation on a not orthogonal axis system generates an error.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIsDirect</tt>
   <dd>			Right-handed, left-handed or not orthogonal.</dd>
</dl>
</dl>
</dl>
<a name="SetAxisDirection"></a><a name="SetAxisDirection(CATAxisSystemXYZNumber,CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetAxisDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisDirection</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iPointLineOrPlane</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets a geometrical feature to define an axis direction.
 <br><b>Role:</b>This method enables you two things:
 <ul>
 <li><tt>iPointLineOrPlane</tt> is not <tt>NULL_var</tt>: To link an axis 
 direction to a geometry. In this case, the
 method automatically changes the axis direction definition mode to become 
 <tt>CATAxisSystemSameDirection</tt> if the mode is 
 <tt>CATAxisSystemCoordinatesDirection</tt> otherwise the mode 
 is not changed.</li>
 <li><tt>iPointLineOrPlane</tt> is <tt>NULL_var</tt>: If the 
 axis direction definition mode is not 
 <tt>CATAxisSystemCoordinatesDirection</tt> the axis direction will
 be build in order to have an orthogonal axis system </li>
 </ul>
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the axis.
   </dd>
    <dt><tt> iPointLineOrPlane</tt>
   <dd>      It is a feature, in other words a </dd>
<a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a> , which can      be:
    <ul>  
       <li>A point ( 
<a href="#" onClick="openLink('CATPoint','');return false">CATPoint</a> or 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> ) ,         the axis direction is the vector from the origin point to the 
        point. (*)</li>
       <li>A line ( 
<a href="#" onClick="openLink('CATLine','');return false">CATLine</a> or 
<a href="#" onClick="openLink('CATIMfLine','');return false">CATIMfLine</a> ), the axis direction        is the line direction. (*)</li>
       <li>A plane ( 
<a href="#" onClick="openLink('CATPlane','');return false">CATPlane</a> or 
<a href="#" onClick="openLink('CATIMfPlane','');return false">CATIMfPlane</a> ), the axis         direction is the normal vector to the plane. (*)</li>
    </ul>
 (*)If the axis direction definition mode is <tt>CATAxisSystemSameDirection</tt> otherwise
 the direction is opposed.
 <br>The 
<a href="#" onClick="openLink('CATIMfLine','');return false">CATIMfLine</a>, 
<a href="#" onClick="openLink('CATIMfPlane','');return false">CATIMfPlane</a> and 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> features  are the featurizations of a selecting object. They are called BRep 
 features. Refer to the 
<a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a> and 
<a href="#" onClick="openLink('CATIFeaturize','');return false">CATIFeaturize</a>  interfaces for more information about the BRep features.
  
   
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
</dl>
<a name="SetAxisRotationReference"></a><a name="SetAxisRotationReference(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetAxisRotationReference</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisRotationReference</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iReference</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Valuates the reference's geometry for the rotation about the rotation axis.
 <br><b>Role:</b>This method enables you to affect a geometrical feature 
 to represent the axis which will be projected in the orthogonal plane
 to the rotation's axis. It represents the rotation's reference.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReference</tt>
   <dd>	   It is a geometrical feature, in other words a </dd>
<a href="#" onClick="openLink('CATISpecObject','');return false">CATISpecObject</a> . It       can be 
    <ul>  
       <li>A point ( 
<a href="#" onClick="openLink('CATPoint','');return false">CATPoint</a> or 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> ) :         the axis direction is the vector from the origin point to the point.(*)</li>
       <li>A line ( 
<a href="#" onClick="openLink('CATLine','');return false">CATLine</a> or 
<a href="#" onClick="openLink('CATIMfLine','');return false">CATIMfLine</a> ): the axis direction is the         line direction.(*)</li>
       <li>A plane ( 
<a href="#" onClick="openLink('CATPlane','');return false">CATPlane</a> or 
<a href="#" onClick="openLink('CATIMfPlane','');return false">CATIMfPlane</a> ): the axis           direction is the normal vector to the plane.(*)</li>
        
    </ul>
 (*)If the axis direction definition mode is <tt>CATAxisSystemSameDirection</tt> otherwise
 the direction is opposed.
 <br>The 
<a href="#" onClick="openLink('CATIMfLine','');return false">CATIMfLine</a>, 
<a href="#" onClick="openLink('CATIMfPlane','');return false">CATIMfPlane</a> and 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> features are the  featurizations of a selecting object. They are called BRep features. Refer to 
 the 
<a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a> and 
<a href="#" onClick="openLink('CATIFeaturize','');return false">CATIFeaturize</a> interfaces for more information about the  BRep features. 
   
  <dt> <b>Returns:</b> 
  <dd>       <ul>
       <li>E_FAIL: for an internal error or if the axis system is not 
               <tt>CATAxisSystemAxisRotation</tt></li>
       <li>E_INVALIDARG: the reference is not valid: it is not a 
<a href="#" onClick="openLink('CATPlane','');return false">CATPlane</a>,                          
<a href="#" onClick="openLink('CATLine','');return false">CATLine</a>, 
<a href="#" onClick="openLink('CATPoint','');return false">CATPoint</a>, 
<a href="#" onClick="openLink('CATIMfPlane','');return false">CATIMfPlane</a>,                          
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a> or a 
<a href="#" onClick="openLink('CATIMfLine','');return false">CATIMfLine</a>. </li>                         
       <li>S_OK: otherwise</li>
     </ul>
</dl>
</dl>
</dl>
<a name="SetAxisSystemType"></a><a name="SetAxisSystemType(CATAxisSystemType)"></a> <dt> o <b>SetAxisSystemType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisSystemType</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemType','CATAxisSystemType')</script> <td><tt>iAxisSystemType</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the axis system type.
 <br><b>Role:</b>This method enables you to modify the type of the axis 
 system. This method modifies the internal data:
 
 <ul>
  <li><tt>iAxisSystemType</tt> != <tt>CATAxisSystemAxisRotation</tt></li>
      <p>The parameters of the Axis Rotation type are lost: there is no more
     the angle parameter and the geometry is lost</p>
  <li><tt>iAxisSystemType</tt> != <tt>CATAxisSystemEulerAngles</tt></li>
     <p>The parameters of the Euler type are lost: there is no more
        the three angle parameters.</p>
 </ul>
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisSystemType</tt>
   <dd>	   The axis system type.</dd>
</dl>
</dl>
</dl>
<a name="SetAxisType"></a><a name="SetAxisType(CATAxisSystemXYZNumber,CATAxisSystemDirectionType)"></a> <dt> o <b>SetAxisType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAxisType</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemXYZNumber','CATAxisSystemXYZNumber')</script> <td><tt>iAxisNumber</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAxisSystemDirectionType','CATAxisSystemDirectionType')</script> <td><tt>iDirectionType</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the axis direction definition mode. 
 <br><b>Role:</b> An axis direction can be defined either by a 
 geometrical feature or by coordinates.
 <ul>
 <li>iDirectionType= <tt>CATAxisSystemCoordinatesDirection</tt>: the axis 
       direction is defined by coordinates.</li>
      
 <li>iDirectionType<><tt>CATAxisSystemCoordinatesDirection</tt> and 
<a href="#" onClick="openLink('','GetAxisDirection');return false">GetAxisDirection</a>      returns no feature: the axis direction will be computed in order to
     build an orthogonal axis system with the two other axes.</li>
       
 <li>iDirectionType= <tt>CATAxisSystemSameDirection</tt> 
       and 
<a href="#" onClick="openLink('','GetAxisDirection');return false">GetAxisDirection</a> returns a feature: The axis is defined        by a geometry which can be.</li>
   <ul>  
   <li>A point, the axis direction is the vector from 
      the origin point to the point.</li>
   <li>A line, the axis direction is the line direction.</li>
   <li>A plane, the axis direction is the normal vector to the plane.</li>
   </ul>
 <li>iDirectionType= <tt>CATAxisSystemOppositeDirection</tt>
       and 
<a href="#" onClick="openLink('','GetAxisDirection');return false">GetAxisDirection</a> returns a feature: The axis is defined        by a geometry which can be.</li>
   <ul>  
   <li>A point, the axis direction is the vector from 
      the point to the origin point.</li>
   <li>A line, the axis direction is opposed to the line direction.</li>
   <li>A plane, the axis direction is opposed the normal vector to the 
     plane.</li>
   </ul>
 </ul>

   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAxisNumber</tt>
   <dd>      The number of the axis direction.
   </dd>
    <dt><tt> iDirectionType</tt>
   <dd>      The axis direction type.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
<a name="SetMathAxis"></a><a name="SetMathAxis(CATMathAxis&amp;)"></a> <dt> o <b>SetMathAxis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMathAxis</b>(<td> const <script type="text/javascript"> activateLink('CATMathAxis','CATMathAxis&amp;')</script> <td><tt>iMathAxis</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Valuates the axis system with a mathematical axis system. 
 <br><b>Role:</b>This method enables you to valuate the axis system with 
 a mathematical axis system. This method automatically unset the geometry 
 (origin / three axis directions) and changes the type ( origin/ three axis direction) to become 
 <tt>CATAxisSystemCoordinatesPoint</tt> and 
 <tt>CATAxisSystemCoordinatesDirection</tt> respectively.
 So after this call, the 
<a href="#" onClick="openLink('','GetAxisDirection');return false">GetAxisDirection</a> method returns <tt>NULL_var</tt> for the three axis  directions and the 
<a href="#" onClick="openLink('','GetOriginPoint');return false">GetOriginPoint</a> method returns <tt>NULL_var</tt> for the origin. <br>A mathematical axis system is by construction orthonormal. So the 
 axis system is orthonormal. But like any 
<a href="#" onClick="openLink('CATMathAxis','');return false">CATMathAxis</a> object, it may be right-handed or left-handed.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMathAxis</tt>
   <dd>      The mathematical axis system. If <tt>iMathAxis</tt> is not valid 
      (a NULL vector or two colinear vectors) the axis system update will 
      generate an error. The </dd>
<a href="#" onClick="openLink('CATAxisSystemIsDirect','');return false">CATAxisSystemIsDirect</a>      value becomes <tt>CATAxisSystemNorOrthogonal</tt>
   
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
</dl>
<a name="SetOrigin"></a><a name="SetOrigin(CATMathPoint&amp;)"></a> <dt> o <b>SetOrigin</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOrigin</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iOriginPoint</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Valuates the origin location with a mathematical point.
 <br><b>Role:</b>This method enables you to locate the axis system origin
 with a mathematical point. This method automatically changes the origin 
 definition mode to become <tt>CATAxisSystemCoordinatesPoint</tt> and 
 unset the geometry. The 
<a href="#" onClick="openLink('','GetOriginPoint');return false">GetOriginPoint</a> method returns  <tt>NULL_var</tt> after this call.
  
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOriginPoint</tt>
   <dd>      The mathematical point of the origin.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
<a name="SetOriginPoint"></a><a name="SetOriginPoint(CATBaseUnknown_var&amp;)"></a> <dt> o <b>SetOriginPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOriginPoint</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iOriginPoint</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets a geometrical feature to define the origin. 
 <br><b>Role:</b>This method enables you two things:
 <ul>
 <li><tt>iOriginPoint</tt> is not <tt>NULL_var</tt>: To link the axis 
 system origin position to a point feature position. In this case, the
 method automatically changes the origin definition mode to become 
 <tt>CATAxisSystemPoint</tt> </li>
 <li><tt>iOriginPoint</tt> is <tt>NULL_var</tt>: If the 
 origin definition mode is <tt>CATAxisSystemPoint</tt> the origin will
 be located at the intersection of the three axes.</li>
 </ul>
 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOriginPoint</tt>
   <dd>      The geometrical point defining the origin. It should be a feature:
      <ul>
        <li>A point: </dd>
<a href="#" onClick="openLink('CATPoint','');return false">CATPoint</a> </li>        <li>A vertex: 
<a href="#" onClick="openLink('CATIMfPoint','');return false">CATIMfPoint</a>. It is the BRep feature of a vertex. Refer to           
<a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a> and 
<a href="#" onClick="openLink('CATIFeaturize','');return false">CATIFeaturize</a> interfaces for             details about the BRep object featurization.</li>
      </ul>
   
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
</dl>
<a name="SetOriginType"></a><a name="SetOriginType(CATAxisSystemPointType)"></a> <dt> o <b>SetOriginType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetOriginType</b>(<td> const <script type="text/javascript"> activateLink('CATAxisSystemPointType','CATAxisSystemPointType')</script> <td><tt>iPointType</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the origin definition mode. 
 <br><b>Role:</b>The origin point can be defined either by a geometrical 
 point or by coordinates.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointType</tt>
   <dd>      The origin definition mode. 
     <ul>
		<li>iPointType=<tt>CATAxisSystemCoordinatesPoint</tt>: </li>
           Its specifies that the origin stays at the position defined by 
           its coordinates.
		<li>iPointType=<tt>CATAxisSystemPoint</tt> and </dd>
<a href="#" onClick="openLink('','GetOriginPoint');return false">GetOriginPoint</a> returns <tt>NULL_var</tt></li>          <br>Its specifies that the origin will be located at the 
              intersection of the three axes.
		<li>iPointType=<tt>CATAxisSystemPoint</tt> and 
<a href="#" onClick="openLink('','GetOriginPoint');return false">GetOriginPoint</a> returns a feature </li>          <br>its specifies that the origin stands at the position defined
              by the point feature.
     </ul>
   
  <dt> <b>Returns:</b> 
  <dd>     <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>S_OK: otherwise. </li>
    </ul>
</dl>
</dl>
</dl>
<a name="SetVectors"></a><a name="SetVectors(CATMathVector&amp;,CATMathVector&amp;)"></a> <dt> o <b>SetVectors</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVectors</b>(<td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iVectorX</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathVector','CATMathVector&amp;')</script> <td><tt>iVectorY</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Valuates the axis directions.
 <br><b>Role:</b>This method Valuates the axis directions with mathematical vectors  
 to define a right-handed axis system. 
 <br><b>Role:</b>This method enables you to valuate the three axes from 
 two mathematical vectors. The third axis is equal to the vectorial 
 product of these two vectors. This method automatically changes each axis 
 direction definition mode to become <tt>CATAxisSystemCoordinatesDirection</tt>
 and unset the geometry. So after this call, the 
 
<a href="#" onClick="openLink('','GetAxisDirection');return false">GetAxisDirection</a> method returns <tt>NULL_var</tt> for the three  axis directions.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVectorX</tt>
   <dd>      The mathematical vector of the X axis
   </dd>
    <dt><tt> iVectorY</tt>
   <dd>      The mathematical vector of the Y axis
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <ul>
      <li>E_FAIL: If an internal error or if the axis system is explicit 
         ( 
<a href="#" onClick="openLink('CATAxisSystemType','');return false">CATAxisSystemType</a> ), </li>      <li>E_INVALIDARG: If the two vectors are not orthogonal, </li>
      <li>S_OK: otherwise. </li>
      </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMf3DAxisSystem.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
