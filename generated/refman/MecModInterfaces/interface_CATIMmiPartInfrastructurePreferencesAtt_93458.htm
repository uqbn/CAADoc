<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIMmiPartInfrastructurePreferencesAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMmiPartInfrastructurePreferencesAtt','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMmiPartInfrastructurePreferencesAtt','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMmiPartInfrastructurePreferencesAtt','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMmiPartInfrastructurePreferencesAtt','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>MecModInterfaces Interface CATIMmiPartInfrastructurePreferencesAtt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMmiPartInfrastructurePreferencesAtt_93458','CATIMmiPartInfrastructurePreferencesAtt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMmiPartInfrastructurePreferencesAtt</b>
</p>
<p>
<b><i> Interface to retrieve application preferences related to Part Infrastructure.</i></b><br>

 <b>Role:</b> This interface describes all the application preferences related 
 to Part infrastructure. 
 Preferences are not displayed in Tools/Options and are not administered. They 
 are stored in .CATPreferences files.
 <br/>Here under is an example on how to retrieve a pointer to this interface:
 <code><pre>
 #include "CATInstantiateComponent.h" //System
 #include "CATIMmiPartInfrastructurePreferencesAtt.h"  //MecModInterfaces
 { 
  ...
  CATIMmiPartInfrastructurePreferencesAtt *pIPreferencesController=NULL;
  CATCallbackEvent event;
  if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructurePreferencesCtrl", 
               IID_CATIMmiPartInfrastructurePreferencesAtt,(void**)&pIPreferencesController)))
    {
     <b>//insert your code here</b>
     pIPreferencesController->Release(); pIPreferencesController=NULL;
    }
  ...
  }
 </pre></code>
 <br/>Values are saved into the PartInfrastructure.CATPreferences file at the end of 
 the application session.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDatumMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"><b>GetDatumMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)
<dd>  Retrieves the Datum mode.
 <dt> o 
    <a href="#GetDatumModeEvent(CATCallbackEvent&amp;)"><b>GetDatumModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetGridFilterMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"><b>GetGridFilterMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)
<dd>  Retrieves the "GridFilter" mode.
 <dt> o 
    <a href="#GetGridFilterModeEvent(CATCallbackEvent&amp;)"><b>GetGridFilterModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetHistoricalGraphDisplayState(CATBoolean&amp;)"><b>GetHistoricalGraphDisplayState</b></a>(CATBoolean&amp;)
<dd>  Retrieves the visibility of the "Historical graph" panel.
 <dt> o 
    <a href="#GetHistoricalGraphDisplayStateEvent(CATCallbackEvent&amp;)"><b>GetHistoricalGraphDisplayStateEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetImportRepRepMode(CATBoolean&amp;)"><b>GetImportRepRepMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "ImportRepRep" mode.
 <dt> o 
    <a href="#GetImportRepRepModeEvent(CATCallbackEvent&amp;)"><b>GetImportRepRepModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetInsertMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"><b>GetInsertMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)
<dd>  Retrieves the Insert mode.
 <dt> o 
    <a href="#GetInsertModeEvent(CATCallbackEvent&amp;)"><b>GetInsertModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetIntersectionC1EdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"><b>GetIntersectionC1EdgeMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)
<dd>  Retrieves the "Intersection C1Edge" mode.
 <dt> o 
    <a href="#GetIntersectionC1EdgeModeEvent(CATCallbackEvent&amp;)"><b>GetIntersectionC1EdgeModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetIntersectionEdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"><b>GetIntersectionEdgeMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)
<dd>  Retrieves the "Intersection Edge" mode.
 <dt> o 
    <a href="#GetIntersectionEdgeModeEvent(CATCallbackEvent&amp;)"><b>GetIntersectionEdgeModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetScanGraphPanelMode(CATBoolean&amp;)"><b>GetScanGraphPanelMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the visibility of the "Scan graph" panel.
 <dt> o 
    <a href="#GetScanGraphPanelModeEvent(CATCallbackEvent&amp;)"><b>GetScanGraphPanelModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetSketchAnalysisDisplayState(CATBoolean&amp;)"><b>GetSketchAnalysisDisplayState</b></a>(CATBoolean&amp;)
<dd>  Retrieves the visibility of the "Parametrization Analysis" panel.
 <dt> o 
    <a href="#GetSketchAnalysisDisplayStateEvent(CATCallbackEvent&amp;)"><b>GetSketchAnalysisDisplayStateEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetSocietyIdentifier(CATUnicodeString&amp;)"><b>GetSocietyIdentifier</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the society identifier related to a caa partner's startup.
 <dt> o 
    <a href="#GetSocietyIdentifierEvent(CATCallbackEvent&amp;)"><b>GetSocietyIdentifierEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#GetUnderAxisSystemsNodeMode(CATBoolean&amp;)"><b>GetUnderAxisSystemsNodeMode</b></a>(CATBoolean&amp;)
<dd>  Retrieves the "Under axis system" mode.
 <dt> o 
    <a href="#GetUnderAxisSystemsNodeModeEvent(CATCallbackEvent&amp;)"><b>GetUnderAxisSystemsNodeModeEvent</b></a>(CATCallbackEvent&amp;)
<dd>  Retrieves the name of the event class dispatched when a change of value is made.
 <dt> o 
    <a href="#SendHistoricalGraphDisplayStateEvent()"><b>SendHistoricalGraphDisplayStateEvent</b></a>()
<dd>  Sends the "Historical graph" event.
 <dt> o 
    <a href="#SendSketchAnalysisDisplayStateEvent()"><b>SendSketchAnalysisDisplayStateEvent</b></a>()
<dd>  Sends the "SketchAnalysisDisplay" event.
 <dt> o 
    <a href="#SetDatumMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"><b>SetDatumMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)
<dd>  Sets the Datum mode.
 <dt> o 
    <a href="#SetGridFilterMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"><b>SetGridFilterMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)
<dd>  Sets the "Grid Filter" mode.
 <dt> o 
    <a href="#SetHistoricalGraphDisplayState(CATBoolean,CATBoolean)"><b>SetHistoricalGraphDisplayState</b></a>(CATBoolean,CATBoolean)
<dd>  Sets the "Historical graph" display state.
 <dt> o 
    <a href="#SetImportRepRepMode(CATBoolean,CATBoolean)"><b>SetImportRepRepMode</b></a>(CATBoolean,CATBoolean)
<dd>  Sets the "ImportRepRep" mode.
 <dt> o 
    <a href="#SetInsertMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"><b>SetInsertMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)
<dd>  Sets the Insert mode.
 <dt> o 
    <a href="#SetIntersectionC1EdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"><b>SetIntersectionC1EdgeMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)
<dd>  Sets the "Intersection C1Edge" mode.
 <dt> o 
    <a href="#SetIntersectionEdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"><b>SetIntersectionEdgeMode</b></a>(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)
<dd>  Sets the "Intersection Edge" mode.
 <dt> o 
    <a href="#SetScanGraphPanelMode(CATBoolean,CATBoolean)"><b>SetScanGraphPanelMode</b></a>(CATBoolean,CATBoolean)
<dd>  Sets the visibility of the "Scan graph" panel.
 <dt> o 
    <a href="#SetSketchAnalysisDisplayState(CATBoolean,CATBoolean)"><b>SetSketchAnalysisDisplayState</b></a>(CATBoolean,CATBoolean)
<dd>  Sets the "SketchAnalysisDisplay" state.
 <dt> o 
    <a href="#SetSocietyIdentifier(CATUnicodeString&amp;,CATBoolean)"><b>SetSocietyIdentifier</b></a>(CATUnicodeString&amp;,CATBoolean)
<dd>  Sets the society identifier.
 <dt> o 
    <a href="#SetUnderAxisSystemsNodeMode(CATBoolean,CATBoolean)"><b>SetUnderAxisSystemsNodeMode</b></a>(CATBoolean,CATBoolean)
<dd>  Sets the "Under axis system" mode.
 <dt> o 
    <a href="#ValidateDatumMode(CATBoolean)"><b>ValidateDatumMode</b></a>(CATBoolean)
<dd>  Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <dt> o 
    <a href="#ValidateGridFilterMode(CATBoolean)"><b>ValidateGridFilterMode</b></a>(CATBoolean)
<dd>  Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <dt> o 
    <a href="#ValidateInsertMode(CATBoolean)"><b>ValidateInsertMode</b></a>(CATBoolean)
<dd>  Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <dt> o 
    <a href="#ValidateIntersectionC1EdgeMode(CATBoolean)"><b>ValidateIntersectionC1EdgeMode</b></a>(CATBoolean)
<dd>  Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <dt> o 
    <a href="#ValidateIntersectionEdgeMode(CATBoolean)"><b>ValidateIntersectionEdgeMode</b></a>(CATBoolean)
<dd>  Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#PreferenceMode"><b>PreferenceMode</b></a>
<dd>  List of types for modes.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDatumMode"></a><a name="GetDatumMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"></a> <dt> o <b>GetDatumMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDatumMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Datum mode.
 <br/><b>Role:</b> The datum mode determines if created components do not remain associative. This means 
 that there are no links to the other entities that were used to create that component.
 <br/>This mode is displayed and changeable through the "Create Datum" command (GSD/Part/FreeStyle/...). 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    The possible values are:
      <ul><li><code>NoMode</code>, when created components are procedural (or associative). This is the classic instantiation mode.</li>
      <li><code>PermanentMode</code>, for components to keep being created in a datum mode (i.e. non associative),</li>
      <li><code>TemporaryMode</code>, for a component to be created in a datum mode. A call to </dd>
<a href="#" onClick="openLink('','ValidateDatumMode');return false">ValidateDatumMode</a> will set the mode to NoMode.</li>      </ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="GetDatumModeEvent"></a><a name="GetDatumModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetDatumModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDatumModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetGridFilterMode"></a><a name="GetGridFilterMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"></a> <dt> o <b>GetGridFilterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGridFilterMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the "GridFilter" mode.
 <br/><b>Role:</b> This mode enables to select sub-elements from the grid (3D-support).
 <br/>This mode is displayed and changeable through the "Work on Support" command located in the "User Selection Filter" toolbar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    The possible values are:
      <ul><li><code>NoMode</code>, when the mode is not active,</li>
      <li><code>PermanentMode</code>, when the mode is permanently active,</li>
      <li><code>TemporaryMode</code>, when the mode is temporarily active.
      A call to </dd>
<a href="#" onClick="openLink('','ValidateGridFilterMode');return false">ValidateGridFilterMode</a> will set the mode to NoMode.</li>      </ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="GetGridFilterModeEvent"></a><a name="GetGridFilterModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetGridFilterModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetGridFilterModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetHistoricalGraphDisplayState"></a><a name="GetHistoricalGraphDisplayState(CATBoolean&amp;)"></a> <dt> o <b>GetHistoricalGraphDisplayState</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHistoricalGraphDisplayState</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOffOrOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the visibility of the "Historical graph" panel.
 <br/><b>Role:</b> The Part Editor is a special viewer launched in GSD through Tools/Historical graph.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffOrOn</tt>
   <dd>    Current "Historical graph" panel visibility
      <ul><li><code>TRUE</code>if the viewer is visible,</li>
      <li><code>FALSE</code> if the viewer is invisible.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetHistoricalGraphDisplayStateEvent"></a><a name="GetHistoricalGraphDisplayStateEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetHistoricalGraphDisplayStateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHistoricalGraphDisplayStateEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetImportRepRepMode"></a><a name="GetImportRepRepMode(CATBoolean&amp;)"></a> <dt> o <b>GetImportRepRepMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImportRepRepMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the "ImportRepRep" mode.
 <br/><b>Role:</b> This mode enables to copy an element from a .CATPart document 
 into an other one without using the ProductStructure context.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    Current "ImportRepRep" mode
      <ul><li>TRUE if the mode is active,</li>
      <li>FALSE otherwise.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetImportRepRepModeEvent"></a><a name="GetImportRepRepModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetImportRepRepModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetImportRepRepModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>
 Here is a coding sample for the use of this event:<code><pre>
  #include "CATInstantiateComponent.h" //System
  #include "CATIMmiPartInfrastructurePreferencesAtt.h" //MecModInterfaces
  { //Subscription
   CATIMmiPartInfrastructurePreferencesAtt *pIPreferencesCtrl=NULL;
   CATCallbackEvent eventName=""; //CATCallbackEvent = const char*
   if(SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructurePreferencesCtrl", 
                IID_CATIMmiPartInfrastructurePreferencesAtt,(void**)&pIPreferencesCtrl)))
    {
     if(SUCCEEDED(pIPreferencesCtrl->Get<b><i>PreferenceName</i></b>Event(eventName)))
         _callbackId=AddCallback(this, pIPreferencesCtrl, eventName,
                                 (CATSubscriberMethod)&MyClass::OnPreferenceChange,NULL);
 
     pIPreferencesCtrl->Release(); pIPreferencesCtrl=NULL;
    }
  }
  
  { //Unsubscription
  CATIMmiPartInfrastructurePreferencesAtt *pIPreferencesCtrl=NULL;
  if(_callbackId && 
     SUCCEEDED(::CATInstantiateComponent("CATMmuPartInfrastructurePreferencesCtrl", IID_CATIMmiPartInfrastructurePreferencesAtt, (void**)&pIPreferencesCtrl)))
    {
     RemoveCallback(this, pIPreferencesCtrl, _callback);
     pIPreferencesCtrl->Release(); pIPreferencesCtrl=NULL;
    }
  }
 </pre></code>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetInsertMode"></a><a name="GetInsertMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"></a> <dt> o <b>GetInsertMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInsertMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Insert mode.
 <br/><b>Role:</b> The Insert mode determines if a created element will be inserted 
 within the specification tree, at its logical positioning (mode on) and not its 
 chronological positioning (mode off).
 <br/>The logical position within the specification tree is next to its main parents.
 <br/>This mode is displayed and changeable through the "Insert Mode" command (GSD/Part/FreeStyle/...). 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    The possible values are:
      <ul><li><code>NoMode</code>, when created components are inserted chronologically,</li>
      <li><code>PermanentMode</code>, when created components are inserted logically,</li>
      <li><code>TemporaryMode</code>, when created components are inserted logically. 
      A call to </dd>
<a href="#" onClick="openLink('','ValidateDatumMode');return false">ValidateDatumMode</a> will set the mode to NoMode.</li>      </ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="GetInsertModeEvent"></a><a name="GetInsertModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetInsertModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInsertModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetIntersectionC1EdgeMode"></a><a name="GetIntersectionC1EdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"></a> <dt> o <b>GetIntersectionC1EdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntersectionC1EdgeMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the "Intersection C1Edge" mode.
 <br/><b>Role:</b> The role of this mode is extensively described in 
<a href="#" onClick="openLink('','CATIMfIntersectionEdge');return false">CATIMfIntersectionEdge</a> . <br/>This mode is displayed and changeable through the dedicated command located in the 
 "User Selection Filter" toolbar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    The possible values are:
      <ul><li><code>NoMode</code>, when the mode is not active,</li>
      <li><code>PermanentMode</code>, when the mode is permanently active,</li>
      <li><code>TemporaryMode</code>, when the mode is temporarily active.
      A call to </dd>
<a href="#" onClick="openLink('','ValidateIntersectionEdgeMode');return false">ValidateIntersectionEdgeMode</a> will set the mode to NoMode.</li>      </ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="GetIntersectionC1EdgeModeEvent"></a><a name="GetIntersectionC1EdgeModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetIntersectionC1EdgeModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntersectionC1EdgeModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetIntersectionEdgeMode"></a><a name="GetIntersectionEdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;)"></a> <dt> o <b>GetIntersectionEdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntersectionEdgeMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the "Intersection Edge" mode.
 <br/><b>Role:</b> The role of this mode is extensively described in 
<a href="#" onClick="openLink('','CATIMfIntersectionEdge');return false">CATIMfIntersectionEdge</a> . <br/>This mode is displayed and changeable through the dedicated command located in the 
 "User Selection Filter" toolbar.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    The possible values are:
      <ul><li><code>NoMode</code>, when the mode is not active,</li>
      <li><code>PermanentMode</code>, when the mode is permanently active,</li>
      <li><code>TemporaryMode</code>, when the mode is temporarily active.
      A call to </dd>
<a href="#" onClick="openLink('','ValidateIntersectionEdgeMode');return false">ValidateIntersectionEdgeMode</a> will set the mode to NoMode.</li>      </ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="GetIntersectionEdgeModeEvent"></a><a name="GetIntersectionEdgeModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetIntersectionEdgeModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntersectionEdgeModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetScanGraphPanelMode"></a><a name="GetScanGraphPanelMode(CATBoolean&amp;)"></a> <dt> o <b>GetScanGraphPanelMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScanGraphPanelMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oVisible</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the visibility of the "Scan graph" panel.
 <br/><b>Role:</b> The Scan graph is a special viewer linked to the Scan command.
 <br/>There is a possibility for the user to display or not this dedicated viewer 
 in addition to the Scan command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVisible</tt>
   <dd>    Current "Scan graph" panel visibility
      <ul><li><code>TRUE</code>if the viewer is visible when launching the Scan command,</li>
      <li><code>FALSE</code> if the viewer is not visible.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetScanGraphPanelModeEvent"></a><a name="GetScanGraphPanelModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetScanGraphPanelModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScanGraphPanelModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetSketchAnalysisDisplayState"></a><a name="GetSketchAnalysisDisplayState(CATBoolean&amp;)"></a> <dt> o <b>GetSketchAnalysisDisplayState</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSketchAnalysisDisplayState</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oOffOrOn</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the visibility of the "Parametrization Analysis" panel.
 <br/><b>Role:</b> The Parametrization Analysis panel is launched in Part/GSD/... through the 
 Tools/Parametrization Analysis command.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOffOrOn</tt>
   <dd>    Current "Parametrization Analysis" panel visibility
      <ul><li><code>TRUE</code>if the viewer is visible,</li>
      <li><code>FALSE</code> if the viewer is invisible.</li></ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetSketchAnalysisDisplayStateEvent"></a><a name="GetSketchAnalysisDisplayStateEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetSketchAnalysisDisplayStateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSketchAnalysisDisplayStateEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetSocietyIdentifier"></a><a name="GetSocietyIdentifier(CATUnicodeString&amp;)"></a> <dt> o <b>GetSocietyIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSocietyIdentifier</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oSocietyId</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the society identifier related to a caa partner's startup.
 <br/><b>Role:</b> This preference is only to be used for UserFeatures type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSocietyId</tt>
   <dd>    The society identifier.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetSocietyIdentifierEvent"></a><a name="GetSocietyIdentifierEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetSocietyIdentifierEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSocietyIdentifierEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUnderAxisSystemsNodeMode"></a><a name="GetUnderAxisSystemsNodeMode(CATBoolean&amp;)"></a> <dt> o <b>GetUnderAxisSystemsNodeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUnderAxisSystemsNodeMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the "Under axis system" mode.
 <br/><b>Role:</b> This mode determines whether the axis systems are to be created under 
 the "Axis System" tree node or under the node of the current CATIGSMTool.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd>    <code>TRUE</code> if axis systems are created under the "Axis System" tree node.
   <code>FALSE</code> if axis systems are created under the node of the current CATIGSMTool.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="GetUnderAxisSystemsNodeModeEvent"></a><a name="GetUnderAxisSystemsNodeModeEvent(CATCallbackEvent&amp;)"></a> <dt> o <b>GetUnderAxisSystemsNodeModeEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUnderAxisSystemsNodeModeEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent&amp;')</script> <td><tt>oEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the event class dispatched when a change of value is made.
 <br/><b>Role:</b> This method enables an application to be warned whenever a change of value occurs.
 <br/>Refer to comments in 
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> for a code sample. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oEvent</tt>
   <dd>   The event class. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="SendHistoricalGraphDisplayStateEvent"></a><a name="SendHistoricalGraphDisplayStateEvent()"></a> <dt> o <b>SendHistoricalGraphDisplayStateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SendHistoricalGraphDisplayStateEvent</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sends the "Historical graph" event.
 <br/><b>Role:</b> Sends the event retrieved through 
<a href="#" onClick="openLink('','GetHistoricalGraphDisplayStateEvent');return false">GetHistoricalGraphDisplayStateEvent</a>.. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Always S_OK.
</dl>
</dl>
<a name="SendSketchAnalysisDisplayStateEvent"></a><a name="SendSketchAnalysisDisplayStateEvent()"></a> <dt> o <b>SendSketchAnalysisDisplayStateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SendSketchAnalysisDisplayStateEvent</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sends the "SketchAnalysisDisplay" event. retrieved through 
<a href="#" onClick="openLink('','GetScanGraphPanelModeEvent');return false">GetScanGraphPanelModeEvent</a>. <br/><b>Role:</b> Sends the event retrieved through 
<a href="#" onClick="openLink('','GetScanGraphPanelModeEvent');return false">GetScanGraphPanelModeEvent</a>. 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Always S_OK.
</dl>
</dl>
<a name="SetDatumMode"></a><a name="SetDatumMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"></a> <dt> o <b>SetDatumMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDatumMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Datum mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    The possible values are <code>NoMode</code>, <code>PermanentMode</code>, and 
   <code>TemporaryMode</code>.
   <br/>If <code>TemporaryMode</code> mode is set, a call to </dd>
<a href="#" onClick="openLink('','ValidateDatumMode');return false">ValidateDatumMode</a> will set the    mode to NoMode.
 
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetDatumModeEvent');return false">GetDatumModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetGridFilterMode"></a><a name="SetGridFilterMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"></a> <dt> o <b>SetGridFilterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGridFilterMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "Grid Filter" mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    The possible values are <code>NoMode</code>, <code>PermanentMode</code>, and 
   <code>TemporaryMode</code>.
   <br/>If <code>TemporaryMode</code> mode is set, a call to </dd>
<a href="#" onClick="openLink('','ValidateGridFilterMode');return false">ValidateGridFilterMode</a> will set the    mode to NoMode.
 
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetGridFilterModeEvent');return false">GetGridFilterModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetHistoricalGraphDisplayState"></a><a name="SetHistoricalGraphDisplayState(CATBoolean,CATBoolean)"></a> <dt> o <b>SetHistoricalGraphDisplayState</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetHistoricalGraphDisplayState</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOffOrOn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "Historical graph" display state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffOrOn</tt>
   <dd>   <ul><li><code>FALSE</code> to hide it,</li>
   <li><code>TRUE</code> to display it.</li>
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetHistoricalGraphDisplayStateEvent');return false">GetHistoricalGraphDisplayStateEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetImportRepRepMode"></a><a name="SetImportRepRepMode(CATBoolean,CATBoolean)"></a> <dt> o <b>SetImportRepRepMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetImportRepRepMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "ImportRepRep" mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>   "ImportRepRep" mode
      <ul><li>TRUE to activate it,</li>
      <li>FALSE to deactivate it.</li></ul>
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li>TRUE so that the event defined in </dd>
<a href="#" onClick="openLink('','GetImportRepRepModeEvent');return false">GetImportRepRepModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li>FALSE for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetInsertMode"></a><a name="SetInsertMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"></a> <dt> o <b>SetInsertMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetInsertMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Insert mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    The possible values are <code>NoMode</code>, <code>PermanentMode</code>, and 
   <code>TemporaryMode</code>.
   <br/>If <code>TemporaryMode</code> mode is set, a call to </dd>
<a href="#" onClick="openLink('','ValidateInsertMode');return false">ValidateInsertMode</a> will set the    mode to NoMode.
 
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetInsertModeEvent');return false">GetInsertModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetIntersectionC1EdgeMode"></a><a name="SetIntersectionC1EdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"></a> <dt> o <b>SetIntersectionC1EdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetIntersectionC1EdgeMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "Intersection C1Edge" mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    The possible values are <code>NoMode</code>, <code>PermanentMode</code>, and 
   <code>TemporaryMode</code>.
   <br/>If <code>TemporaryMode</code> mode is set, a call to </dd>
<a href="#" onClick="openLink('','ValidateIntersectionC1EdgeMode');return false">ValidateIntersectionC1EdgeMode</a> will set the    mode to NoMode.
 
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetIntersectionC1EdgeModeEvent');return false">GetIntersectionC1EdgeModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetIntersectionEdgeMode"></a><a name="SetIntersectionEdgeMode(CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode,CATBoolean)"></a> <dt> o <b>SetIntersectionEdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetIntersectionEdgeMode</b>(<td><script type="text/javascript"> activateLink('CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode','CATIMmiPartInfrastructurePreferencesAtt::PreferenceMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "Intersection Edge" mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    The possible values are <code>NoMode</code>, <code>PermanentMode</code>, and 
   <code>TemporaryMode</code>.
   <br/>If <code>TemporaryMode</code> mode is set, a call to </dd>
<a href="#" onClick="openLink('','ValidateIntersectionEdgeMode');return false">ValidateIntersectionEdgeMode</a> will set the    mode to NoMode.
 
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetIntersectionEdgeModeEvent');return false">GetIntersectionEdgeModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetScanGraphPanelMode"></a><a name="SetScanGraphPanelMode(CATBoolean,CATBoolean)"></a> <dt> o <b>SetScanGraphPanelMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScanGraphPanelMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iVisible</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the visibility of the "Scan graph" panel.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVisible</tt>
   <dd>       <ul><li><code>TRUE</code>if the viewer is to be visible when launching the Scan command,</li>
      <li><code>FALSE</code> if the viewer is to not be displayed.</li></ul>
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetScanGraphPanelModeEvent');return false">GetScanGraphPanelModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetSketchAnalysisDisplayState"></a><a name="SetSketchAnalysisDisplayState(CATBoolean,CATBoolean)"></a> <dt> o <b>SetSketchAnalysisDisplayState</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSketchAnalysisDisplayState</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iOffOrOn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "SketchAnalysisDisplay" state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffOrOn</tt>
   <dd>   <ul><li><code>FALSE</code> to hide it,</li>
   <li><code>TRUE</code> to display it.</li>
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetSketchAnalysisDisplayStateEvent');return false">GetSketchAnalysisDisplayStateEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="SetSocietyIdentifier"></a><a name="SetSocietyIdentifier(CATUnicodeString&amp;,CATBoolean)"></a> <dt> o <b>SetSocietyIdentifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSocietyIdentifier</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iSocietyId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the society identifier.
 <br/><b>Role:</b> This preference is only to be used for UserFeatures type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSocietyId</tt>
   <dd>    The society identifier.
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   Code to manage events.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly retrieved, E_FAIL otherwise.
</dl>
</dl>
<a name="SetUnderAxisSystemsNodeMode"></a><a name="SetUnderAxisSystemsNodeMode(CATBoolean,CATBoolean)"></a> <dt> o <b>SetUnderAxisSystemsNodeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetUnderAxisSystemsNodeMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "Under axis system" mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd>    <ul><li><code>TRUE</code> if axis systems are created under the "Axis System" tree node.</li>
   <ul><code>FALSE</code> if axis systems are created under the node of the current CATIGSMTool.</li></ul>
 </dd>
    <dt><tt> iSendEvent</tt>
   <dd>   <ul><li><code>TRUE</code> so that the event defined in </dd>
<a href="#" onClick="openLink('','GetUnderAxisSystemsNodeModeEvent');return false">GetUnderAxisSystemsNodeModeEvent</a> is sent.    <br/>This happens only if the value is different from the one stored in the preference.</li>
   <li><code>FALSE</code> for no event to be sent.</li></ul>
 
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the parameter is correctly set, E_FAIL otherwise.
</dl>
</dl>
</dl>
<a name="ValidateDatumMode"></a><a name="ValidateDatumMode(CATBoolean)"></a> <dt> o <b>ValidateDatumMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateDatumMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <br/><b>Role:</b> If the mode is set to <code>TemporaryMode</code>, a call to this function 
 will set it to <code>NoMode</code>, and send the event if asked to. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSendEvent</tt>
   <dd>   To send an event if the mode is reverted to <code>NoMode</code>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the call to the method was processed without errors.
</dl>
</dl>
<a name="ValidateGridFilterMode"></a><a name="ValidateGridFilterMode(CATBoolean)"></a> <dt> o <b>ValidateGridFilterMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateGridFilterMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <br/><b>Role:</b> If the mode is set to <code>TemporaryMode</code>, a call to this function 
 will set it to <code>NoMode</code>, and send the event if asked to. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSendEvent</tt>
   <dd>   To send an event if the mode is reverted to <code>NoMode</code>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the call to the method was processed without errors.
</dl>
</dl>
<a name="ValidateInsertMode"></a><a name="ValidateInsertMode(CATBoolean)"></a> <dt> o <b>ValidateInsertMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateInsertMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <br/><b>Role:</b> If the mode is set to <code>TemporaryMode</code>, a call to this function 
 will set it to <code>NoMode</code>, and send the event if asked to. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSendEvent</tt>
   <dd>   To send an event if the mode is reverted to <code>NoMode</code>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the call to the method was processed without errors.
</dl>
</dl>
<a name="ValidateIntersectionC1EdgeMode"></a><a name="ValidateIntersectionC1EdgeMode(CATBoolean)"></a> <dt> o <b>ValidateIntersectionC1EdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateIntersectionC1EdgeMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <br/><b>Role:</b> If the mode is set to <code>TemporaryMode</code>, a call to this function 
 will set it to <code>NoMode</code>, and send the event if asked to. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSendEvent</tt>
   <dd>   To send an event if the mode is reverted to <code>NoMode</code>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the call to the method was processed without errors.
</dl>
</dl>
<a name="ValidateIntersectionEdgeMode"></a><a name="ValidateIntersectionEdgeMode(CATBoolean)"></a> <dt> o <b>ValidateIntersectionEdgeMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ValidateIntersectionEdgeMode</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iSendEvent</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the mode to <code>NoMode</code> if it is set to <code>TemporaryMode</code>.
 <br/><b>Role:</b> If the mode is set to <code>TemporaryMode</code>, a call to this function 
 will set it to <code>NoMode</code>, and send the event if asked to. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSendEvent</tt>
   <dd>   To send an event if the mode is reverted to <code>NoMode</code>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    S_OK if the call to the method was processed without errors.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="PreferenceMode"> <dt> o <b>PreferenceMode</b>
<dl>
  <dd>
<pre>
enum <b>PreferenceMode</b> {
  NoMode,
  PermanentMode,
  TemporaryMode
}
</pre>
 List of types for modes.
 <br/><b>Role:</b> The modes are used in the following values of the preferences.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> NoMode</tt>
   <dd>     The preference is not set.
 </dd>
    <dt><tt> PermanentMode</tt>
   <dd>     The preference is set and stays set unless unset.
     <br/> Note: This state corresponds to a double click on the linked command button.
 </dd>
    <dt><tt> TemporaryMode</tt>
   <dd>      The preference is set for one use, and then resetted to NoMode as soon as the ValidateXxMode method is called.
     <br/> Note: This state corresponds to a single click on the linked command button.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMmiPartInfrastructurePreferencesAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
