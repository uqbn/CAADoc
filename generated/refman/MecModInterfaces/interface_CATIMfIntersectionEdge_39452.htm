<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIMfIntersectionEdge</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMfIntersectionEdge','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfIntersectionEdge','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMfIntersectionEdge','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMfIntersectionEdge','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>MecModInterfaces Interface CATIMfIntersectionEdge</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMfIntersectionEdge_39452','CATIMfIntersectionEdge','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMfIntersectionEdge</b>
</p>
<p>
<b><i> Interface for Intersection Edges BRep features.</i></b><br>

 <br><b>Role</b>:This interface allows to manage BRep features defined by edges produced by 
 the intersection of two lists of features.
 The information stored by an Intersection Edge consists in <ul>
 <li>two lists of features to operate (called <tt>FirstOperands</tt> and <tt>SecondOperands</tt>),</li> 
 <li>a resolution mode (called <tt>CATMfResolutionMode</tt>),</li> 
 <li>in some cases, one applicative feature.</li>
 <li>in some cases, the initial edge.</li></ul>
 There are two ways to create an intersection edge:<ul>
 <li>With <a href="#" onClick="openLink('CATIFeaturize','FeaturizeR');return false">CATIFeaturize.FeaturizeR</a> applied to a 
<a href="#" onClick="openLink('CATIREdge','');return false">CATIREdge</a> or to another 
CATIMfIntersectionEdge(if you want to duplicate it). <br>Then, in first step, only one feature is put in the <tt>FirstOperands</tt> list 
 (either a boolean operation feature or another geometrical feature), and resolution mode is 
 set to <tt>MfResolutionMode_GeneratedEdges</tt>.Thus, at creation, the feature is seen as 
 the lists of edges created when intersecting the operands of
 this <tt>FirstOperands</tt> feature if this is a boolean operation, or when intersecting 
 this <tt>FirstOperands</tt> feature itself with its input.</li>
 <li>With 
<a href="#" onClick="openLink('CATIMfBRepFactory','CreateMfIntersectionEdge');return false">CATIMfBRepFactory.CreateMfIntersectionEdge</a> which can have a 
<a href="#" onClick="openLink('CATIREdge','');return false">CATIREdge</a> as input, or not( and in this last case, the intersection edge is empty and must be filled with appropriate methods)</li></ul>
 In both cases you must use at least the right featurization mode:
 <li><tt>MfFeaturizeIntersection</tt> for a standard intersection edge.</li>
 <li><tt>MfFeaturizeC1Intersection</tt> for a C1 intersection edge</li>
 <li><tt>MfFeaturizeC1Intersection|MfFeaturizeSubElement</tt> for a not propaged intersection edge</li></ul>
 <p>The definition of an intersection edge can be modified using the methods of the interface 
 to add features in the lists or to change the resolution mode.
 For instance, if needed, the application may change the resolution mode to 
 <tt>MfResolutionMode_ListAgainstCurrent</tt> mode and set the <tt>SecondOperands</tt> list.</p>
 Please refer to the technical article dealing with the intersection edge in the CAA Encyclopedia for further details.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetEdgeInit(CATIMfBRep_var&amp;)"><b>GetEdgeInit</b></a>(CATIMfBRep_var&amp;)
<dd>  Retrieves the initial edge.
 <dt> o 
    <a href="#GetEdgesAllInit(int,CATLISTV(CATISpecObject_var)&amp;)"><b>GetEdgesAllInit</b></a>(int,CATLISTV(CATISpecObject_var)&amp;)
<dd>  Retrieves the initial edges for functional tangent intersection edge.
 <dt> o 
    <a href="#GetEdgesOriented(CATLISTP(CATCell)&amp;,CATListOfInt&amp;,CATISpecObject_var&amp;)"><b>GetEdgesOriented</b></a>(CATLISTP(CATCell)&amp;,CATListOfInt&amp;,CATISpecObject_var&amp;)
<dd>  Returns the oriented topological edges associated with the BRep Feature.
 <dt> o 
    <a href="#GetFirstOperands(CATLISTV(CATISpecObject_var)&amp;)"><b>GetFirstOperands</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Reads the list of first operands.
 <dt> o 
    <a href="#GetIntersectionEdgeType(CATIMfIntersectionEdge::CATMfIntersectionEdgeType&amp;)"><b>GetIntersectionEdgeType</b></a>(CATIMfIntersectionEdge::CATMfIntersectionEdgeType&amp;)
<dd>  Retrieves the intersection edge type.
 <dt> o 
    <a href="#GetResolveMode(CATMfResolutionMode&amp;,CATISpecObject_var&amp;)"><b>GetResolveMode</b></a>(CATMfResolutionMode&amp;,CATISpecObject_var&amp;)
<dd>  Returns the way to compute the result edges.
 <dt> o 
    <a href="#GetSecondOperands(CATLISTV(CATISpecObject_var)&amp;)"><b>GetSecondOperands</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Reads the list of second operands.
 <dt> o 
    <a href="#GetTangentPropagationMode(CATMfTangentPropagationMode&amp;)"><b>GetTangentPropagationMode</b></a>(CATMfTangentPropagationMode&amp;)
<dd>  Returns the value of the tangent propagation mode.
 <dt> o 
    <a href="#IsSameResult(CATIMfIntersectionEdge_var&amp;,CATISpecObject_var&amp;)"><b>IsSameResult</b></a>(CATIMfIntersectionEdge_var&amp;,CATISpecObject_var&amp;)
<dd>  Checks if two intersection edges give the same result.
 <dt> o 
    <a href="#SetFirstOperands(CATLISTV(CATISpecObject_var)&amp;)"><b>SetFirstOperands</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Sets the list of first operands.
 <dt> o 
    <a href="#SetResolveMode(CATMfResolutionMode,CATISpecObject_var&amp;)"><b>SetResolveMode</b></a>(CATMfResolutionMode,CATISpecObject_var&amp;)
<dd>  Sets the value of the resolution mode.
 <dt> o 
    <a href="#SetSecondOperands(CATLISTV(CATISpecObject_var)&amp;)"><b>SetSecondOperands</b></a>(CATLISTV(CATISpecObject_var)&amp;)
<dd>  Sets the list of second operands.
 <dt> o 
    <a href="#SetTangentPropagationMode(CATMfTangentPropagationMode)"><b>SetTangentPropagationMode</b></a>(CATMfTangentPropagationMode)
<dd>  Sets the value of the tangent propagation mode.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#CATMfIntersectionEdgeType"><b>CATMfIntersectionEdgeType</b></a>
<dd>   The type to compute the result edges.
 <dt> o 
    <a href="#CATMfResolutionMode"><b>CATMfResolutionMode</b></a>
<dd>   The way to compute the result edges.
 <dt> o 
    <a href="#CATMfTangentPropagationMode"><b>CATMfTangentPropagationMode</b></a>
<dd>   Mode used to define the tangent propagation mode.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetEdgeInit"></a><a name="GetEdgeInit(CATIMfBRep_var&amp;)"></a> <dt> o <b>GetEdgeInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEdgeInit</b>(<td><script type="text/javascript"> activateLink('CATIMfBRep_var','CATIMfBRep_var&amp;')</script> <td><tt>oStartEdge</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the initial edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStartEdge</tt>
   <dd>   <li>This BRep Feature exists for types: <tt>TgtIntersEdge</tt>, <tt>TgtEdge</tt>, <tt>NotPropagEdge</tt></li>
 <li>but is NULL_var for standard <tt>IntersectionEdge</tt>, as then it has no meaning.</li>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The edge is retrieved (could be NULL_var) </li>
   <li><tt>E_FAIL</tt>: Error occured.</li></ul>
</dl>
</dl>
<a name="GetEdgesAllInit"></a><a name="GetEdgesAllInit(int,CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetEdgesAllInit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEdgesAllInit</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEdgesSecoursOnly</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>oListEdgesAllInit</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the initial edges for functional tangent intersection edge.
 <br>These BRep Feature exists for types: <tt>TgtFunctionalEdge</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEdgesSecoursOnly</tt>
   <dd>   To take into account the main initial edge or not (the main can be retrieved by <tt>GetEdgeInit</tt> method.<ul>
   <li><tt>0</tt> : to get all init, including the main one, which is always in first position</li>
   <li><tt>1</tt> : to get only the secondary init. These ones are computed once at the creation by tangent propagation
                    from the main init.</li></ul>
 </dd>
    <dt><tt> oListEdgesAllInit</tt>
   <dd>   The list of initial edges which are <tt>CATIMfBRep_var</tt>.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The edges are retrieved (could be NULL_var) </li>
   <li><tt>E_FAIL</tt>: Error occured.</li></ul>
</dl>
</dl>
<a name="GetEdgesOriented"></a><a name="GetEdgesOriented(CATLISTP(CATCell)&amp;,CATListOfInt&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>GetEdgesOriented</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEdgesOriented</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)&amp;')</script> <td><tt>oListCellEdges</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfInt','CATListOfInt&amp;')</script> <td><tt>oListOrientations</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iFeat</tt><td><tt>= NULL_var </tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the oriented topological edges associated with the BRep Feature.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListCellEdges</tt>
   <dd>   List of topological edges, which are <tt>CATEdge</tt>
 </dd>
    <dt><tt> oListOrientations</tt>
   <dd>   List of orientations, associated which each edge. Values should be <tt>+1</tt> or <tt>-1</tt>
 <br>Notice that both lists are emptied at the beginning of this method.
 </dd>
    <dt><tt> iFeat</tt>
   <dd>  Defines the body of the search, e.g. the feature of resolution.
 <br>If NULL_var (default value), current feature is taken into account
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The full lists are retrieved (could be empty) </li>
   <li><tt>E_FAIL</tt>: The lists cannot be computed.</li></ul>
</dl>
</dl>
<a name="GetFirstOperands"></a><a name="GetFirstOperands(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetFirstOperands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetFirstOperands</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>oFirstOperands</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Reads the list of first operands.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstOperands</tt>
   <dd> The list of features stored as <tt>FirstOperand</tt> features list.
 The output list is not emptied when entering in the method. If the application reuses a previous
 list, it should remove the elements inside before calling the method if necessary.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The list is retrieved </li>
   <li><tt>E_FAIL</tt>: The list could not be accessed.</li></ul>
</dl>
</dl>
<a name="GetIntersectionEdgeType"></a><a name="GetIntersectionEdgeType(CATIMfIntersectionEdge::CATMfIntersectionEdgeType&amp;)"></a> <dt> o <b>GetIntersectionEdgeType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIntersectionEdgeType</b>(<td><script type="text/javascript"> activateLink('CATIMfIntersectionEdge::CATMfIntersectionEdgeType','CATIMfIntersectionEdge::CATMfIntersectionEdgeType&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the intersection edge type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>  The effective type of the intersection edge BRep Feature.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The type is retrieved </li>
   <li><tt>E_FAIL</tt>: Error occured.</li></ul>
</dl>
</dl>
<a name="GetResolveMode"></a><a name="GetResolveMode(CATMfResolutionMode&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>GetResolveMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetResolveMode</b>(<td><script type="text/javascript"> activateLink('CATMfResolutionMode','CATMfResolutionMode&amp;')</script> <td><tt>oMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>oApplicativeResolveOperator</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the way to compute the result edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMode</tt>
   <dd> The resolution mode.
 </dd>
    <dt><tt> oApplicativeResolveOperator</tt>
   <dd> The feature implementing the </dd>
<a href="#" onClick="openLink('CATIMfIntersectApplicativeResolution','');return false">CATIMfIntersectApplicativeResolution</a> interface,  to overload resolution. By this mean, the application may define how to compute 
 the result edges of the intersection edge in his own way.
 This feature is <tt>NULL_var</tt> for other 
<a href="#" onClick="openLink('','CATMfResolutionMode');return false">CATMfResolutionMode</a> values than <tt>MfResolutionMode_Application</tt>. 
   
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The value is retrieved </li>
   <li><tt>E_FAIL</tt>: The value could not be accessed.</li></ul>
</dl>
</dl>
</dl>
<a name="GetSecondOperands"></a><a name="GetSecondOperands(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>GetSecondOperands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSecondOperands</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>oSecondOperands</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Reads the list of second operands.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSecondOperands</tt>
   <dd> The list of features stored as <tt>SecondOperands</tt> features list.
 The output list is not emptied when entering in the method. If the application reuses a previous
 list, it should remove the elements inside before calling the method if necessary.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The list is retrieved </li>
   <li><tt>E_FAIL</tt>: The list could not be accessed.</li></ul>
</dl>
</dl>
<a name="GetTangentPropagationMode"></a><a name="GetTangentPropagationMode(CATMfTangentPropagationMode&amp;)"></a> <dt> o <b>GetTangentPropagationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTangentPropagationMode</b>(<td><script type="text/javascript"> activateLink('CATMfTangentPropagationMode','CATMfTangentPropagationMode&amp;')</script> <td><tt>oTgtMode</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Returns the value of the tangent propagation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTgtMode</tt>
   <dd> The tangent propagation mode.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The mode is retrieved </li>
   <li><tt>E_FAIL</tt>: The mode could not be accessed.</li></ul>
</dl>
</dl>
<a name="IsSameResult"></a><a name="IsSameResult(CATIMfIntersectionEdge_var&amp;,CATISpecObject_var&amp;)"></a> <dt> o <b>IsSameResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsSameResult</b>(<td> const <script type="text/javascript"> activateLink('CATIMfIntersectionEdge_var','CATIMfIntersectionEdge_var&amp;')</script> <td><tt>iOtherIntersEdge</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iFeat</tt><td><tt>= NULL_var </tt>)<script type="text/javascript"> activateLink('0','const = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Checks if two intersection edges give the same result.
 <br><b>Role</b>: Unlike 
<a href="#" onClick="openLink('CATIMfBRep','IsSame');return false">CATIMfBRep.IsSame</a> , this method will compare the results of two intersection edge, topology and geometry.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOtherIntersEdge</tt>
   <dd>   The other intersection edge to compare
 </dd>
    <dt><tt> iFeat</tt>
   <dd>  Defines the body of the search, e.g. the feature of resolution.
 <br>If NULL_var (default value), current feature is taken into account 
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>   <li><tt>+1</tt> : the BRep Feature give same result as <tt>iOtherIntersEdge</tt>, (even if they could differ by specification)</li>
   <li><tt>-1</tt> : the BRep Feature give same result as <tt>iOtherIntersEdge</tt>, but orientations are inverted</li>
   <li><tt> 0</tt> : results are differents</li></ul>
</dl>
</dl>
<a name="SetFirstOperands"></a><a name="SetFirstOperands(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>SetFirstOperands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFirstOperands</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iFirstOperands</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Sets the list of first operands.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstOperands</tt>
   <dd> The list of features to be stored as <tt>FirstOperand</tt> features list.
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The list has been stored. </li>
   <li><tt>ERROR_BAD_ARGUMENTS</tt>: The list contains more than one feature and the resolution mode is
     equal to <tt>MfResolutionMode_GeneratedEdges</tt>.</li>
   <li><tt>E_FAIL</tt>: the list is not empty but no feature in the list is a valid CATISpecObject. </li></ul>
</dl>
</dl>
<a name="SetResolveMode"></a><a name="SetResolveMode(CATMfResolutionMode,CATISpecObject_var&amp;)"></a> <dt> o <b>SetResolveMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetResolveMode</b>(<td><script type="text/javascript"> activateLink('CATMfResolutionMode','CATMfResolutionMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iApplicativeResolveOperator</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the resolution mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMode</tt>
   <dd> The resolution mode.
 </dd>
    <dt><tt> iApplicativeResolveOperator</tt>
   <dd> The feature that implements the </dd>
<a href="#" onClick="openLink('CATIMfIntersectApplicativeResolution','');return false">CATIMfIntersectApplicativeResolution</a> interface, to overload resolution. Allowed only when <tt>iMode</tt> is equal to <tt>MfResolutionMode_Application</tt>. 
 This feature is ignored and not stored for other 
<a href="#" onClick="openLink('','CATMfResolutionMode');return false">CATMfResolutionMode</a> values.   
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The mode has been stored. </li>
   <li><tt>ERROR_BAD_ARGUMENTS</tt>: <tt>iMode</tt> is equal to <tt>MfResolutionMode_Application</tt> and 
     <tt>iApplicativeResolveOperator</tt> does not implement <tt>CATIMfIntersectApplicativeResolution</tt>.</li>
   <li><tt>ERROR_BAD_ARGUMENTS</tt>: <tt>iMode</tt> is equal to <tt>MfResolutionMode_GeneratedEdges</tt> and
     <tt>FirstOperand</tt> list contains more than one feature.</li></ul>
</dl>
</dl>
</dl>
<a name="SetSecondOperands"></a><a name="SetSecondOperands(CATLISTV(CATISpecObject_var)&amp;)"></a> <dt> o <b>SetSecondOperands</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSecondOperands</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATISpecObject_var)','CATLISTV(CATISpecObject_var)&amp;')</script> <td><tt>iSecondOperands</tt>)<script type="text/javascript"> activateLink('0','= 0 ')</script>  </table></dt>
<dl>
  <dd>
 Sets the list of second operands.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSecondOperands</tt>
   <dd> The list of features to be stored as <tt>SecondOperands</tt> features list.
 <br>In case the second operands list is set although this is not consistent with
 the resolution mode, an error will be raised when resolving the result edges.  
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The list has been stored. </li>
   <li><tt>E_FAIL</tt>: List could not be read properly</li></ul>
</dl>
</dl>
<a name="SetTangentPropagationMode"></a><a name="SetTangentPropagationMode(CATMfTangentPropagationMode)"></a> <dt> o <b>SetTangentPropagationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTangentPropagationMode</b>(<td><script type="text/javascript"> activateLink('CATMfTangentPropagationMode','CATMfTangentPropagationMode')</script> <td><tt>iTgtMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the tangent propagation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTgtMode</tt>
   <dd> The tangent propagation mode.
   The error code.
   <br><b>Legal values</b>: <ul>
   <li><tt>S_OK</tt>: The mode has been stored. </li>
   <li><tt>E_FAIL</tt>: The mode could not be set properly</li></ul></dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="CATMfIntersectionEdgeType"> <dt> o <b>CATMfIntersectionEdgeType</b>
<dl>
  <dd>
<pre>
enum <b>CATMfIntersectionEdgeType</b> {
  Type_IntersectionEdge,
  Type_TgtIntersEdge,
  Type_TgtEdge,
  Type_NotPropagEdge,
  Type_TgtFunctionalFEdge,
  Type_TgtFunctionalREdge
}
</pre>
  The type to compute the result edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Type_IntersectionEdge</tt>
   <dd> corresponds to nothing special; this value may be also called as standard (all edges within intersection edge are computed). <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeIntersection</tt>
 </dd>
    <dt><tt> Type_TgtIntersEdge</tt>
   <dd> corresponds to C1 continuity propagation (edges computed depend of initial edge). <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeC1Intersection</tt>
 </dd>
    <dt><tt> Type_TgtEdge</tt>
   <dd> corresponds to C1 continuity propagation but the initial edge cannot be built within an intersection edge (there is no semantic characteristic).
 <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeC1Intersection</tt>
 </dd>
    <dt><tt> Type_NotPropagEdge</tt>
   <dd> corresponds to only edge selection, without propagation, but this edge is built within an intersection edge (semantic characteristic is kept)
 <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeC1Intersection|MfFeaturizeSubElement</tt>
 </dd>
    <dt><tt> Type_TgtFunctionalFEdge</tt>
   <dd> corresponds to C1 continuity propagation of initial edge at the creation only, inside the initial feature of this edge. It has fonctional mode, see </dd>
<a href="#" onClick="openLink('CATIMfBRep','GetBRepType');return false">CATIMfBRep.GetBRepType</a>. <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeFunctionalC1Intersection|MfFunctionalFeaturization</tt>
 
    <dt><tt> Type_TgtFunctionalREdge</tt>
   <dd> corresponds to C1 continuity propagation of initial edge at the creation only, inside the initial feature of this edge. It has relimited mode, see </dd>
<a href="#" onClick="openLink('CATIMfBRep','GetBRepType');return false">CATIMfBRep.GetBRepType</a>. <br>It is created with <tt>CATMfFeaturizeMode MfFeaturizeFunctionalC1Intersection|MfRelimitedFeaturization</tt>
 or <tt>CATMfFeaturizeMode MfFeaturizeFunctionalC1Intersection|MfRelimitedFeaturization</tt>
</dl>
</dl>
</dl>
<a name="CATMfResolutionMode"> <dt> o <b>CATMfResolutionMode</b>
<dl>
  <dd>
<pre>
enum <b>CATMfResolutionMode</b> {
  MfResolutionMode_GeneratedEdges,
  MfResolutionMode_ListAgainstList,
  MfResolutionMode_ListAgainstCurrent,
  MfResolutionMode_FreeEdges,
  MfResolutionMode_Application
}
</pre>
  The way to compute the result edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> MfResolutionMode_GeneratedEdges</tt>
   <dd> is used when the need is to retrieve cells  generated when operating the feature in <tt>FirstOperands</tt> against its input context.
 Only one feature is then allowed within <tt>FirstOperands</tt> list. <tt>SecondOperands</tt> 
 list must be empty.
 </dd>
    <dt><tt> MfResolutionMode_ListAgainstList</tt>
   <dd> is used when the need is to retrieve cells that have one adjacent face issued from a feature in <tt>FirstOperand</tt> list, and the other face issued from a feature
 in <tt>SecondOperands</tt> list.
 </dd>
    <dt><tt> MfResolutionMode_ListAgainstCurrent</tt>
   <dd> is used when the need is to retrieve cells that have one adjacent  face issued from a feature in <tt>FirstOperands</tt> list, and the other face issued from the global context.
 </dd>
    <dt><tt> MfResolutionMode_FreeEdges</tt>
   <dd> is used when the need is to retrieve cells that have both adjacent faces issued from features in <tt>FirstOperands</tt> list.
 <tt>SecondOperands</tt> list must be empty.
 </dd>
    <dt><tt> MfResolutionMode_Application</tt>
   <dd> is available to add applicative resolution modes. In this mode, the resolution of the intersection edge is delegated to the application.
 The application has to provide a solving method using the </dd>
<a href="#" onClick="openLink('CATIMfIntersectApplicativeResolution','');return false">CATIMfIntersectApplicativeResolution</a> interface. A feature implementing this interface is provided in the 
<a href="#" onClick="openLink('','SetResolveMode');return false">SetResolveMode</a> method.
</dl>
</dl>
</dl>
<a name="CATMfTangentPropagationMode"> <dt> o <b>CATMfTangentPropagationMode</b>
<dl>
  <dd>
<pre>
enum <b>CATMfTangentPropagationMode</b> {
  MfTangentPropagationMode_Standard,
  MfTangentPropagationMode_Fillet
}
</pre>
  Mode used to define the tangent propagation mode.
 <br><b>Role</b>:The type to compute the tangent propagation (only for 
<a href="#" onClick="openLink('CATMfFeaturizeMode','');return false">CATMfFeaturizeMode</a> <tt>MfFeaturizeC1Intersection</tt>) which allow to compute propagated edges
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> MfTangentPropagationMode_Standard</tt>
   <dd> corresponds to standard propagation (similar to extract operator) and is the default value
 </dd>
    <dt><tt> MfTangentPropagationMode_Fillet</tt>
   <dd> corresponds to fillet tangency propagation (mandatory for fillet features)</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIMfIntersectionEdge.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
