<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Interface CATIPersistentSubElement</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIPersistentSubElement','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPersistentSubElement','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIPersistentSubElement','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIPersistentSubElement','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>MecModInterfaces Interface CATIPersistentSubElement</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIPersistentSubElement_44715','CATIPersistentSubElement','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIPersistentSubElement</b>
</p>
<p>
<b><i>    Interface allowing the manipulation of Applicative Attributes.</i></b><br>
<br>
  This interface provides a convenient mechanism for adding, setting, retrieving and removing Applicative Attributes (i.e. basic, user-defined and persistent parameters) on feature sub-elements.<br>
  This interface can be retrieved directly from a <a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a>.<br> <br>
  Note:<br>
       <ul>              
         <li>An Applicative Attribute consists of a unique name, and an associated value, which can only belong to one of the following types: a 
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> , an <tt>int</tt>, or a <tt>double</tt>.</li>         <li>The only valid selection objects for retrieving a <tt>CATIPersistentSubElement</tt> interface are the ones corresponding to: a face (
<a href="#" onClick="openLink('CATIRSur','');return false">CATIRSur</a> ), an edge (
<a href="#" onClick="openLink('CATIWireREdge','');return false">CATIWireREdge</a> , 
<a href="#" onClick="openLink('CATIBorderREdge','');return false">CATIBorderREdge</a> ) or a vertex (
<a href="#" onClick="openLink('CATIBorderFVertex','');return false">CATIBorderFVertex</a> ).</li>       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIBRepAccess','');return false">CATIBRepAccess</a>, <a href="#" onClick="openLink('CATICkeParmFactory','');return false">CATICkeParmFactory</a>, <a href="#" onClick="openLink('CATIMmiBRepAttributeSynchronize','');return false">CATIMmiBRepAttributeSynchronize</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddAttribute(CATUnicodeString&amp;,CATICkeParm*)"><b>AddAttribute</b></a>(CATUnicodeString&amp;,CATICkeParm*)
<dd>     Adds a new attribute.
 <dt> o 
    <a href="#GetAttributeValue(CATUnicodeString&amp;,CATICkeParm**)"><b>GetAttributeValue</b></a>(CATUnicodeString&amp;,CATICkeParm**)
<dd>     Retrieves the value of an attribute.
 <dt> o 
    <a href="#GetAttributes(CATListOfCATUnicodeString**,CATCkeListOfParm*)"><b>GetAttributes</b></a>(CATListOfCATUnicodeString**,CATCkeListOfParm*)
<dd>     Retrieves the names and the respective values of all attributes.
 <dt> o 
    <a href="#GetDirectAttributes(CATISpecObject*,CATListOfCATUnicodeString**,CATCkeListOfParm*)"><b>GetDirectAttributes</b></a>(CATISpecObject*,CATListOfCATUnicodeString**,CATCkeListOfParm*)
<dd>     Retrieves the names and the respective values of all attributes which rely on a specific feature.
 <dt> o 
    <a href="#GetListAttributesName(CATListOfCATUnicodeString**)"><b>GetListAttributesName</b></a>(CATListOfCATUnicodeString**)
<dd>     Retrieves the names of all the attributes.
 <dt> o 
    <a href="#GetListOfDirectAttributesName(CATISpecObject*,CATListOfCATUnicodeString**)"><b>GetListOfDirectAttributesName</b></a>(CATISpecObject*,CATListOfCATUnicodeString**)
<dd>     Retrieves the names of all attributes which rely on a specific feature.
 <dt> o 
    <a href="#GetVisPropertiesAccess(CATIVisProperties*&amp;)"><b>GetVisPropertiesAccess</b></a>(CATIVisProperties*&amp;)
<dd>     Provides access to the visual properties of the current sub-element.
 <dt> o 
    <a href="#RemoveAttribute(CATUnicodeString&amp;)"><b>RemoveAttribute</b></a>(CATUnicodeString&amp;)
<dd>     Removes an attribute.
 <dt> o 
    <a href="#RemoveAttributes(CATListOfCATUnicodeString*,CATISpecObject*)"><b>RemoveAttributes</b></a>(CATListOfCATUnicodeString*,CATISpecObject*)
<dd>     Removes multiple attributes at once.
 <dt> o 
    <a href="#SetAttributeValue(CATUnicodeString&amp;,CATICkeParm*)"><b>SetAttributeValue</b></a>(CATUnicodeString&amp;,CATICkeParm*)
<dd>     Sets a new value to an existing attribute.
 <dt> o 
    <a href="#SetAttributes(CATListOfCATUnicodeString*,CATCkeListOfParm)"><b>SetAttributes</b></a>(CATListOfCATUnicodeString*,CATCkeListOfParm)
<dd>     Sets the values of every attribute in a list.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddAttribute"></a><a name="AddAttribute(CATUnicodeString&amp;,CATICkeParm*)"></a> <dt> o <b>AddAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm*')</script> <td><tt>iAttributeValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Adds a new attribute.<br>
  <br>
  <b>Role</b>: This method creates an attribute given a name and a value.<br>          
  <br>          
  Note:<br>
       <ul>              
         <li>Although the attribute will be visible from the current selection object, the user does not have any control on the design-level on which the attribute will be effectively added. Indeed, the attribute will be added to the last feature where the element corresponding to the current <tt>CATIBRepAccess</tt> had the same connexity, for stability reasons.</li>
         <li>It is not possible to add an attribute if an attribute with the same name has been added previously.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iName</tt>
   <dd>         The name of the attribute.<br>
         This is the name of the attribute, stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This name is unique, as it is used as the identifier of the attribute.</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>   iAttributeValue</tt>
   <dd>         The value of the attribute.<br>
         This is the value of the attribute, which can be either a <tt>CATUnicodeString</tt>, an <tt>int</tt>, or a <tt>double</tt>, stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         Note:<br>
         <ul>
           <li>A convenient way of creating the value of an attribute is by using the <b><tt>CATICkeParmFactory</tt></b> interface.</li>    
         </ul>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the attribute has been succesfully added.</li>
           <li>E_FAIL if the attribute could not be added. In general, this happens when an attribute with the same name already exists. If this is the case, the value of the attribute can be modified using 
<a href="#" onClick="openLink('','SetAttribute');return false">SetAttribute</a> .</li>           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iName</tt> is an empty string.</li>
           <li>E_INVALIDARG if <tt>iAttributeValue</tt> is NULL, or if the its type is neither a <tt>CATParmDictionary::StringType</tt>, a <tt>CATParmDictionary::IntegerType</tt>, nor a <tt>CATParmDictionary::RealType</tt>.</li>
         </ul>
         <br>
         Note:<br>
         <ul>
           <li>If the method fails for any of the above reasons, the attribute will not be added.</li>
         </ul>
         <br>
</dl>
</dl>
<a name="GetAttributeValue"></a><a name="GetAttributeValue(CATUnicodeString&amp;,CATICkeParm**)"></a> <dt> o <b>GetAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm**')</script> <td><tt>oAttributeValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the value of an attribute.<br>
  <br>
  <b>Role</b>: This method retrieves the value of an attribute, given its name.<br>          
  <br>          
  Note:<br>
       <ul>              
         <li>The retrieved value is the latest added one as seen from the current design-level.</li>    
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iName</tt>
   <dd>         The name of the attribute.<br>
         This is the name of the attribute, stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This name is unique, as it is used as the identifier of the attribute.</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>   oAttributeValue</tt>
   <dd>         The retrieved value of the attribute.<br>
         This is the value of the attribute, which can be either a <tt>CATUnicodeString</tt>, an <tt>int</tt>, or a <tt>double</tt>, stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the value of the attribute has been succesfully retrieved.</li>
           <li>E_FAIL if the value of the attribute could not be retrieved. This can happen if the name of the attribute does not exist.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid.</li>
           <li>E_UNEXPECTED if the retrieved value is not a valid data type. See 
<a href="#" onClick="openLink('','SetAttribute');return false">SetAttribute</a> and 
<a href="#" onClick="openLink('','AddAttribute');return false">AddAttribute</a> for valid data types.</li>           <li>E_INVALIDARG if <tt>iName</tt> is an empty string.</li>
           <li>E_INVALIDARG if <tt>oAttributeValue</tt> is NULL or if <tt>*oAttributeValue</tt> is not NULL.</li>
         </ul>
         <br>
</dl>
</dl>
<a name="GetAttributes"></a><a name="GetAttributes(CATListOfCATUnicodeString**,CATCkeListOfParm*)"></a> <dt> o <b>GetAttributes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAttributes</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString**')</script> <td><tt>oAttrNameList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm*')</script> <td><tt>oCkeAttrValList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the names and the respective values of all attributes.<br>
  <br>
  <b>Role</b>: This method retrieves the names of all the attributes, as well as their respective values.<br>          
  <br>          
  Note:<br>
       <ul>          
         <li>The value of attribute <tt>i</tt> in <tt>oAttrNameList</tt> is stored as element <tt>i</tt> in <tt>oCkeAttrValList</tt>.</li>
         <li>If the name of an attribute is already defined in a parent of the <tt>CATIPersistentSubElement</tt>, then the corresponding value is the one of the child, i.e. the value on the latest design-level.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   oAttrNameList</tt>
   <dd>         The names of the attributes.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This list has the same size as <tt>oCkeAttrValList</tt> .</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>   oCkeAttrValList</tt>
   <dd>         The values of the attributes.<br>
         Contrary to <tt>oAttrNameList</tt>This is a <b>pointer</b> to a list containing the values of the attributes. Each value is stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         Note:<br>
         <ul>
           <li>The list <tt>oCkeAttrValList</tt> is actually a <b>pointer</b> to <tt>CATLISTV(CATBaseUnknown_var)</tt> ( see <tt> CATICkeRelationForwards.h </tt> for more details ). Because of the presence of a pointer in this definition, some extra care must be taken when calling this method.</li>
           <li>This list has the same size as <tt>oAttrNameList</tt>.</li>
         </ul>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the names and the values of the attributes have been properly found.</li>
           <li>E_FAIL if <tt>oAttrNameList</tt> and <tt>oCkeAttrValList</tt> do not have the same size. In that case, both lists will be emptied before exiting.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>oAttrNameList</tt> is NULL (invalid list) or if the list is not empty. In that case, the list will be emptied before exiting.</li>
           <li>E_INVALIDARG if <tt>oCkeAttrValList</tt> is NULL (invalid list) or if the list is not empty. In that case, the list will be emptied before exiting.</li>    
         </ul>
</dl>
</dl>
<a name="GetDirectAttributes"></a><a name="GetDirectAttributes(CATISpecObject*,CATListOfCATUnicodeString**,CATCkeListOfParm*)"></a> <dt> o <b>GetDirectAttributes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirectAttributes</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iMechanicalFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString**')</script> <td><tt>oAttrNameList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm*')</script> <td><tt>oCkeAttrValList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the names and the respective values of all attributes which rely on a specific feature.<br>
  <br>
  <b>Role</b>: This method retrieves the names of all the attributes on a specific feature, as well as their respective values.<br>          
  <br>          
  Note:<br>
       <ul>          
         <li>The value of attribute <tt>i</tt> in <tt>oAttrNameList</tt> is stored as element <tt>i</tt> in <tt>oCkeAttrValList</tt>.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iMechanicalFeature</tt>
   <dd>         The feature used in order to retrieve the attributes.<br>
         This can be seen as the design-level where the attributes are being looked for.<br>
  <br>
  </dd>
    <dt><tt>   oAttrNameList</tt>
   <dd>         The names of the attributes.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This list has the same size as <tt>oCkeAttrValList</tt> .</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>   oCkeAttrValList</tt>
   <dd>         The values of the attributes.<br>
         This is a <b>pointer</b> to a list containing the values of the attributes, each one being stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         Note:<br>
         <ul>
           <li>The list <tt>oCkeAttrValList</tt> is actually a <b>pointer</b> to <tt>CATLISTV(CATBaseUnknown_var)</tt> ( see <tt> CATICkeRelationForwards.h </tt> for more details ). Because of the presence of a pointer in this definition, some extra care must be taken when calling this method.</li>
           <li>This list has the same size as <tt>oAttrNameList</tt> .</li>
         </ul>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the names and the values of the attributes have been properly found.</li>
           <li>E_FAIL if <tt>oAttrNameList</tt> and <tt>oCkeAttrValList</tt> do not have the same size. In that case, both lists will be emptied before exiting.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iMechanicalFeature</tt> is not a valid ancestor for the <tt>CATIPersistentSubElement</tt>.</li>           
           <li>E_INVALIDARG if <tt>oAttrNameList</tt> is NULL (invalid list) or if the list is not empty. In that case, the list will be emptied before exiting.</li>
           <li>E_INVALIDARG if <tt>oCkeAttrValList</tt> is NULL (invalid list) or if the list is not empty. In that case, the list will be emptied before exiting.</li>    
         </ul>
</dl>
</dl>
<a name="GetListAttributesName"></a><a name="GetListAttributesName(CATListOfCATUnicodeString**)"></a> <dt> o <b>GetListAttributesName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListAttributesName</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString**')</script> <td><tt>oAttributNameList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the names of all the attributes.<br>
  <br>
  <b>Role</b>: This method retrieves the names of all the attributes corresponding to the current <tt>CATIBRepAccess</tt>.<br>          
  <br>          
  Note:<br>
       <ul>          
         <li>The name of an attribute is unique for a given selection object. It can therefore be considered as the identifier of the attribute.</li>
         <li>If the name of an attribute is already defined in a parent of the <tt>CATIPersistentSubElement</tt>, then the corresponding value is the one of the child, i.e. the value on the latest design-level.</li>
         <li>If you need to retrieve all attributes as well as their respective values, use 
<a href="#" onClick="openLink('','GetAttributes');return false">GetAttributes</a> for faster performance.</li>                </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   oAttributNameList</tt>
   <dd>         The names of the attributes.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>   
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the names of the attributes have been properly found.</li>
           <li>E_FAIL no attribute names could be retrieved.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>    
         </ul>
</dl>
</dl>
<a name="GetListOfDirectAttributesName"></a><a name="GetListOfDirectAttributesName(CATISpecObject*,CATListOfCATUnicodeString**)"></a> <dt> o <b>GetListOfDirectAttributesName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetListOfDirectAttributesName</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iMechanicalFeature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString**')</script> <td><tt>oAttributNameList</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Retrieves the names of all attributes which rely on a specific feature.<br>
  <br>
  <b>Role</b>: This method retrieves the names of all the attributes on a specific feature.<br>          
  <br> 
  Note:<br>
       <ul>          
         <li>If you need to retrieve all direct attributes as well as their respective values, use 
<a href="#" onClick="openLink('','GetDirectAttributes');return false">GetDirectAttributes</a> for faster performance.</li>                </ul>
       <br>
  
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iMechanicalFeature</tt>
   <dd>         The feature used in order to retrieve the attributes.<br>
         This can be seen as the design-level where the attributes are being looked for.<br>
  <br>
  </dd>
    <dt><tt>   oAttributNameList</tt>
   <dd>         The names of the attributes.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This list has the same size as <tt>oCkeAttrValList</tt> .</li>
         </ul>
         <br>
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the names and the values of the attributes have been properly found.</li>
           <li>E_FAIL no attribute names could be retrieved.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iMechanicalFeature</tt> is not a valid ancestor for the <tt>CATIPersistentSubElement</tt>.</li>           
           <li>E_INVALIDARG if <tt>oAttrNameList</tt> is NULL (invalid list) or if the list is not empty. In that case, the list will be emptied before exiting.</li>              
         </ul>
</dl>
</dl>
<a name="GetVisPropertiesAccess"></a><a name="GetVisPropertiesAccess(CATIVisProperties*&amp;)"></a> <dt> o <b>GetVisPropertiesAccess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVisPropertiesAccess</b>(<td><script type="text/javascript"> activateLink('CATIVisProperties','CATIVisProperties*&amp;')</script> <td><tt>oVisPropertiesAccess</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Provides access to the visual properties of the current sub-element.<br>
  <br>
  <b>Role</b>: This method retrieves a 
<a href="#" onClick="openLink('CATIVisProperties','');return false">CATIVisProperties</a> interface from the current sub-element.<br>            <br>              
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   oVisPropertiesAccess</tt>
   <dd>         The retrieved <tt>CATIVisProperties</tt> interface.<br>
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the <tt>CATIVisProperties</tt> interface has been sucessfully retrieved.</li>
           <li>E_FAIL if the retrieval of <tt>CATIVisProperties</tt> interface failed.</li>    
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>oVisPropertiesAccess</tt> is not NULL.</li>    
         </ul>
</dl>
</dl>
<a name="RemoveAttribute"></a><a name="RemoveAttribute(CATUnicodeString&amp;)"></a> <dt> o <b>RemoveAttribute</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAttribute</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Removes an attribute.<br>
  <br>
  <b>Role</b>: This method removes an attribute given its name.<br>          
  <br>          
  Note:<br>
       <ul>                 
         <li>If an attribute has been defined at many different design levels, only one will be removed.</li>
         <li>Attributes transferred to a <tt>CATIMmiBRepAttributeSynchronize</tt> after a synchronisation (see 
<a href="#" onClick="openLink('CATIMmiBRepAttributeSynchronize','SynchronizeBRepAttributes');return false">CATIMmiBRepAttributeSynchronize.SynchronizeBRepAttributes</a> ) cannot be removed. Remove them or change their value before synchronisation if needed.</li>       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iName</tt>
   <dd>         The name of the attribute to remove.<br>
         <br>
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if all the specified attribute has been properly removed.</li>
           <li>E_FAIL if the attribute could not be properly removed.</li>    
           <li>S_FALSE if the attribute has not been removed because it was part of an import.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iName</tt> is an empty string.</li>
         </ul>
</dl>
</dl>
<a name="RemoveAttributes"></a><a name="RemoveAttributes(CATListOfCATUnicodeString*,CATISpecObject*)"></a> <dt> o <b>RemoveAttributes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAttributes</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>iAttrNameList</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject*')</script> <td><tt>iMechanicalFeature</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    Removes multiple attributes at once.<br>
  <br>
  <b>Role</b>: This method removes each attribute of a list from a given design level.<br>          
  <br>          
  Note:<br>
       <ul>                 
         <li>As with the <tt>RemoveAttribute</tt> method, if an attribute has been defined at many different design levels, only one will be removed.</li>
         <li>As with the <tt>RemoveAttribute</tt> method, attributes transferred to a <tt>CATIMmiBRepAttributeSynchronize</tt> after a synchronisation 
             (see 
<a href="#" onClick="openLink('CATIMmiBRepAttributeSynchronize','SynchronizeBRepAttributes');return false">CATIMmiBRepAttributeSynchronize.SynchronizeBRepAttributes</a> ) cannot be removed.              Remove them or change their value before synchronisation if needed.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iAttrNameList</tt>
   <dd>         The names of the attributes to remove.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>When set to NULL, all attributes will be removed at once from the specified design-level.</li>
         </ul>
 <br>
         <br>
  </dd>
    <dt><tt>   iMechanicalFeature</tt>
   <dd>         The feature where the attributes will be removed from.<br>
         This can be seen as the design-level, where the attributes are actually stored.<br>
         Note:<br>
         <ul>
           <li>When set to NULL, the attributes will be removed from the current design-level.</li>
         </ul>
  <br>
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if all the specified attributes have been properly removed.</li>
           <li>E_FAIL if one or more attributes in <tt>iAttrNameList</tt> have not been properly removed.</li>    
           <li>S_FALSE if one or more attributes in <tt>iAttrNameList</tt> have not been removed because they were part of an import.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iAttrNameList</tt> is not NULL and empty.</li>
           <li>E_INVALIDARG if the specified <tt>iMechanicalFeature</tt> is invalid.</li>
           <li>E_INVALIDARG if <tt>iAttrNameList</tt> and <tt>iMechanicalFeature</tt> are both not NULL at the same time.</li>    
         </ul>
</dl>
</dl>
<a name="SetAttributeValue"></a><a name="SetAttributeValue(CATUnicodeString&amp;,CATICkeParm*)"></a> <dt> o <b>SetAttributeValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAttributeValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm*')</script> <td><tt>iAttributeValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
    Sets a new value to an existing attribute.<br>
  <br>
  <b>Role</b>: This method modifies the value of an existing attribute, given the existing attribute's name and the new value.<br>          
  <br>          
  
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iName</tt>
   <dd>         The name of the attribute.<br>
         This is the name of the attribute, stored as a <b><tt>CATUnicodeString</tt></b>.<br>
  <br>
  </dd>
    <dt><tt>   iAttributeValue</tt>
   <dd>         The value of the attribute.<br>
         This is the value of the attribute, which can be either a <tt>CATUnicodeString</tt>, an <tt>int</tt>, or a <tt>double</tt>, stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         Note:<br>
         <ul>
           <li>A convenient way of creating the value of an attribute is by using the <b><tt>CATICkeParmFactory</tt></b> interface.    *           <li>A convenient way of creating the value of an attribute is by using the <b><tt>CATICkeParmFactory</tt></b> interface.</li>
         </ul>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the attribute has been succesfully set.</li>
           <li>E_FAIL if the attribute could not be set.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iName</tt> is an empty string.</li>
           <li>E_INVALIDARG if <tt>iAttributeValue</tt> is NULL, or if the its type is neither a <tt>CATParmDictionary::StringType</tt>, a <tt>CATParmDictionary::IntegerType</tt>, nor a <tt>CATParmDictionary::RealType</tt>.</li>
         </ul>
         <br>
         Note:<br>
         <ul>
           <li>If the method fails for any of the above reasons, the attribute will not be modified.</li>
         </ul>
         <br>
</dl>
</dl>
<a name="SetAttributes"></a><a name="SetAttributes(CATListOfCATUnicodeString*,CATCkeListOfParm)"></a> <dt> o <b>SetAttributes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAttributes</b>(<td> const <script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString*')</script> <td><tt>iAttrNameList</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iCkeAttrValList</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
    Sets the values of every attribute in a list.<br>
  <br>
  <b>Role</b>: This method sets each attribute of a list to a given value.<br>          
  <br>          
  Note:<br>
       <ul>          
         <li>Attribute <tt>i</tt> in <tt>iAttrNameList</tt> will be set to the value corresponding to element <tt>i</tt> in <tt>iCkeAttrValList</tt>.</li>
         <li>If the name of the attribute does not already exist, it is created and its value is set.</li>
       </ul>
       <br>
  <br>
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>   iAttrNameList</tt>
   <dd>         The names of the attributes.<br>
         This is a list containing the names of the attributes, each one being stored as a <b><tt>CATUnicodeString</tt></b>.<br>
         Note:<br>
         <ul>
           <li>This list has the same size as <tt>iCkeAttrValList</tt> .</li>
         </ul>
         <br>
  <br>
  </dd>
    <dt><tt>   iCkeAttrValList</tt>
   <dd>         The values of the attributes.<br>
         This is a <b>pointer</b> to a list containing the values of the attributes, each one being stored as a <b><tt>CATICkeParm_var</tt></b>.<br>
         Note:<br>
         <ul>
           <li>The list <tt>iCkeAttrValList</tt> is actually a <b>pointer</b> to <tt>CATLISTV(CATBaseUnknown_var)</tt> ( see <tt>  CATICkeRelationForwards.h </tt> for more details ). Because of the presence of a pointer in this definition, some extra care must be taken when calling this method.</li>
           <li>This list has the same size as <tt>iAttrNameList</tt> .</li>
         </ul>
         <br>
  <br>          
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>           <ul>
           <li>S_OK if the values of the attributes have been properly set.</li>
           <li>E_FAIL if the value of an attribute belonging to <tt>iAttrNameList</tt> could not be retrieved, set or added.</li>
           <li>E_UNEXPECTED if the current selecting object is invalid .</li>
           <li>E_INVALIDARG if <tt>iAttrNameList</tt> is NULL (invalid list) or if the list is empty.</li>
           <li>E_INVALIDARG if <tt>iCkeAttrValList</tt> is NULL (invalid list) or if the list is empty.</li>
           <li>E_INVALIDARG if <tt>iAttrNameList</tt> and <tt>iCkeAttrValList</tt> do not have the same size.</li>    
         </ul>
         <br>
         Note:<br>
         <ul>
           <li>If the method fails for any of the above reasons, none of the attributes in <tt>iAttrNameList</tt> will be set or added.</li>
         </ul>
         <br>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIPersistentSubElement.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMecModInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
