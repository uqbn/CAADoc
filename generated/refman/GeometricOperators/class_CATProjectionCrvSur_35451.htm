<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricOperators Class CATProjectionCrvSur</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATProjectionCrvSur','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATProjectionCrvSur','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATProjectionCrvSur','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATProjectionCrvSur','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricOperators Class CATProjectionCrvSur</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATProjectionCrvSur_35451','CATProjectionCrvSur','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATProjectionCrvSur</b>
</p>
<p>
<b><i> Class defining the operator of projection of a CATCurve onto a
 CATSurface.</i></b><br>

<br> The projection can be orthogonal or directional.
 The resulting objects are points or curves. 
<ul>
<li>The CATProjectionCrvSur operator is created with the <tt>CreateProjection</tt> method and 
 directly <tt>delete</tt>d with the usual C++ delete operator.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. The advanced mode also allows you to
 run the same operator with different curves or surfaces.
<li>In both cases, the result is accessed with specific interators.
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATProjectionCrvSur()"><b>~CATProjectionCrvSur</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginningCurve()"><b>BeginningCurve</b></a>()
<dd>  Initializes the iterator of the solution curves of <tt>this</tt> 
 CATProjectionCrvSur operator.
 <dt> o 
    <a href="#BeginningPoint()"><b>BeginningPoint</b></a>()
<dd>  Initializes the iterator of the resulting points.
 <dt> o 
    <a href="#GetCartesianPoint()"><b>GetCartesianPoint</b></a>()
<dd>  Creates the next solution point of <tt>this</tt> CATProjectionCrvSur operator.
 <dt> o 
    <a href="#GetCurve()"><b>GetCurve</b></a>()
<dd>  Creates the next solution curve.
 <dt> o 
    <a href="#GetDistance()"><b>GetDistance</b></a>()
<dd>  Returns the maximum orthogonal distance between the CATCurve and the 
 CATSurface.
 <dt> o 
    <a href="#GetLimitsOnCurve(CATCrvLimits&amp;)"><b>GetLimitsOnCurve</b></a>(CATCrvLimits&amp;)
<dd>  Maps the limitations of the next solution curve on the original curve.
 <dt> o 
    <a href="#GetLimitsOnCurve(CATCrvParam&amp;,CATCrvParam&amp;)"><b>GetLimitsOnCurve</b></a>(CATCrvParam&amp;,CATCrvParam&amp;)
<dd>  Maps the limitations of the next solution curve on the original curve.
 <dt> o 
    <a href="#GetLimitsOnProjection(CATCrvLimits&amp;)"><b>GetLimitsOnProjection</b></a>(CATCrvLimits&amp;)
<dd>  Retrieves the limitations of the next resulting curve.
 <dt> o 
    <a href="#GetLimitsOnProjection(CATCrvParam&amp;,CATCrvParam&amp;)"><b>GetLimitsOnProjection</b></a>(CATCrvParam&amp;,CATCrvParam&amp;)
<dd>  Retrieves the limitations of the next resulting curve.
 <dt> o 
    <a href="#GetLimitsOnSurface(CATSurParam&amp;,CATSurParam&amp;)"><b>GetLimitsOnSurface</b></a>(CATSurParam&amp;,CATSurParam&amp;)
<dd>  Retrieves the limits of the next resulting curve on the surface.
 <dt> o 
    <a href="#GetMappingParam(CATCrvParam&amp;,CATCrvParam&amp;)"><b>GetMappingParam</b></a>(CATCrvParam&amp;,CATCrvParam&amp;)
<dd>  Maps a parameter on the curve to project to a parameter on the projection.
 <dt> o 
    <a href="#GetNumberOfCurves()"><b>GetNumberOfCurves</b></a>()
<dd>  Returns the number of solution curves resulting of <tt>this</tt> CATProjectionCrvSur operator.
 <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  Returns the number of solution points of <tt>this</tt> CATProjectionCrvSur operator.
 <dt> o 
    <a href="#GetPCurve()"><b>GetPCurve</b></a>()
<dd>  Creates the next solution curve as a curve on surface.
 <dt> o 
    <a href="#GetPointOnSurface()"><b>GetPointOnSurface</b></a>()
<dd>  Creates the next solution as a point on surface.
 <dt> o 
    <a href="#IsComplete()"><b>IsComplete</b></a>()
<dd>  Tests whether the curve is entirely projected.
 <dt> o 
    <a href="#IsCompletelyOnSurface()"><b>IsCompletelyOnSurface</b></a>()
<dd>  Tests whether the curve is entirely lying on the surfae.
 <dt> o 
    <a href="#IsPartial()"><b>IsPartial</b></a>()
<dd>  Tests whether the curve is partially projected.
 <dt> o 
    <a href="#IsPartiallyOnSurface()"><b>IsPartiallyOnSurface</b></a>()
<dd>  Tests whether the curve is partially lying on the surfae.
 <dt> o 
    <a href="#NextCurve()"><b>NextCurve</b></a>()
<dd>  Skips to the next solution curve of <tt>this</tt> CATProjectionCrvSur operator.
 <dt> o 
    <a href="#NextPoint()"><b>NextPoint</b></a>()
<dd>  Skips to the next solution point of <tt>this</tt> CATProjectionCrvSur operator.
 <dt> o 
    <a href="#SetClosestProjection()"><b>SetClosestProjection</b></a>()
<dd>  Asks for the closest projection solution (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetCurve(CATCurve*)"><b>SetCurve</b></a>(CATCurve*)
<dd>  Asks for the projection of a new CATCurve (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetCuspCut(CATBoolean)"><b>SetCuspCut</b></a>(CATBoolean)
<dd>  Asks for cusp cut setting (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetLayDown(double)"><b>SetLayDown</b></a>(double)
<dd>  Sets the "LayDown" mode.
 <dt> o 
    <a href="#SetLimits(CATCrvLimits*)"><b>SetLimits</b></a>(CATCrvLimits*)
<dd>  Modifies the curve domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetLimits(CATSurLimits*)"><b>SetLimits</b></a>(CATSurLimits*)
<dd>  Modifies the surface domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetMaximalDistance(double)"><b>SetMaximalDistance</b></a>(double)
<dd>  Set the maximal distance between a pint and its projected (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetNoClosedProjection()"><b>SetNoClosedProjection</b></a>()
<dd> Asks for the projection solution not closed (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#SetSurface(CATSurface*)"><b>SetSurface</b></a>(CATSurface*)
<dd>  Asks for the projection on a new CATSurface (<tt>ADVANCED</tt> mode).
 <dt> o 
    <a href="#UnSetClosestProjection()"><b>UnSetClosestProjection</b></a>()
<dd>  Asks for the all the solutions (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATProjectionCrvSur"></a><a name="~CATProjectionCrvSur()"></a> <dt> o <b>~CATProjectionCrvSur</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATProjectionCrvSur</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="BeginningCurve"></a><a name="BeginningCurve()"></a> <dt> o <b>BeginningCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the solution curves of <tt>this</tt> 
 CATProjectionCrvSur operator.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="BeginningPoint"></a><a name="BeginningPoint()"></a> <dt> o <b>BeginningPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the resulting points.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="GetCartesianPoint"></a><a name="GetCartesianPoint()"></a> <dt> o <b>GetCartesianPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCartesianPoint','CATCartesianPoint*')</script>  <b>GetCartesianPoint</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution point of <tt>this</tt> CATProjectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetCurve"></a><a name="GetCurve()"></a> <dt> o <b>GetCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script>  <b>GetCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution curve.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created curve. A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetDistance"></a><a name="GetDistance()"></a> <dt> o <b>GetDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetDistance</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum orthogonal distance between the CATCurve and the 
 CATSurface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The distance.
</dl>
</dl>
<a name="GetLimitsOnCurve"></a><a name="GetLimitsOnCurve(CATCrvLimits&amp;)"></a> <dt> o <b>GetLimitsOnCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitsOnCurve</b>(<td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>ioLim</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Maps the limitations of the next solution curve on the original curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLim</tt>
   <dd> The corresponding domain on the curve to projact.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitsOnCurve"></a><a name="GetLimitsOnCurve(CATCrvParam&amp;,CATCrvParam&amp;)"></a> <dt> o <b>GetLimitsOnCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitsOnCurve</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioStartParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioEndParam</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Maps the limitations of the next solution curve on the original curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioStartParam</tt>
   <dd> The parameter of the first limitation on the curve to project.
 </dd>
    <dt><tt> ioEndParam</tt>
   <dd> The parameter of the first limitation on the curve to project.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitsOnProjection"></a><a name="GetLimitsOnProjection(CATCrvLimits&amp;)"></a> <dt> o <b>GetLimitsOnProjection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitsOnProjection</b>(<td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits&amp;')</script> <td><tt>ioLim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the limitations of the next resulting curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLim</tt>
   <dd> The domain of the next solution curve.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitsOnProjection"></a><a name="GetLimitsOnProjection(CATCrvParam&amp;,CATCrvParam&amp;)"></a> <dt> o <b>GetLimitsOnProjection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitsOnProjection</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioStartParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioEndParam</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the limitations of the next resulting curve.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioStartParam</tt>
   <dd> The parameter on the projection of the first limitation of the solution.
 </dd>
    <dt><tt> ioEndParam</tt>
   <dd> The parameter on the projection of the last limitation of the solution.</dd>
</dl>
</dl>
</dl>
<a name="GetLimitsOnSurface"></a><a name="GetLimitsOnSurface(CATSurParam&amp;,CATSurParam&amp;)"></a> <dt> o <b>GetLimitsOnSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLimitsOnSurface</b>(<td><script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>ioFirstParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSurParam','CATSurParam&amp;')</script> <td><tt>ioLastParam</tt>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the limits of the next resulting curve on the surface. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioFirstParam</tt>
   <dd> The surface parameter of the first limitation of the solution.
 </dd>
    <dt><tt> ioLastParam</tt>
   <dd> The surface parameter of the last limitation of the solution.</dd>
</dl>
</dl>
</dl>
<a name="GetMappingParam"></a><a name="GetMappingParam(CATCrvParam&amp;,CATCrvParam&amp;)"></a> <dt> o <b>GetMappingParam</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetMappingParam</b>(<td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>iCrvParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCrvParam','CATCrvParam&amp;')</script> <td><tt>ioProjParam</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Maps a parameter on the curve to project to a parameter on the projection. 
 <br>The PCurve must be previously created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCrvParam</tt>
   <dd> The parameter on the curve to project.
 </dd>
    <dt><tt> ioProjParam</tt>
   <dd> The corresponding parameter on the projection.</dd>
</dl>
</dl>
</dl>
<a name="GetNumberOfCurves"></a><a name="GetNumberOfCurves()"></a> <dt> o <b>GetNumberOfCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfCurves</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of solution curves resulting of <tt>this</tt> CATProjectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of curves.
</dl>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of solution points of <tt>this</tt> CATProjectionCrvSur operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of points.
</dl>
</dl>
<a name="GetPCurve"></a><a name="GetPCurve()"></a> <dt> o <b>GetPCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPCurve','CATPCurve*')</script>  <b>GetPCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution curve as a curve on surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created curve on surface. A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetPointOnSurface"></a><a name="GetPointOnSurface()"></a> <dt> o <b>GetPointOnSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPointOnSurface','CATPointOnSurface*')</script>  <b>GetPointOnSurface</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution as a point on surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created point on curve. A new point is created each time this method is called.
 If you do not want to keep the created point, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="IsComplete"></a><a name="IsComplete()"></a> <dt> o <b>IsComplete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsComplete</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the curve is entirely projected.  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if it is entirely projected, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsCompletelyOnSurface"></a><a name="IsCompletelyOnSurface()"></a> <dt> o <b>IsCompletelyOnSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsCompletelyOnSurface</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the curve is entirely lying on the surfae.  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if it is entirely laying, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsPartial"></a><a name="IsPartial()"></a> <dt> o <b>IsPartial</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsPartial</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the curve is partially projected.  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if it is partially projected, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsPartiallyOnSurface"></a><a name="IsPartiallyOnSurface()"></a> <dt> o <b>IsPartiallyOnSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsPartiallyOnSurface</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the curve is partially lying on the surfae.  
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if it is partially laying, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="NextCurve"></a><a name="NextCurve()"></a> <dt> o <b>NextCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution curve of <tt>this</tt> CATProjectionCrvSur operator.
<br>After <tt>BeginningCurve</tt>, it skips to the first curve. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="NextPoint"></a><a name="NextPoint()"></a> <dt> o <b>NextPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextPoint</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution point of <tt>this</tt> CATProjectionCrvSur operator.
<br>After <tt>BeginningPoint</tt>, it skips to the first point. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="SetClosestProjection"></a><a name="SetClosestProjection()"></a> <dt> o <b>SetClosestProjection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetClosestProjection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for the closest projection solution (<tt>ADVANCED</tt> mode).
 <br> The operator only outputs the closest projection.
</dl>
<a name="SetCurve"></a><a name="SetCurve(CATCurve*)"></a> <dt> o <b>SetCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCurve</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iNewCurveToProject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for the projection of a new CATCurve (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewCurveToProject</tt>
   <dd> The pointer to the new curve.</dd>
</dl>
</dl>
</dl>
<a name="SetCuspCut"></a><a name="SetCuspCut(CATBoolean)"></a> <dt> o <b>SetCuspCut</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCuspCut</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iBool</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for cusp cut setting (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBool</tt>
   <dd> <br><b>Legal values</b>: <tt>TRUE</tt> if operator cuts solution on cusp points, <tt>FALSE</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetLayDown"></a><a name="SetLayDown(double)"></a> <dt> o <b>SetLayDown</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLayDown</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLayDownDistance</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the "LayDown" mode. In "LayDown" mode, the operator returns a projection result
 only if the distance between each point of the curve and its projection
 is smaller than <tt>iLayDownDistance</tt>. 
 <br> This API can only be used in <tt>ADVANCED</tt> mode and is available only in
 normal projections.
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATCrvLimits*)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLimits</b>(<td><script type="text/javascript"> activateLink('CATCrvLimits','CATCrvLimits*')</script> <td><tt>iNewCurveLimits</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the curve domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
<br> It does not change the current curve 
 limitations.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewCurveLimits</tt>
   <dd> The new limitations of the curve, <tt>NULL</tt> to take the current limitations.</dd>
</dl>
</dl>
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATSurLimits*)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLimits</b>(<td><script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits*')</script> <td><tt>iNewSurfaceLimits</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the surface domain to take into account for <tt>this</tt> CATIntersectionCrvSur
 operator (<tt>ADVANCED</tt> mode).
<br> It does not change the current surface 
 limitations.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewSurfaceLimits</tt>
   <dd> The new limitations of the surface, <tt>NULL</tt> to take the current limitations.</dd>
</dl>
</dl>
</dl>
<a name="SetMaximalDistance"></a><a name="SetMaximalDistance(double)"></a> <dt> o <b>SetMaximalDistance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaximalDistance</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>MaxDist</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Set the maximal distance between a pint and its projected (<tt>ADVANCED</tt> mode).
 <br> The operator only outputs the  projection under the distance.
</dl>
<a name="SetNoClosedProjection"></a><a name="SetNoClosedProjection()"></a> <dt> o <b>SetNoClosedProjection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNoClosedProjection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
Asks for the projection solution not closed (<tt>ADVANCED</tt> mode).
 <br> The operator only outputs projection not closed.
</dl>
<a name="SetSurface"></a><a name="SetSurface(CATSurface*)"></a> <dt> o <b>SetSurface</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSurface</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iOnNewSurface</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for the projection on a new CATSurface (<tt>ADVANCED</tt> mode).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOnNewSurface</tt>
   <dd> The pointer to the new surface.</dd>
</dl>
</dl>
</dl>
<a name="UnSetClosestProjection"></a><a name="UnSetClosestProjection()"></a> <dt> o <b>UnSetClosestProjection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UnSetClosestProjection</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Asks for the all the solutions (<tt>ADVANCED</tt> mode).
 <br> To call after a <tt>Run</tt> with <tt>SetClosestProjection</tt>.
</dl>
<hr>
 This object is included in the file: <b>CATProjectionCrvSur.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
