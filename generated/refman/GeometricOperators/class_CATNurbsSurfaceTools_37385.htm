<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricOperators Class CATNurbsSurfaceTools</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATNurbsSurfaceTools','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATNurbsSurfaceTools','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATNurbsSurfaceTools','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATNurbsSurfaceTools','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricOperators Class CATNurbsSurfaceTools</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATNurbsSurfaceTools_37385','CATNurbsSurfaceTools','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATNurbsSurfaceTools</b>
</p>
<p>
<b><i> Class used to manipulate a Nurbs surface.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATNurbsSurfaceTools()"><b>~CATNurbsSurfaceTools</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ActiveSplits(double,double,double,double)"><b>ActiveSplits</b></a>(double,double,double,double)
<dd>  Splits the surface.
 <dt> o 
    <a href="#Check()"><b>Check</b></a>()
<dd>  Checks the current surface.
 <dt> o 
    <a href="#ExchangeUV()"><b>ExchangeUV</b></a>()
<dd>  Reverses U and V along the surface.
 <dt> o 
    <a href="#GetDeformation(double&amp;,double&amp;,double&amp;)"><b>GetDeformation</b></a>(double&amp;,double&amp;,double&amp;)
<dd>  Computes an estimation of the deformation value.
 <dt> o 
    <a href="#GetDegrees(int&amp;,int&amp;)"><b>GetDegrees</b></a>(int&amp;,int&amp;)
<dd>  Retrieves the surface degree.
 <dt> o 
    <a href="#GetInfo()"><b>GetInfo</b></a>()
<dd>  Retrieves the CATNurbsToolsInfo.
 <dt> o 
    <a href="#GetNumberOfControlPoints(int&amp;,int&amp;)"><b>GetNumberOfControlPoints</b></a>(int&amp;,int&amp;)
<dd>  Retrieves the number of control points of the Nurbs surface.
 <dt> o 
    <a href="#GetNumberOfKnots(int&amp;,int&amp;)"><b>GetNumberOfKnots</b></a>(int&amp;,int&amp;)
<dd>  Retrieves the number of knot values of the Nurbs surface.
 <dt> o 
    <a href="#GetResult()"><b>GetResult</b></a>()
<dd>  Returns the new surface computed by <tt>this</tt> operator.
 <dt> o 
    <a href="#ImposeParametrizations(CATSurface*,int,int,int,int)"><b>ImposeParametrizations</b></a>(CATSurface*,int,int,int,int)
<dd>  Imposes the parameterization of another surface
 This method deforms the surface.
 <dt> o 
    <a href="#Run()"><b>Run</b></a>()
<dd>  Runs <tt>this</tt> operator.
 <dt> o 
    <a href="#SetDegrees(int,int,int,int,int,int)"><b>SetDegrees</b></a>(int,int,int,int,int,int)
<dd>  Mofifies the degree of the surface.
 <dt> o 
    <a href="#UActiveSplit(double,double)"><b>UActiveSplit</b></a>(double,double)
<dd>  Splits the surface along U.
 <dt> o 
    <a href="#UChangeKnotVector(CATKnotVector*,int,int)"><b>UChangeKnotVector</b></a>(CATKnotVector*,int,int)
<dd>  Modifies the knot vector along U.
 <dt> o 
    <a href="#UImposeParametrization(CATCurve*,int,int)"><b>UImposeParametrization</b></a>(CATCurve*,int,int)
<dd>  Imposes the parameterization of a surface along U.
 <dt> o 
    <a href="#UInvert()"><b>UInvert</b></a>()
<dd>  Inverts the surface along U.
 <dt> o 
    <a href="#UKnotInsertion(double,int)"><b>UKnotInsertion</b></a>(double,int)
<dd>  Inserts a knot along U.
 <dt> o 
    <a href="#UKnotRankToKnotValue(int,double&amp;)"><b>UKnotRankToKnotValue</b></a>(int,double&amp;)
<dd>  Retrieves a knot value along U from its rank.
 <dt> o 
    <a href="#UKnotRemoval(int)"><b>UKnotRemoval</b></a>(int)
<dd>  Removes a knot along U.
 <dt> o 
    <a href="#UKnotReplace(int,double,int,int)"><b>UKnotReplace</b></a>(int,double,int,int)
<dd>  Replaces a knot along U.
 <dt> o 
    <a href="#UKnotValueToKnotRank(double,int&amp;)"><b>UKnotValueToKnotRank</b></a>(double,int&amp;)
<dd>  Retrieves the rank of a knot along U from its value.
 <dt> o 
    <a href="#UMultipleKnotInsertion(int,double*,int*)"><b>UMultipleKnotInsertion</b></a>(int,double*,int*)
<dd>  Inserts several knots along U.
 <dt> o 
    <a href="#USetDegree(int,int,int)"><b>USetDegree</b></a>(int,int,int)
<dd>  Modifies the degree of the surface along U.
 <dt> o 
    <a href="#USetMultiplicity(int,int)"><b>USetMultiplicity</b></a>(int,int)
<dd>  Modifies the multiplicity of a knot along U.
 <dt> o 
    <a href="#VActiveSplit(double,double)"><b>VActiveSplit</b></a>(double,double)
<dd>  Splits the surface along V.
 <dt> o 
    <a href="#VChangeKnotVector(CATKnotVector*,int,int)"><b>VChangeKnotVector</b></a>(CATKnotVector*,int,int)
<dd>  Modifies the knot vector along U.
 <dt> o 
    <a href="#VImposeParametrization(CATCurve*,int,int)"><b>VImposeParametrization</b></a>(CATCurve*,int,int)
<dd>  Imposes the parameterization of a surface along V.
 <dt> o 
    <a href="#VInvert()"><b>VInvert</b></a>()
<dd>  Inverts the surface along V.
 <dt> o 
    <a href="#VKnotInsertion(double,int)"><b>VKnotInsertion</b></a>(double,int)
<dd>  Inserts a knot along V.
 <dt> o 
    <a href="#VKnotRankToKnotValue(int,double&amp;)"><b>VKnotRankToKnotValue</b></a>(int,double&amp;)
<dd>  Retrieves a knot value along V from its rank.
 <dt> o 
    <a href="#VKnotRemoval(int)"><b>VKnotRemoval</b></a>(int)
<dd>  Removes a knot along V.
 <dt> o 
    <a href="#VKnotReplace(int,double,int,int)"><b>VKnotReplace</b></a>(int,double,int,int)
<dd>  Replaces a knot along V.
 <dt> o 
    <a href="#VKnotValueToKnotRank(double,int&amp;)"><b>VKnotValueToKnotRank</b></a>(double,int&amp;)
<dd>  Retrieves the rank of a knot along V from its value.
 <dt> o 
    <a href="#VMultipleKnotInsertion(int,double*,int*)"><b>VMultipleKnotInsertion</b></a>(int,double*,int*)
<dd>  Inserts several knots along V.
 <dt> o 
    <a href="#VSetDegree(int,int,int)"><b>VSetDegree</b></a>(int,int,int)
<dd>  Modifies the degree of the surface along V.
 <dt> o 
    <a href="#VSetMultiplicity(int,int)"><b>VSetMultiplicity</b></a>(int,int)
<dd>  Modifies the multiplicity of a knot along V.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATNurbsSurfaceTools"></a><a name="~CATNurbsSurfaceTools()"></a> <dt> o <b>~CATNurbsSurfaceTools</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATNurbsSurfaceTools</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="ActiveSplits"></a><a name="ActiveSplits(double,double,double,double)"></a> <dt> o <b>ActiveSplits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>ActiveSplits</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartKnotValuesU</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndKnotValuesU</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartKnotValuesV</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndKnotValuesV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Splits the surface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartKnotValuesU</tt>
   <dd> The start parameter of the surface along U.
 </dd>
    <dt><tt> iEndKnotValuesU</tt>
   <dd> The end parameter of the surface along U.
 </dd>
    <dt><tt> iStartKnotValuesV</tt>
   <dd> The start parameter of the surface along V.
 </dd>
    <dt><tt> iEndKnotValuesV</tt>
   <dd> The end parameter of the surface along V.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
     <dt><tt>Info_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>value is lower than first knot value or greater than the last knot value.
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="Check"></a><a name="Check()"></a> <dt> o <b>Check</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>Check</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Checks the current surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                </tt> <dd>No info. It is OK.
     <dt><tt>Info_InternalContinuity</tt> <dd>The internal continuity must be greater or equal to C2.
     <dt><tt>Info_ConfusedKnots     </tt> <dd>Two knots are coincident.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="ExchangeUV"></a><a name="ExchangeUV()"></a> <dt> o <b>ExchangeUV</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>ExchangeUV</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Reverses U and V along the surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="GetDeformation"></a><a name="GetDeformation(double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>GetDeformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>GetDeformation</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oDeformation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oParamValueU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oParamValueV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Computes an estimation of the deformation value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDeformation</tt>
   <dd> The deformation is the max distance between the input surface and current surface.
 It can be called several times and before </dd>
<a href="#" onClick="openLink('CATNurbsSurfaceTools','Run');return false">CATNurbsSurfaceTools.Run</a>. 
    <dt><tt> oParamValueU</tt>
   <dd> The parameter value along U where the maximum deformation is computed.
 </dd>
    <dt><tt> oParamValueV</tt>
   <dd> The parameter value along V where the maximum deformation is computed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="GetDegrees"></a><a name="GetDegrees(int&amp;,int&amp;)"></a> <dt> o <b>GetDegrees</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>GetDegrees</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oDegreeU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oDegreeV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the surface degree.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDegreeU</tt>
   <dd> The degree along U.
 </dd>
    <dt><tt> oDegreeV</tt>
   <dd> The degree along V.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include for the list of information values.
</dl>
</dl>
<a name="GetInfo"></a><a name="GetInfo()"></a> <dt> o <b>GetInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>GetInfo</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the CATNurbsToolsInfo.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all information values.
</dl>
</dl>
<a name="GetNumberOfControlPoints"></a><a name="GetNumberOfControlPoints(int&amp;,int&amp;)"></a> <dt> o <b>GetNumberOfControlPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>GetNumberOfControlPoints</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumberOfControlPointsU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumberOfControlPointsV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of control points of the Nurbs surface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumberOfControlPointsU</tt>
   <dd> The number of control points along U.
 </dd>
    <dt><tt> oNumberOfControlPointsV</tt>
   <dd> The number of control points along V.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="GetNumberOfKnots"></a><a name="GetNumberOfKnots(int&amp;,int&amp;)"></a> <dt> o <b>GetNumberOfKnots</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>GetNumberOfKnots</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumberOfKnotsU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumberOfKnotsV</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of knot values of the Nurbs surface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumberOfKnotsU</tt>
   <dd> The number of distinct knot values along U.
 </dd>
    <dt><tt> oNumberOfKnotsV</tt>
   <dd> The number of distinct knot values along V.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="GetResult"></a><a name="GetResult()"></a> <dt> o <b>GetResult</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATSurface','CATSurface *')</script>  <b>GetResult</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the new surface computed by <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the new surface.
 Pointer is 0 if an error has occurred (use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetInfo');return false">CATNurbsSurfaceTools.GetInfo</a> for more information).
</dl>
</dl>
<a name="ImposeParametrizations"></a><a name="ImposeParametrizations(CATSurface*,int,int,int,int)"></a> <dt> o <b>ImposeParametrizations</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>ImposeParametrizations</b>(<td><script type="text/javascript"> activateLink('CATSurface','CATSurface*')</script> <td><tt>iSurface</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityU</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityU</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityV</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityV</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Imposes the parameterization of another surface
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> The surface whose parametrization is to be kept.
 </dd>
    <dt><tt> iLeftContinuityU</tt>
   <dd> The left continuity along U.
 </dd>
    <dt><tt> iRightContinuityU</tt>
   <dd> The right continuity along U.
 </dd>
    <dt><tt> iLeftContinuityV</tt>
   <dd> The left continuity along V.
 </dd>
    <dt><tt> iRightContinuityV</tt>
   <dd> The right continuity along V.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (Default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InputPtrNull      </tt> <dd>Input pointer of Surface is null
     <dt><tt>Error_InputNotNurbs     </tt> <dd>Input Surface is not a Nurbs
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greatest than 2
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal nb of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="Run"></a><a name="Run()"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Run</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Runs <tt>this</tt> operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt> 0 </tt> <dd>It is OK.
     <dt><tt> 1 </tt> <dd>Error.
     <dt><tt>100</tt> <dd>Fatal Error.
 </dl>
 If an error has occurred, use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetInfo');return false">CATNurbsSurfaceTools.GetInfo</a> for more information.
</dl>
</dl>
<a name="SetDegrees"></a><a name="SetDegrees(int,int,int,int,int,int)"></a> <dt> o <b>SetDegrees</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>SetDegrees</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegreeU</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegreeV</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityU</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityU</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityV</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityV</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Mofifies the degree of the surface.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegreeU</tt>
   <dd> The new degree along U.
 </dd>
    <dt><tt> iDegreeV</tt>
   <dd> The new degree along V.
 </dd>
    <dt><tt> iLeftContinuityU</tt>
   <dd> The left continuity along U.
 </dd>
    <dt><tt> iRightContinuityU</tt>
   <dd> The right continuity along U.
 </dd>
    <dt><tt> iLeftContinuityV</tt>
   <dd> The left continuity along V.
 </dd>
    <dt><tt> iRightContinuityV</tt>
   <dd> The right continuity along V.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InvalidDegree     </tt> <dd>The input degree is lower than 3 (1 in a single-arc case) or greater than the MaxDegree (11)
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2.
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UActiveSplit"></a><a name="UActiveSplit(double,double)"></a> <dt> o <b>UActiveSplit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UActiveSplit</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartKnotValues</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndKnotValues</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Splits the surface along U.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartKnotValues</tt>
   <dd> The start parameter of the surface.
 </dd>
    <dt><tt> iEndKnotValues</tt>
   <dd> The end parameter of the surface
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
     <dt><tt>Info_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>value is lower than first knot value or greater than the last knot value
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UChangeKnotVector"></a><a name="UChangeKnotVector(CATKnotVector*,int,int)"></a> <dt> o <b>UChangeKnotVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UChangeKnotVector</b>(<td> const <script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector*')</script> <td><tt>iNewKnotVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the knot vector along U. 
 This method deform the Surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewKnotVector</tt>
   <dd> The Surface to keep the parametrization.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (Default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InputPtrNull      </tt> <dd>Input pointer of New Knot Vector is null
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greatest than 2
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal nb of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UImposeParametrization"></a><a name="UImposeParametrization(CATCurve*,int,int)"></a> <dt> o <b>UImposeParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UImposeParametrization</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Imposes the parameterization of a surface along U.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> The surface whose parameterization is to be kept.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InputPtrNull      </tt> <dd>Surface input pointer is null.
     <dt><tt>Error_InputNotNurbs     </tt> <dd>Input surface is not a Nurbs.
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2.
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UInvert"></a><a name="UInvert()"></a> <dt> o <b>UInvert</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UInvert</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the surface along U.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UKnotInsertion"></a><a name="UKnotInsertion(double,int)"></a> <dt> o <b>UKnotInsertion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UKnotInsertion</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMultiplicity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Inserts a knot along U.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotValue</tt>
   <dd> The parameter value of the new knot.
 </dd>
    <dt><tt> iMultiplicity</tt>
   <dd> The multiplicity value of the new knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Error_InvalidDegree      </tt> <dd>The input degree is lower than 3 (1 in a single-arc case) or greater than the maxDegree (11).
     <dt><tt>Error_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits </tt> <dd>Input value is lower than first knot value or greater than the last knot value.
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than Degree-2.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UKnotRankToKnotValue"></a><a name="UKnotRankToKnotValue(int,double&amp;)"></a> <dt> o <b>UKnotRankToKnotValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UKnotRankToKnotValue</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oKnotValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a knot value along U from its rank.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot. The rank starts from 1.
 </dd>
    <dt><tt> oKnotValue</tt>
   <dd> The parameter value of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits</tt> <dd>The input rank is lower than 1 or greater than the number of knots.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UKnotRemoval"></a><a name="UKnotRemoval(int)"></a> <dt> o <b>UKnotRemoval</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UKnotRemoval</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a knot along U.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be removed. The rank starts from 1.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits</tt> <dd>The input rank is lower than 1 or greater than the number of knots.
     <dt><tt>Error_ExtremityKnot    </tt> <dd>An extremity knot can not be removed.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UKnotReplace"></a><a name="UKnotReplace(int,double,int,int)"></a> <dt> o <b>UKnotReplace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UKnotReplace</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotNewValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replaces a knot along U.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be replaced. The rank starts from 1.
 </dd>
    <dt><tt> iKnotNewValue</tt>
   <dd> The new parameter value of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits </tt> <dd>The input rank is lower than 1 or greater than the number of knots
     <dt><tt>Error_ExtremityKnot     </tt> <dd>An extremity knot can not be modified.
     <dt><tt>Error_KnotValueOnAKnot  </tt> <dd>The new knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>The new value is lower than the first knot value or greater than the last knot value.
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2.
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UKnotValueToKnotRank"></a><a name="UKnotValueToKnotRank(double,int&amp;)"></a> <dt> o <b>UKnotValueToKnotRank</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UKnotValueToKnotRank</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oKnotRank</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the rank of a knot along U from its value.
 The parameter corresponds to a knot if the length between the input parameter and 
 the knot value is lower than TolKnotConfusion.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotValue</tt>
   <dd> The parameter value of the knot.
 </dd>
    <dt><tt> oKnotRank</tt>
   <dd> The rank of the knot. The rank starts from 1.
 If the parameter value does not correspond to a knot, iKnotRank = 0;
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Info_NotAKnot           </tt> <dd>The value is not corresponding to a knot
     <dt><tt>Info_KnotValueOnTwoKnots</tt> <dd>The value is corresponding to two knots
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>Input value is lower than first knot value or greater than the last knot value.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="UMultipleKnotInsertion"></a><a name="UMultipleKnotInsertion(int,double*,int*)"></a> <dt> o <b>UMultipleKnotInsertion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>UMultipleKnotInsertion</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumberOfKnotsToInsert</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iKnotValues</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iMultiplicities</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Inserts several knots along U.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumberOfKnotsToInsert</tt>
   <dd> The number of knots to be inserted.
 </dd>
    <dt><tt> iKnotValues</tt>
   <dd> The array of parameter values of the new knots.
 </dd>
    <dt><tt> iMultiplicities</tt>
   <dd> The array of multiplicity values of the new knots.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knots.
     <dt><tt>Error_KnotValueOutLimits </tt> <dd>Input value is lower than first knot value or greater than last knot value
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than Degree-2
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="USetDegree"></a><a name="USetDegree(int,int,int)"></a> <dt> o <b>USetDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>USetDegree</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegreeU</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityU</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityU</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the degree of the surface along U.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegree</tt>
   <dd> The new degree of the surface.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InvalidDegree     </tt> <dd>The input degree is lower than 3 (1 in single-arc case) or greater than the MaxDegree (11)
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all information values.
</dl>
</dl>
<a name="USetMultiplicity"></a><a name="USetMultiplicity(int,int)"></a> <dt> o <b>USetMultiplicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>USetMultiplicity</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMultiplicity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the multiplicity of a knot along U.
 This method deforms the surface if the new multiplicity is lower than the previous multiplicity. 
 Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be removed. The rank starts from 1.
 </dd>
    <dt><tt> iMultiplicity</tt>
   <dd> The new multiplicity of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Info_NoModification      </tt> <dd>No modification - new multiplicity is equal to previous multiplicity
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than degree-2
     <dt><tt>Error_KnotRankOutLimits  </tt> <dd>The input rank is lower than 1 or greater than number of knots
     <dt><tt>Error_ExtremityKnot      </tt> <dd>An extremity knot can not be modified.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VActiveSplit"></a><a name="VActiveSplit(double,double)"></a> <dt> o <b>VActiveSplit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VActiveSplit</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iStartKnotValues</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iEndKnotValues</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Splits the surface along V.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStartKnotValues</tt>
   <dd> The start parameter of the surface.
 </dd>
    <dt><tt> iEndKnotValues</tt>
   <dd> The end parameter of the surface
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
     <dt><tt>Info_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>value is lower than first knot value or greater than the last knot value
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VChangeKnotVector"></a><a name="VChangeKnotVector(CATKnotVector*,int,int)"></a> <dt> o <b>VChangeKnotVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VChangeKnotVector</b>(<td> const <script type="text/javascript"> activateLink('CATKnotVector','CATKnotVector*')</script> <td><tt>iNewKnotVector</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the knot vector along U. 
 This method deform the Surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewKnotVector</tt>
   <dd> The surface to keep the parametrization.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (Default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InputPtrNull      </tt> <dd>Input pointer of New Knot Vector is null
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greatest than 2
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal nb of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VImposeParametrization"></a><a name="VImposeParametrization(CATCurve*,int,int)"></a> <dt> o <b>VImposeParametrization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VImposeParametrization</b>(<td><script type="text/javascript"> activateLink('CATCurve','CATCurve*')</script> <td><tt>iCurve</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Imposes the parameterization of a surface along V.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSurface</tt>
   <dd> The surface whose parameterization is to be kept.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity.
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InputPtrNull      </tt> <dd>Surface input pointer is null.
     <dt><tt>Error_InputNotNurbs     </tt> <dd>Input surface is not a Nurbs.
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2.
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VInvert"></a><a name="VInvert()"></a> <dt> o <b>VInvert</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VInvert</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Inverts the surface along V.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK</tt> <dd>No info. It is OK.
</dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VKnotInsertion"></a><a name="VKnotInsertion(double,int)"></a> <dt> o <b>VKnotInsertion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VKnotInsertion</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMultiplicity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Inserts a knot along V.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotValue</tt>
   <dd> The parameter value of the new knot.
 </dd>
    <dt><tt> iMultiplicity</tt>
   <dd> The multiplicity value of the new knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Error_InvalidDegree      </tt> <dd>The input degree is lower than 3 (1 in a single-arc case) or greater than the maxDegree (11).
     <dt><tt>Error_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knot.
     <dt><tt>Error_KnotValueOutLimits </tt> <dd>Input value is lower than first knot value or greater than the last knot value.
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than Degree-2.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VKnotRankToKnotValue"></a><a name="VKnotRankToKnotValue(int,double&amp;)"></a> <dt> o <b>VKnotRankToKnotValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VKnotRankToKnotValue</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oKnotValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a knot value along V from its rank.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot. The rank starts from 1.
 </dd>
    <dt><tt> oKnotValue</tt>
   <dd> The parameter value of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits</tt> <dd>The input rank is lower than 1 or greater than the number of knots.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VKnotRemoval"></a><a name="VKnotRemoval(int)"></a> <dt> o <b>VKnotRemoval</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VKnotRemoval</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Removes a knot along V.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be removed. The rank starts from 1.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits</tt> <dd>The input rank is lower than 1 or greater than the number of knots.
     <dt><tt>Error_ExtremityKnot    </tt> <dd>An extremity knot can not be removed.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VKnotReplace"></a><a name="VKnotReplace(int,double,int,int)"></a> <dt> o <b>VKnotReplace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VKnotReplace</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotNewValue</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuity</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuity</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Replaces a knot along V.
 This method deforms the surface. Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be replaced. The rank starts from 1.
 </dd>
    <dt><tt> iKnotNewValue</tt>
   <dd> The new parameter value of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotRankOutLimits </tt> <dd>The input rank is lower than 1 or greater than the number of knots
     <dt><tt>Error_ExtremityKnot     </tt> <dd>An extremity knot can not be modified.
     <dt><tt>Error_KnotValueOnAKnot  </tt> <dd>The new knot value is corresponding to an existent knot.
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>The new value is lower than the first knot value or greater than the last knot value.
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2.
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VKnotValueToKnotRank"></a><a name="VKnotValueToKnotRank(double,int&amp;)"></a> <dt> o <b>VKnotValueToKnotRank</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VKnotValueToKnotRank</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iKnotValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oKnotRank</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the rank of a knot along V from its value.
 The parameter corresponds to a knot if the length between the input parameter and 
 the knot value is lower than TolKnotConfusion.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotValue</tt>
   <dd> The parameter value of the knot.
 </dd>
    <dt><tt> oKnotRank</tt>
   <dd> The rank of the knot. The rank starts from 1.
 If the parameter value does not correspond to a knot, iKnotRank = 0;
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Info_NotAKnot           </tt> <dd>The value is not corresponding to a knot
     <dt><tt>Info_KnotValueOnTwoKnots</tt> <dd>The value is corresponding to two knots
     <dt><tt>Error_KnotValueOutLimits</tt> <dd>Input value is lower than first knot value or greater than the last knot value.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VMultipleKnotInsertion"></a><a name="VMultipleKnotInsertion(int,double*,int*)"></a> <dt> o <b>VMultipleKnotInsertion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VMultipleKnotInsertion</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumberOfKnotsToInsert</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iKnotValues</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*')</script> <td><tt>iMultiplicities</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Inserts several knots along V.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumberOfKnotsToInsert</tt>
   <dd> The number of knots to be inserted.
 </dd>
    <dt><tt> iKnotValues</tt>
   <dd> The array of parameter values of the new knots.
 </dd>
    <dt><tt> iMultiplicities</tt>
   <dd> The array of multiplicity values of the new knots.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Error_KnotValueOnAKnot   </tt> <dd>The input knot value is corresponding to an existing knots.
     <dt><tt>Error_KnotValueOutLimits </tt> <dd>Input value is lower than first knot value or greater than last knot value
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than Degree-2
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VSetDegree"></a><a name="VSetDegree(int,int,int)"></a> <dt> o <b>VSetDegree</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VSetDegree</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDegreeV</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLeftContinuityV</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRightContinuityV</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the degree of the surface along V.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDegree</tt>
   <dd> The new degree of the surface.
 </dd>
    <dt><tt> iLeftContinuity</tt>
   <dd> The left continuity.
 </dd>
    <dt><tt> iRightContinuity</tt>
   <dd> The right continuity
 <br><b>Legal values</b>:
 <dl><dt><tt>0</tt> <dd>C0 continuity (default value).
     <dt><tt>1</tt> <dd>C1 continuity.
     <dt><tt>2</tt> <dd>C2 continuity.
</dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                 </tt> <dd>No info. It is OK.
     <dt><tt>Error_InvalidDegree     </tt> <dd>The input degree is lower than 3 (1 in single-arc case) or greater than the MaxDegree (11)
     <dt><tt>Error_InvalidContinuity </tt> <dd>The input continuity is lower than 0 or greater than 2
     <dt><tt>Error_UncompContinuities</tt> <dd>2 + startcontinuity + endcontinuity must be lower or equal to the number of control points.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<a name="VSetMultiplicity"></a><a name="VSetMultiplicity(int,int)"></a> <dt> o <b>VSetMultiplicity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATNurbsToolsInfo','CATNurbsToolsInfo')</script>  <b>VSetMultiplicity</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iKnotRank</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMultiplicity</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the multiplicity of a knot along V.
 This method deforms the surface if the new multiplicity is lower than the previous multiplicity. 
 Use 
<a href="#" onClick="openLink('CATNurbsSurfaceTools','GetDeformation');return false">CATNurbsSurfaceTools.GetDeformation</a> to compute this deformation. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKnotRank</tt>
   <dd> The rank of the knot to be removed. The rank starts from 1.
 </dd>
    <dt><tt> iMultiplicity</tt>
   <dd> The new multiplicity of the knot.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The information value.
 <br><b>Legal values</b>:
 <dl><dt><tt>Info_OK                  </tt> <dd>No info. It is OK.
     <dt><tt>Info_NoModification      </tt> <dd>No modification - new multiplicity is equal to previous multiplicity
     <dt><tt>Error_InvalidMultiplicity</tt> <dd>The input multiplicity is lower than 1 or greater than degree-2
     <dt><tt>Error_KnotRankOutLimits  </tt> <dd>The input rank is lower than 1 or greater than number of knots
     <dt><tt>Error_ExtremityKnot      </tt> <dd>An extremity knot cannot be modified.
 </dl>
 Use 
<a href="#" onClick="openLink('CATNurbsToolsInfo','');return false">CATNurbsToolsInfo</a> include to see all the information values.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATNurbsSurfaceTools.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
