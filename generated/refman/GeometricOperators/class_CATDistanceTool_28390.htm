<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricOperators Class CATDistanceTool</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDistanceTool','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDistanceTool','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDistanceTool','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDistanceTool','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricOperators Class CATDistanceTool</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDistanceTool_28390','CATDistanceTool','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDistanceTool</b>
</p>
<p>
<b><i> Class defining the type of parallel computation and is to be used when you want to 
 create a parallel curve onto a support.</i></b><br>
 This class does not create directly a curve onto 
 a support. To do this, you must:
 <ol>
 <li>Specify the parameters of the offset distance by using CATDistanceTool: 
 <ul>
 <li> the parallelism mode: euclidian or geodesic 
 <li> the side on which the wire is offset, it is computed from the support normal and the wire tangent: Side = Normal^Tangent 
 <li> the law which defines the distance evolution along the wire.
 </ul>
 <li>Specify the type of relimitation: sharp or round and the support on which the wire is offset.
 This is done by creating the CATExtrapolParallelTool object. 
 <li>Create and run the CATTopParallel operator.
 </ol>
 The CATDistanceTool class is created by :
 <ul> 
 <li> either <a href="#" onClick="openLink('CATCreateTopEuclidianDistanceTool','');return false">CATCreateTopEuclidianDistanceTool</a> that computes the parallel with an euclidian distance
 <li> or 
<a href="#" onClick="openLink('CATCGMCreateTopGeodesicDistanceTool','');return false">CATCGMCreateTopGeodesicDistanceTool</a> that computes the parallel with a geodesic distance.
 </ul>
 This class is the base class for some supplied classes, but you must not derive it yourself.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATDistanceTool()"><b>~CATDistanceTool</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCompositeLaw()"><b>GetCompositeLaw</b></a>()
<dd>  Returns the law used to compute the distance.
 <dt> o 
    <a href="#GetLaw()"><b>GetLaw</b></a>()
<dd>   
 <dt> o 
    <a href="#GetSide()"><b>GetSide</b></a>()
<dd>  Returns the side on which the parallel is computed.
 <dt> o 
    <a href="#GetType()"><b>GetType</b></a>()
<dd>  Returns the type of parallelism.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATDistanceTool"></a><a name="~CATDistanceTool()"></a> <dt> o <b>~CATDistanceTool</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDistanceTool</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCompositeLaw"></a><a name="GetCompositeLaw()"></a> <dt> o <b>GetCompositeLaw</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw *')</script>  <b>GetCompositeLaw</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the law used to compute the distance.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the law.
</dl>
</dl>
<a name="GetLaw"></a><a name="GetLaw()"></a> <dt> o <b>GetLaw</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATCompositeLaw','CATCompositeLaw *')</script>  <b>GetLaw</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R11 GetCompositeLaw.
</dl>
</dl>
<a name="GetSide"></a><a name="GetSide()"></a> <dt> o <b>GetSide</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('short','short')</script>  <b>GetSide</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the side on which the parallel is computed.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The side value defined when standing along the face direction and watching in the wire direction.
 <ul>
 <li><tt>1</tt> for the left side
 <li><tt>-1</tt> for the right side.
 </ul>
</dl>
</dl>
<a name="GetType"></a><a name="GetType()"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('short','short')</script>  <b>GetType</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of parallelism.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <ul>
 <li>1 = GeodesicDistanceToolType_Euclidian
 <li>or 2 = GeodesicDistanceToolType_Geodesic.
 </ul>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDistanceTool.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
