<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GeometricOperators Class CATReflectCurve</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../GeometricOperators.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATReflectCurve','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATReflectCurve','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATReflectCurve','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATReflectCurve','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>GeometricOperators Class CATReflectCurve</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATReflectCurve_28448','CATReflectCurve','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATReflectCurve</b>
</p>
<p>
<b><i> Class defining the operator to compute the reflect curves on a surface.</i></b><br>

 <br>The reflect curves are the set of points of a surface such that the surface normal 
 at these points and a direction defines a constant angle.
<ul>
<li>The CATReflectCurve operator is created with the <tt>CreateReflectCurve</tt> method and 
 directly <tt>delete</tt>d with the usual C++ delete operator.
 It is is not streamable. 
<li>In case of <tt>BASIC</tt>
 mode, the operation is automatically performed at the operator creation. 
 In case of <tt>ADVANCED</tt>
 mode, options can be precised with the <tt>SetXxx</tt> methods, before
 asking for the computation with the <tt>Run</tt> method. The advanced mode also allows you to
 run the same operator with different curves or surfaces.
<li>In both cases, the result is accessed with specific interators.
</ul></p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATReflectCurve()"><b>~CATReflectCurve</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BeginningCurve()"><b>BeginningCurve</b></a>()
<dd>  Initializes the iterator of the solution curves of <tt>this</tt> 
 CATProjectionCrvSur operator.
 <dt> o 
    <a href="#GetCurve()"><b>GetCurve</b></a>()
<dd>  Creates the next solution curve.
 <dt> o 
    <a href="#GetNumberOfPCurves()"><b>GetNumberOfPCurves</b></a>()
<dd>  Returns the number of solution curves.
 <dt> o 
    <a href="#GetPCurve()"><b>GetPCurve</b></a>()
<dd>  Creates the next solution curve as a curve on surface.
 <dt> o 
    <a href="#NextCurve()"><b>NextCurve</b></a>()
<dd>  Skips to the next solution curve of <tt>this</tt> CATReflectCurve operator.
 <dt> o 
    <a href="#SetLimits(CATSurLimits*)"><b>SetLimits</b></a>(CATSurLimits*)
<dd>  Modifies the surface domain to take into account for <tt>this</tt> CATReflectCurve
 operator (<tt>ADVANCED</tt> mode).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATReflectCurve"></a><a name="~CATReflectCurve()"></a> <dt> o <b>~CATReflectCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATReflectCurve</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BeginningCurve"></a><a name="BeginningCurve()"></a> <dt> o <b>BeginningCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeginningCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Initializes the iterator of the solution curves of <tt>this</tt> 
 CATProjectionCrvSur operator.
<br>By default, the initialization is performed once the operator runs, 
 and this is therefore only used to read the solutions again.
</dl>
<a name="GetCurve"></a><a name="GetCurve()"></a> <dt> o <b>GetCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCurve','CATCurve *')</script>  <b>GetCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution curve.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created curve. A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="GetNumberOfPCurves"></a><a name="GetNumberOfPCurves()"></a> <dt> o <b>GetNumberOfPCurves</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfPCurves</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of solution curves.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of curves.
</dl>
</dl>
<a name="GetPCurve"></a><a name="GetPCurve()"></a> <dt> o <b>GetPCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATPCurve','CATPCurve *')</script>  <b>GetPCurve</b>(<td>)<script type="text/javascript"> activateLink('=0','=0 ')</script>  </table></dt>
<dl>
  <dd>
 Creates the next solution curve as a curve on surface.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The pointer to the created curve on surface. A new curve is created each time this method is called.
 If you do not want to keep the created curve, use the 
<a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method.
</dl>
</dl>
<a name="NextCurve"></a><a name="NextCurve()"></a> <dt> o <b>NextCurve</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>NextCurve</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next solution curve of <tt>this</tt> CATReflectCurve operator.
<br>After <tt>BeginningCurve</tt>, it skips to the first curve. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The existence of the next solution.
 <br><b>Legal values</b>:
<dl><dt><tt>TRUE</tt> <dd>if there is a solution point
    <dt><tt>FALSE</tt> <dd>no more solution point.</dl>
</dl>
</dl>
<a name="SetLimits"></a><a name="SetLimits(CATSurLimits*)"></a> <dt> o <b>SetLimits</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLimits</b>(<td><script type="text/javascript"> activateLink('CATSurLimits','CATSurLimits*')</script> <td><tt>iLimits</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the surface domain to take into account for <tt>this</tt> CATReflectCurve
 operator (<tt>ADVANCED</tt> mode).
<br> It does not change the current surface 
 limitations.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLimits</tt>
   <dd> The new limitations of the surface, <tt>NULL</tt> to take the current limitations.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATReflectCurve.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATGeometricOperators</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
