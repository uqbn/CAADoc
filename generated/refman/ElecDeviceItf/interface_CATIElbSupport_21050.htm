<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecDeviceItf Interface CATIElbSupport</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ElecDeviceItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIElbSupport','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIElbSupport','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIElbSupport','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIElbSupport','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ElecDeviceItf Interface CATIElbSupport</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIElbSupport_21050','CATIElbSupport','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIElbSupport</b>
</p>
<p>
<b><i> This interface allows user to retrieve the information of the Support
 This interface is implemeneted on Electrical Support.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetNumberOfSections(int&amp;)"><b>GetNumberOfSections</b></a>(int&amp;)
<dd>  Get the number of sections in support.
 <dt> o 
    <a href="#ListSegments(CATListValCATBaseUnknown_var**,int,CATListOfDouble**,CATListOfDouble**)"><b>ListSegments</b></a>(CATListValCATBaseUnknown_var**,int,CATListOfDouble**,CATListOfDouble**)
<dd>  List the Segments routed through section "iSectionNumber" of a multi-sectional support.
 <dt> o 
    <a href="#SetSegmentPositions(CATListValCATBaseUnknown_var*,CATListOfDouble*,CATListOfDouble*,int)"><b>SetSegmentPositions</b></a>(CATListValCATBaseUnknown_var*,CATListOfDouble*,CATListOfDouble*,int)
<dd>  Sets U and V of List the Segments routed through a particular section of a multi-sectional support.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetNumberOfSections"></a><a name="GetNumberOfSections(int&amp;)"></a> <dt> o <b>GetNumberOfSections</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNumberOfSections</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNbSections</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the number of sections in support.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbSections</tt>
   <dd>   oNbSections is updated with Number of sections.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Return code S_OK   if oNbSections is correctly retrieved
               E_FAIL if oNbSections cannot be retrieved.

</dl>
</dl>
<a name="ListSegments"></a><a name="ListSegments(CATListValCATBaseUnknown_var**,int,CATListOfDouble**,CATListOfDouble**)"></a> <dt> o <b>ListSegments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSegments</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oppListOfSegments</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSectionNumber</tt><td><tt>= 1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble**')</script> <td><tt>oppListOfSegmentU</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble**')</script> <td><tt>oppListOfSegmentV</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 List the Segments routed through section "iSectionNumber" of a multi-sectional support. 
 This function also list all U and V positional values of segments on one to one mapping basis.
 .i.e. first elements of "oppListOfSegmentU" and "oppListOfSegmentV" will correspond to U and V of first segment in "opListOfSegments"

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oppListOfSegments</tt>
   <dd>   This List is updated with segments passing through section specified by "iSectionNumber".

 </dd>
    <dt><tt> iSectionNumber</tt>
   <dd>   section number through which list routed segments along with their U and V is required
   section number starts from 1.

 </dd>
    <dt><tt> oppListOfSegmentU</tt>
   <dd>   This list is updated with U values corresponding to segments updated in list "oppListOfSegments". 
   First element in this list corresponds to U value of first segment in list "oppListOfSegments"

 </dd>
    <dt><tt> oppListOfSegmentU</tt>
   <dd>   This list is updated with V values corresponding to segments updated in list "oppListOfSegments". 
   First element in this list corresponds to V value of first segment in list "oppListOfSegments"

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Return code S_OK   if oppListOfSegments is correctly retrieved.
               S_FALSE  with oppListOfSegments->Size() = 0 when no Segments routed through section.
               E_FAIL if oppListOfSegments cannot be retrieved.             

</dl>
</dl>
<a name="SetSegmentPositions"></a><a name="SetSegmentPositions(CATListValCATBaseUnknown_var*,CATListOfDouble*,CATListOfDouble*,int)"></a> <dt> o <b>SetSegmentPositions</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSegmentPositions</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>ipListOfSegments</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble*')</script> <td><tt>ipListOfSegmentU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfDouble','CATListOfDouble*')</script> <td><tt>ipListOfSegmentV</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSectionNumber</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets U and V of List the Segments routed through a particular section of a multi-sectional support. 
 There must be one to one mapping between elements of Lists "ipListOfSegments", "ipListOfSegmentU" and 
 "ipListOfSegmentV"
     i.e U value of first element in List "ipListOfSegments" = value of first element in List :ipListOfSegmentU"
         V value of first element in List "ipListOfSegments" = value of first element in List :ipListOfSegmentV"
        
         U value of second element in List "ipListOfSegments" = value of second element in List :ipListOfSegmentU"
         V value of second element in List "ipListOfSegments" = value of second element in List :ipListOfSegmentV" 
         and so on.....
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipListOfSegments</tt>
   <dd>   Contains List segments routed through section specified by "iSectionNumber".

 </dd>
    <dt><tt> ipListOfSegmentU</tt>
   <dd>   Contains U values of segments in list "ipListOfSegments". 

 </dd>
    <dt><tt> ipListOfSegmentV</tt>
   <dd>   Contains V values of segments in list "ipListOfSegments".

 </dd>
    <dt><tt> iSectionNumber</tt>
   <dd>   section number through which segments specified by list of segments "ipListOfSegments" are routed
   section number starts from 1.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    Return code S_OK   if Segment Positions are correctly set.
               E_FAIL if Segment Positions cannot be set.

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIElbSupport.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATElbInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
