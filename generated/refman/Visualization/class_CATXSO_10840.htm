<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Visualization Class CATXSO</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Visualization.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATXSO','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATXSO','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATXSO','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATXSO','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Visualization Class CATXSO</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATXSO_10840','CATXSO','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATXSO</b>
</p>
<p>
<b><i>   Base class of set of objects.</i></b><br>

   <b>Role</b>: Class representing a set of objects which must be 
   visualized in a particular way.
   <br>Used by inheritance by <a href="#" onClick="openLink('CATHSO','');return false">CATHSO</a> and 
<a href="#" onClick="openLink('CATPSO','');return false">CATPSO</a> .
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATXSO()"><b>~CATXSO</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddElement(CATBaseUnknown*)"><b>AddElement</b></a>(CATBaseUnknown*)
<dd>  Adds just one element to the set.
 <dt> o 
    <a href="#AddElements(CATBaseUnknown*)"><b>AddElements</b></a>(CATBaseUnknown*)
<dd>  Adds one element in the set, among a list of several elements.
 <dt> o 
    <a href="#EndAddElements()"><b>EndAddElements</b></a>()
<dd>  Completes the action of adding elements to the set.
 <dt> o 
    <a href="#EndRemoveElements()"><b>EndRemoveElements</b></a>()
<dd>  Completes the action of removing elements from the set.
 <dt> o 
    <a href="#GetCATAddElements()"><b>GetCATAddElements</b></a>()
<dd>  Returns the name of the notification which is sent when elements
 are added to the set.
 <dt> o 
    <a href="#GetCATEmptyElements()"><b>GetCATEmptyElements</b></a>()
<dd>  Returns the name of the notification which is sent when it is empty.
 <dt> o 
    <a href="#GetCATRemoveElements()"><b>GetCATRemoveElements</b></a>()
<dd>  Returns the name of the notification which is sent when elements
 are removed from the set.
 <dt> o 
    <a href="#GetSize()"><b>GetSize</b></a>()
<dd>   Returns the count of elements in the set.
 <dt> o 
    <a href="#IsMember(CATBaseUnknown*)"><b>IsMember</b></a>(CATBaseUnknown*)
<dd>  Checks if an element is already in the set.
 <dt> o 
    <a href="#RemoveElement(CATBaseUnknown*)"><b>RemoveElement</b></a>(CATBaseUnknown*)
<dd>  Removes just one element from the set.
 <dt> o 
    <a href="#RemoveElements(CATBaseUnknown*)"><b>RemoveElements</b></a>(CATBaseUnknown*)
<dd>  Removes one element in the set, among a list of several elements.
 <dt> o 
    <a href="#operator [](int)"><b>operator []</b></a>(int)
<dd>  Subscripting operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATXSO"></a><a name="~CATXSO()"></a> <dt> o <b>~CATXSO</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATXSO</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddElement"></a><a name="AddElement(CATBaseUnknown*)"></a> <dt> o <b>AddElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddElement</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds just one element to the set.
 <br>The method 
<a href="#" onClick="openLink('','EndAddElements');return false">EndAddElements</a> is automatically called after. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>        The element to add.It must be a </dd>
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>        <br>If iElement is already a member of the set, the element is not add.
</dl>
</dl>
</dl>
<a name="AddElements"></a><a name="AddElements(CATBaseUnknown*)"></a> <dt> o <b>AddElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddElements</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds one element in the set, among a list of several elements.
 <br><b>Role</b> : To add several elements to the set, use this
 method as many times as you need and call 
<a href="#" onClick="openLink('','EndAddElements');return false">EndAddElements</a> at the end to indicate the end of the operation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>        The element to add. It must be a </dd>
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>.        <br>If iElement is already a member of the set, the element is not add.
</dl>
</dl>
</dl>
<a name="EndAddElements"></a><a name="EndAddElements()"></a> <dt> o <b>EndAddElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>EndAddElements</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Completes the action of adding elements to the set.
 <br><b>Role</b> : This method must be overridden to complete all necessary actions
 to add elements to the set.

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','AddElements');return false">AddElements</a>
</dl>
</dl>
<a name="EndRemoveElements"></a><a name="EndRemoveElements()"></a> <dt> o <b>EndRemoveElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>EndRemoveElements</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Completes the action of removing elements from the set.
 <br><b>Role</b> : This method must be overridden to complete all necessary actions
 to remove elements from the set.

 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('','RemoveElements');return false">RemoveElements</a>
</dl>
</dl>
<a name="GetCATAddElements"></a><a name="GetCATAddElements()"></a> <dt> o <b>GetCATAddElements</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('char','const char *')</script>  <b>GetCATAddElements</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the notification which is sent when elements
 are added to the set.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         The name of the notification.
</dl>
</dl>
<a name="GetCATEmptyElements"></a><a name="GetCATEmptyElements()"></a> <dt> o <b>GetCATEmptyElements</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('char','const char *')</script>  <b>GetCATEmptyElements</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the notification which is sent when it is empty.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         The name of the notification.
</dl>
</dl>
<a name="GetCATRemoveElements"></a><a name="GetCATRemoveElements()"></a> <dt> o <b>GetCATRemoveElements</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('char','const char *')</script>  <b>GetCATRemoveElements</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the notification which is sent when elements
 are removed from the set.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>         The name of the notification.
</dl>
</dl>
<a name="GetSize"></a><a name="GetSize()"></a> <dt> o <b>GetSize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSize</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns the count of elements in the set.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>           The size of the set.
</dl>
</dl>
<a name="IsMember"></a><a name="IsMember(CATBaseUnknown*)"></a> <dt> o <b>IsMember</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsMember</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks if an element is already in the set.
 <br><b>Role</b>: At first this method makes a pointer comparison and it's
 failed, the method makes a comparison in using the 
<a href="#" onClick="openLink('CATPathElement','operator==');return false">CATPathElement.operator==</a> .  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>        The element to look for.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    0 if iElement is not a member of the set, otherwise 1.
</dl>
</dl>
<a name="RemoveElement"></a><a name="RemoveElement(CATBaseUnknown*)"></a> <dt> o <b>RemoveElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveElement</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes just one element from the set.
 <br>The method 
<a href="#" onClick="openLink('','EndRemoveElements');return false">EndRemoveElements</a> is automatically called after.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>        The element to remove. It must be a </dd>
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>
</dl>
</dl>
</dl>
<a name="RemoveElements"></a><a name="RemoveElements(CATBaseUnknown*)"></a> <dt> o <b>RemoveElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveElements</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes one element in the set, among a list of several elements.
 <br><b>Role</b> : To remove several elements from the set, use this
 method as many times as you need and call 
<a href="#" onClick="openLink('','EndRemoveElements');return false">EndRemoveElements</a> at the end to indicate the end of the operation.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>        The element to remove. It must be  a </dd>
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>
</dl>
</dl>
</dl>
<a name="operator []"></a><a name="operator [](int)"></a> <dt> o <b>operator []</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBaseUnknown','inline CATBaseUnknown *')</script>  <b>operator []</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Subscripting operator.
 <br><b>Role</b>: Returns an object using the object index.
 <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the returned value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>        The index
        <br><b>Legal values</b>: <tt>iIndex</tt> values are between 0 and GetSize()-1.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         The object at the iIndex position
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATXSO.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisualization</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
