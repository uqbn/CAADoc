<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Visualization Class CATVisManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Visualization.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATVisManager','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATVisManager','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATVisManager','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATVisManager','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Visualization Class CATVisManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATVisManager_17505','CATVisManager','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATVisManager</b>
</p>
<p>
<b><i>  Class enabling the MVC.</i></b><br>

  <br><b>Role</b>:
  This object is the masterpiece of the MVC architecture and ensures
  that communication between the model and the vues are made possible.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATVisManager()"><b>~CATVisManager</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AttachHSOTo(CATXSO*,CATViewpoint*)"><b>AttachHSOTo</b></a>(CATXSO*,CATViewpoint*)
<dd>  Tells to VisuManager that we want to connect a Hso to a peculiar 
 viewpoint.
 <dt> o 
    <a href="#AttachPSOTo(CATXSO*,CATViewpoint*)"><b>AttachPSOTo</b></a>(CATXSO*,CATViewpoint*)
<dd>  Tells to VisuManager that we want to connect a Pso to a peculiar 
 viewpoint.
 <dt> o 
    <a href="#AttachTo(CATRep*,CATViewpoint*,CATCommand*,int,int,int)"><b>AttachTo</b></a>(CATRep*,CATViewpoint*,CATCommand*,int,int,int)
<dd>    Creates a new cell of visualization.
 <dt> o 
    <a href="#AttachTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,CATCommand*,int,int,int,int,int)"><b>AttachTo</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,CATCommand*,int,int,int,int,int)
<dd>   Creates a new cell of visualization.
 <dt> o 
    <a href="#BuildHighlightLook(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)"><b>BuildHighlightLook</b></a>(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)
<dd>  Gives the rep path equivalent to the model path when highlight is concerned.
 <dt> o 
    <a href="#BuildRep(CATModelIdentificator&amp;)"><b>BuildRep</b></a>(CATModelIdentificator&amp;)
<dd>  Creates the graphical representation of one object.
 <dt> o 
    <a href="#BuildRepPath(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)"><b>BuildRepPath</b></a>(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)
<dd>  Gives the rep path equivalent to the model path.
 <dt> o 
    <a href="#Commit()"><b>Commit</b></a>()
<dd>  Requests the processing of all the events hold by the VisuManager that have not been processed yet.
 <dt> o 
    <a href="#Commit(CATModelNotification*,CATViewpoint*)"><b>Commit</b></a>(CATModelNotification*,CATViewpoint*)
<dd>  Requests the processing of the input event.
 <dt> o 
    <a href="#DecodeGraphic(CATPickPath&amp;,CATPathElement&amp;)"><b>DecodeGraphic</b></a>(CATPickPath&amp;,CATPathElement&amp;)
<dd>  Gives the model path equivalent to the rep path.
 <dt> o 
    <a href="#DetachFrom(CATViewpoint*,int)"><b>DetachFrom</b></a>(CATViewpoint*,int)
<dd>  Detaches all tuples  ( path / viewpoint / list of  visualization interfaces ) corresponding to a given viewpoint.
 <dt> o 
    <a href="#DetachFrom(CATPathElement*,CATViewpoint*,int)"><b>DetachFrom</b></a>(CATPathElement*,CATViewpoint*,int)
<dd>  Detaches all tuples  ( path / viewpoint / list of  visualization interfaces ) corresponding to a given path and a given viewpoint.
 <dt> o 
    <a href="#DetachFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,int)"><b>DetachFrom</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,int)
<dd>  Detaches a tuple ( path / viewpoint / list of  visualization interfaces ).
 <dt> o 
    <a href="#DetachHSOFrom(CATViewpoint*)"><b>DetachHSOFrom</b></a>(CATViewpoint*)
<dd>  Tells to VisuManager that we want to detach the Hso from a peculiar 
 viewpoint.
 <dt> o 
    <a href="#DetachPSOFrom(CATViewpoint*)"><b>DetachPSOFrom</b></a>(CATViewpoint*)
<dd>  Tells to VisuManager that we want to detach the Pso from a peculiar 
 viewpoint.
 <dt> o 
    <a href="#DisconnectFrom(CATViewpoint*)"><b>DisconnectFrom</b></a>(CATViewpoint*)
<dd>  Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given viewpoint.
 <dt> o 
    <a href="#DisconnectFrom(CATPathElement*,CATViewpoint*)"><b>DisconnectFrom</b></a>(CATPathElement*,CATViewpoint*)
<dd>  Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.
 <dt> o 
    <a href="#DisconnectFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"><b>DisconnectFrom</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)
<dd>  Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.
 <dt> o 
    <a href="#DisconnectHSOFrom(CATViewpoint*)"><b>DisconnectHSOFrom</b></a>(CATViewpoint*)
<dd>  Disables the highligth of a viewpoint.
 <dt> o 
    <a href="#DisconnectHSOFrom(CATModelIdentificator)"><b>DisconnectHSOFrom</b></a>(CATModelIdentificator)
<dd>  Disables the highligth for a model.
 <dt> o 
    <a href="#DisconnectPSOFrom(CATViewpoint*)"><b>DisconnectPSOFrom</b></a>(CATViewpoint*)
<dd>  Disablea the pre-highligth of a viewpoint.
 <dt> o 
    <a href="#DisconnectPSOFrom(CATModelIdentificator)"><b>DisconnectPSOFrom</b></a>(CATModelIdentificator)
<dd>  Disablea the pre-highligth for a model.
 <dt> o 
    <a href="#DisconnectVisuFrom(CATViewpoint*)"><b>DisconnectVisuFrom</b></a>(CATViewpoint*)
<dd>  Disconnects the visualization of a tree of reps without destroying it.
 <dt> o 
    <a href="#DisconnectVisuFrom(CATPathElement*,CATViewpoint*)"><b>DisconnectVisuFrom</b></a>(CATPathElement*,CATViewpoint*)
<dd>  Disconnects the visualization of a tree of reps without destroying it.
 <dt> o 
    <a href="#DisconnectVisuFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"><b>DisconnectVisuFrom</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)
<dd>  Disconnects the visualization of a tree of reps without destroying it.
 <dt> o 
    <a href="#Draw(CATViewpoint*)"><b>Draw</b></a>(CATViewpoint*)
<dd>  Forces the given viewpoint to be redrawn.
 <dt> o 
    <a href="#DuplicateViewpoint(CATViewpoint*,CATViewpoint*)"><b>DuplicateViewpoint</b></a>(CATViewpoint*,CATViewpoint*)
<dd>  Duplicates an existing attachment.
 <dt> o 
    <a href="#EmptyHSO()"><b>EmptyHSO</b></a>()
<dd>  Empties manually the HSO.
 <dt> o 
    <a href="#EmptyPSO()"><b>EmptyPSO</b></a>()
<dd>  Empties manually the PSO.
 <dt> o 
    <a href="#FindNextRep(CATPathElement&amp;,int&amp;)"><b>FindNextRep</b></a>(CATPathElement&amp;,int&amp;)
<dd>  Finds the next representation from a model path
 ( this is used for BuildHighlightLook an BuildRepPath ).
 <dt> o 
    <a href="#GeneratePathElementFromPickPath(CATPickPath&amp;,CATPathElement&amp;,int)"><b>GeneratePathElementFromPickPath</b></a>(CATPickPath&amp;,CATPathElement&amp;,int)
<dd>  Gives the model path equivalent to the pick path.
 <dt> o 
    <a href="#GenerateRepPathFromPathElement(CATPathElement&amp;,CATViewpoint*,CATRepPath&amp;,CATInteractiveContext,CATGenerativeAttribute,int)"><b>GenerateRepPathFromPathElement</b></a>(CATPathElement&amp;,CATViewpoint*,CATRepPath&amp;,CATInteractiveContext,CATGenerativeAttribute,int)
<dd>  Gives the rep path equivalent to the model path.
 <dt> o 
    <a href="#GetVisManager(void)"><b>GetVisManager</b></a>(void)
<dd>  Gets The VisuManager.
 <dt> o 
    <a href="#IsConnectedTo(CATPathElement*,CATViewpoint*)"><b>IsConnectedTo</b></a>(CATPathElement*,CATViewpoint*)
<dd>  Returns whether or not a cell is connected .
 <dt> o 
    <a href="#ReconnectHSOTo(CATViewpoint*)"><b>ReconnectHSOTo</b></a>(CATViewpoint*)
<dd>  Enables the highligth in a given viewpoint.
 <dt> o 
    <a href="#ReconnectHSOTo(CATModelIdentificator,CATViewpoint*)"><b>ReconnectHSOTo</b></a>(CATModelIdentificator,CATViewpoint*)
<dd>  Enables a model entry to be highligthed in a given viewpoint.
 <dt> o 
    <a href="#ReconnectPSOTo(CATViewpoint*)"><b>ReconnectPSOTo</b></a>(CATViewpoint*)
<dd>  Enablea the pre-highligth in a given viewpoint.
 <dt> o 
    <a href="#ReconnectPSOTo(CATModelIdentificator,CATViewpoint*)"><b>ReconnectPSOTo</b></a>(CATModelIdentificator,CATViewpoint*)
<dd>  Enables a model entry to be pre-highligthed in a given viewpoint.
 <dt> o 
    <a href="#ReconnectTo(CATViewpoint*)"><b>ReconnectTo</b></a>(CATViewpoint*)
<dd>  Reconnects to all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given viewpoint.
 <dt> o 
    <a href="#ReconnectTo(CATPathElement*,CATViewpoint*)"><b>ReconnectTo</b></a>(CATPathElement*,CATViewpoint*)
<dd>  Reconnects to all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.
 <dt> o 
    <a href="#ReconnectTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"><b>ReconnectTo</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)
<dd>  Reconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.
 <dt> o 
    <a href="#ReconnectVisuTo(CATViewpoint*)"><b>ReconnectVisuTo</b></a>(CATViewpoint*)
<dd>  Reconnects the visualization of a tree without rebuilding it.
 <dt> o 
    <a href="#ReconnectVisuTo(CATPathElement*,CATViewpoint*)"><b>ReconnectVisuTo</b></a>(CATPathElement*,CATViewpoint*)
<dd>  Reconnects the visualization of a tree without rebuilding it.
 <dt> o 
    <a href="#ReconnectVisuTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"><b>ReconnectVisuTo</b></a>(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)
<dd>  Reconnects the visualization of a tree without rebuilding it.
 <dt> o 
    <a href="#SetFurtiveMode(CATModelIdentificator,CATViewpoint*,int)"><b>SetFurtiveMode</b></a>(CATModelIdentificator,CATViewpoint*,int)
<dd>  Sets in furtive mode or not a given model entry for a viewpoint.
 <dt> o 
    <a href="#SetLocalGraphicAttributs(CATModelIdentificator,CATViewpoint*,int)"><b>SetLocalGraphicAttributs</b></a>(CATModelIdentificator,CATViewpoint*,int)
<dd>  Forces a model to work only with its locals graphic attributs
 not taking into account its fathers'.
 <dt> o 
    <a href="#SetLocalMatrix(CATModelIdentificator,CATViewpoint*,int)"><b>SetLocalMatrix</b></a>(CATModelIdentificator,CATViewpoint*,int)
<dd>  Forces a model to work only with its local matrix and to
 not taking into account its fathers' matrix.
 <dt> o 
    <a href="#SetSelector(CATSelector*,CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"><b>SetSelector</b></a>(CATSelector*,CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)
<dd>  Sets Selector on the tuple ( path / viewpoint / list of  visualization interfaces ).
 <dt> o 
    <a href="#SomethingHappensInSO(CATNotification*,CATInteractiveContext)"><b>SomethingHappensInSO</b></a>(CATNotification*,CATInteractiveContext)
<dd>  (Pre)Highlights  pathes of objects hold in the input notification.
 <dt> o 
    <a href="#UnreferenceRep(CATModelIdentificator&amp;)"><b>UnreferenceRep</b></a>(CATModelIdentificator&amp;)
<dd>  Removes the link between the extension of visualization of
 a model and this model.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATVisManager"></a><a name="~CATVisManager()"></a> <dt> o <b>~CATVisManager</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATVisManager</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AttachHSOTo"></a><a name="AttachHSOTo(CATXSO*,CATViewpoint*)"></a> <dt> o <b>AttachHSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachHSOTo</b>(<td><script type="text/javascript"> activateLink('CATXSO','CATXSO*')</script> <td><tt>iXso</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tells to VisuManager that we want to connect a Hso to a peculiar 
 viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXso</tt>
   <dd>   The Hso to connect.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint in which the model must be connected for highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="AttachPSOTo"></a><a name="AttachPSOTo(CATXSO*,CATViewpoint*)"></a> <dt> o <b>AttachPSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachPSOTo</b>(<td><script type="text/javascript"> activateLink('CATXSO','CATXSO*')</script> <td><tt>iXso</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tells to VisuManager that we want to connect a Pso to a peculiar 
 viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iXso</tt>
   <dd>   The Pso to connect.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint in which the model must be connected for highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="AttachTo"></a><a name="AttachTo(CATRep*,CATViewpoint*,CATCommand*,int,int,int)"></a> <dt> o <b>AttachTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachTo</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep*')</script> <td><tt>iRep</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iSelectorFather</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFurtive</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalMatrix</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalGraphicAttributs</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Creates a new cell of visualization. 
 <br><b>Role</b>:That means one wants to visualize a given graphical representation inside a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>    Graphical Representation one wants to visualize.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint where the model must be visualized.
 </dd>
    <dt><tt> iSelectorFather</tt>
   <dd>    The </dd>
<a href="#" onClick="openLink('CATCommand','');return false">CATCommand</a> which is the father of the 
<a href="#" onClick="openLink('CATSelector','');return false">CATSelector</a> created when a new cell is created. Default value is NULL.
 
    <dt><tt> iFurtive</tt>
   <dd>   Says the graphical representations of the cell are to be drawn in furtive mode.
 <br><b> Legal values</b>:
 <li><tt>0</tt> for normal mode (it's the default value)</li>
 <li><tt>1</tt> for furtive mode</li>.
 </dd>
    <dt><tt> iLocalMatrix</tt>
   <dd> Says one wants to take into account the positionning matrices hold in the objects enclosed in the input path of objects iTreeRoot.
 <br><b> Legal values</b>:
 <li><tt>0</tt> positionning matrices are not taken into account (it's the default value)</li>
 <li><tt>1</tt> otherwise</li>.
 </dd>
    <dt><tt> iLocalGraphicAttributs</tt>
   <dd> Says one wants to inherit the graphical properties (e.g. color) hold by objects enclosed in the input path of objects iTreeRoot.
<br><b> Legal values</b>:
 <li><tt>0</tt> there is no inheritance of the graphical properties (it's the default value)</li>
 <li><tt>1</tt> otherwise</li>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="AttachTo"></a><a name="AttachTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,CATCommand*,int,int,int,int,int)"></a> <dt> o <b>AttachTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AttachTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iSelectorFather</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFurtive</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalMatrix</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalGraphicAttributs</tt><td><tt>=0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCrossHighlight</tt><td><tt>= 0</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iEmbedded</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Creates a new cell of visualization. 
  <br><b>Role</b>:That means one wants to visualize a root object inside a given viewpoint using a given list 
 of visualization interfaces.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>  Path of objects which represents the part of a tree one wants to visualiaze. The last object of the path is the root object to visualize.
  The input path is not necessarily made up of one object (the root object to visualize): it may have been generated by an  operation
 of  extraction from a tree. And these informations can be useful for the visualization of the root object.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>    Viewpoint where the model must be visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>   List of visualization interfaces one wants to use to visualize obejcts. The list must be sorted by higher priority. The first interface
 has the highest priority.
 </dd>
    <dt><tt> iSelectorFather</tt>
   <dd>    The </dd>
<a href="#" onClick="openLink('CATCommand','');return false">CATCommand</a> which is the father of the 
<a href="#" onClick="openLink('CATSelector','');return false">CATSelector</a> created when a new cell is created. Default value is NULL.
 
    <dt><tt> iFurtive</tt>
   <dd>   Says the graphical representations of the cell are to be drawn in furtive mode.
 <br><b> Legal values</b>:
 <li><tt>0</tt> for normal mode (it's the default value)</li>
 <li><tt>1</tt> for furtive mode</li>.
 </dd>
    <dt><tt> iLocalMatrix</tt>
   <dd> Says one wants to take into account the positionning matrices hold in the objects enclosed in the input path of objects iTreeRoot.
 <br><b> Legal values</b>:
 <li><tt>0</tt> positionning matrices are not taken into account (it's the default value)</li>
 <li><tt>1</tt> otherwise</li>.
 </dd>
    <dt><tt> iLocalGraphicAttributs</tt>
   <dd> Says one wants to inherit the graphical properties (e.g. color) hold by objects enclosed in the input path of objects iTreeRoot.
<br><b> Legal values</b>:
 <li><tt>0</tt> there is no inheritance of the graphical properties (it's the default value)</li>
 <li><tt>1</tt> otherwise</li>.
 </dd>
    <dt><tt> iCrossHighlight</tt>
   <dd> To be used internally with embedded cells.
 </dd>
    <dt><tt> iEmbedded</tt>
   <dd> To describe an embedded cell. To be used internally.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="BuildHighlightLook"></a><a name="BuildHighlightLook(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)"></a> <dt> o <b>BuildHighlightLook</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BuildHighlightLook</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>iPathElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRepPath','CATRepPath&amp;')</script> <td><tt>oRepPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the rep path equivalent to the model path when highlight is concerned.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>   rep you work on
 </dd>
    <dt><tt> iPathElement</tt>
   <dd>   the rep path.
 </dd>
    <dt><tt> oRepPath</tt>
   <dd>   the model path.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="BuildRep"></a><a name="BuildRep(CATModelIdentificator&amp;)"></a> <dt> o <b>BuildRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATRep','CATRep*')</script>  <b>BuildRep</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates the graphical representation of one object.
 <br><b>Role</b>:
 Create the graphical representation of the object referred by the input identifier. To achieve this goal the current
 cell has to be set properly. That means that you need to be within a visualization transaction, that is this method should be called
 either from a 
<a href="#" onClick="openLink('CATIVisu','BuildRep');return false">CATIVisu.BuildRep</a> method of one visualization extension, or from the 
<a href="#" onClick="openLink('CATIVisu','ModifyRep');return false">CATIVisu.ModifyRep</a> method of  one visualization extension. Otherwise this method will return NULL.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   Identifier of the model you want to get the graphical representation.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The graphical representation of the model.
</dl>
</dl>
<a name="BuildRepPath"></a><a name="BuildRepPath(CATRep&amp;,CATPathElement&amp;,CATRepPath&amp;)"></a> <dt> o <b>BuildRepPath</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>BuildRepPath</b>(<td><script type="text/javascript"> activateLink('CATRep','CATRep&amp;')</script> <td><tt>iRep</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>iPathElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRepPath','CATRepPath&amp;')</script> <td><tt>oRepPath</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the rep path equivalent to the model path.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRep</tt>
   <dd>   rep you work on
 </dd>
    <dt><tt> iPathElement</tt>
   <dd>   the rep path.
 </dd>
    <dt><tt> oRepPath</tt>
   <dd>   the model path.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="Commit"></a><a name="Commit()"></a> <dt> o <b>Commit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Commit</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests the processing of all the events hold by the VisuManager that have not been processed yet.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="Commit"></a><a name="Commit(CATModelNotification*,CATViewpoint*)"></a> <dt> o <b>Commit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Commit</b>(<td><script type="text/javascript"> activateLink('CATModelNotification','CATModelNotification*')</script> <td><tt>iNotif</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests the processing of the input event.
 <br><b>Role</b>: 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotif</tt>
   <dd>  Event to process
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint into which one wants to process the input event. More precisely, the input is processed in all the cells having iViewpoint as their viewpoint. If no viewpoint is given in input, the event is processed in all the cells.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DecodeGraphic"></a><a name="DecodeGraphic(CATPickPath&amp;,CATPathElement&amp;)"></a> <dt> o <b>DecodeGraphic</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DecodeGraphic</b>(<td> const <script type="text/javascript"> activateLink('CATPickPath','CATPickPath&amp;')</script> <td><tt>iRepPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>oPathElement</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the model path equivalent to the rep path.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepPath</tt>
   <dd>   the model path.
 </dd>
    <dt><tt> oPathElement</tt>
   <dd>   the rep path.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DetachFrom"></a><a name="DetachFrom(CATViewpoint*,int)"></a> <dt> o <b>DetachFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDrawToDo</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Detaches all tuples  ( path / viewpoint / list of  visualization interfaces ) corresponding to a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint you want to remove.
 </dd>
    <dt><tt> iDrawToDo</tt>
   <dd>   Takes two values : 
   1 : Default value,the viewer is refreshed at the end of method DetachFrom
   0 : the viewer is not refreshed at the end of method DetachFrom.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DetachFrom"></a><a name="DetachFrom(CATPathElement*,CATViewpoint*,int)"></a> <dt> o <b>DetachFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDrawToDo</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Detaches all tuples  ( path / viewpoint / list of  visualization interfaces ) corresponding to a given path and a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iDrawToDo</tt>
   <dd>   Takes two values : 
   1 : Default value,the viewer is refreshed at the end of method DetachFrom
   0 : the viewer is not refreshed at the end of method DetachFrom.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DetachFrom"></a><a name="DetachFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;,int)"></a> <dt> o <b>DetachFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDrawToDo</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Detaches a tuple ( path / viewpoint / list of  visualization interfaces ).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>   List of 
 </dd>
    <dt><tt> iDrawToDo</tt>
   <dd>   Takes two values : 
   1 : Default value,the viewer is refreshed at the end of method DetachFrom
   0 : the viewer is not refreshed at the end of method DetachFrom.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DetachHSOFrom"></a><a name="DetachHSOFrom(CATViewpoint*)"></a> <dt> o <b>DetachHSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachHSOFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tells to VisuManager that we want to detach the Hso from a peculiar 
 viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint from which we want to remove HSO .
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DetachPSOFrom"></a><a name="DetachPSOFrom(CATViewpoint*)"></a> <dt> o <b>DetachPSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DetachPSOFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tells to VisuManager that we want to detach the Pso from a peculiar 
 viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint from which we want to remove PSO .
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DisconnectFrom"></a><a name="DisconnectFrom(CATViewpoint*)"></a> <dt> o <b>DisconnectFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd> Viewpoint one wants to disconnect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> if no cells have been found</li>.
</dl>
</dl>
<a name="DisconnectFrom"></a><a name="DisconnectFrom(CATPathElement*,CATViewpoint*)"></a> <dt> o <b>DisconnectFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
   If null, all cells corresponding to tuples (path / viewpoint/ list of
 visualization interfaces) having iTreeRoot as path of objects are considered.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="DisconnectFrom"></a><a name="DisconnectFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"></a> <dt> o <b>DisconnectFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>  list of  visualization interfaces.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="DisconnectHSOFrom"></a><a name="DisconnectHSOFrom(CATViewpoint*)"></a> <dt> o <b>DisconnectHSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectHSOFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disables the highligth of a viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint which is disable to highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DisconnectHSOFrom"></a><a name="DisconnectHSOFrom(CATModelIdentificator)"></a> <dt> o <b>DisconnectHSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectHSOFrom</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disables the highligth for a model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The model Id to connect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DisconnectPSOFrom"></a><a name="DisconnectPSOFrom(CATViewpoint*)"></a> <dt> o <b>DisconnectPSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectPSOFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disablea the pre-highligth of a viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint which is disable to pre-highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DisconnectPSOFrom"></a><a name="DisconnectPSOFrom(CATModelIdentificator)"></a> <dt> o <b>DisconnectPSOFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectPSOFrom</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disablea the pre-highligth for a model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The model Id to connect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DisconnectVisuFrom"></a><a name="DisconnectVisuFrom(CATViewpoint*)"></a> <dt> o <b>DisconnectVisuFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectVisuFrom</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects the visualization of a tree of reps without destroying it.

 Event sending is also disconnected.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="DisconnectVisuFrom"></a><a name="DisconnectVisuFrom(CATPathElement*,CATViewpoint*)"></a> <dt> o <b>DisconnectVisuFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectVisuFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects the visualization of a tree of reps without destroying it.

 Event sending is also disconnected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
   If null, all cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having iTreeRoot as path of objects are considered.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="DisconnectVisuFrom"></a><a name="DisconnectVisuFrom(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"></a> <dt> o <b>DisconnectVisuFrom</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DisconnectVisuFrom</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Disconnects the visualization of a tree of reps without destroying it.

 Event sending is also disconnected.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>  list of  visualization interfaces.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="Draw"></a><a name="Draw(CATViewpoint*)"></a> <dt> o <b>Draw</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Draw</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Forces the given viewpoint to be redrawn.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="DuplicateViewpoint"></a><a name="DuplicateViewpoint(CATViewpoint*,CATViewpoint*)"></a> <dt> o <b>DuplicateViewpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DuplicateViewpoint</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpointSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpointTarget</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Duplicates an existing attachment.
 <b>Role</b>: 
  Create new attachments to the visu manager from an existing viewpoint
  to a new viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpointSource</tt>
   <dd>   The viewpoint from which you want to dupplicate attachments

 </dd>
    <dt><tt> iViewpointTarget</tt>
   <dd>   The new viewpoint you want to attach to the visu manager like
   the viewpoint source.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the call.
</dl>
</dl>
<a name="EmptyHSO"></a><a name="EmptyHSO()"></a> <dt> o <b>EmptyHSO</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>EmptyHSO</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Empties manually the HSO.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="EmptyPSO"></a><a name="EmptyPSO()"></a> <dt> o <b>EmptyPSO</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>EmptyPSO</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Empties manually the PSO.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="FindNextRep"></a><a name="FindNextRep(CATPathElement&amp;,int&amp;)"></a> <dt> o <b>FindNextRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATRep','CATRep *')</script>  <b>FindNextRep</b>(<td> const <script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>iPathElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oValid</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Finds the next representation from a model path
 ( this is used for BuildHighlightLook an BuildRepPath ).
  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathElement.</tt>
   <dd>   the path element
 </dd>
    <dt><tt> oValid</tt>
   <dd>   returned HRESULT (1=OK, 0=KO)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    the next rep we want to add the the reppath
</dl>
</dl>
<a name="GeneratePathElementFromPickPath"></a><a name="GeneratePathElementFromPickPath(CATPickPath&amp;,CATPathElement&amp;,int)"></a> <dt> o <b>GeneratePathElementFromPickPath</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GeneratePathElementFromPickPath</b>(<td> const <script type="text/javascript"> activateLink('CATPickPath','CATPickPath&amp;')</script> <td><tt>iPickPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>oPathElt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>SizeForOptim</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the model path equivalent to the pick path.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRepPath</tt>
   <dd>   the rep path.
 </dd>
    <dt><tt> oPathElement</tt>
   <dd>   the model path.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="GenerateRepPathFromPathElement"></a><a name="GenerateRepPathFromPathElement(CATPathElement&amp;,CATViewpoint*,CATRepPath&amp;,CATInteractiveContext,CATGenerativeAttribute,int)"></a> <dt> o <b>GenerateRepPathFromPathElement</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GenerateRepPathFromPathElement</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement&amp;')</script> <td><tt>iPathElt</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATRepPath','CATRepPath&amp;')</script> <td><tt>oRepPath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATInteractiveContext','CATInteractiveContext')</script> <td><tt>iContext</tt><td><tt>= CATNoneContext</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATGenerativeAttribute','CATGenerativeAttribute')</script> <td><tt>iAttribute</tt><td><tt>= pathManipulatorOperation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>regenerate</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gives the rep path equivalent to the model path.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathElement</tt>
   <dd>   the model path.
 </dd>
    <dt><tt> oRepPath</tt>
   <dd>   the rep path
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="GetVisManager"></a><a name="GetVisManager(void)"></a> <dt> o <b>GetVisManager</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATVisManager','CATVisManager *')</script>  <b>GetVisManager</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Gets The VisuManager.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The VisuManager
</dl>
</dl>
<a name="IsConnectedTo"></a><a name="IsConnectedTo(CATPathElement*,CATViewpoint*)"></a> <dt> o <b>IsConnectedTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsConnectedTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns whether or not a cell is connected .
 <br><b> Legal values</b>:
 <li><tt>1</tt> if the corresponding cells are connected</li>
 <li><tt>0</tt>if at least one corresponding cell is not connected</li>.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.</dd>
</dl>
</dl>
</dl>
<a name="ReconnectHSOTo"></a><a name="ReconnectHSOTo(CATViewpoint*)"></a> <dt> o <b>ReconnectHSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectHSOTo</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enables the highligth in a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint which is enable to highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="ReconnectHSOTo"></a><a name="ReconnectHSOTo(CATModelIdentificator,CATViewpoint*)"></a> <dt> o <b>ReconnectHSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectHSOTo</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enables a model entry to be highligthed in a given viewpoint.
 If no viewpoint is given all viewpoints are taken.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The model Id to connect.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint in which the model must be connected for highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="ReconnectPSOTo"></a><a name="ReconnectPSOTo(CATViewpoint*)"></a> <dt> o <b>ReconnectPSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectPSOTo</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enablea the pre-highligth in a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint which is enable to pre-highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="ReconnectPSOTo"></a><a name="ReconnectPSOTo(CATModelIdentificator,CATViewpoint*)"></a> <dt> o <b>ReconnectPSOTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectPSOTo</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Enables a model entry to be pre-highligthed in a given viewpoint.
 If no viewpoint is given all viewpoints are taken.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The model Id to connect.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   The viewpoint in which the model must be connected for pre-highlight.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="ReconnectTo"></a><a name="ReconnectTo(CATViewpoint*)"></a> <dt> o <b>ReconnectTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectTo</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects to all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd> Viewpoint one wants to reconnect.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> if no cells have been found</li>.
</dl>
</dl>
<a name="ReconnectTo"></a><a name="ReconnectTo(CATPathElement*,CATViewpoint*)"></a> <dt> o <b>ReconnectTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects to all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
   If null, all cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having iTreeRoot as path of objects are considered.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="ReconnectTo"></a><a name="ReconnectTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"></a> <dt> o <b>ReconnectTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects all the cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having a given path
 and a given viewpoint.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>  list of  visualization interfaces.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="ReconnectVisuTo"></a><a name="ReconnectVisuTo(CATViewpoint*)"></a> <dt> o <b>ReconnectVisuTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectVisuTo</b>(<td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects the visualization of a tree without rebuilding it. This method is used together with the
 
<a href="#" onClick="openLink('','DisconnectVisuFrom');return false">DisconnectVisuFrom</a> method. Event sending is reconnected.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="ReconnectVisuTo"></a><a name="ReconnectVisuTo(CATPathElement*,CATViewpoint*)"></a> <dt> o <b>ReconnectVisuTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectVisuTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects the visualization of a tree without rebuilding it. This method is used together with the
 
<a href="#" onClick="openLink('','DisconnectVisuFrom');return false">DisconnectVisuFrom</a> method. Event sending is reconnected.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
   If null, all cells corresponding to tuples (path / viewpoint/ list of visualization interfaces) having iTreeRoot as path of objects are considered.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="ReconnectVisuTo"></a><a name="ReconnectVisuTo(CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"></a> <dt> o <b>ReconnectVisuTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReconnectVisuTo</b>(<td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reconnects the visualization of a tree without rebuilding it. This method is used together with the
 
<a href="#" onClick="openLink('','DisconnectVisuFrom');return false">DisconnectVisuFrom</a> method. Event sending is reconnected.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>  list of  visualization interfaces.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt>  if no cells have been found</li>.
</dl>
</dl>
<a name="SetFurtiveMode"></a><a name="SetFurtiveMode(CATModelIdentificator,CATViewpoint*,int)"></a> <dt> o <b>SetFurtiveMode</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetFurtiveMode</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFurtive</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets in furtive mode or not a given model entry for a viewpoint.
 If no viewpoint is given all viewpoints are taken.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    A HRESULT given the result of the function.
</dl>
</dl>
<a name="SetLocalGraphicAttributs"></a><a name="SetLocalGraphicAttributs(CATModelIdentificator,CATViewpoint*,int)"></a> <dt> o <b>SetLocalGraphicAttributs</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLocalGraphicAttributs</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalGraphicAttributs</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Forces a model to work only with its locals graphic attributs
 not taking into account its fathers'.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="SetLocalMatrix"></a><a name="SetLocalMatrix(CATModelIdentificator,CATViewpoint*,int)"></a> <dt> o <b>SetLocalMatrix</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLocalMatrix</b>(<td> const <script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLocalMatrix</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Forces a model to work only with its local matrix and to
 not taking into account its fathers' matrix.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="SetSelector"></a><a name="SetSelector(CATSelector*,CATPathElement*,CATViewpoint*,list&lt;IID&gt;&amp;)"></a> <dt> o <b>SetSelector</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSelector</b>(<td><script type="text/javascript"> activateLink('CATSelector','CATSelector*')</script> <td><tt>iSelector</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATPathElement','CATPathElement*')</script> <td><tt>iTreeRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATViewpoint','CATViewpoint*')</script> <td><tt>iViewpoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('list<IID>','list&lt;IID&gt;&amp;')</script> <td><tt>iVisuList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets Selector on the tuple ( path / viewpoint / list of  visualization interfaces ).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSelector</tt>
   <dd>   Selector you want to set.CATSelector cannot be managed through AddRef / Release, so caller should not destroy if 
   method succeeds.
 </dd>
    <dt><tt> iTreeRoot</tt>
   <dd>   Path of objects.
 </dd>
    <dt><tt> iViewpoint</tt>
   <dd>   Viewpoint in which objects are visualized.
 </dd>
    <dt><tt> iVisuList</tt>
   <dd>   List of 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   an HRESULT value.
 <br><b> Legal values</b>:
 <li><tt>S_OK</tt> if the operation succeeds </li>
 <li><tt>E_FAIL</tt> otherwise</li>.
</dl>
</dl>
<a name="SomethingHappensInSO"></a><a name="SomethingHappensInSO(CATNotification*,CATInteractiveContext)"></a> <dt> o <b>SomethingHappensInSO</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SomethingHappensInSO</b>(<td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>notif</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATInteractiveContext','CATInteractiveContext')</script> <td><tt>context</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 (Pre)Highlights  pathes of objects hold in the input notification.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> notif</tt>
   <dd>   notification holding the pathes of elem to highlight

 </dd>
    <dt><tt> context</tt>
   <dd>   defines the type of interaction (CATPreselContext/CATSelContext)</dd>
</dl>
</dl>
</dl>
<a name="UnreferenceRep"></a><a name="UnreferenceRep(CATModelIdentificator&amp;)"></a> <dt> o <b>UnreferenceRep</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnreferenceRep</b>(<td><script type="text/javascript"> activateLink('CATModelIdentificator','CATModelIdentificator&amp;')</script> <td><tt>id</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes the link between the extension of visualization of
 a model and this model.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> id</tt>
   <dd>   ID of the model you want the representation.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The result of the call.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATVisManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisualization</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
