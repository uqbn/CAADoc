<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Visualization Notification CATModelEntityNotification</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Visualization.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATModelEntityNotification','notification','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATModelEntityNotification','notification','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATModelEntityNotification','notification','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATModelEntityNotification','notification','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Visualization Notification CATModelEntityNotification</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATModelEntityNotification_43835','CATModelEntityNotification','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATModelEntityNotification</b>
</p>
<p>
<b><i> Class representing basic visualization events concerning one object.</i></b><br>

 
 <b>Role</b>: providing a visualization event basic class aimed at defining events sent by objects. Whenever objects' change happens, 
 objects send a specialized visualization event <a href="#" onClick="openLink('CATModelNotification','');return false">CATModelNotification</a> to warn the "<tt>Visualization world</tt>".  That means the way provided in CATIAV5 to update the graphical representations of one object is to send
 a visualization event, which is defined by the 
<a href="#" onClick="openLink('CATModelNotification','');return false">CATModelNotification</a> class. <p>
 That 's the reason why when one object's color is changed or when its shape is modified , it sends a visu event.
  Refer to the 
<a href="#" onClick="openLink('CATIModelEvents','');return false">CATIModelEvents</a> interface to have details about the management of the visualization events   and their mechanism.
 <p>
 Examples of visualization  events are 
<a href="#" onClick="openLink('CATCreate','');return false">CATCreate</a>, 
<a href="#" onClick="openLink('CATDelete','');return false">CATDelete</a> and 
<a href="#" onClick="openLink('CATModify','');return false">CATModify</a>.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATModelEntityNotification(void*)"><b>CATModelEntityNotification</b></a>(void*)
<dd>  Constructs the class from a generic pointer to one object.
 <dt> o 
    <a href="#CATModelEntityNotification(CATBaseUnknown*)"><b>CATModelEntityNotification</b></a>(CATBaseUnknown*)
<dd>  Constructs the class from a pointer to one object.
 <dt> o 
    <a href="#~CATModelEntityNotification()"><b>~CATModelEntityNotification</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Clone()"><b>Clone</b></a>()
<dd>   Returns a pointer to a new CATModelEntityNotification event which is the
  clone of the current one.
 <dt> o 
    <a href="#GetModelId()"><b>GetModelId</b></a>()
<dd>  Returns a generic pointer to the enclosed object.
 <dt> o 
    <a href="#GetObject()"><b>GetObject</b></a>()
<dd>  Returns a pointer to the enclosed object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATModelEntityNotification"></a><a name="CATModelEntityNotification(void*)"></a> <dt> o <b>CATModelEntityNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATModelEntityNotification</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iModelId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the class from a generic pointer to one object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModelId</tt>
   <dd>    the pointer.</dd>
</dl>
</dl>
</dl>
<a name="CATModelEntityNotification"></a><a name="CATModelEntityNotification(CATBaseUnknown*)"></a> <dt> o <b>CATModelEntityNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATModelEntityNotification</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs the class from a pointer to one object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>   a pointer to the object.</dd>
</dl>
</dl>
</dl>
<a name="~CATModelEntityNotification"></a><a name="~CATModelEntityNotification()"></a> <dt> o <b>~CATModelEntityNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATModelEntityNotification</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="Clone"></a><a name="Clone()"></a> <dt> o <b>Clone</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATModelNotification','CATModelNotification*')</script>  <b>Clone</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Returns a pointer to a new CATModelEntityNotification event which is the
  clone of the current one.
</dl>
<a name="GetModelId"></a><a name="GetModelId()"></a> <dt> o <b>GetModelId</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void *')</script>  <b>GetModelId</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns a generic pointer to the enclosed object.
</dl>
<a name="GetObject"></a><a name="GetObject()"></a> <dt> o <b>GetObject</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown *')</script>  <b>GetObject</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns a pointer to the enclosed object.
</dl>
<hr>
 This object is included in the file: <b>CATModelEntityNotification.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATVisualization</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
