<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>OptimizationInterfaces Interface CATIOptGoal</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../OptimizationInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIOptGoal','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIOptGoal','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIOptGoal','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIOptGoal','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>OptimizationInterfaces Interface CATIOptGoal</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIOptGoal_33345','CATIOptGoal','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIOptGoal</b>
</p>
<p>
<b><i> This interface encapsulates an optimization goal : it has mainly a goal parameter, an objective (minimum, maximum, target value) and a priority
 (used only in multigoals optimization).</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetGoalParameter()"><b>GetGoalParameter</b></a>()
<dd>  Gets the final goal parameter.
 <dt> o 
    <a href="#GetGoalParameterOrPub()"><b>GetGoalParameterOrPub</b></a>()
<dd>  Gets the goal publication or the goal parameter.
 <dt> o 
    <a href="#GetGoalType()"><b>GetGoalType</b></a>()
<dd>  Gets the goal type.
 <dt> o 
    <a href="#GetHighFlag(int&amp;)"><b>GetHighFlag</b></a>(int&amp;)
<dd>  Get the high flag attribute value.
 <dt> o 
    <a href="#GetHighParm(CATICkeParm_var&amp;)"><b>GetHighParm</b></a>(CATICkeParm_var&amp;)
<dd>  Get the parameter used to defined the high bound.
 <dt> o 
    <a href="#GetHighParmValue(double&amp;)"><b>GetHighParmValue</b></a>(double&amp;)
<dd>  Get the value of the high parameter if the high flag is equal to 1.
 <dt> o 
    <a href="#GetLowFlag(int&amp;)"><b>GetLowFlag</b></a>(int&amp;)
<dd>  Get the low flag attribute value.
 <dt> o 
    <a href="#GetLowParm(CATICkeParm_var&amp;)"><b>GetLowParm</b></a>(CATICkeParm_var&amp;)
<dd>  Get the parameter used to defined the low bound.
 <dt> o 
    <a href="#GetLowParmValue(double&amp;)"><b>GetLowParmValue</b></a>(double&amp;)
<dd>  Get the value of the low parameter if the low flag is equal to 1.
 <dt> o 
    <a href="#GetPrecision()"><b>GetPrecision</b></a>()
<dd>  Gets the wanted precision.
 <dt> o 
    <a href="#GetTargetValue()"><b>GetTargetValue</b></a>()
<dd>  Gets the target value parameter.
 <dt> o 
    <a href="#GetWeight(double&amp;)"><b>GetWeight</b></a>(double&amp;)
<dd>  Gets the Goal weight.
 <dt> o 
    <a href="#SetGoalParameter(CATICkeParm_var&amp;)"><b>SetGoalParameter</b></a>(CATICkeParm_var&amp;)
<dd>  Sets the goal parameter.
 <dt> o 
    <a href="#SetGoalParameterOrItsProxy(CATICkeParm_var&amp;)"><b>SetGoalParameterOrItsProxy</b></a>(CATICkeParm_var&amp;)
<dd>  Sets the goal parameter with the care of selective loading capability.
 <dt> o 
    <a href="#SetGoalType(CATIOptGoal::Type)"><b>SetGoalType</b></a>(CATIOptGoal::Type)
<dd>  Sets the goal type.
 <dt> o 
    <a href="#SetHighFlag(int)"><b>SetHighFlag</b></a>(int)
<dd>  Valuate the high flag attribute.
 <dt> o 
    <a href="#SetHighParmValue(double)"><b>SetHighParmValue</b></a>(double)
<dd>  If the high flag is equal to 1, this method sets the value of the high parameter.
 <dt> o 
    <a href="#SetLowFlag(int)"><b>SetLowFlag</b></a>(int)
<dd>  Valuate the low flag attribute.
 <dt> o 
    <a href="#SetLowParmValue(double)"><b>SetLowParmValue</b></a>(double)
<dd>  If the low flag is equal to 1, this method sets the value of the low parameter.
 <dt> o 
    <a href="#SetPrecision(double)"><b>SetPrecision</b></a>(double)
<dd>    Sets the wanted precision (when the goal type is TargetValue).
 <dt> o 
    <a href="#SetTargetValue(double)"><b>SetTargetValue</b></a>(double)
<dd>  Sets the value of the target value parameter (when the goal type is TargetValue).
 <dt> o 
    <a href="#SetWeight(double)"><b>SetWeight</b></a>(double)
<dd>  Sets the Goal weight.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Type"><b>Type</b></a>
<dd>  Goal possible types: 
 
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetGoalParameter"></a><a name="GetGoalParameter()"></a> <dt> o <b>GetGoalParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>GetGoalParameter</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the final goal parameter.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The final goal parameter.
 - If you called SetGoalParameter or SetGoalParameterOrItsProxy by giving
   a publication of parameter in argument, this method will return the 
   parameter pointed by the publication : 
	For instance, you called one of the
	Setxxx method with the publication "...!Part.1!PubOfReal.1" of the parameter Real.1
	of Part.1
	=> This method will return "Part.1\Real.1" and not exactly what you set
 - In other cases, it will return :
	# The proxy of the proxiable parameter you gave while calling SetGoalParameterOrItsProxy(), if one has been linked.
	# The non-proxiable parameter you gave while calling SetGoalParameterOrItsProxy() or SetGoalParameter().
</dl>
</dl>
<a name="GetGoalParameterOrPub"></a><a name="GetGoalParameterOrPub()"></a> <dt> o <b>GetGoalParameterOrPub</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>GetGoalParameterOrPub</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the goal publication or the goal parameter.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The goal publication or the goal parameter.
 - If you called SetGoalParameter or SetGoalParameterOrItsProxy by giving
   a publication of parameter in argument, this method will return the 
   the publication.
   WARNING : in publication case (the CATICkeParm object returned by GetGoalParameterOrPub() is
   different from the one returned by GetGoalParameter()), 2 successive calls to this method 
   will not return the same CATICkeParm !!!
 - In other cases, it will return :
	# The proxy of the proxiable parameter you gave while calling SetGoalParameterOrItsProxy(), if one has been linked.
	# The non-proxiable parameter you gave while calling SetGoalParameterOrItsProxy() or SetGoalParameter().
</dl>
</dl>
<a name="GetGoalType"></a><a name="GetGoalType()"></a> <dt> o <b>GetGoalType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIOptGoal::Type','CATIOptGoal::Type')</script>  <b>GetGoalType</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the goal type.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The goal type.
</dl>
</dl>
<a name="GetHighFlag"></a><a name="GetHighFlag(int&amp;)"></a> <dt> o <b>GetHighFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHighFlag</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oHasHighValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the high flag attribute value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHasLowValue</tt>
   <dd> is set to 1 if the goal has a high bound and 0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the reading of the attribute succeeded, E_FAIL else.
</dl>
</dl>
<a name="GetHighParm"></a><a name="GetHighParm(CATICkeParm_var&amp;)"></a> <dt> o <b>GetHighParm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHighParm</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oHighParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the parameter used to defined the high bound.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHighParm</tt>
   <dd> The high parameter, or NULL_var if the high flag is set to 0.
 Notice that, if you changed the goal parameter (call to SetGoalParameter()) since
 your last call to GetHighParm(), the high parameter may have change. Indeed, if
 the type of the goal parameter has changed, the old high parameter has been replaced by
 a new one (whose type is the same as the new goal parameter type).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if oHighParm != NULL_var, E_FAIL else.
</dl>
</dl>
<a name="GetHighParmValue"></a><a name="GetHighParmValue(double&amp;)"></a> <dt> o <b>GetHighParmValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHighParmValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oMksHighParmValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the value of the high parameter if the high flag is equal to 1.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMksHighParmValue</tt>
   <dd> the mks value of the high parameter if if the high flag is equal to 1, 0.0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the high flag is equal to 1, E_FAIL else.
</dl>
</dl>
<a name="GetLowFlag"></a><a name="GetLowFlag(int&amp;)"></a> <dt> o <b>GetLowFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowFlag</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oHasLowValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the low flag attribute value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oHasLowValue</tt>
   <dd> is set to 1 if the goal has a low bound and 0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if reading attribute succeeded, E_FAIL else.
</dl>
</dl>
<a name="GetLowParm"></a><a name="GetLowParm(CATICkeParm_var&amp;)"></a> <dt> o <b>GetLowParm</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowParm</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>oLowParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the parameter used to defined the low bound.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLowParm</tt>
   <dd> The low parameter, or NULL_var if the low flag is set to 0.
 Notice that, if you changed the goal parameter (call to SetGoalParameter()) since
 your last call to GetLowParm(), the low parameter may have change. Indeed, if
 the type of the goal parameter has changed, the old low parameter has been replaced by
 a new one (whose type is the same as the new goal parameter type).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if oLowParm != NULL_var, E_FAIL else.
</dl>
</dl>
<a name="GetLowParmValue"></a><a name="GetLowParmValue(double&amp;)"></a> <dt> o <b>GetLowParmValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowParmValue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oMksLowParmValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the value of the low parameter if the low flag is equal to 1.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMksLowParmValue</tt>
   <dd> the mks value of the low parameter if the low flag is equal to 1, 0.0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the low flag is equal to 1, E_FAIL else.
</dl>
</dl>
<a name="GetPrecision"></a><a name="GetPrecision()"></a> <dt> o <b>GetPrecision</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('double','double')</script>  <b>GetPrecision</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the wanted precision.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The precision.
</dl>
</dl>
<a name="GetTargetValue"></a><a name="GetTargetValue()"></a> <dt> o <b>GetTargetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeParm','CATICkeParm_var')</script>  <b>GetTargetValue</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the target value parameter.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The target value parameter.
</dl>
</dl>
<a name="GetWeight"></a><a name="GetWeight(double&amp;)"></a> <dt> o <b>GetWeight</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetWeight</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioWeight</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the Goal weight.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioWeight</tt>
   <dd> The current weight assigned to the goal. Default value is 1.0.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetGoalParameter"></a><a name="SetGoalParameter(CATICkeParm_var&amp;)"></a> <dt> o <b>SetGoalParameter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGoalParameter</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the goal parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParm</tt>
   <dd> The parameter that must be considered as the goal parameter (i.e. the parameter
 to optimize) by the optimization algorithm.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  - S_OK if the link is set to the parameter "iParm" 
 - E_FAIL if the link is not set because something failed.
</dl>
</dl>
<a name="SetGoalParameterOrItsProxy"></a><a name="SetGoalParameterOrItsProxy(CATICkeParm_var&amp;)"></a> <dt> o <b>SetGoalParameterOrItsProxy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGoalParameterOrItsProxy</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParm</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the goal parameter with the care of selective loading capability.
 It means that if the parameter "parm" is in a document different from
 the document were the optimization is, this method will keep the link
 with the parameter (thanks to a proxy), whereas the SetGoalParameter()
 does not (the parameter will not be found).
 In other cases, behavior is the same between the two methods.
 => This method allows the optimization to works in Visu Mode.
 WARNING : if you call this method with the parameter "p1"in argument,
 by calling the GetGoalParameter() method just after, you may not get
 the given p1 (but its proxy).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParm</tt>
   <dd> The parameter that must be considered as the goal parameter (i.e. the parameter
 to optimize) by the optimization algorithm.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  - S_OK if the link is set to the parameter "iParm" 
   => parameter not concerned by selective loading context.
 - S_FALSE if the link is set to the proxy of the parameter "iParm"
   => the GetGoalParameter() method will not return "iParm", but its proxy.
 - E_FAIL if the link is not set because something failed.
</dl>
</dl>
<a name="SetGoalType"></a><a name="SetGoalType(CATIOptGoal::Type)"></a> <dt> o <b>SetGoalType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetGoalType</b>(<td><script type="text/javascript"> activateLink('CATIOptGoal::Type','CATIOptGoal::Type')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the goal type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> The goal type to set. Must be one of the types given by the "enum" described above.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetHighFlag"></a><a name="SetHighFlag(int)"></a> <dt> o <b>SetHighFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetHighFlag</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHasHighValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Valuate the high flag attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHasHighValue</tt>
   <dd> set it to 1 to indicate that the goal has a high bound and 0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetHighParmValue"></a><a name="SetHighParmValue(double)"></a> <dt> o <b>SetHighParmValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetHighParmValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMksHighParmValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 If the high flag is equal to 1, this method sets the value of the high parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMksHighParmValue</tt>
   <dd> The mks value to give to the high parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if high parameter is valuated, E_FAIL else.
</dl>
</dl>
<a name="SetLowFlag"></a><a name="SetLowFlag(int)"></a> <dt> o <b>SetLowFlag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLowFlag</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHasLowValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Valuate the low flag attribute.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHasLowValue</tt>
   <dd> set it to 1 to indicate that the goal has a low bound and 0 else.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if writing attribute succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetLowParmValue"></a><a name="SetLowParmValue(double)"></a> <dt> o <b>SetLowParmValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLowParmValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iMksLowParmValue</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 If the low flag is equal to 1, this method sets the value of the low parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMksLowParmValue</tt>
   <dd> The mks value to give to the low parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if low parameter is valuated, E_FAIL else.
</dl>
</dl>
<a name="SetPrecision"></a><a name="SetPrecision(double)"></a> <dt> o <b>SetPrecision</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPrecision</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPrecision</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
   Sets the wanted precision (when the goal type is TargetValue).
 This value tells the algorithm if they succeeded to find ojective.
 (double in MKS unit).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPrecision</tt>
   <dd> The precision to set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetTargetValue"></a><a name="SetTargetValue(double)"></a> <dt> o <b>SetTargetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTargetValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iParmValueMKS</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of the target value parameter (when the goal type is TargetValue).
 This parameter is always shown in f(x) and equation editors.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParmValueMKS</tt>
   <dd> The MKS value to set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
<a name="SetWeight"></a><a name="SetWeight(double)"></a> <dt> o <b>SetWeight</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetWeight</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iWeight</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Goal weight.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWeight</tt>
   <dd> The double weight to set.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if succeeded, E_FAIL else.
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Type"> <dt> o <b>Type</b>
<dl>
  <dd>
<pre>
enum <b>Type</b> {
  Minimum,
  Maximum,
  TargetValue,
  OnlyBoundedVariation,
  NoGoal,
  CstOnly
}
</pre>
 Goal possible types: 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Minimum</tt>
   <dd> for mimization type of optimization. </dd>
    <dt><tt> Maximum</tt>
   <dd> for maximization type of optimization. </dd>
    <dt><tt> TargetValue</tt>
   <dd> for target value type of optimization. </dd>
    <dt><tt> CstOnly</tt>
   <dd> is for problems that do not have any goal and only constraints to be satisfied. </dd>
    <dt><tt> NoGoal</tt>
   <dd> when the type is not defined. </dd>
    <dt><tt> OnlyBoundedVariation</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIOptGoal.h</b><br>
If needed, your Imakefile.mk should include the module: <b>OptimizationItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
