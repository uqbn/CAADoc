<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>OptimizationInterfaces Interface CATIOptAlgorithm</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../OptimizationInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIOptAlgorithm','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIOptAlgorithm','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIOptAlgorithm','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIOptAlgorithm','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>OptimizationInterfaces Interface CATIOptAlgorithm</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIOptAlgorithm_40476','CATIOptAlgorithm','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../OptimizationInterfaces/class_CATOptAlgorithmAdapter_49286.htm">CATOptAlgorithmAdapter</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIOptAlgorithm</b>
</p>
<p>
<b><i> This interface describes the basic behaviour of an optimization algorithm.</i></b><br>

 An algorithm must expose a way to edit itself (method CreateEditionFrame).

 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AllHistoricToString()"><b>AllHistoricToString</b></a>()
<dd>  Returns a string describing the history of the optimization algorithm.
 <dt> o 
    <a href="#CheckCompatibility(CATIOptOptimization_var&amp;)"><b>CheckCompatibility</b></a>(CATIOptOptimization_var&amp;)
<dd>  This method checks if the global optimization definition is compatible with the current algorithm.
 <dt> o 
    <a href="#GetBestResultIndex(int&amp;)"><b>GetBestResultIndex</b></a>(int&amp;)
<dd>  Returns the index of the Opimization Log corresponding to the best solution found according to the problem defined.
 <dt> o 
    <a href="#GetEndIterationNotification()"><b>GetEndIterationNotification</b></a>()
<dd>  This event is triggered every time you want during the algorithm run.
 <dt> o 
    <a href="#GetSetting(char*,double&amp;)"><b>GetSetting</b></a>(char*,double&amp;)
<dd>  Gets an algorithm setting.
 <dt> o 
    <a href="#OneHistoricToString(int)"><b>OneHistoricToString</b></a>(int)
<dd>  Returns a string describing the history of the optimization algorithm.
 <dt> o 
    <a href="#Run(CATIOptOptimization_var&amp;)"><b>Run</b></a>(CATIOptOptimization_var&amp;)
<dd>  This method launches a run of optimization, with respect to the algorihtm settings, problems, and goals defined in the feature optimization.
 <dt> o 
    <a href="#SetSetting(char*,double)"><b>SetSetting</b></a>(char*,double)
<dd>  Sets an algorithm setting.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AllHistoricToString"></a><a name="AllHistoricToString()"></a> <dt> o <b>AllHistoricToString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>AllHistoricToString</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a string describing the history of the optimization algorithm.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The string containing the evolution of the free parameters, objective and constraints. 
 Contains additional information with respect to the design table output of the optimization.
</dl>
</dl>
<a name="CheckCompatibility"></a><a name="CheckCompatibility(CATIOptOptimization_var&amp;)"></a> <dt> o <b>CheckCompatibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CheckCompatibility</b>(<td><script type="text/javascript"> activateLink('CATIOptOptimization_var','CATIOptOptimization_var&amp;')</script> <td><tt>iOptim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method checks if the global optimization definition is compatible with the current algorithm.
 For example, your algorithm may not be able to run if the optimization has
 only constraints and no parameter to optimize so that the optimization
 won't be compatible with the current algorithm. In implementation, you
 may call the method SendOptimizationError() on the CATIOptOptimization
 given in argument, in order to send the error(s) explanation(s)
 to the interactiv dialog. If you do that, a popup will be displayed at the end of
 the check so that the user will know why there is a compatibility problem (to give
 a complete list of compatibility problems, check everything, call the
 SendOptimizationError() each time there is a problem and return E_FAIL
 at the end of the whole check).

 WARNING : the OptimizerUI will prevent the algorithm from running
 if at least one error is sent OR if this method returns E_FAIL.

 Since all the sent errors will be displayed to the user in interactiv mode,
 you should distinguish the internal errors (like NULL pointers) from
 user errors (like no free parameter selected).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOptim</tt>
   <dd> The optimization you want to check compatibility with.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the algorithm is compatible with the optimization, E_FAIL else.
</dl>
</dl>
<a name="GetBestResultIndex"></a><a name="GetBestResultIndex(int&amp;)"></a> <dt> o <b>GetBestResultIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBestResultIndex</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oBestResultIndex</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the index of the Opimization Log corresponding to the best solution found according to the problem defined.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oBestResultIndex</tt>
   <dd> The index of the best point found by the optimizer.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the best is found. E_FAIL if it was not found. E_NOTIMPLEMENTED for algorithms (such as DOEs) for which this notion 
 is meaningless.
</dl>
</dl>
<a name="GetEndIterationNotification"></a><a name="GetEndIterationNotification()"></a> <dt> o <b>GetEndIterationNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script>  <b>GetEndIterationNotification</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 This event is triggered every time you want during the algorithm run.
 It may correspond to a model update and/or an end of iteration.
 It is used for example by the stop dialog to update its display.
</dl>
<a name="GetSetting"></a><a name="GetSetting(char*,double&amp;)"></a> <dt> o <b>GetSetting</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSetting</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iAttrName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oContent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Gets an algorithm setting. 
 The setting is defined by its attribute name. 
 The value of the setting is returned in a double but can be an integer.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the operation succeeded, E_FAIL else (non existing attribute).
</dl>
</dl>
<a name="OneHistoricToString"></a><a name="OneHistoricToString(int)"></a> <dt> o <b>OneHistoricToString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>OneHistoricToString</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iHistoricIndex</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns a string describing the history of the optimization algorithm.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHistoricIndex</tt>
   <dd>  The index of the historic to be dumped (1 to Number of constraints + objective value + best objective)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The string containing the evolution of the free parameters, objective and constraints. 
 Contains additional information with respect to the design table output of the optimization.
</dl>
</dl>
<a name="Run"></a><a name="Run(CATIOptOptimization_var&amp;)"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Run</b>(<td><script type="text/javascript"> activateLink('CATIOptOptimization_var','CATIOptOptimization_var&amp;')</script> <td><tt>iOptim</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This method launches a run of optimization, with respect to the algorihtm settings, problems, and goals defined in the feature optimization.
 In implementation, you may call the method SendOptimizationError() on the
 CATIOptOptimization given in argument, in order to send the error(s) explanation(s)
 to the interactiv dialog. If you do that, a popup will be displayed at the end of
 the run so that the user will know what happened during the run.
 Notice that if you are integrating your algorithm in the OptimizerUI, the
 CheckCompatibility() method will be called so that it may prevent the algorithm to run.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> optim</tt>
   <dd>
 the optimization to run.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the operation succeeded, E_FAIL else
</dl>
</dl>
<a name="SetSetting"></a><a name="SetSetting(char*,double)"></a> <dt> o <b>SetSetting</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSetting</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iAttrName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iContent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets an algorithm setting. 
 This setting is defined by its attribute name. 
 The value of the setting is given as a double (but can be an integer).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  S_OK if the operation succeeded, E_FAIL else (non existing attribute).
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIOptAlgorithm.h</b><br>
If needed, your Imakefile.mk should include the module: <b>OptimizationItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
