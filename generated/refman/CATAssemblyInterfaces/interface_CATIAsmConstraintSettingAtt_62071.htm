<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAssemblyInterfaces Interface CATIAsmConstraintSettingAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATAssemblyInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIAsmConstraintSettingAtt','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIAsmConstraintSettingAtt','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIAsmConstraintSettingAtt','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIAsmConstraintSettingAtt','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATAssemblyInterfaces Interface CATIAsmConstraintSettingAtt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIAsmConstraintSettingAtt_62071','CATIAsmConstraintSettingAtt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIAsmConstraintSettingAtt</b>
</p>
<p>
<b><i>   Interface to modify Assembly Design options.</i></b><br>

 <b>Role</b>: This interface may be used to read 
 or modify the options of Assembly Design..</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetConstraintCreationMode(ConstraintCreationMode&amp;)"><b>GetConstraintCreationMode</b></a>(ConstraintCreationMode&amp;)
<dd>  Retrieves the constraint creation option.
 <dt> o 
    <a href="#GetConstraintCreationModeInfo(CATSettingInfo*)"><b>GetConstraintCreationModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the constraint creation option.
 <dt> o 
    <a href="#GetPasteComponentMode(PasteComponentMode&amp;)"><b>GetPasteComponentMode</b></a>(PasteComponentMode&amp;)
<dd>  Retrieves the paste component option.
 <dt> o 
    <a href="#GetPasteComponentModeInfo(CATSettingInfo*)"><b>GetPasteComponentModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the paste component option.
 <dt> o 
    <a href="#GetQuickConstraintMode(QuickConstraintMode&amp;)"><b>GetQuickConstraintMode</b></a>(QuickConstraintMode&amp;)
<dd>  Retrieves the quick constraint option.
 <dt> o 
    <a href="#GetQuickConstraintModeInfo(CATSettingInfo*)"><b>GetQuickConstraintModeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the quick constraint option.
 <dt> o 
    <a href="#GetQuickConstraintOrderedList(char**&amp;,int&amp;)"><b>GetQuickConstraintOrderedList</b></a>(char**&amp;,int&amp;)
<dd>  Retrieves the full ordered types list for quick constraint option.
 <dt> o 
    <a href="#GetRedundancyMode(RedundantMode&amp;)"><b>GetRedundancyMode</b></a>(RedundantMode&amp;)
<dd>  Retrieves the redundancy check for constraint creation option.
 <dt> o 
    <a href="#SetConstraintCreationMode(ConstraintCreationMode)"><b>SetConstraintCreationMode</b></a>(ConstraintCreationMode)
<dd>  Sets the constraint creation option.
 <dt> o 
    <a href="#SetConstraintCreationModeLock(unsigned char)"><b>SetConstraintCreationModeLock</b></a>(unsigned char)
<dd>    Locks or unlocks the constraint creation option.
 <dt> o 
    <a href="#SetPasteComponentMode(PasteComponentMode)"><b>SetPasteComponentMode</b></a>(PasteComponentMode)
<dd>  Sets the paste component option.
 <dt> o 
    <a href="#SetPasteComponentModeLock(unsigned char)"><b>SetPasteComponentModeLock</b></a>(unsigned char)
<dd>    Locks or unlocks the paste component option.
 <dt> o 
    <a href="#SetQuickConstraintMode(QuickConstraintMode)"><b>SetQuickConstraintMode</b></a>(QuickConstraintMode)
<dd>  Sets the quick constraint option.
 <dt> o 
    <a href="#SetQuickConstraintModeLock(unsigned char)"><b>SetQuickConstraintModeLock</b></a>(unsigned char)
<dd>    Locks or unlocks the quick constraint option.
 <dt> o 
    <a href="#SetQuickConstraintOrderedList(char**,int)"><b>SetQuickConstraintOrderedList</b></a>(char**,int)
<dd>  Retrieves the full ordered types list for quick constraint option.
 <dt> o 
    <a href="#SetRedundancyMode(RedundantMode)"><b>SetRedundancyMode</b></a>(RedundantMode)
<dd>  Sets the redundancy check for constraint creation option.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ConstraintCreationMode"><b>ConstraintCreationMode</b></a>
<dd>  Constraint creation mode.
 <dt> o 
    <a href="#PasteComponentMode"><b>PasteComponentMode</b></a>
<dd>  Paste component mode.
 <dt> o 
    <a href="#QuickConstraintMode"><b>QuickConstraintMode</b></a>
<dd>  Quick constraint mode.
 <dt> o 
    <a href="#RedundantMode"><b>RedundantMode</b></a>
<dd>  Redundancy check mode.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetConstraintCreationMode"></a><a name="GetConstraintCreationMode(ConstraintCreationMode&amp;)"></a> <dt> o <b>GetConstraintCreationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConstraintCreationMode</b>(<td><script type="text/javascript"> activateLink('ConstraintCreationMode','ConstraintCreationMode&amp;')</script> <td><tt>oConstraintCreationMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oConstraintCreationMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>AnyGeometry :</tt>   The constraint can be created on any kind of geometry
 <br><tt>PublishedGeometryChildLevel :</tt>   The constraint can only be created on geometry published on the direct child level 
 <br><tt>PublishedGeometryAnyLevel :</tt>   The constraint can only be created on geometry published on any assembly level 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="GetConstraintCreationModeInfo"></a><a name="GetConstraintCreationModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetConstraintCreationModeInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetConstraintCreationModeInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of the </dd>
<a href="#" onClick="openLink('CATSettingInfo','');return false">CATSettingInfo</a> object. 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
</dl>
<a name="GetPasteComponentMode"></a><a name="GetPasteComponentMode(PasteComponentMode&amp;)"></a> <dt> o <b>GetPasteComponentMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPasteComponentMode</b>(<td><script type="text/javascript"> activateLink('PasteComponentMode','PasteComponentMode&amp;')</script> <td><tt>oPasteComponentMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the paste component option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPasteComponentMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>WithoutCsts :</tt>   The component's constraints will not be recreated
 <br><tt>WithCstOnCopy :</tt>   The component's constraints will only be recreated after a Copy 
 <br><tt>WithCstOnCut :</tt>   The component's constraints will only be recreated after a Cut 
 <br><tt>WithCstOnCopyAndCut :</tt>   The component's constraints will be recreated after a Copy or a Cut 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="GetPasteComponentModeInfo"></a><a name="GetPasteComponentModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetPasteComponentModeInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPasteComponentModeInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the paste component option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of the </dd>
<a href="#" onClick="openLink('CATSettingInfo','');return false">CATSettingInfo</a> object. 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
</dl>
<a name="GetQuickConstraintMode"></a><a name="GetQuickConstraintMode(QuickConstraintMode&amp;)"></a> <dt> o <b>GetQuickConstraintMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetQuickConstraintMode</b>(<td><script type="text/javascript"> activateLink('QuickConstraintMode','QuickConstraintMode&amp;')</script> <td><tt>oQuickConstraintMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oQuickConstraintMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>SpecifiedOrder :</tt>   Use the specified order
 <br><tt>catVerifiedConstraintFirst :</tt>   Create verified constraint first
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="GetQuickConstraintModeInfo"></a><a name="GetQuickConstraintModeInfo(CATSettingInfo*)"></a> <dt> o <b>GetQuickConstraintModeInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetQuickConstraintModeInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>	Address of the </dd>
<a href="#" onClick="openLink('CATSettingInfo','');return false">CATSettingInfo</a> object. 
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
</dl>
<a name="GetQuickConstraintOrderedList"></a><a name="GetQuickConstraintOrderedList(char**&amp;,int&amp;)"></a> <dt> o <b>GetQuickConstraintOrderedList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetQuickConstraintOrderedList</b>(<td><script type="text/javascript"> activateLink('char','char**&amp;')</script> <td><tt>oList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the full ordered types list for quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oList</tt>
   <dd>      The ordered constraintes types list
      The constraints types must be precise strings
 </dd>
    <dt><tt> oSize</tt>
   <dd>      The size of the list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="GetRedundancyMode"></a><a name="GetRedundancyMode(RedundantMode&amp;)"></a> <dt> o <b>GetRedundancyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetRedundancyMode</b>(<td><script type="text/javascript"> activateLink('RedundantMode','RedundantMode&amp;')</script> <td><tt>oRedundantMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the redundancy check for constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRedundantMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>UnChecked :</tt> When redundancy check is ON.
 <br><tt>Checked :</tt>   When redundancy check is OFF.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetConstraintCreationMode"></a><a name="SetConstraintCreationMode(ConstraintCreationMode)"></a> <dt> o <b>SetConstraintCreationMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetConstraintCreationMode</b>(<td> const <script type="text/javascript"> activateLink('ConstraintCreationMode','ConstraintCreationMode')</script> <td><tt>iConstraintCreationMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConstraintCreationMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>AnyGeometry :</tt>   The constraint can be created on any kind of geometry
 <br><tt>PublishedGeometryChildLevel :</tt>   The constraint can only be created on geometry published on the direct child level 
 <br><tt>PublishedGeometryAnyLevel :</tt>   The constraint can only be created on geometry published on any assembly level 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetConstraintCreationModeLock"></a><a name="SetConstraintCreationModeLock(unsigned char)"></a> <dt> o <b>SetConstraintCreationModeLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetConstraintCreationModeLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLock</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
   Locks or unlocks the constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLock</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 <br><tt>0 :</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetPasteComponentMode"></a><a name="SetPasteComponentMode(PasteComponentMode)"></a> <dt> o <b>SetPasteComponentMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPasteComponentMode</b>(<td> const <script type="text/javascript"> activateLink('PasteComponentMode','PasteComponentMode')</script> <td><tt>iPasteComponentMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the paste component option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPasteComponentMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>WithoutCsts :</tt>   The component's constraints will not be recreated
 <br><tt>WithCstOnCopy :</tt>   The component's constraints will only be recreated after a Copy 
 <br><tt>WithCstOnCut :</tt>   The component's constraints will only be recreated after a Cut 
 <br><tt>WithCstOnCopyAndCut :</tt>   The component's constraints will be recreated after a Copy or a Cut 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetPasteComponentModeLock"></a><a name="SetPasteComponentModeLock(unsigned char)"></a> <dt> o <b>SetPasteComponentModeLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPasteComponentModeLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLock</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
   Locks or unlocks the paste component option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLock</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 <br><tt>0 :</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetQuickConstraintMode"></a><a name="SetQuickConstraintMode(QuickConstraintMode)"></a> <dt> o <b>SetQuickConstraintMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetQuickConstraintMode</b>(<td> const <script type="text/javascript"> activateLink('QuickConstraintMode','QuickConstraintMode')</script> <td><tt>iQuickConstraintMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iQuickConstraintMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>SpecifiedOrder :</tt>   Use the specified order
 <br><tt>catVerifiedConstraintFirst :</tt>   Create verified constraint first
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetQuickConstraintModeLock"></a><a name="SetQuickConstraintModeLock(unsigned char)"></a> <dt> o <b>SetQuickConstraintModeLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetQuickConstraintModeLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLock</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
   Locks or unlocks the quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLock</tt>
   <dd>	the locking operation to be performed
	<b>Legal values</b>:
	<br><tt>1 :</tt>   to lock the parameter.
 <br><tt>0 :</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetQuickConstraintOrderedList"></a><a name="SetQuickConstraintOrderedList(char**,int)"></a> <dt> o <b>SetQuickConstraintOrderedList</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetQuickConstraintOrderedList</b>(<td> const <script type="text/javascript"> activateLink('char','char**')</script> <td><tt>iList</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the full ordered types list for quick constraint option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iList</tt>
   <dd>      The ordered constraintes types list
      The constraints types must be precise strings
 </dd>
    <dt><tt> iSize</tt>
   <dd>      The size of the list
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
<a name="SetRedundancyMode"></a><a name="SetRedundancyMode(RedundantMode)"></a> <dt> o <b>SetRedundancyMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetRedundancyMode</b>(<td> const <script type="text/javascript"> activateLink('RedundantMode','RedundantMode')</script> <td><tt>iRedundantMode</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the redundancy check for constraint creation option.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oRedundantMode</tt>
   <dd>	<b>Legal values</b>:
	<br><tt>UnChecked :</tt> When redundancy check is ON.
 <br><tt>Checked :</tt>   When redundancy check is OFF.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl>
 <dt><tt>S_OK</tt>   <dd>on success
 <dt><tt>E_FAIL</tt> <dd>on failure
 </dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ConstraintCreationMode"> <dt> o <b>ConstraintCreationMode</b>
<dl>
  <dd>
<pre>
enum <b>ConstraintCreationMode</b> {
  AnyGeometry,
  PublishedGeometryChildLevel,
  PublishedGeometryAnyLevel
}
</pre>
 Constraint creation mode.
 The mode is used as input parameter in 
<a href="#" onClick="openLink('','SetConstraintCreationMode');return false">SetConstraintCreationMode</a> and as output parameter in 
<a href="#" onClick="openLink('','GetConstraintCreationMode');return false">GetConstraintCreationMode</a> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> AnyGeometry</tt>
   <dd>    The constraint can be created on any kind of geometry.
 </dd>
    <dt><tt> PublishGeometryChildLevel</tt>
   <dd>     The constraint can only be created on geometry published on the direct child level.
 </dd>
    <dt><tt> PublishGeometryAnyLevel</tt>
   <dd>     The constraint can only be created on geometry published on any assembly level.</dd>
</dl>
</dl>
</dl>
<a name="PasteComponentMode"> <dt> o <b>PasteComponentMode</b>
<dl>
  <dd>
<pre>
enum <b>PasteComponentMode</b> {
  WithoutCsts,
  WithCstOnCopy,
  WithCstOnCut,
  WithCstOnCopyAndCut
}
</pre>
 Paste component mode.
 The mode is used as input parameter in 
<a href="#" onClick="openLink('','SetPasteComponentMode');return false">SetPasteComponentMode</a> and as output parameter in 
<a href="#" onClick="openLink('','GetPasteComponentMode');return false">GetPasteComponentMode</a> 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> WithoutCsts</tt>
   <dd>    The component's constraints will not be recreated.
 </dd>
    <dt><tt> WithCstOnCopy</tt>
   <dd>     The component's constraints will only be recreated after a Copy.
 </dd>
    <dt><tt> WithCstOnCut</tt>
   <dd>     The component's constraints will only be recreated after a Cut.
 </dd>
    <dt><tt> WithCstOnCopyAndCut</tt>
   <dd>     The component's constraints will be recreated after a Copy or a Cut.</dd>
</dl>
</dl>
</dl>
<a name="QuickConstraintMode"> <dt> o <b>QuickConstraintMode</b>
<dl>
  <dd>
<pre>
enum <b>QuickConstraintMode</b> {
  SpecifiedOrder,
  VerifiedConstraintFirst
}
</pre>
 Quick constraint mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> catSpecifiedOrder</tt>
   <dd>    Use the specified order.
 </dd>
    <dt><tt> catVerifiedConstraintFirst</tt>
   <dd>    Create verified constraint first.</dd>
</dl>
</dl>
</dl>
<a name="RedundantMode"> <dt> o <b>RedundantMode</b>
<dl>
  <dd>
<pre>
enum <b>RedundantMode</b> {
  UnChecked,
  Checked
}
</pre>
 Redundancy check mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> catUnChecked</tt>
   <dd>    Redundancy of constraint is checked while constraint creation.
 </dd>
    <dt><tt> catChecked</tt>
   <dd>    Redundancy of constraint is not checked while constraint creation.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIAsmConstraintSettingAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAssemblyInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
