<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Dialog Class CATDlgEditor</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Dialog.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDlgEditor','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDlgEditor','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDlgEditor','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDlgEditor','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Dialog Class CATDlgEditor</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDlgEditor_9435','CATDlgEditor','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDlgEditor</b>
</p>
<p>
<b><i> Class to enable characters to be entered.</i></b><br>

 <b>Role</b>: Enables characters to be entered.
 It allows the end user to enter a text, numerics, or both, 
 or modify existing ones. The text can extend on one or several 
 lines. Scrollbars can be added if the text is longer than the 
 editor display area. Use editor whenever you propose to the 
 end user to edit or modify a text or unpredictable numerical 
 values. 
 Usually you will instanciate this class, however, you may
 derive it for example if you want to specialize it using
 the SetColor method.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDlgEditor(CATDialog*,CATString&amp;,CATDlgStyle)"><b>CATDlgEditor</b></a>(CATDialog*,CATString&amp;,CATDlgStyle)
<dd>  Constructs an input field.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ClearLine(int)"><b>ClearLine</b></a>(int)
<dd>  Reset the context of a line.
 <dt> o 
    <a href="#GetEditFocusInNotification()"><b>GetEditFocusInNotification</b></a>()
<dd>   Returns the CATDlgEditFocusInNotification event notification.
 <dt> o 
    <a href="#GetEditFocusOutNotification()"><b>GetEditFocusOutNotification</b></a>()
<dd>   Returns the CATDlgEditFocusOutNotification event notification.
 <dt> o 
    <a href="#GetEditModifyExtNotification()"><b>GetEditModifyExtNotification</b></a>()
<dd>  Returns the CATDlgEditModifyExtNotification event notification.
 <dt> o 
    <a href="#GetEditModifyNotification()"><b>GetEditModifyNotification</b></a>()
<dd>  Returns the CATDlgEditModifyNotification event notification.
 <dt> o 
    <a href="#GetFirstColumn()"><b>GetFirstColumn</b></a>()
<dd>  Get the position of the first visible character in the line.
 <dt> o 
    <a href="#GetFirstLine()"><b>GetFirstLine</b></a>()
<dd>  Get the position of the first visible line.
 <dt> o 
    <a href="#GetFloatValue()"><b>GetFloatValue</b></a>()
<dd>  Get an float from the contents of a line (multiple line editor case),
 or from the contents of the text (single line editor case).
 <dt> o 
    <a href="#GetIntegerValue()"><b>GetIntegerValue</b></a>()
<dd>  Get an integer from the contents of a line (multiple line editor case),
 or from the contents of the text (single line editor case).
 <dt> o 
    <a href="#GetLine(CATUnicodeString&amp;,int)"><b>GetLine</b></a>(CATUnicodeString&amp;,int)
<dd>  Extracts a line for a multiple line editor.
 <dt> o 
    <a href="#GetLineCount()"><b>GetLineCount</b></a>()
<dd>  Get the line count.
 <dt> o 
    <a href="#GetMaxCharacterWidth()"><b>GetMaxCharacterWidth</b></a>()
<dd>  Get the maximum character count that a line can contain.
 <dt> o 
    <a href="#GetSelection(int&amp;,int&amp;)"><b>GetSelection</b></a>(int&amp;,int&amp;)
<dd>  Get the current selected sub-string.
 <dt> o 
    <a href="#GetSelectionChangeNotification()"><b>GetSelectionChangeNotification</b></a>()
<dd>   Returns the CATDlgSelectionChangeNotification event notification.
 <dt> o 
    <a href="#GetText()"><b>GetText</b></a>()
<dd>  Extracts the text from a single line editor.
 <dt> o 
    <a href="#GetValue()"><b>GetValue</b></a>()
<dd>  Get value for double precision editors.
 <dt> o 
    <a href="#GetVisibleTextHeight()"><b>GetVisibleTextHeight</b></a>()
<dd>  Get the visible text height.
 <dt> o 
    <a href="#GetVisibleTextWidth()"><b>GetVisibleTextWidth</b></a>()
<dd>  Get the visible text width.
 <dt> o 
    <a href="#SetFirstColumn(int)"><b>SetFirstColumn</b></a>(int)
<dd>  Set the position of the first visible character in the line.
 <dt> o 
    <a href="#SetFirstLine(int)"><b>SetFirstLine</b></a>(int)
<dd>  Set the position of the first visible line.
 <dt> o 
    <a href="#SetFloatValue(float,int)"><b>SetFloatValue</b></a>(float,int)
<dd>  Set value for float precision editors.
 <dt> o 
    <a href="#SetInputCallback(CATDlgEditorCallback,void*)"><b>SetInputCallback</b></a>(CATDlgEditorCallback,void*)
<dd>  Declare your own function to execute when a character is entered.
 <dt> o 
    <a href="#SetIntegerValue(int,int)"><b>SetIntegerValue</b></a>(int,int)
<dd>  Set value for integer precision editors.
 <dt> o 
    <a href="#SetLine(CATUnicodeString&amp;,int)"><b>SetLine</b></a>(CATUnicodeString&amp;,int)
<dd>  Sets a line contents for a multiple line editor.
 <dt> o 
    <a href="#SetMaxCharacterWidth(int)"><b>SetMaxCharacterWidth</b></a>(int)
<dd>  Set the maximum character count that a line can contain.
 <dt> o 
    <a href="#SetSelection(int,int)"><b>SetSelection</b></a>(int,int)
<dd>  Set the current selected sub-string.
 <dt> o 
    <a href="#SetText(CATUnicodeString&amp;,int)"><b>SetText</b></a>(CATUnicodeString&amp;,int)
<dd>  Sets the text in a single line editor.
 <dt> o 
    <a href="#SetValue(double,int)"><b>SetValue</b></a>(double,int)
<dd>  Set value for double precision editors.
 <dt> o 
    <a href="#SetVerifyCallback(CATDlgEditorCallback,void*)"><b>SetVerifyCallback</b></a>(CATDlgEditorCallback,void*)
<dd>  Declare your own function to execute when a string is entered.
 <dt> o 
    <a href="#SetVisibleTextHeight(int)"><b>SetVisibleTextHeight</b></a>(int)
<dd>  Set the visible text height.
 <dt> o 
    <a href="#SetVisibleTextWidth(int)"><b>SetVisibleTextWidth</b></a>(int)
<dd>  Set the visible text width.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDlgEditor"></a><a name="CATDlgEditor(CATDialog*,CATString&amp;,CATDlgStyle)"></a> <dt> o <b>CATDlgEditor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDlgEditor</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iParent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iDialogObjectName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgStyle','CATDlgStyle')</script> <td><tt>iStyle</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an input field.
 <br><b>Role</b>: Constructs an input field. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the editor.
 </dd>
    <dt><tt> iDialogObjectName</tt>
   <dd>   The dialog object name. 
 </dd>
    <dt><tt> iStyle</tt>
   <dd>   The application window styles. You can cumulate several
   styles using a logical or.
   <br><b>Legal values</b>: <tt>NULL (default)</tt> so that the 
   text extend on a single line, or 
   <tt>CATDlgEdtMultiline</tt> if the text can extend on several
   lines, or <tt>CATDlgEdtReadOnly</tt> 
   if the text cannot be edited.
   <p>
   For single line editors only, you can use also:
   <tt>CATDlgEdtPassword</tt> if the text is hidden, or 
   <tt>CATDlgEdtInteger</tt> if the text must be an integer, or 
   <tt>CATDlgEdtFloat</tt> if the text must be a float, or 
   <tt>CATDlgEdtAlphabetical</tt> if the text must contain only 
   alphabetical characters, or 
   <tt>CATDlgEdtNumerical</tt> if the text must contain only 
   numerical characters, or 
   <tt>CATDlgEdtAlphanumerical</tt> if the must contain only 
   alphanumerical characters, or 
   <tt>CATDlgEdtDouble</tt> if the text must be a double, 
   expressed in the chosen unit.
   <p>
   For multiple line editors only, you can use also:
   <tt>CATDlgEdtWrap</tt> if the text automatically skips to 
   the next line, or 
   <tt>CATDlgEdtNoScrollBar</tt> if the editor has no 
   scrollbars, or 
   <tt>CATDlgEdtNoCR</tt> if the text doesn' include carriage 
   return characters.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ClearLine"></a><a name="ClearLine(int)"></a> <dt> o <b>ClearLine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ClearLine</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLineIndex</tt><td><tt>=-1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Reset the context of a line.
 <br><b>Role</b>: Reset the contents of a line contents (multiple line 
 editor case), or the contents of the text (single line editor case).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLineIndex</tt>
   <dd>   The line index.
   An index ranges from 0 to the line count - 1.</dd>
</dl>
</dl>
</dl>
<a name="GetEditFocusInNotification"></a><a name="GetEditFocusInNotification()"></a> <dt> o <b>GetEditFocusInNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetEditFocusInNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Returns the CATDlgEditFocusInNotification event notification. 
 which is sent by CATDlgEditor whenever 
 it gets the keyboard focus.
</dl>
<a name="GetEditFocusOutNotification"></a><a name="GetEditFocusOutNotification()"></a> <dt> o <b>GetEditFocusOutNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetEditFocusOutNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Returns the CATDlgEditFocusOutNotification event notification.
 It is sent by CATDlgEditor whenever it losts 
 the keyboard focus.
</dl>
<a name="GetEditModifyExtNotification"></a><a name="GetEditModifyExtNotification()"></a> <dt> o <b>GetEditModifyExtNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetEditModifyExtNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATDlgEditModifyExtNotification event notification.
 It is sent whenever a line is modified and the key "Enter" is pressed.
</dl>
<a name="GetEditModifyNotification"></a><a name="GetEditModifyNotification()"></a> <dt> o <b>GetEditModifyNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetEditModifyNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATDlgEditModifyNotification event notification.
 It is sent whenever a line is modified.
</dl>
<a name="GetFirstColumn"></a><a name="GetFirstColumn()"></a> <dt> o <b>GetFirstColumn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetFirstColumn</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the position of the first visible character in the line.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The visible text first visible column.
</dl>
</dl>
<a name="GetFirstLine"></a><a name="GetFirstLine()"></a> <dt> o <b>GetFirstLine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetFirstLine</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the position of the first visible line.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The visible text first line.
</dl>
</dl>
<a name="GetFloatValue"></a><a name="GetFloatValue()"></a> <dt> o <b>GetFloatValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>GetFloatValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get an float from the contents of a line (multiple line editor case),
 or from the contents of the text (single line editor case).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The float.
</dl>
</dl>
<a name="GetIntegerValue"></a><a name="GetIntegerValue()"></a> <dt> o <b>GetIntegerValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetIntegerValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get an integer from the contents of a line (multiple line editor case),
 or from the contents of the text (single line editor case).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The integer.
</dl>
</dl>
<a name="GetLine"></a><a name="GetLine(CATUnicodeString&amp;,int)"></a> <dt> o <b>GetLine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLine</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oLine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=-1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Extracts a line for a multiple line editor.
 <br><b>Role</b>: Extracts a line from the current multiple line editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLine</tt>
   <dd>   The line extracted.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>   The index of the line to extract. 
   An index ranges from 0 to the line count - 1.</dd>
</dl>
</dl>
</dl>
<a name="GetLineCount"></a><a name="GetLineCount()"></a> <dt> o <b>GetLineCount</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetLineCount</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the line count.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The line count.
</dl>
</dl>
<a name="GetMaxCharacterWidth"></a><a name="GetMaxCharacterWidth()"></a> <dt> o <b>GetMaxCharacterWidth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetMaxCharacterWidth</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the maximum character count that a line can contain.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The maximum character count that a line can contain.
</dl>
</dl>
<a name="GetSelection"></a><a name="GetSelection(int&amp;,int&amp;)"></a> <dt> o <b>GetSelection</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetSelection</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oFirstCharacterIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oLastCharacterIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the current selected sub-string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFirstCharacterIndex</tt>
   <dd>   The selected sub-string first character index.
 </dd>
    <dt><tt> oLastCharacterIndex</tt>
   <dd>   The selected sub-string last character index.</dd>
</dl>
</dl>
</dl>
<a name="GetSelectionChangeNotification"></a><a name="GetSelectionChangeNotification()"></a> <dt> o <b>GetSelectionChangeNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetSelectionChangeNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Returns the CATDlgSelectionChangeNotification event notification.
 It is sent by CATDlgEditor whenever the 
 selection in entry field is changed.
</dl>
<a name="GetText"></a><a name="GetText()"></a> <dt> o <b>GetText</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&')</script>  <b>GetText</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Extracts the text from a single line editor.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The text extracted.
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue()"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>GetValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get value for double precision editors.
 <br><b>Role</b>: Get the value for a double precision editor.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The double value.
</dl>
</dl>
<a name="GetVisibleTextHeight"></a><a name="GetVisibleTextHeight()"></a> <dt> o <b>GetVisibleTextHeight</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetVisibleTextHeight</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the visible text height.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The visible text height.
</dl>
</dl>
<a name="GetVisibleTextWidth"></a><a name="GetVisibleTextWidth()"></a> <dt> o <b>GetVisibleTextWidth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetVisibleTextWidth</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the visible text width.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The visible text width.
</dl>
</dl>
<a name="SetFirstColumn"></a><a name="SetFirstColumn(int)"></a> <dt> o <b>SetFirstColumn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetFirstColumn</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFirstVisibleColumn</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the position of the first visible character in the line.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstVisibleColumn</tt>
   <dd>   The visible text first visible column.</dd>
</dl>
</dl>
</dl>
<a name="SetFirstLine"></a><a name="SetFirstLine(int)"></a> <dt> o <b>SetFirstLine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetFirstLine</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFirstVisibleLine</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the position of the first visible line.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstVisibleLine</tt>
   <dd>   The visible text first line.</dd>
</dl>
</dl>
</dl>
<a name="SetFloatValue"></a><a name="SetFloatValue(float,int)"></a> <dt> o <b>SetFloatValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFloatValue</b>(<td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iFloatValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSendingNotificationFlag</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set value for float precision editors.
 <br><b>Role</b>: Set the value for a float precision editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFloatValue</tt>
   <dd>   The float value.
 </dd>
    <dt><tt> iSendingNotificationFlag</tt>
   <dd>   To specify if you want the CATDlgEditModifyNotification notification 
   to be sent. 
   <br><b>Legal values</b>: <tt>1</tt>: default (or any non NULL value)
   if you want the notification to be sent, or <tt>NULL</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetInputCallback"></a><a name="SetInputCallback(CATDlgEditorCallback,void*)"></a> <dt> o <b>SetInputCallback</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetInputCallback</b>(<td><script type="text/javascript"> activateLink('CATDlgEditorCallback','CATDlgEditorCallback')</script> <td><tt>iCheckingFunction</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iUsefulData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declare your own function to execute when a character is entered.
 <br><b>Role</b>: Declare your own function to execute when a 
 character is entered. Enables to declare an exit to verify 
 the input character.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCheckingFunction</tt>
   <dd>   The applicative function to check the input character.
 </dd>
    <dt><tt> iUsefulData</tt>
   <dd>   The data that will be transmited to the application when calling
   its function. It is the contents of the filed casted as a pointer 
   to void.</dd>
</dl>
</dl>
</dl>
<a name="SetIntegerValue"></a><a name="SetIntegerValue(int,int)"></a> <dt> o <b>SetIntegerValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetIntegerValue</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIntegerValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSendingNotificationFlag</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set value for integer precision editors.
 <br><b>Role</b>: Set the value for a integer precision editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIntegerValue</tt>
   <dd>   The integer value.
 </dd>
    <dt><tt> iSendingNotificationFlag</tt>
   <dd>   To specify if you want the CATDlgEditModifyNotification notification 
   to be sent. 
   <br><b>Legal values</b>: <tt>1</tt>: default (or any non NULL value)
   if you want the notification to be sent, or <tt>NULL</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetLine"></a><a name="SetLine(CATUnicodeString&amp;,int)"></a> <dt> o <b>SetLine</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>SetLine</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=-1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets a line contents for a multiple line editor.
 <br><b>Role</b>: Sets a line contents in the current multiple line editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd>   The line.
 </dd>
    <dt><tt> iIndex</tt>
   <dd>   The line index. 
   <br><b>Legal values</b>: <tt>-1</tt> so that the provided string
   be added as a new line to the current multiple line editor, or 
   <tt>Other (from 0 to the line count - 1)</tt> for the index itself.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The line count.
</dl>
</dl>
<a name="SetMaxCharacterWidth"></a><a name="SetMaxCharacterWidth(int)"></a> <dt> o <b>SetMaxCharacterWidth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMaxCharacterWidth</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMaximumCharacterCount</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the maximum character count that a line can contain.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaximumCharacterCount</tt>
   <dd>   The maximum character count that a line can contain.</dd>
</dl>
</dl>
</dl>
<a name="SetSelection"></a><a name="SetSelection(int,int)"></a> <dt> o <b>SetSelection</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSelection</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iFirstCharacterIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLastCharacterIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the current selected sub-string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirstCharacterIndex</tt>
   <dd>   The selected sub-string first character index.
 </dd>
    <dt><tt> iLastCharacterIndex</tt>
   <dd>   The selected sub-string last character index.</dd>
</dl>
</dl>
</dl>
<a name="SetText"></a><a name="SetText(CATUnicodeString&amp;,int)"></a> <dt> o <b>SetText</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetText</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iText</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSendingNotificationFlag</tt><td><tt>=0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the text in a single line editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iText</tt>
   <dd>   The text.
 </dd>
    <dt><tt> iSendingNotificationFlag</tt>
   <dd>   To specify if you want the CATDlgEditModifyNotification notification 
   to be sent. 
   <br><b>Legal values</b>: <tt>1</tt>: (or any non NULL value)
   if you want the notification to be sent, or <tt>NULL</tt> (default) otherwise.
   <br><b>Beware:</b> for upward compatibily reasons, the default value is not consistent
   with other methods.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(double,int)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetValue</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDoubleValue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSendingNotificationFlag</tt><td><tt>=1 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set value for double precision editors.
 <br><b>Role</b>: Set the value for a double precision editor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDoubleValue</tt>
   <dd>   The double value.
 </dd>
    <dt><tt> iSendingNotificationFlag</tt>
   <dd>   To specify if you want the CATDlgEditModifyNotification notification 
   to be sent. 
   <br><b>Legal values</b>: <tt>1</tt>: default (or any non NULL value)
   if you want the notification to be sent, or <tt>NULL</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="SetVerifyCallback"></a><a name="SetVerifyCallback(CATDlgEditorCallback,void*)"></a> <dt> o <b>SetVerifyCallback</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVerifyCallback</b>(<td><script type="text/javascript"> activateLink('CATDlgEditorCallback','CATDlgEditorCallback')</script> <td><tt>iCheckingFunction</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iUsefulData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declare your own function to execute when a string is entered.
 <br><b>Role</b>: Declare your own function to execute when a 
 string is entered. Enables to declare an exit to verify 
 the input string.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCheckingFunction</tt>
   <dd>   The applicative function to check the input string.
 </dd>
    <dt><tt> iUsefulData</tt>
   <dd>   The data that will be transmited to the application when calling
   its function. It is the contents of the filed casted as a pointer 
   to void.</dd>
</dl>
</dl>
</dl>
<a name="SetVisibleTextHeight"></a><a name="SetVisibleTextHeight(int)"></a> <dt> o <b>SetVisibleTextHeight</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVisibleTextHeight</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRowCount</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the visible text height.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRowCount</tt>
   <dd>   The visible text height (row count).</dd>
</dl>
</dl>
</dl>
<a name="SetVisibleTextWidth"></a><a name="SetVisibleTextWidth(int)"></a> <dt> o <b>SetVisibleTextWidth</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVisibleTextWidth</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iColumnCount</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Set the visible text width.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iColumnCount</tt>
   <dd>   The visible text width (column count).</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDlgEditor.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DI0PANV2</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
