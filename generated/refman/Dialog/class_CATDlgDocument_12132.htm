<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Dialog Class CATDlgDocument</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Dialog.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDlgDocument','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDlgDocument','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDlgDocument','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDlgDocument','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Dialog Class CATDlgDocument</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDlgDocument_12132','CATDlgDocument','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATDlgDocument</b>
</p>
<p>
<b><i> Class to create an application main window.</i></b><br>

 <b>Role</b>: An application window is the main application 
 window. It can contain one or several dialog windows, each 
 containing a document's presentation, depending on the 
 application is SDI (Single Document Interface) or MDI 
 (Multiple Document Interface), and other dialog windows, 
 such as the Macro window. In addition, it usually features a 
 menu bar, toolbars, and a status bar. 
 Toolbars can be docked to its frame sides, or undocked as 
 independent dialog boxes.  
 Use the application window as a base class when you want to 
 create the window for a new application.
 The parent of an instance of a class that derives from 
 CATDlgDocument must be an instance of a class that derives 
 from CATInteractiveApplication.
 <p>
 <b>note:</b> This class is called the Dialog Document.
 So that not to make any confusion with the memory
 documents that are edited during a CATIA session, we
 will call below these last ones "internalized document".</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDlgDocument(CATInteractiveApplication*,CATString&amp;,CATDlgStyle)"><b>CATDlgDocument</b></a>(CATInteractiveApplication*,CATString&amp;,CATDlgStyle)
<dd>  Constructs an application main window.
 <dt> o 
    <a href="#~CATDlgDocument()"><b>~CATDlgDocument</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AcceptFileDrop(CATBoolean)"><b>AcceptFileDrop</b></a>(CATBoolean)
<dd>  Specify whether the window (and its child windows) accept drop of files
 under Windows.
 <dt> o 
    <a href="#GetContextualMenu()"><b>GetContextualMenu</b></a>()
<dd>  Get the contextual menu, if there is one, for the current 
 main window.
 <dt> o 
    <a href="#GetDSLogoNotification()"><b>GetDSLogoNotification</b></a>()
<dd>  Returns the CATDlgDSLogoNotification event notification.
 <dt> o 
    <a href="#GetDroppedFileNotification()"><b>GetDroppedFileNotification</b></a>()
<dd>  Returns the CATDlgDroppedFileNotification event notification.
 <dt> o 
    <a href="#GetEscapeNotification()"><b>GetEscapeNotification</b></a>()
<dd>  Returns the CATDlgEscapeNotification event notification.
 <dt> o 
    <a href="#GetMenuBar()"><b>GetMenuBar</b></a>()
<dd>  Get the menu bar, if there is one, for the current 
 main window.
 <dt> o 
    <a href="#GetStatusBar()"><b>GetStatusBar</b></a>()
<dd>  Get the status bar, if there is one, of the current main 
 window.
 <dt> o 
    <a href="#IsMDI()"><b>IsMDI</b></a>()
<dd>  Specifies if the current main window is MDI or SDI.
 <dt> o 
    <a href="#MDIActivate(CATDlgDialog*)"><b>MDIActivate</b></a>(CATDlgDialog*)
<dd>  Activates an internalized document child window.
 <dt> o 
    <a href="#MDICascade(int)"><b>MDICascade</b></a>(int)
<dd>  Shows spacially the current main window internalized document 
 child windows under a cascade form.
 <dt> o 
    <a href="#MDIGetActive()"><b>MDIGetActive</b></a>()
<dd>  Get the current internalized document active window.
 <dt> o 
    <a href="#MDIIconArrange()"><b>MDIIconArrange</b></a>()
<dd>  Arranges spacially the icons of the internalized documents
 child windows which are currently minimized.
 <dt> o 
    <a href="#MDIMaximize(CATDlgDialog*)"><b>MDIMaximize</b></a>(CATDlgDialog*)
<dd>  Maximizes spacially the size of an internalized document child 
 window.
 <dt> o 
    <a href="#MDIMinimize(CATDlgDialog*)"><b>MDIMinimize</b></a>(CATDlgDialog*)
<dd>  Minimizes spacially the size of an internalized document child 
 window.
 <dt> o 
    <a href="#MDINext()"><b>MDINext</b></a>()
<dd>  Activates the internalized document child window which just
 follows the currently active internalized document child 
 window.
 <dt> o 
    <a href="#MDIPrevious()"><b>MDIPrevious</b></a>()
<dd>  Activates the internalized document child window which just
 preceeds the currently active internalized document child 
 window.
 <dt> o 
    <a href="#MDIRestore(CATDlgDialog*)"><b>MDIRestore</b></a>(CATDlgDialog*)
<dd>  Restores spacially the size of an internalized document child 
 window previously maximized or minimized spacially.
 <dt> o 
    <a href="#MDITile(int)"><b>MDITile</b></a>(int)
<dd>  Shows spacially the current main window internalized document 
 child windows under a tiled form.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDlgDocument"></a><a name="CATDlgDocument(CATInteractiveApplication*,CATString&amp;,CATDlgStyle)"></a> <dt> o <b>CATDlgDocument</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDlgDocument</b>(<td><script type="text/javascript"> activateLink('CATInteractiveApplication','CATInteractiveApplication*')</script> <td><tt>iParent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iDialogObjectName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgStyle','CATDlgStyle')</script> <td><tt>iStyle</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an application main window.
 <b>Role</b>: Constructs an application window. 
 Regarding the use of this method, you have to know that, 
 to create the main window for your application, you  
 must derive the current class. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent of the CATDlgDocument.
 </dd>
    <dt><tt> iDialogObjectName</tt>
   <dd>   The dialog object name. 
 </dd>
    <dt><tt> iStyle</tt>
   <dd>   The application window style.
   <br><b>Legal values</b>: <tt>NULL (default)</tt> for a SDI
   application (see above), or <tt>CATDlgWndFrameMDI</tt> 
   the application must be MDI (see above).</dd>
</dl>
</dl>
</dl>
<a name="~CATDlgDocument"></a><a name="~CATDlgDocument()"></a> <dt> o <b>~CATDlgDocument</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATDlgDocument</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AcceptFileDrop"></a><a name="AcceptFileDrop(CATBoolean)"></a> <dt> o <b>AcceptFileDrop</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AcceptFileDrop</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAccept</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Specify whether the window (and its child windows) accept drop of files
 under Windows.
 If this method is not called, default is TRUE.
 To be taken into account, this method must be called just after object allocation.   
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAccept</tt>
   <dd> <br>
 <b>Legal values:</b>
 <dl>
 <dt><tt>TRUE</tt><dd> the window accepts drop of files under Windows. </dd></dt>
 <dt><tt>FALSE</tt><dd> the window does not accept drop of files under Windows. </dd></dt>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetContextualMenu"></a><a name="GetContextualMenu()"></a> <dt> o <b>GetContextualMenu</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgContextualMenu','CATDlgContextualMenu*')</script>  <b>GetContextualMenu</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the contextual menu, if there is one, for the current 
 main window.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The contextual menu.
   <b>Legal values</b>: <tt>NULL</tt>: if the current
   main window has no contextual menu, <tt>Other</tt> 
   otherwise.
</dl>
</dl>
<a name="GetDSLogoNotification"></a><a name="GetDSLogoNotification()"></a> <dt> o <b>GetDSLogoNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetDSLogoNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATDlgDSLogoNotification event notification.
 It is sent whenever the end user select the CATIA logo
 which is displayed in the bottom-right corner of the
 application window. In CATIA, this event notification
 activates the in-line documentation process.
</dl>
<a name="GetDroppedFileNotification"></a><a name="GetDroppedFileNotification()"></a> <dt> o <b>GetDroppedFileNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetDroppedFileNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATDlgDroppedFileNotification event notification.
 It is sent whenever the end user drops an object in a 
 document window.
</dl>
<a name="GetEscapeNotification"></a><a name="GetEscapeNotification()"></a> <dt> o <b>GetEscapeNotification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATNotification','CATNotification *')</script>  <b>GetEscapeNotification</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the CATDlgEscapeNotification event notification.
 It is sent whenever the end user press the escape
 key. In CATIA, this event notification, when a command is
 being used, ends the command.
</dl>
<a name="GetMenuBar"></a><a name="GetMenuBar()"></a> <dt> o <b>GetMenuBar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgBarMenu','CATDlgBarMenu*')</script>  <b>GetMenuBar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the menu bar, if there is one, for the current 
 main window.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The menu bar for this main window.
   <b>Legal values</b>: <tt>NULL</tt>: if the current
   main window has no menu bar, <tt>Other</tt> otherwise.
</dl>
</dl>
<a name="GetStatusBar"></a><a name="GetStatusBar()"></a> <dt> o <b>GetStatusBar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgStatusBar','CATDlgStatusBar*')</script>  <b>GetStatusBar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the status bar, if there is one, of the current main 
 window.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Status bar dialog object.
</dl>
</dl>
<a name="IsMDI"></a><a name="IsMDI()"></a> <dt> o <b>IsMDI</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsMDI</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Specifies if the current main window is MDI or SDI.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    Boolean specifying if the current main window is MDI or SDI.
   <br><b>Legal values</b>: <tt>1</tt>: if the current main
   window is MDI, or <tt>0</tt>: otherwise.
</dl>
</dl>
<a name="MDIActivate"></a><a name="MDIActivate(CATDlgDialog*)"></a> <dt> o <b>MDIActivate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIActivate</b>(<td><script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script> <td><tt>iChildWindow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activates an internalized document child window.
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChildWindow</tt>
   <dd>   The internalized document child window to activate.</dd>
</dl>
</dl>
</dl>
<a name="MDICascade"></a><a name="MDICascade(int)"></a> <dt> o <b>MDICascade</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDICascade</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCascadeType</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Shows spacially the current main window internalized document 
 child windows under a cascade form. 
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCascadeType</tt>
   <dd>   The cascade type. 
   <br><b>Legal values</b>: 
   <tt>0 (default)</tt> if the cascade process must impact the
   minimized internalized document child windows, 
   <tt>CATDlgTileSkipHidden</tt> to specify that
   the cascade process must not impact the minimized 
   internalized document child windows.</dd>
</dl>
</dl>
</dl>
<a name="MDIGetActive"></a><a name="MDIGetActive()"></a> <dt> o <b>MDIGetActive</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script>  <b>MDIGetActive</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Get the current internalized document active window.
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The internalized document child window currently activated.
</dl>
</dl>
<a name="MDIIconArrange"></a><a name="MDIIconArrange()"></a> <dt> o <b>MDIIconArrange</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIIconArrange</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Arranges spacially the icons of the internalized documents
 child windows which are currently minimized.
 This method must be called by an application
 when the current main window has been resized.
</dl>
<a name="MDIMaximize"></a><a name="MDIMaximize(CATDlgDialog*)"></a> <dt> o <b>MDIMaximize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIMaximize</b>(<td><script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script> <td><tt>iChildWindow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Maximizes spacially the size of an internalized document child 
 window.
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChildWindow</tt>
   <dd>   The internalized document child window to maximize
   spacially.</dd>
</dl>
</dl>
</dl>
<a name="MDIMinimize"></a><a name="MDIMinimize(CATDlgDialog*)"></a> <dt> o <b>MDIMinimize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIMinimize</b>(<td><script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script> <td><tt>iChildWindow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Minimizes spacially the size of an internalized document child 
 window.
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChildWindow</tt>
   <dd>   The internalized document child window to minimize
   spacially.</dd>
</dl>
</dl>
</dl>
<a name="MDINext"></a><a name="MDINext()"></a> <dt> o <b>MDINext</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDINext</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activates the internalized document child window which just
 follows the currently active internalized document child 
 window.
 This method relates only to MDI-style CATDlgDocument
 windows.
</dl>
<a name="MDIPrevious"></a><a name="MDIPrevious()"></a> <dt> o <b>MDIPrevious</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIPrevious</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Activates the internalized document child window which just
 preceeds the currently active internalized document child 
 window.
 This method relates only to MDI-style CATDlgDocument
 windows.
</dl>
<a name="MDIRestore"></a><a name="MDIRestore(CATDlgDialog*)"></a> <dt> o <b>MDIRestore</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDIRestore</b>(<td><script type="text/javascript"> activateLink('CATDlgDialog','CATDlgDialog*')</script> <td><tt>iChildWindow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Restores spacially the size of an internalized document child 
 window previously maximized or minimized spacially.
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChildWindow</tt>
   <dd>   The internalized document child window to restore
   spacially.</dd>
</dl>
</dl>
</dl>
<a name="MDITile"></a><a name="MDITile(int)"></a> <dt> o <b>MDITile</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>MDITile</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTilingType</tt><td><tt>=CATDlgTileHorizontal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Shows spacially the current main window internalized document 
 child windows under a tiled form. 
 This method relates only to MDI-style CATDlgDocument
 windows.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTilingType</tt>
   <dd>   The tiling type. 
   <br><b>Legal values</b>: 
   <tt>CATDlgTileHorizontal (default)</tt> for an horizontal
   tiling, <tt>CATDlgTileVertical</tt> for a vertical
   tiling, <tt>CATDlgTileSkipHidden</tt> to specify that
   the tiling process must not impact the minimized 
   internalized document child windows. This last option
   may be associated to one of the two previous ones,
   using a logical or.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDlgDocument.h</b><br>
If needed, your Imakefile.mk should include the module: <b>DI0PANV2</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
