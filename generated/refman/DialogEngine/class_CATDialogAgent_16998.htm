<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATDialogAgent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DialogEngine.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDialogAgent','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDialogAgent','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDialogAgent','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDialogAgent','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DialogEngine Class CATDialogAgent</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDialogAgent_16998','CATDialogAgent','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDialogAgent</b>
</p>
<p>
<b><i> Base class for a state command agent.</i></b><br>

 <b>Role</b>: A dialog agent translates a user interaction into a user 
 input. It is created to match a given end user interaction and is valued
 when the end user performs the interaction. It is associated with one
 or possibly several states. Its valuation triggers the evaluation
 of the state exit condition and, then, of the transition guard conditions 
 if the state condition returns TRUE.
 <br>An end user interaction is always defined using a notification whose 
 type reflects the interaction, and a notifier, that is, the object that 
 sends the notification.
 <br>A basic dialog agent is valued when both notification and notifier match
 the dialog agent's required ones.
 <br>Agents must be created in the <a href="#" onClick="openLink('CATStateCommand','BuildGraph');return false">CATStateCommand.BuildGraph</a> method, along with the states they are dedicated to.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATDialogState','');return false">CATDialogState</a>, <a href="#" onClick="openLink('CATStateCommand','');return false">CATStateCommand</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATDialogAgent(CATString&amp;,CATDlgEngBehavior,CATCommandMode)"><b>CATDialogAgent</b></a>(CATString&amp;,CATDlgEngBehavior,CATCommandMode)
<dd>  Constructs a dialog agent.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Accept(CATNotification*,int)"><b>Accept</b></a>(CATNotification*,int)
<dd>  Values an agent dynamically.
 <dt> o 
    <a href="#AcceptOnNotify(CATCommand*,char*)"><b>AcceptOnNotify</b></a>(CATCommand*,char*)
<dd>  Specifies the user interaction expected by the agent.
 <dt> o 
    <a href="#AcceptOnNotify(CATCommand*,CATNotification*)"><b>AcceptOnNotify</b></a>(CATCommand*,CATNotification*)
<dd>  Specifies the user interaction expected by the agent.
 <dt> o 
    <a href="#AddPanelForNLS(CATDialog*)"><b>AddPanelForNLS</b></a>(CATDialog*)
<dd>  Declares that the command shares its resource file with a dialog.
 <dt> o 
    <a href="#AfterRedo()"><b>AfterRedo</b></a>()
<dd>    After an agent's redo.
 <dt> o 
    <a href="#AfterUndo()"><b>AfterUndo</b></a>()
<dd>    After an agent's undo.
 <dt> o 
    <a href="#AndFilter(CATAcquisitionFilter*,CATAcquisitionFilter*)"><b>AndFilter</b></a>(CATAcquisitionFilter*,CATAcquisitionFilter*)
<dd>  Creates a AND combination of two filters.
 <dt> o 
    <a href="#BeforeRedo()"><b>BeforeRedo</b></a>()
<dd>  Before an agent's redo.
 <dt> o 
    <a href="#BeforeUndo()"><b>BeforeUndo</b></a>()
<dd>  Before  an agent's undo.
 <dt> o 
    <a href="#GetBehavior()"><b>GetBehavior</b></a>()
<dd>  Returns the agent behavior.
 <dt> o 
    <a href="#GetEditor()"><b>GetEditor</b></a>()
<dd>  Returns the editor associated with the command.
 <dt> o 
    <a href="#IgnoreOnNotify(CATCommand*,char*)"><b>IgnoreOnNotify</b></a>(CATCommand*,char*)
<dd>  Cancels the effect of the AcceptOnNotify method.
 <dt> o 
    <a href="#IgnoreOnNotify(CATCommand*,CATNotification*)"><b>IgnoreOnNotify</b></a>(CATCommand*,CATNotification*)
<dd>  Cancels the effect of the AcceptOnNotify method.
 <dt> o 
    <a href="#InitializeAcquisition()"><b>InitializeAcquisition</b></a>()
<dd>  Resets an agent to have it reusable.
 <dt> o 
    <a href="#IsOutputSet()"><b>IsOutputSet</b></a>()
<dd>  Tests whether the agent is valued.
 <dt> o 
    <a href="#NotFilter(CATAcquisitionFilter*)"><b>NotFilter</b></a>(CATAcquisitionFilter*)
<dd>  Creates a filter reverse of another one.
 <dt> o 
    <a href="#OrFilter(CATAcquisitionFilter*,CATAcquisitionFilter*)"><b>OrFilter</b></a>(CATAcquisitionFilter*,CATAcquisitionFilter*)
<dd>  Creates a OR combination of two filters.
 <dt> o 
    <a href="#RequestDelayedDestruction()"><b>RequestDelayedDestruction</b></a>()
<dd>  Requests the command delayed destruction.
 <dt> o 
    <a href="#SetBehavior(CATDlgEngBehavior)"><b>SetBehavior</b></a>(CATDlgEngBehavior)
<dd>  Sets the agent behavior.
 <dt> o 
    <a href="#TryValue(CATBaseUnknown*)"><b>TryValue</b></a>(CATBaseUnknown*)
<dd>  Tries to value an agent with a given value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATDialogAgent"></a><a name="CATDialogAgent(CATString&amp;,CATDlgEngBehavior,CATCommandMode)"></a> <dt> o <b>CATDialogAgent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATDialogAgent</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgEngBehavior','CATDlgEngBehavior')</script> <td><tt>iBehavior</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCommandMode','CATCommandMode')</script> <td><tt>iMode</tt><td><tt>=CATCommandModeUndefined</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a dialog agent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The agent identifier. It is used to retrieve the undo/redo titles in 
   the command message file.
 </dd>
    <dt><tt> iBehavior</tt>
   <dd>   The behavior of the agent.
   <br><b>Legal values</b>: The behavior is given in the form of a
   concatenation of the facet values using the | character.
   <br>e.g.: <code>CATDlgEngRepeat|CATDlgEngActive</code>
   <br>If it is NULL, the agent has the default behavior value for each 
   facet.
   <br>The behavior may be specified later with the </dd>
<a href="#" onClick="openLink('','SetBehavior');return false">SetBehavior</a>    method.
 
    <dt><tt> iMode</tt>
   <dd>   The focus mode.
   <br><b>Legal values</b>: Must always be <tt>
   CATCommandModeUndefined</tt>.
   The focus of an agent is managed by the state command it belongs to.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Accept"></a><a name="Accept(CATNotification*,int)"></a> <dt> o <b>Accept</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Accept</b>(<td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotif</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDoNotRegisterUndo</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Values an agent dynamically.
 <br><b>Role</b>: When using this method on an agent, the agent becomes 
 valued immediately as if it had received an expected notification. 
 <br>Moreover, this method enables to specify a notification which can be
 considered as the valuating notification by methods like 
<a href="#" onClick="openLink('CATStateCommand','GetLastNotification');return false">CATStateCommand.GetLastNotification</a> or 
<a href="#" onClick="openLink('CATStateCommand','IsLastModifiedAgentCondition');return false">CATStateCommand.IsLastModifiedAgentCondition</a>.
 <br>However, this method doesn't register an undo step.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotif</tt>
   <dd>   The notification to consider as the valuing notification 
   <br><b>Legal values</b>: The notifier may be NULL. It is an optional
   parameter.
 </dd>
    <dt><tt> iDoNotRegisterUndo</tt>
   <dd>   Internal argument. Do not use it.
   <br><b>Legal values</b>: Its default value must always be used.</dd>
</dl>
</dl>
</dl>
<a name="AcceptOnNotify"></a><a name="AcceptOnNotify(CATCommand*,char*)"></a> <dt> o <b>AcceptOnNotify</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AcceptOnNotify</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iNotifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iNotifClass</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Specifies the user interaction expected by the agent.
 <br><b>Role</b>: The agent becomes valued when it receives a notification
 which belongs to the <tt>iNotifClass</tt> class from the <tt>iNotifier
 </tt> notifier.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotifier</tt>
   <dd>   The notifier.
   <br><b>Legal values</b>: The notifier may be NULL: the reception of the
   notification is sufficient to value the agent whatever the notifier. 
 </dd>
    <dt><tt> iNotifClass</tt>
   <dd>   The notification class.
   <br><b>Legal values</b>: It can be NULL: any notification sent by the
   <tt>iNotifier</tt> notifier values the agent.</dd>
</dl>
</dl>
</dl>
<a name="AcceptOnNotify"></a><a name="AcceptOnNotify(CATCommand*,CATNotification*)"></a> <dt> o <b>AcceptOnNotify</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AcceptOnNotify</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iNotifier</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotif</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Specifies the user interaction expected by the agent.
 <br><b>Role</b>: The agent becomes valued when it receives a notification 
 which belongs to the <tt>iNotif</tt> notification class from the <tt>
 iNotifier</tt> notifier.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotifier</tt>
   <dd>   The notifier.
   <br><b>Legal values</b>: The notifier may be NULL: the reception of the
   notification is sufficient to value the agent whatever the notifier. 
 </dd>
    <dt><tt> iNotif</tt>
   <dd>   The notification address.
   The agent checks whether the received notifications belong to the
   same class as the <tt>iNotif</tt> notification. So, only the 
   notification class matters. 
   <br><b>Legal values</b>: It can be NULL: any notification sent by the
   <tt>iNotifier</tt> notifier values the agent.</dd>
</dl>
</dl>
</dl>
<a name="AddPanelForNLS"></a><a name="AddPanelForNLS(CATDialog*)"></a> <dt> o <b>AddPanelForNLS</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddPanelForNLS</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iDialog</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Declares that the command shares its resource file with a dialog.
 <br><b>Role</b>: The resources of the <tt>iDialog</tt> dialog are written
 in the command resource file and their research keys are prefixed with 
 the command research key. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDialog</tt>
   <dd>   The dialog.</dd>
</dl>
</dl>
</dl>
<a name="AfterRedo"></a><a name="AfterRedo()"></a> <dt> o <b>AfterRedo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AfterRedo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   After an agent's redo.
 <br><b>Role:</b>
   This method is executed after the transaction redo and must not 
   modify transactional objects.
   <br>Method to overwrite, if necessary, if your 
<a href="#" onClick="openLink('CATStateCommand','');return false">CATStateCommand</a> is a <tt>CATDialogAgent</tt>
</dl>
<a name="AfterUndo"></a><a name="AfterUndo()"></a> <dt> o <b>AfterUndo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AfterUndo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   After an agent's undo.
 <br><b>Role:</b>
   This method is executed after the transaction undo and must not 
   modify transactional objects.
   <br>Method to overwrite, if necessary, if your 
<a href="#" onClick="openLink('CATStateCommand','');return false">CATStateCommand</a> is a <tt>CATDialogAgent</tt>
</dl>
<a name="AndFilter"></a><a name="AndFilter(CATAcquisitionFilter*,CATAcquisitionFilter*)"></a> <dt> o <b>AndFilter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter *')</script>  <b>AndFilter</b>(<td><script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter*')</script> <td><tt>iFilter1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter*')</script> <td><tt>iFilter2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a AND combination of two filters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilter1</tt>
   <dd>   The first filter.
 </dd>
    <dt><tt> iFilter2</tt>
   <dd>   The second filter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The resulting filter.
   <br><b>Cyclic reference</b>: A pointer to the filter is kept and
   Released at the end of the command before the command destructor call.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
 See also: 
<a href="#" onClick="openLink('CATStateCommand','Filter');return false">CATStateCommand.Filter</a> method.
</dl>
</dl>
<a name="BeforeRedo"></a><a name="BeforeRedo()"></a> <dt> o <b>BeforeRedo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeforeRedo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Before an agent's redo.
 <br><b>Role:</b>
   This method is executed before the transaction redo and must not 
   modify transactional objects.
   <br>Method to overwrite, if necessary, if your 
<a href="#" onClick="openLink('CATStateCommand','');return false">CATStateCommand</a> is a <tt>CATDialogAgent</tt>
</dl>
<a name="BeforeUndo"></a><a name="BeforeUndo()"></a> <dt> o <b>BeforeUndo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>BeforeUndo</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Before  an agent's undo.
 <br><b>Role:</b>
   This method is executed before the transaction undo and must not 
   modify transactional objects.
   <br>Method to overwrite, if necessary, if your 
<a href="#" onClick="openLink('CATStateCommand','');return false">CATStateCommand</a> is a <tt>CATDialogAgent</tt>
</dl>
<a name="GetBehavior"></a><a name="GetBehavior()"></a> <dt> o <b>GetBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgEngBehavior','CATDlgEngBehavior')</script>  <b>GetBehavior</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the agent behavior.
 <br><b>Role</b>: A behavior is made of behavioral facets that can be each 
 set to a given value. These facets are listed in the 
<a href="#" onClick="openLink('CATDlgEngBehavior','');return false">CATDlgEngBehavior</a> definition.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The behavior.
</dl>
</dl>
<a name="GetEditor"></a><a name="GetEditor()"></a> <dt> o <b>GetEditor</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATFrmEditor','CATFrmEditor *')</script>  <b>GetEditor</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the editor associated with the command.
 <br><b>Role</b>: Do use this method instead of the 
<a href="#" onClick="openLink('CATFrmEditor','GetCurrentEditor');return false">CATFrmEditor.GetCurrentEditor</a> method which gives the current editor which
 may be the editor of another document, during a Drag&Drop for example.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The editor.
</dl>
</dl>
<a name="IgnoreOnNotify"></a><a name="IgnoreOnNotify(CATCommand*,char*)"></a> <dt> o <b>IgnoreOnNotify</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>IgnoreOnNotify</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iNotifier</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iNotifClass</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels the effect of the AcceptOnNotify method.
 <br><b>Role</b>: The agent won't be valued anymore when receiving a 
 notification which belongs to the <tt>iNotifClass</tt> class 
 from the <tt>iNotifier</tt> notifier.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotifier</tt>
   <dd>   The notifier.
   <br><b>Legal values</b>: Must have the same value as in the </dd>
<a href="#" onClick="openLink('','AcceptOnNotify');return false">AcceptOnNotify</a> method to cancel.
 
    <dt><tt> iNotifClass</tt>
   <dd>   The notification class.
   <br><b>Legal values</b>: Must have the same value as in the </dd>
<a href="#" onClick="openLink('','AcceptOnNotify');return false">AcceptOnNotify</a> method to cancel.
</dl>
</dl>
</dl>
<a name="IgnoreOnNotify"></a><a name="IgnoreOnNotify(CATCommand*,CATNotification*)"></a> <dt> o <b>IgnoreOnNotify</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>IgnoreOnNotify</b>(<td><script type="text/javascript"> activateLink('CATCommand','CATCommand*')</script> <td><tt>iNotifier</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iNotif</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Cancels the effect of the AcceptOnNotify method.
 <br><b>Role</b>: The agent won't be valued anymore when receiving a
 notification which  belongs to the <tt>iNotif</tt> notification class 
 from the <tt>iNotifier</tt> notifier.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotifier</tt>
   <dd>   The notifier.
   <br><b>Legal values</b>: Must have the same value as in the </dd>
<a href="#" onClick="openLink('','AcceptOnNotify');return false">AcceptOnNotify</a> method to cancel.
 
    <dt><tt> iNotif</tt>
   <dd>   The notification address.
   <br><b>Legal values</b>: Must have the same value as in the </dd>
<a href="#" onClick="openLink('','AcceptOnNotify');return false">AcceptOnNotify</a> method to cancel.
</dl>
</dl>
</dl>
<a name="InitializeAcquisition"></a><a name="InitializeAcquisition()"></a> <dt> o <b>InitializeAcquisition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>InitializeAcquisition</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets an agent to have it reusable.
 <br><b>Role</b>: The agent is no more valued and is able to accept 
 notifications again.
</dl>
<a name="IsOutputSet"></a><a name="IsOutputSet()"></a> <dt> o <b>IsOutputSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsOutputSet</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tests whether the agent is valued.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The result of the test.
</dl>
</dl>
<a name="NotFilter"></a><a name="NotFilter(CATAcquisitionFilter*)"></a> <dt> o <b>NotFilter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter *')</script>  <b>NotFilter</b>(<td><script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter*')</script> <td><tt>iFilter</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a filter reverse of another one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilter</tt>
   <dd>   The genuine filter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The resulting filter.
   <br><b>Cyclic reference</b>: A pointer to the filter is kept and
   Released at the end of the command before the command destructor call.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
 See also: 
<a href="#" onClick="openLink('CATStateCommand','Filter');return false">CATStateCommand.Filter</a> method.
</dl>
</dl>
<a name="OrFilter"></a><a name="OrFilter(CATAcquisitionFilter*,CATAcquisitionFilter*)"></a> <dt> o <b>OrFilter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter *')</script>  <b>OrFilter</b>(<td><script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter*')</script> <td><tt>iFilter1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATAcquisitionFilter','CATAcquisitionFilter*')</script> <td><tt>iFilter2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates a OR combination of two filters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilter1</tt>
   <dd>   The first filter.
 </dd>
    <dt><tt> iFilter2</tt>
   <dd>   The second filter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The resulting filter.
   <br><b>Cyclic reference</b>: A pointer to the filter is kept and
   Released at the end of the command before the command destructor call.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
 See also: 
<a href="#" onClick="openLink('CATStateCommand','Filter');return false">CATStateCommand.Filter</a> method.
</dl>
</dl>
<a name="RequestDelayedDestruction"></a><a name="RequestDelayedDestruction()"></a> <dt> o <b>RequestDelayedDestruction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RequestDelayedDestruction</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Requests the command delayed destruction.
 <br><b>Role</b>: The command will ve destroyed as soon as this will be possible
</dl>
<a name="SetBehavior"></a><a name="SetBehavior(CATDlgEngBehavior)"></a> <dt> o <b>SetBehavior</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBehavior</b>(<td><script type="text/javascript"> activateLink('CATDlgEngBehavior','CATDlgEngBehavior')</script> <td><tt>iBehavior</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the agent behavior.
 <br><b>Role</b>: A behavior is made of behavioral facets that can be each 
 set to a given value. These facets are listed in the 
<a href="#" onClick="openLink('CATDlgEngBehavior','');return false">CATDlgEngBehavior</a> definition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBehavior</tt>
   <dd>   The behavior.
   <br><b>Legal values</b>: The behavior is given in the form of a
   concatenation of the facet values using the | character.
   <br>e.g.: <code>CATDlgEngRepeat|CATDlgEngActive</code></dd>
</dl>
</dl>
</dl>
<a name="TryValue"></a><a name="TryValue(CATBaseUnknown*)"></a> <dt> o <b>TryValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>TryValue</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tries to value an agent with a given value.
 <br><b>Role</b>: It only works with 
<a href="#" onClick="openLink('CATPathElementAgent','');return false">CATPathElementAgent</a> agents and the value must be a 
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>. The Path Element is tested as if the object it represents had been selected
 by the end user. If the object dosen't have the expected type, the agent 
 is not valued and the method returns FALSE.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd>   The value.
   <br><b>Legal values</b>: Must be a </dd>
<a href="#" onClick="openLink('CATPathElement','');return false">CATPathElement</a>.  
  <dt> <b>Returns:</b> 
  <dd>     The result of the valuation.
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDialogAgent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
