<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATIndicationAgent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DialogEngine.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIndicationAgent','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIndicationAgent','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIndicationAgent','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIndicationAgent','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DialogEngine Class CATIndicationAgent</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATIndicationAgent_23513','CATIndicationAgent','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATIndicationAgent</b>
</p>
<p>
<b><i> Class representing an agent dedicated to indication.</i></b><br>

 <b>Role</b>: An Indication agent is a specific acquisition agent which
 retrieves a 2D point from a mouse left click.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATMathPoint2D','');return false">CATMathPoint2D</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATIndicationAgent(CATString&amp;)"><b>CATIndicationAgent</b></a>(CATString&amp;)
<dd>  Constructs an indication agent.
 <dt> o 
    <a href="#~CATIndicationAgent()"><b>~CATIndicationAgent</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetMathPlane()"><b>GetMathPlane</b></a>()
<dd>  Returns the plane on which a point selected in a 3D viewer is projected.
 <dt> o 
    <a href="#GetModifier()"><b>GetModifier</b></a>()
<dd>  Returns whether the shift and control keys have been pushed during 
 the indication.
 <dt> o 
    <a href="#GetValue()"><b>GetValue</b></a>()
<dd>  Returns the agent value.
 <dt> o 
    <a href="#SetMathPlane(CATMathPlane&amp;)"><b>SetMathPlane</b></a>(CATMathPlane&amp;)
<dd>  Sets the plane on which to project a point selected in a 3D viewer.
 <dt> o 
    <a href="#SetValue(CATMathPoint2D&amp;)"><b>SetValue</b></a>(CATMathPoint2D&amp;)
<dd>  Sets the agent value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATIndicationAgent"></a><a name="CATIndicationAgent(CATString&amp;)"></a> <dt> o <b>CATIndicationAgent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATIndicationAgent</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an indication agent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The agent identifier. It is used to retrieve the undo/redo titles in 
   the command resource file.</dd>
</dl>
</dl>
</dl>
<a name="~CATIndicationAgent"></a><a name="~CATIndicationAgent()"></a> <dt> o <b>~CATIndicationAgent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATIndicationAgent</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetMathPlane"></a><a name="GetMathPlane()"></a> <dt> o <b>GetMathPlane</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane &')</script>  <b>GetMathPlane</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the plane on which a point selected in a 3D viewer is projected.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The plane.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="GetModifier"></a><a name="GetModifier()"></a> <dt> o <b>GetModifier</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetModifier</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns whether the shift and control keys have been pushed during 
 the indication.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The key use.
   <br><b>Legal values</b>: Use the defined values to decode the returned
   integer:
   <ul>
   <li><tt>ShiftModifierOn</tt></li>
   <li><tt>ControlModifierOn</tt></li>
   </ul>
   e.g: <code>if (Agent->GetModifier() & ControlModifierOn)</code>
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue()"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D &')</script>  <b>GetValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the agent value.
 <br><b>Role</b>: The value is a 2D point.
 The returned value depends on the 
<a href="#" onClick="openLink('CATAcquisitionAgent','ValuationState');return false">CATAcquisitionAgent.ValuationState</a>. Indeed, if the agent valuation state is <tt>Valuated</tt>, the 
 <tt>GetValue</tt> method returns the real value; but if the agent 
 valuation state is <tt>PreValuated</tt>, the <tt>GetValue</tt> method 
 returns the prevalue even if the agent has got a value. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The value.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="SetMathPlane"></a><a name="SetMathPlane(CATMathPlane&amp;)"></a> <dt> o <b>SetMathPlane</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetMathPlane</b>(<td> const <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>iPlane</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the plane on which to project a point selected in a 3D viewer.
 <br><b>Role</b>: An indication agent directly retrieves 2D point
 coordinates from a click in a 2D viewer. But, with a 3D viewer,
 the click is undetermined.
 To determine it, this method specifies a plane on which the point
 clicked on the screen plane will be projected according to the
 
<a href="#" onClick="openLink('CATIndicationSegment','');return false">CATIndicationSegment</a> direction. This direction corresponds to the line going from the viewpoint eye to the mouse position on screen.
 If no projection plane is defined, a plane perpendicular to the
 
<a href="#" onClick="openLink('CATIndicationSegment','');return false">CATIndicationSegment</a> and containing the visualization origin point  will be used for projection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPlane</tt>
   <dd>   The plane.
   <br><b>Legal values</b>: it mustn't be perpendicular to the near
   or far planes, that is to the screen plane, in order to get a point.</dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(CATMathPoint2D&amp;)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint2D','CATMathPoint2D&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the agent value.
 <br><b>Role</b>: The value is a 2D point.
 This method does not register an undo step.
 <br><b>Postcondition</b>: Use the 
<a href="#" onClick="openLink('CATAcquisitionAgent','SetValuation');return false">CATAcquisitionAgent.SetValuation</a> method to make the agent accept the value, otherwise this value is not
 taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd>   The value.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIndicationAgent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
