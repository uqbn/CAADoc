<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATEditAgent</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DialogEngine.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATEditAgent','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEditAgent','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATEditAgent','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEditAgent','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DialogEngine Class CATEditAgent</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEditAgent_14478','CATEditAgent','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATEditAgent</b>
</p>
<p>
<b><i> Class representing an agent to edit an object in a workbench different from the
 current one.</i></b><br>

 <b>Role</b>: An edition agent is a specific agent which enables the user to
 edit an object inside a state command. This agent is itself a state command which,
 when it is activated, launchs the workbench specified by the <a href="#" onClick="openLink('','SetWorkbench');return false">SetWorkbench</a> method. Once the end user has clicked on the workbench's exit button, the edition agent is completed, the edited object is put 
 into the CSO, and the state chart of the original command resumes. 
 <br>The object to edit is provided by a method given as argument of the
 
<a href="#" onClick="openLink('','SetElementProvider');return false">SetElementProvider</a> method. <br><br><b>Note</b>: As every state command used as an agent,
 an edition agent must be the only agent added to a given state.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEditAgent(CATString&amp;,CATClassId)"><b>CATEditAgent</b></a>(CATString&amp;,CATClassId)
<dd>  Constructs an edition agent.
 <dt> o 
    <a href="#~CATEditAgent()"><b>~CATEditAgent</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetValue()"><b>GetValue</b></a>()
<dd>  Returns the path of the edited object.
 <dt> o 
    <a href="#SetCommandSet(CATStackableCommandSet*)"><b>SetCommandSet</b></a>(CATStackableCommandSet*)
<dd>  Sets the commands available during the edition.
 <dt> o 
    <a href="#SetElementProvider(CATBaseUnknown*,ElementProvider)"><b>SetElementProvider</b></a>(CATBaseUnknown*,ElementProvider)
<dd>  Sets the method to provide the object to edit.
 <dt> o 
    <a href="#SetPanel(CATDialog*)"><b>SetPanel</b></a>(CATDialog*)
<dd>  Sets the dialog object, if any, representing the command.
 <dt> o 
    <a href="#SetWorkbench(CATString&amp;)"><b>SetWorkbench</b></a>(CATString&amp;)
<dd>  Sets the workbench used during the edition.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEditAgent"></a><a name="CATEditAgent(CATString&amp;,CATClassId)"></a> <dt> o <b>CATEditAgent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEditAgent</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATClassId','CATClassId')</script> <td><tt>iType</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an edition agent.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The agent identifier. It is used to retrieve the undo/redo titles in 
   the command resource file.
 </dd>
    <dt><tt> iType</tt>
   <dd>   The type corresponds to an interface. 
   <br>It is given to be an argument of the <tt>ElementProvider</tt> method given 
   as argument of the </dd>
<a href="#" onClick="openLink('','SetElementProvider');return false">SetElementProvider</a> method. This <tt>ElementProvider</tt>    method can use or not this input parameter to check the object to edit.
</dl>
</dl>
</dl>
<a name="~CATEditAgent"></a><a name="~CATEditAgent()"></a> <dt> o <b>~CATEditAgent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATEditAgent</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="GetValue"></a><a name="GetValue()"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATPathElement','CATPathElement *')</script>  <b>GetValue</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the path of the edited object.
 <br><b>Role:</b>This method returns the value returned by the 
 <tt>ElementProvider</tt> method. Since this <tt>ElementProvider</tt> method is
 called just before the edition, the value is valid only after the edition. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The path of the edited object. 
 <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
 returned value.
</dl>
</dl>
<a name="SetCommandSet"></a><a name="SetCommandSet(CATStackableCommandSet*)"></a> <dt> o <b>SetCommandSet</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCommandSet</b>(<td><script type="text/javascript"> activateLink('CATStackableCommandSet','CATStackableCommandSet*')</script> <td><tt>iCommandSet</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the commands available during the edition.
 <br><b>Role</b>: This method enables you to specify the available
 commands for the activated workbench. 
 <br>If this method is never called, or if <tt>NULL</tt> is given as argument,
 an empty instance of the 
<a href="#" onClick="openLink('CATStackableCommandSet','');return false">CATStackableCommandSet</a> class will be used by the agent. A minimum set of commands will then be available, including the one
 to leave the workbench.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCommandSet</tt>
   <dd>   The command set.
   <br><b>Cyclic reference</b>: <tt>iCommandSet</tt> is kept and AddRef'ed.
   It is Released at the end of the agent before the agent destructor call.</dd>
</dl>
</dl>
</dl>
<a name="SetElementProvider"></a><a name="SetElementProvider(CATBaseUnknown*,ElementProvider)"></a> <dt> o <b>SetElementProvider</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetElementProvider</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ElementProvider','ElementProvider')</script> <td><tt>iMethod</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the method to provide the object to edit.
 <br><b>Role</b>: This method enables you to specify the name of a 
 <tt>ElementProvider</tt> method, and an instance of the class defining this method. 
 This <tt>ElementProvider</tt> method will be called just before
 the edition to provide to the agent the object to edit .
 <pre>
 _myAgent = new CATEditAgent("EditAgentId");
 _myAgent->SetElementProvider(this, 
              (CATEditAgent::ElementProvider) &MyStateCommand::<tt>ObjectProviderMethod</tt>);
 </pre>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>   The pointer to the class instance defining <tt>iMethod</tt>
 </dd>
    <dt><tt> iMethod</tt>
   <dd>   The method to execute before edition.</dd>
</dl>
</dl>
</dl>
<a name="SetPanel"></a><a name="SetPanel(CATDialog*)"></a> <dt> o <b>SetPanel</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPanel</b>(<td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iDialog</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the dialog object, if any, representing the command.
 <br><b>Role</b>: This dialog object will be desactivated during the edition
 (but it won't be hidden by the edition agent) and reactivated after the edition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDialog</tt>
   <dd>   The dialog object.</dd>
</dl>
</dl>
</dl>
<a name="SetWorkbench"></a><a name="SetWorkbench(CATString&amp;)"></a> <dt> o <b>SetWorkbench</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetWorkbench</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iWorkbench</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the workbench used during the edition.
 <br><b>Role</b>: This method sets the name of the workbench that must be activated
 to edit the object.
 For workshops with only one workbench or without workbench (like Sketcher), this method 
 is useless.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iWorkbench</tt>
   <dd>   The workbench name</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEditAgent.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
