<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DialogEngine Class CATDialogTransition</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../DialogEngine.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATDialogTransition','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDialogTransition','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATDialogTransition','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATDialogTransition','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DialogEngine Class CATDialogTransition</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATDialogTransition_25979','CATDialogTransition','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATDialogTransition</b>
</p>
<p>
<b><i> Class to create a command transition.</i></b><br>

 <b>Role</b>: A transition is one of the main elements of a state dialog 
 command which is a state machine that uses states to let the end user 
 input the requested parameters, and transitions between states to process 
 these input parameters and progress in the statechart.
 <br>Do not use the <tt>CATDialogTransition</tt> constructor to create a 
 transition but the <a href="#" onClick="openLink('CATStateCommand','Addtransition');return false">CATStateCommand.Addtransition</a> method. <br>A transition must have at least one source state, a target state which
 may be NULL, and may be associated with a condition and an action.
 <br>
 Transitions must be created in the 
<a href="#" onClick="openLink('CATStateCommand','BuildGraph');return false">CATStateCommand.BuildGraph</a> method. 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATDialogState','');return false">CATDialogState</a>, <a href="#" onClick="openLink('CATStateCondition','');return false">CATStateCondition</a>, <a href="#" onClick="openLink('CATDiaAction','');return false">CATDiaAction</a>
</dl>
</p>
<hr>
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddInitialState(CATDialogState*)"><b>AddInitialState</b></a>(CATDialogState*)
<dd>  Adds a source state to the transition.
 <dt> o 
    <a href="#GetAction()"><b>GetAction</b></a>()
<dd>  Returns the transition action.
 <dt> o 
    <a href="#GetCondition()"><b>GetCondition</b></a>()
<dd>  Returns the transition condition.
 <dt> o 
    <a href="#GetFinalState()"><b>GetFinalState</b></a>()
<dd>  Returns the target state.
 <dt> o 
    <a href="#GetInitialState(int)"><b>GetInitialState</b></a>(int)
<dd>  Returns a source state using the source state index.
 <dt> o 
    <a href="#GetInitialStateNumber()"><b>GetInitialStateNumber</b></a>()
<dd>  Returns the count of source states.
 <dt> o 
    <a href="#GetResourceID()"><b>GetResourceID</b></a>()
<dd>  Retrieves the resource identifier.
 <dt> o 
    <a href="#RemoveInitialState(CATDialogState*)"><b>RemoveInitialState</b></a>(CATDialogState*)
<dd>  Removes a source state from the transition.
 <dt> o 
    <a href="#SetAction(CATDiaAction*)"><b>SetAction</b></a>(CATDiaAction*)
<dd>  Sets the transition action.
 <dt> o 
    <a href="#SetCondition(CATStateCondition*)"><b>SetCondition</b></a>(CATStateCondition*)
<dd>  Sets the transition condition.
 <dt> o 
    <a href="#SetFinalState(CATDialogState*)"><b>SetFinalState</b></a>(CATDialogState*)
<dd>  Sets the target state.
 <dt> o 
    <a href="#SetResourceID(CATString&amp;)"><b>SetResourceID</b></a>(CATString&amp;)
<dd>  Sets the resource identifier.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddInitialState"></a><a name="AddInitialState(CATDialogState*)"></a> <dt> o <b>AddInitialState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddInitialState</b>(<td><script type="text/javascript"> activateLink('CATDialogState','CATDialogState*')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a source state to the transition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>   The state.
   <br><b>Cyclic reference</b>: A pointer to the state is kept, and 
   AddRef'ed. It is Released at the end of the command before the command
   destructor call or when the state is removed.</dd>
</dl>
</dl>
</dl>
<a name="GetAction"></a><a name="GetAction()"></a> <dt> o <b>GetAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDiaAction','CATDiaAction *')</script>  <b>GetAction</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the transition action.
 <br><b>Role</b>: This action is executed when a transition fires.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The action.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="GetCondition"></a><a name="GetCondition()"></a> <dt> o <b>GetCondition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATStateCondition','CATStateCondition *')</script>  <b>GetCondition</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the transition condition.
 <br><b>Role</b>: This condition must evaluate TRUE to make the transition
 fire. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The condition.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="GetFinalState"></a><a name="GetFinalState()"></a> <dt> o <b>GetFinalState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDialogState','CATDialogState *')</script>  <b>GetFinalState</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the target state.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The state.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the 
   returned value.
</dl>
</dl>
<a name="GetInitialState"></a><a name="GetInitialState(int)"></a> <dt> o <b>GetInitialState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATDialogState','CATDialogState *')</script>  <b>GetInitialState</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>=1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a source state using the source state index.
 <br><b>Role</b>: This method returns the <tt>iIndex</tt>th source state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index.
   <br><b>Legal values</b>: <tt>iIndex</tt> range starts with 1, which is 
   the default.
   Use </dd>
<a href="#" onClick="openLink('','GetInitialStateNumber');return false">GetInitialStateNumber</a> to get the source state count. 
  <dt> <b>Returns:</b> 
  <dd>    The state.
   <br><b>Lifecycle rules deviation</b>: This method doesn't AddRef the
    returned value.
</dl>
</dl>
</dl>
<a name="GetInitialStateNumber"></a><a name="GetInitialStateNumber()"></a> <dt> o <b>GetInitialStateNumber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetInitialStateNumber</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the count of source states.
 <br><b>Role</b>: The count of source states ranges from 1 to n.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The source state count.
</dl>
</dl>
<a name="GetResourceID"></a><a name="GetResourceID()"></a> <dt> o <b>GetResourceID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATString','CATString &')</script>  <b>GetResourceID</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the resource identifier.
 <br><b>Role</b>: This identifier is used to retrieve the Undo/Redo titles
 in the command message file.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The resource identifier.
</dl>
</dl>
<a name="RemoveInitialState"></a><a name="RemoveInitialState(CATDialogState*)"></a> <dt> o <b>RemoveInitialState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveInitialState</b>(<td><script type="text/javascript"> activateLink('CATDialogState','CATDialogState*')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes a source state from the transition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>   The state.</dd>
</dl>
</dl>
</dl>
<a name="SetAction"></a><a name="SetAction(CATDiaAction*)"></a> <dt> o <b>SetAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetAction</b>(<td><script type="text/javascript"> activateLink('CATDiaAction','CATDiaAction*')</script> <td><tt>iAction</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the transition action.
 <br><b>Role</b>: This action is executed when a transition fires.
 <br>Since a transition has only one action, successive calls to 
 <tt>SetAction</tt> for the same transition successively overwrite the 
 action.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAction</tt>
   <dd>   The action.
   <br><b>Cyclic reference</b>: A copy of <tt>iAction</tt> is kept and
   AddRef'ed. It is Released at the end of the command before the command 
   destructor call.
   <br><b>Legal values</b>: <tt>iAction</tt> may be set to NULL to cancel 
   an action inherited from the command base class.</dd>
</dl>
</dl>
</dl>
<a name="SetCondition"></a><a name="SetCondition(CATStateCondition*)"></a> <dt> o <b>SetCondition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCondition</b>(<td><script type="text/javascript"> activateLink('CATStateCondition','CATStateCondition*')</script> <td><tt>iCond</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the transition condition.
 <br><b>Role</b>: This condition must evaluate TRUE to make the transition
 fire. 
 <br>Since a transition has only one condition, successive calls to 
 <tt>SetCondition</tt> for the same transition successively overwrite the 
 condition.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCond</tt>
   <dd>   The condition.
   <br><b>Cyclic reference</b>: A copy of <tt>iCond</tt> is kept and 
   AddRef'ed. It is Released at the end of the command before the command 
   destructor call.
   <br><b>Legal values</b>: <tt>iCond</tt> may be set to NULL to cancel 
   a condition inherited from the command base class.</dd>
</dl>
</dl>
</dl>
<a name="SetFinalState"></a><a name="SetFinalState(CATDialogState*)"></a> <dt> o <b>SetFinalState</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFinalState</b>(<td><script type="text/javascript"> activateLink('CATDialogState','CATDialogState*')</script> <td><tt>iState</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the target state.
 <br><b>Role</b>: Since a transition has only one target state, successive
 calls to <tt>SetFinalState</tt> for the same transition successively 
 overwrite the target state.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>   the state.
   <br><b>Cyclic reference</b>: A copy of <tt>iState</tt> is kept and
   AddRef'ed. It is Released at the end of the command before the command
   destructor call or when the state is removed.
   <br><b>Legal values</b>: <tt>iState</tt> may be set to NULL to cancel 
   a state inherited from the command base class.</dd>
</dl>
</dl>
</dl>
<a name="SetResourceID"></a><a name="SetResourceID(CATString&amp;)"></a> <dt> o <b>SetResourceID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetResourceID</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the resource identifier.
 <br><b>Role</b>: This identifier is used to retrieve the Undo/Redo titles 
 in the command message file.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>   The resource identifier.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATDialogTransition.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDialogEngine</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
