<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATAnalysisBase Class CATAnalysisExplicitChild</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATAnalysisBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATAnalysisExplicitChild','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATAnalysisExplicitChild','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATAnalysisExplicitChild','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATAnalysisExplicitChild','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATAnalysisBase Class CATAnalysisExplicitChild</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATAnalysisExplicitChild_40065','CATAnalysisExplicitChild','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATAnalysisExplicitChild</b>
</p>
<p>
<b><i> Field model child.</i></b><br>

 This object is used to provide services common to all objects of the field model
 which can be children of entities or sets.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATAnalysisExplicitChild()"><b>CATAnalysisExplicitChild</b></a>()
<dd>  Default constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitChild(CATAnalysisExplicitData&amp;)"><b>CATAnalysisExplicitChild</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATAnalysisExplicitChild(CATAnalysisExplicitChild&amp;)"><b>CATAnalysisExplicitChild</b></a>(CATAnalysisExplicitChild&amp;)
<dd>  Copy constructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddParent(CATAnalysisExplicitParent&amp;)"><b>AddParent</b></a>(CATAnalysisExplicitParent&amp;)
<dd>  Adds one parent to the current field model object.
 <dt> o 
    <a href="#AddParents(CATAnalysisExplicitList&amp;)"><b>AddParents</b></a>(CATAnalysisExplicitList&amp;)
<dd>  Adds several parents to the current field model object.
 <dt> o 
    <a href="#Delete()"><b>Delete</b></a>()
<dd>  Deletes from the field model the object pointed to by the current object.
 <dt> o 
    <a href="#Delete(CATBoolean)"><b>Delete</b></a>(CATBoolean)
<dd>  Deletes from the field model the object pointed to by the current object.
 <dt> o 
    <a href="#GetExternalPointer(void*(&amp;))"><b>GetExternalPointer</b></a>(void*(&amp;))
<dd>  
 <dt> o 
    <a href="#GetExternalTag(CATINT32&amp;)"><b>GetExternalTag</b></a>(CATINT32&amp;)
<dd>  
 <dt> o 
    <a href="#GetParentList(CATAnalysisExplicitList&amp;)"><b>GetParentList</b></a>(CATAnalysisExplicitList&amp;)
<dd>  Obtains the list of parents of the field model object.
 <dt> o 
    <a href="#GetParents(int&amp;,CATSamExplicitPtr*&amp;,CATSamDataType)"><b>GetParents</b></a>(int&amp;,CATSamExplicitPtr*&amp;,CATSamDataType)
<dd>  Obtains the array of pointers to the parents.
 <dt> o 
    <a href="#GetPhysicalType(char*(&amp;))"><b>GetPhysicalType</b></a>(char*(&amp;))
<dd>  Retrieves the physical type.
 <dt> o 
    <a href="#GetPhysicalType(CATUnicodeString&amp;)"><b>GetPhysicalType</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the physical type.
 <dt> o 
    <a href="#GetPhysicalType(CATSamPhysicalType&amp;)"><b>GetPhysicalType</b></a>(CATSamPhysicalType&amp;)
<dd>  Retrieves the physical type.
 <dt> o 
    <a href="#GetPointer(CATSamExplicitPtr&amp;)"><b>GetPointer</b></a>(CATSamExplicitPtr&amp;)
<dd>  Obtains a pointer to the field model object the current object points to.
 <dt> o 
    <a href="#GetSequentialNumber(int&amp;)"><b>GetSequentialNumber</b></a>(int&amp;)
<dd>  Retrieves a sequential number.
 <dt> o 
    <a href="#GetSolverName(char*(&amp;))"><b>GetSolverName</b></a>(char*(&amp;))
<dd>  Retrieves the solver name.
 <dt> o 
    <a href="#GetStatus(int&amp;)"><b>GetStatus</b></a>(int&amp;)
<dd>  Retrieves the status.
 <dt> o 
    <a href="#GetTag(int&amp;)"><b>GetTag</b></a>(int&amp;)
<dd>  Retrieves the tag.
 <dt> o 
    <a href="#LinkWithPointer(CATSamExplicitPtr&amp;,CATAnalysisExplicitModel*)"><b>LinkWithPointer</b></a>(CATSamExplicitPtr&amp;,CATAnalysisExplicitModel*)
<dd>  Links the current object with a field model object based on its pointer.
 <dt> o 
    <a href="#LinkWithTag(int,CATAnalysisExplicitModel*)"><b>LinkWithTag</b></a>(int,CATAnalysisExplicitModel*)
<dd>  Links the current object with a field model object based on its tag (ie unique identifier).
 <dt> o 
    <a href="#RemoveParent(CATAnalysisExplicitParent&amp;)"><b>RemoveParent</b></a>(CATAnalysisExplicitParent&amp;)
<dd>  Removes one parent from the current field model object.
 <dt> o 
    <a href="#RemoveParents(CATAnalysisExplicitList&amp;)"><b>RemoveParents</b></a>(CATAnalysisExplicitList&amp;)
<dd>  Removes several parents from the current field model object.
 <dt> o 
    <a href="#SetExternalPointer(void*)"><b>SetExternalPointer</b></a>(void*)
<dd>  
 <dt> o 
    <a href="#SetExternalTag(CATINT32)"><b>SetExternalTag</b></a>(CATINT32)
<dd>  
 <dt> o 
    <a href="#SetPhysicalType(CATSamPhysicalType)"><b>SetPhysicalType</b></a>(CATSamPhysicalType)
<dd>  Assigns a new physical type.
 <dt> o 
    <a href="#SetSequentialNumber(int)"><b>SetSequentialNumber</b></a>(int)
<dd>  Assigns a sequential number.
 <dt> o 
    <a href="#SetSolverName(char*)"><b>SetSolverName</b></a>(char*)
<dd>  Assigns a solver name.
 <dt> o 
    <a href="#UnDelete()"><b>UnDelete</b></a>()
<dd>  Delete from the field model the object pointed to by the current object.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitData&amp;)"><b>operator =</b></a>(CATAnalysisExplicitData&amp;)
<dd>  Assignment operator.
 <dt> o 
    <a href="#operator =(CATAnalysisExplicitChild&amp;)"><b>operator =</b></a>(CATAnalysisExplicitChild&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATAnalysisExplicitChild"></a><a name="CATAnalysisExplicitChild()"></a> <dt> o <b>CATAnalysisExplicitChild</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitChild</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Default constructor.
</dl>
<a name="CATAnalysisExplicitChild"></a><a name="CATAnalysisExplicitChild(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>CATAnalysisExplicitChild</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitChild</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitData','');return false">CATAnalysisExplicitData</a>
</dl>
</dl>
<a name="CATAnalysisExplicitChild"></a><a name="CATAnalysisExplicitChild(CATAnalysisExplicitChild&amp;)"></a> <dt> o <b>CATAnalysisExplicitChild</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATAnalysisExplicitChild</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitChild','CATAnalysisExplicitChild&amp;')</script> <td><tt>iChild</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
 <h2>Methods</h2> <br>
<a name="AddParent"></a><a name="AddParent(CATAnalysisExplicitParent&amp;)"></a> <dt> o <b>AddParent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddParent</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iParent</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Adds one parent to the current field model object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent to be added.
 <b>Note : </b>The parent of a set can not be an entity.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitParent','');return false">CATAnalysisExplicitParent</a>
</dl>
</dl>
<a name="AddParents"></a><a name="AddParents(CATAnalysisExplicitList&amp;)"></a> <dt> o <b>AddParents</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddParents</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitList','CATAnalysisExplicitList&amp;')</script> <td><tt>iParents</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Adds several parents to the current field model object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParents</tt>
   <dd>   The list of parents to be added.
 <b>Note : </b>The parents of a set can not be entities.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitList','');return false">CATAnalysisExplicitList</a>
</dl>
</dl>
<a name="Delete"></a><a name="Delete()"></a> <dt> o <b>Delete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Delete</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Deletes from the field model the object pointed to by the current object.
</dl>
<a name="Delete"></a><a name="Delete(CATBoolean)"></a> <dt> o <b>Delete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Delete</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>really</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Deletes from the field model the object pointed to by the current object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> really</tt>
   <dd>   if Really = TRUE, the child is really destroyed.</dd>
</dl>
</dl>
</dl>
<a name="GetExternalPointer"></a><a name="GetExternalPointer(void*(&amp;))"></a> <dt> o <b>GetExternalPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternalPointer</b>(<td><script type="text/javascript"> activateLink('void*(&)','void*(&amp;)')</script> <td><tt>oExternalPointer</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Retrieves the external pointer (ie the pointer to an object which does not belong to the field model).<br>
 <b>Note that an object has either an external pointer or an external tag but not both.</b>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oExternalPointer</tt>
   <dd>   The pointer.</dd>
</dl>
</dl>
</dl>
<a name="GetExternalTag"></a><a name="GetExternalTag(CATINT32&amp;)"></a> <dt> o <b>GetExternalTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExternalTag</b>(<td><script type="text/javascript"> activateLink('CATINT32','CATINT32&amp;')</script> <td><tt>oExternalTag</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Retrieves the external tag (ie the tag of an object which does not belong to the field model).<br>
 <b>Note that an object has either an external pointer or an external tag but not both.</b>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oExternalTag</tt>
   <dd>   The tag.</dd>
</dl>
</dl>
</dl>
<a name="GetParentList"></a><a name="GetParentList(CATAnalysisExplicitList&amp;)"></a> <dt> o <b>GetParentList</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParentList</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitList','CATAnalysisExplicitList&amp;')</script> <td><tt>oParentList</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the list of parents of the field model object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oParentList</tt>
   <dd>   The parent list.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitList','');return false">CATAnalysisExplicitList</a>
</dl>
</dl>
<a name="GetParents"></a><a name="GetParents(int&amp;,CATSamExplicitPtr*&amp;,CATSamDataType)"></a> <dt> o <b>GetParents</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetParents</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNumber</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr*&amp;')</script> <td><tt>oParents</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSamDataType','CATSamDataType')</script> <td><tt>iFilter</tt><td><tt>= CATSamDataTypeLast</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains the array of pointers to the parents.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNumber</tt>
   <dd>   The number of parents.
 </dd>
    <dt><tt> oParents[oNumber]</tt>
   <dd>   The array of pointers to the parents.<br>
   This parameter must be equal to NULL when this method is called.<br>
   The memory for the array is allocated by this method but must be de-allocated by the caller.
 </dd>
    <dt><tt> iFilter</tt>
   <dd>   Indicates which type of parent should be obtained.<br>
   If <b>CATSamDataTypeLast</b> is provided, then all parents are obtained.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSamDataType','');return false">CATSamDataType</a>
</dl>
</dl>
<a name="GetPhysicalType"></a><a name="GetPhysicalType(char*(&amp;))"></a> <dt> o <b>GetPhysicalType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPhysicalType</b>(<td> const <script type="text/javascript"> activateLink('char*(&)','char*(&amp;)')</script> <td><tt>oIdentity</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the physical type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIdentity</tt>
   <dd>   The physical type identity.</dd>
</dl>
</dl>
</dl>
<a name="GetPhysicalType"></a><a name="GetPhysicalType(CATUnicodeString&amp;)"></a> <dt> o <b>GetPhysicalType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPhysicalType</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oString</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the physical type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oString</tt>
   <dd>   The physical type NLS string.</dd>
</dl>
</dl>
</dl>
<a name="GetPhysicalType"></a><a name="GetPhysicalType(CATSamPhysicalType&amp;)"></a> <dt> o <b>GetPhysicalType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPhysicalType</b>(<td><script type="text/javascript"> activateLink('CATSamPhysicalType','CATSamPhysicalType&amp;')</script> <td><tt>oPhysicalType</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the physical type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPhysicalType</tt>
   <dd>   The physical type number in database of rules.</dd>
</dl>
</dl>
</dl>
<a name="GetPointer"></a><a name="GetPointer(CATSamExplicitPtr&amp;)"></a> <dt> o <b>GetPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPointer</b>(<td><script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr&amp;')</script> <td><tt>oNewExplicitPtr</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Obtains a pointer to the field model object the current object points to.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oExplicitPtr</tt>
   <dd>   The field model object pointer.</dd>
</dl>
</dl>
</dl>
<a name="GetSequentialNumber"></a><a name="GetSequentialNumber(int&amp;)"></a> <dt> o <b>GetSequentialNumber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSequentialNumber</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oSequentialNumber</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a sequential number.<br>
 A sequential number is a number indicating the position of a data in a list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSequentialNumber</tt>
   <dd>   The sequential number.</dd>
</dl>
</dl>
</dl>
<a name="GetSolverName"></a><a name="GetSolverName(char*(&amp;))"></a> <dt> o <b>GetSolverName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetSolverName</b>(<td> const <script type="text/javascript"> activateLink('char*(&)','char*(&amp;)')</script> <td><tt>oSolverName</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the solver name.<br>
 A solver name is a string used by a particular solver to identify data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSolverName</tt>
   <dd>   The string representing the solver name.</dd>
</dl>
</dl>
</dl>
<a name="GetStatus"></a><a name="GetStatus(int&amp;)"></a> <dt> o <b>GetStatus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStatus</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oStatus</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the status.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStatus</tt>
   <dd>   The status of the field model object.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATSamStatus','');return false">CATSamStatus</a>
</dl>
</dl>
<a name="GetTag"></a><a name="GetTag(int&amp;)"></a> <dt> o <b>GetTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTag</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oTag</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the tag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTag</tt>
   <dd>   The tag.</dd>
</dl>
</dl>
</dl>
<a name="LinkWithPointer"></a><a name="LinkWithPointer(CATSamExplicitPtr&amp;,CATAnalysisExplicitModel*)"></a> <dt> o <b>LinkWithPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWithPointer</b>(<td> const <script type="text/javascript"> activateLink('CATSamExplicitPtr','CATSamExplicitPtr&amp;')</script> <td><tt>iExplicitPtr</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Links the current object with a field model object based on its pointer.
 <ul>
 <li> iModel can be set to NULL or to the model used for the object creation. Use GetModel to retreive it.</li>
 <li> iModel can be set to another model that reference the model used for object creation. Use GetContextModel to retreive this new explicit model or
       GetModel to retreive the model used for the object creation. </li></ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExplicitPtr</tt>
   <dd>  The pointer to the field model object. </dd>
    <dt><tt> iModel</tt>
   <dd>   A pointer to the field model. </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitModel','');return false">CATAnalysisExplicitModel</a>
</dl>
</dl>
<a name="LinkWithTag"></a><a name="LinkWithTag(int,CATAnalysisExplicitModel*)"></a> <dt> o <b>LinkWithTag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>LinkWithTag</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iTag</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitModel','CATAnalysisExplicitModel*')</script> <td><tt>iModel</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Links the current object with a field model object based on its tag (ie unique identifier).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTag</tt>
   <dd>   The tag of the field model object.
 </dd>
    <dt><tt> iModel</tt>
   <dd>   A pointer to the field model.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitModel','');return false">CATAnalysisExplicitModel</a>
</dl>
</dl>
<a name="RemoveParent"></a><a name="RemoveParent(CATAnalysisExplicitParent&amp;)"></a> <dt> o <b>RemoveParent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveParent</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitParent','CATAnalysisExplicitParent&amp;')</script> <td><tt>iParent</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Removes one parent from the current field model object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParent</tt>
   <dd>   The parent to be removed.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitParent','');return false">CATAnalysisExplicitParent</a>
</dl>
</dl>
<a name="RemoveParents"></a><a name="RemoveParents(CATAnalysisExplicitList&amp;)"></a> <dt> o <b>RemoveParents</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveParents</b>(<td><script type="text/javascript"> activateLink('CATAnalysisExplicitList','CATAnalysisExplicitList&amp;')</script> <td><tt>iParents</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Removes several parents from the current field model object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParents</tt>
   <dd>   The list of parents to be removed.
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitList','');return false">CATAnalysisExplicitList</a>
</dl>
</dl>
<a name="SetExternalPointer"></a><a name="SetExternalPointer(void*)"></a> <dt> o <b>SetExternalPointer</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExternalPointer</b>(<td> const <script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iExternalPointer</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Stores an external pointer (ie the pointer to an object which does not belong to the field model).<br>
 <b>Note that an object has either an external pointer or an external tag but not both.</b>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExternalPointer</tt>
   <dd>   The pointer to store.</dd>
</dl>
</dl>
</dl>
<a name="SetExternalTag"></a><a name="SetExternalTag(CATINT32)"></a> <dt> o <b>SetExternalTag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetExternalTag</b>(<td><script type="text/javascript"> activateLink('CATINT32','CATINT32')</script> <td><tt>iExternalTag</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17
 Stores an external tag (ie the tag of an object which does not belong to the field model).<br>
 <b>Note that an object has either an external pointer or an external tag but not both.</b>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iExternalTag</tt>
   <dd>   The tag to store.</dd>
</dl>
</dl>
</dl>
<a name="SetPhysicalType"></a><a name="SetPhysicalType(CATSamPhysicalType)"></a> <dt> o <b>SetPhysicalType</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPhysicalType</b>(<td><script type="text/javascript"> activateLink('CATSamPhysicalType','CATSamPhysicalType')</script> <td><tt>iPhysicalType</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Assigns a new physical type.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPhysicalType</tt>
   <dd>   The new physical type.<br>
   This new physical type must not change the field model object type
   (ie set, entity or characteristic).</dd>
</dl>
</dl>
</dl>
<a name="SetSequentialNumber"></a><a name="SetSequentialNumber(int)"></a> <dt> o <b>SetSequentialNumber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSequentialNumber</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSequentialNumber</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Assigns a sequential number.<br>
 A sequential number is a number indicating the position of a data in a list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSequentialNumber</tt>
   <dd>   The sequential number.</dd>
</dl>
</dl>
</dl>
<a name="SetSolverName"></a><a name="SetSolverName(char*)"></a> <dt> o <b>SetSolverName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetSolverName</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iSolverName</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Assigns a solver name.<br>
 A solver name is a string used by a particular solver to identify data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSolverName</tt>
   <dd>   The string representing the solver name.</dd>
</dl>
</dl>
</dl>
<a name="UnDelete"></a><a name="UnDelete()"></a> <dt> o <b>UnDelete</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>UnDelete</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Delete from the field model the object pointed to by the current object.
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitData&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitChild','CATAnalysisExplicitChild')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitData','CATAnalysisExplicitData&amp;')</script> <td><tt>iData</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATAnalysisExplicitData','');return false">CATAnalysisExplicitData</a>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATAnalysisExplicitChild&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATAnalysisExplicitChild','CATAnalysisExplicitChild')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATAnalysisExplicitChild','CATAnalysisExplicitChild&amp;')</script> <td><tt>iChild</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
<hr>
 This object is included in the file: <b>CATAnalysisExplicitChild.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATSAM0Explicit</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
