<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATListValCATUnicodeString</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATListValCATUnicodeString','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATListValCATUnicodeString','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATListValCATUnicodeString','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATListValCATUnicodeString','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATListValCATUnicodeString</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATListValCATUnicodeString_35294','CATListValCATUnicodeString','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATListValCATUnicodeString</b>
</p>
<p>
<b><i> This class implements a mutable list of <tt>CATUnicodeStrings</tt>.</i></b><br>

 <b>Role</b>: The purpose of this class is to let C++ classes easily pass and
 receive lists of <tt>CATUnicodeString</tt>. The class handles all the low-level
 memory allocation tasks such as reallocating the list once it capacity has
 been exceeded. It also provides high level operations such as sorting,
 comparison, etc... The first element has index 1.
 <br>Use the type <a href="#" onClick="openLink('CATListOfCATUnicodeString','');return false">CATListOfCATUnicodeString</a>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATListValCATUnicodeString()"><b>CATListValCATUnicodeString</b></a>()
<dd>  Constructs an empty list of <tt>CATUnicodeStrings</tt>.
 <dt> o 
    <a href="#CATListValCATUnicodeString(int)"><b>CATListValCATUnicodeString</b></a>(int)
<dd>  Constructs an empty list of <tt>CATUnicodeStrings</tt> with a specified initial capacity.
 <dt> o 
    <a href="#CATListValCATUnicodeString(CATUnicodeString*,int)"><b>CATListValCATUnicodeString</b></a>(CATUnicodeString*,int)
<dd>  Constructs a list and initializes it with a C++ <tt>CATUnicodeString</tt> array.
 <dt> o 
    <a href="#CATListValCATUnicodeString(CATUnicodeString**,int)"><b>CATListValCATUnicodeString</b></a>(CATUnicodeString**,int)
<dd>  Constructs a list and initializes it with a C++ pointer to <tt>CATUnicodeString</tt> array.
 <dt> o 
    <a href="#CATListValCATUnicodeString(CATListValCATUnicodeString&amp;)"><b>CATListValCATUnicodeString</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATListValCATUnicodeString()"><b>~CATListValCATUnicodeString</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Append(CATUnicodeString&amp;)"><b>Append</b></a>(CATUnicodeString&amp;)
<dd>  Appends a <tt>CATUnicodeString</tt> to the list.
 <dt> o 
    <a href="#Append(CATListValCATUnicodeString&amp;)"><b>Append</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Appends the content of a <tt>CATUnicodeString</tt> list.
 <dt> o 
    <a href="#Array(CATUnicodeString*)"><b>Array</b></a>(CATUnicodeString*)
<dd>  Fills a C++ array of <tt>CATUnicodeStrings</tt> with elements from the list.
 <dt> o 
    <a href="#Array(CATUnicodeString**)"><b>Array</b></a>(CATUnicodeString**)
<dd>  Fills a C++ array of pointers to <tt>CATUnicodeStrings</tt> with elements from the list.
 <dt> o 
    <a href="#Compare(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,int(*iPFCompare)(CATUnicodeString*,*))"><b>Compare</b></a>(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,int(*iPFCompare)(CATUnicodeString*,*))
<dd>  Compares two lists of <tt>CATUnicodeStrings</tt>.
 <dt> o 
    <a href="#InsertAfter(int,CATUnicodeString&amp;)"><b>InsertAfter</b></a>(int,CATUnicodeString&amp;)
<dd>  Inserts a <tt>CATUnicodeString</tt> after the specified index.
 <dt> o 
    <a href="#InsertBefore(int,CATUnicodeString&amp;)"><b>InsertBefore</b></a>(int,CATUnicodeString&amp;)
<dd>  Inserts a <tt>CATUnicodeString</tt> before the specified index.
 <dt> o 
    <a href="#Intersection(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"><b>Intersection</b></a>(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)
<dd>  Computes the intersection of two lists.
 <dt> o 
    <a href="#Locate(CATUnicodeString&amp;,int)"><b>Locate</b></a>(CATUnicodeString&amp;,int)
<dd>  Finds the first occurrence of a <tt>CATUnicodeString</tt> from a given index.
 <dt> o 
    <a href="#NbOccur(CATUnicodeString&amp;)"><b>NbOccur</b></a>(CATUnicodeString&amp;)
<dd>  Counts the occurrences of a <tt>CATUnicodeString</tt> in the list.
 <dt> o 
    <a href="#QuickSort(int(*iPFCompare)(CATUnicodeString*,*))"><b>QuickSort</b></a>(int(*iPFCompare)(CATUnicodeString*,*))
<dd>  Sorts the list using the quicksort algorithm.
 <dt> o 
    <a href="#Remove(CATListValCATUnicodeString&amp;)"><b>Remove</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Removes all the values specifed in <tt>iSubstract</tt> from the list.
 <dt> o 
    <a href="#RemoveAll(CATCollec::MemoryHandling)"><b>RemoveAll</b></a>(CATCollec::MemoryHandling)
<dd>  Removes all the elements from the list.
 <dt> o 
    <a href="#RemoveDuplicates()"><b>RemoveDuplicates</b></a>()
<dd>  Removes all the duplicate occurrences of a <tt>CATUnicodeString</tt> from the list.
 <dt> o 
    <a href="#RemoveDuplicates(CATListValCATUnicodeString&amp;)"><b>RemoveDuplicates</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Removes all the duplicate occurrences of a <tt>CATUnicodeString</tt> from the list and
 appends them to another list.
 <dt> o 
    <a href="#RemovePosition(int)"><b>RemovePosition</b></a>(int)
<dd>  Removes the <tt>CATUnicodeString</tt> located at a given index.
 <dt> o 
    <a href="#RemoveValue(CATUnicodeString&amp;)"><b>RemoveValue</b></a>(CATUnicodeString&amp;)
<dd>  Removes the first occurrence of a <tt>CATUnicodeString</tt> from the list.
 <dt> o 
    <a href="#Replace(int,CATUnicodeString&amp;)"><b>Replace</b></a>(int,CATUnicodeString&amp;)
<dd>  Replaces an element at a specified index with another <tt>CATUnicodeString</tt> value.
 <dt> o 
    <a href="#Size()"><b>Size</b></a>()
<dd>  Returns the size of the list.
 <dt> o 
    <a href="#Size(int,CATUnicodeString*)"><b>Size</b></a>(int,CATUnicodeString*)
<dd>  Forces the size of the list to an arbitrary size.
 <dt> o 
    <a href="#Swap(int,int)"><b>Swap</b></a>(int,int)
<dd>  Swaps two list elements.
 <dt> o 
    <a href="#operator !=(CATListValCATUnicodeString&amp;)"><b>operator !=</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Inequality operator.
 <dt> o 
    <a href="#operator &gt;(CATListValCATUnicodeString&amp;)"><b>operator &gt;</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Greater than operator.
 <dt> o 
    <a href="#operator &gt;=(CATListValCATUnicodeString&amp;)"><b>operator &gt;=</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Greater than or equal to operator.
 <dt> o 
    <a href="#operator &lt;(CATListValCATUnicodeString&amp;)"><b>operator &lt;</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Less than operator.
 <dt> o 
    <a href="#operator &lt;=(CATListValCATUnicodeString&amp;)"><b>operator &lt;=</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Less than or equal to operator.
 <dt> o 
    <a href="#operator ==(CATListValCATUnicodeString&amp;)"><b>operator ==</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Equality operator.
 <dt> o 
    <a href="#operator=(CATListValCATUnicodeString&amp;)"><b>operator=</b></a>(CATListValCATUnicodeString&amp;)
<dd>  Assignment operator.
 <dt> o 
    <a href="#operator[](int)"><b>operator[]</b></a>(int)
<dd>  Subscripting operator.
 <dt> o 
    <a href="#operator[](int)"><b>operator[]</b></a>(int)
<dd>  Subscripting operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATListValCATUnicodeString"></a><a name="CATListValCATUnicodeString()"></a> <dt> o <b>CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATListValCATUnicodeString</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty list of <tt>CATUnicodeStrings</tt>.
</dl>
<a name="CATListValCATUnicodeString"></a><a name="CATListValCATUnicodeString(int)"></a> <dt> o <b>CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATListValCATUnicodeString</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iInitAlloc</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty list of <tt>CATUnicodeStrings</tt> with a specified initial capacity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iInitAlloc</tt>
   <dd> The default capacity of the list.</dd>
</dl>
</dl>
</dl>
<a name="CATListValCATUnicodeString"></a><a name="CATListValCATUnicodeString(CATUnicodeString*,int)"></a> <dt> o <b>CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATListValCATUnicodeString</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iArray</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a list and initializes it with a C++ <tt>CATUnicodeString</tt> array.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArray</tt>
   <dd> A C++ array <tt>CATUnicodeStrings</tt> used to initialize the list.
 </dd>
    <dt><tt> iSize</tt>
   <dd> The size of the C++ array of <tt>CATUnicodeStrings</tt> used to initialize the list.</dd>
</dl>
</dl>
</dl>
<a name="CATListValCATUnicodeString"></a><a name="CATListValCATUnicodeString(CATUnicodeString**,int)"></a> <dt> o <b>CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATListValCATUnicodeString</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString**')</script> <td><tt>iArray</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a list and initializes it with a C++ pointer to <tt>CATUnicodeString</tt> array.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArray</tt>
   <dd> A C++ array of pointers to <tt>CATUnicodeStrings</tt> used to initialize the list.
 </dd>
    <dt><tt> iSize</tt>
   <dd> The size of the C++ array of <tt>CATUnicodeStrings</tt> used to initialize the list.</dd>
</dl>
</dl>
</dl>
<a name="CATListValCATUnicodeString"></a><a name="CATListValCATUnicodeString(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATListValCATUnicodeString</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCopy</tt>
   <dd> The list to copy.</dd>
</dl>
</dl>
</dl>
<a name="~CATListValCATUnicodeString"></a><a name="~CATListValCATUnicodeString()"></a> <dt> o <b>~CATListValCATUnicodeString</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATListValCATUnicodeString</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Append"></a><a name="Append(CATUnicodeString&amp;)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAdd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Appends a <tt>CATUnicodeString</tt> to the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAdd</tt>
   <dd> The <tt>CATUnicodeString</tt> to append.</dd>
</dl>
</dl>
</dl>
<a name="Append"></a><a name="Append(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>Append</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Append</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iConcat</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Appends the content of a <tt>CATUnicodeString</tt> list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConcat</tt>
   <dd> The <tt>CATUnicodeString</tt> list to append.</dd>
</dl>
</dl>
</dl>
<a name="Array"></a><a name="Array(CATUnicodeString*)"></a> <dt> o <b>Array</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Array</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>ioArray</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Fills a C++ array of <tt>CATUnicodeStrings</tt> with elements from the list.
 <br><b>Role</b>: The array has to have the same size as the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioArray</tt>
   <dd> The C++ array to fill.</dd>
</dl>
</dl>
</dl>
<a name="Array"></a><a name="Array(CATUnicodeString**)"></a> <dt> o <b>Array</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Array</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString**')</script> <td><tt>ioArray</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Fills a C++ array of pointers to <tt>CATUnicodeStrings</tt> with elements from the list.
 <br><b>Role</b>: The array has to have the same size as the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioArray</tt>
   <dd> The C++ array to fill.</dd>
</dl>
</dl>
</dl>
<a name="Compare"></a><a name="Compare(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,int(*iPFCompare)(CATUnicodeString*,*))"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int(*iPFCompare)(CATUnicodeString*,*)','int(*iPFCompare)(CATUnicodeString*,*)')</script> <td><tt>CATUnicodeString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Compares two lists of <tt>CATUnicodeStrings</tt>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV1</tt>
   <dd> the first list of <tt>CATUnicodeStrings</tt>.
 </dd>
    <dt><tt> iLV2</tt>
   <dd> the second list of <tt>CATUnicodeStrings</tt>.
 </dd>
    <dt><tt> iPFCompare</tt>
   <dd> <br><b>Legal values</b>: A pointer to a function which compares 
 two <tt>CATUnicodeStrings</tt> and returns -1, 0 or 1 depending on 
 the order of the strings.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>: <tt>0</tt> if the lists are equal,
 <tt>-1</tt> if the first list is smaller than the second list
 (smaller means that the first list contains less elements than the second
 list or that <tt>iRC1[i] &lt; iRC2[i]</tt> for the first i where
 <tt>iRC1[i] != iRC2[i]</tt> and < is a lexicographic comparison
 of two strings), or <tt>1</tt> otherwise.
</dl>
</dl>
<a name="InsertAfter"></a><a name="InsertAfter(int,CATUnicodeString&amp;)"></a> <dt> o <b>InsertAfter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>InsertAfter</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAdd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Inserts a <tt>CATUnicodeString</tt> after the specified index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index of the element.
 </dd>
    <dt><tt> iAdd</tt>
   <dd> The element to insert.</dd>
</dl>
</dl>
</dl>
<a name="InsertBefore"></a><a name="InsertBefore(int,CATUnicodeString&amp;)"></a> <dt> o <b>InsertBefore</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>InsertBefore</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iAdd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Inserts a <tt>CATUnicodeString</tt> before the specified index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index of the element.
 </dd>
    <dt><tt> iAdd</tt>
   <dd> The element to insert.</dd>
</dl>
</dl>
</dl>
<a name="Intersection"></a><a name="Intersection(CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;,CATListValCATUnicodeString&amp;)"></a> <dt> o <b>Intersection</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('void','void')</script>  <b>Intersection</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iL1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iL2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>ioResult</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the intersection of two lists.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iL1</tt>
   <dd> The first list.
 </dd>
    <dt><tt> iL2</tt>
   <dd> The second list.
 </dd>
    <dt><tt> ioResult</tt>
   <dd> A list to which elements in the intersection are appended.</dd>
</dl>
</dl>
</dl>
<a name="Locate"></a><a name="Locate(CATUnicodeString&amp;,int)"></a> <dt> o <b>Locate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>Locate</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLocate</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Finds the first occurrence of a <tt>CATUnicodeString</tt> from a given index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocate</tt>
   <dd> The <tt>CATUnicodeString</tt> to locate.
 </dd>
    <dt><tt> iIndex</tt>
   <dd> The index at which the search is to begin.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>: The index of the located <tt>CATUnicodeString</tt>, 
 or <tt>0</tt> if the list does not contain
 the specified <tt>CATUnicodeString</tt>.
</dl>
</dl>
<a name="NbOccur"></a><a name="NbOccur(CATUnicodeString&amp;)"></a> <dt> o <b>NbOccur</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>NbOccur</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iTest</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Counts the occurrences of a <tt>CATUnicodeString</tt> in the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTest</tt>
   <dd> The <tt>CATUnicodeString</tt> for which the occurrences are to be counted.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The count of occurrences of the <tt>CATUnicodeString</tt> in the list.
</dl>
</dl>
<a name="QuickSort"></a><a name="QuickSort(int(*iPFCompare)(CATUnicodeString*,*))"></a> <dt> o <b>QuickSort</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>QuickSort</b>(<td><script type="text/javascript"> activateLink('int(*iPFCompare)(CATUnicodeString*,*)','int(*iPFCompare)(CATUnicodeString*,*)')</script> <td><tt>CATUnicodeString</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sorts the list using the quicksort algorithm.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPFCompare</tt>
   <dd> A pointer to a function which compares two <tt>CATUnicodeStrings</tt> and
 returns -1, 0 or 1 depending on the order of the strings.</dd>
</dl>
</dl>
</dl>
<a name="Remove"></a><a name="Remove(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>Remove</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>Remove</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iSubstract</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the values specifed in <tt>iSubstract</tt> from the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSubstract</tt>
   <dd> A list of <tt>CATUnicodeStrings</tt> to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The count of <tt>CATUnicodeStrings</tt> removed from the list.
</dl>
</dl>
<a name="RemoveAll"></a><a name="RemoveAll(CATCollec::MemoryHandling)"></a> <dt> o <b>RemoveAll</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveAll</b>(<td><script type="text/javascript"> activateLink('CATCollec::MemoryHandling','CATCollec::MemoryHandling')</script> <td><tt>iMH</tt><td><tt>= CATCollec::ReleaseAllocation </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the elements from the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMH</tt>
   <dd> <br><b>Legal values</b>: Specifies whether the list capacity should be 
 shrunk to 0 (<tt>CATCollec::ReleaseAllocation</tt>) or not
 (<tt>CATCollec::KeepAllocation</tt>).</dd>
</dl>
</dl>
</dl>
<a name="RemoveDuplicates"></a><a name="RemoveDuplicates()"></a> <dt> o <b>RemoveDuplicates</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>RemoveDuplicates</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the duplicate occurrences of a <tt>CATUnicodeString</tt> from the list.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The count of duplicate <tt>CATUnicodeStrings</tt> removed from the list.
</dl>
</dl>
<a name="RemoveDuplicates"></a><a name="RemoveDuplicates(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>RemoveDuplicates</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveDuplicates</b>(<td><script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>ioExtract</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the duplicate occurrences of a <tt>CATUnicodeString</tt> from the list and
 appends them to another list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioExtract</tt>
   <dd> A list to which duplicate <tt>CATUnicodeStrings</tt> are appended.</dd>
</dl>
</dl>
</dl>
<a name="RemovePosition"></a><a name="RemovePosition(int)"></a> <dt> o <b>RemovePosition</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemovePosition</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes the <tt>CATUnicodeString</tt> located at a given index.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The list index of the <tt>CATUnicodeString</tt> to remove.</dd>
</dl>
</dl>
</dl>
<a name="RemoveValue"></a><a name="RemoveValue(CATUnicodeString&amp;)"></a> <dt> o <b>RemoveValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>RemoveValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iRemove</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes the first occurrence of a <tt>CATUnicodeString</tt> from the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRemove</tt>
   <dd> The <tt>CATUnicodeString</tt> to remove.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>: The index of the removed <tt>CATUnicodeString</tt>, 
 or <tt>0</tt> if the list does not contain the specified <tt>CATUnicodeString</tt>.
</dl>
</dl>
<a name="Replace"></a><a name="Replace(int,CATUnicodeString&amp;)"></a> <dt> o <b>Replace</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Replace</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iReplace</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces an element at a specified index with another <tt>CATUnicodeString</tt> value. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> index of the element to replace.
 </dd>
    <dt><tt> iReplace</tt>
   <dd> The new <tt>CATUnicodeString</tt> value.</dd>
</dl>
</dl>
</dl>
<a name="Size"></a><a name="Size()"></a> <dt> o <b>Size</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>Size</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the size of the list. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the size of the list.
</dl>
</dl>
<a name="Size"></a><a name="Size(int,CATUnicodeString*)"></a> <dt> o <b>Size</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Size</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSize</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString*')</script> <td><tt>iFiller</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Forces the size of the list to an arbitrary size. 
 <br><b>Role</b>: If <tt>iSize</tt> is
 larger than the current size, the newly allocated slots contain
 <tt>iFiller</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSize</tt>
   <dd> The desired size.
 </dd>
    <dt><tt> iFiller</tt>
   <dd> A <tt>CATUnicodeString</tt> used to fill newly allocated slots.</dd>
</dl>
</dl>
</dl>
<a name="Swap"></a><a name="Swap(int,int)"></a> <dt> o <b>Swap</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Swap</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Swaps two list elements. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex1</tt>
   <dd> index of the first element to swap.
 </dd>
    <dt><tt> iIndex2</tt>
   <dd> index of the second element to swap.</dd>
</dl>
</dl>
</dl>
<a name="operator !="></a><a name="operator !=(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator !=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator !=</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Inequality operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to test for inequality
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> if the two lists are not equal, 
 <tt>0</tt> otherwise.
</dl>
</dl>
<a name="operator &gt;"></a><a name="operator &gt;(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator &gt;</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &gt;</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Greater than operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to compare the receiver to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> the receiver is greater than <tt>iLV</tt>, 
 <tt>0</tt> otherwise
</dl>
</dl>
<a name="operator &gt;="></a><a name="operator &gt;=(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator &gt;=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &gt;=</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Greater than or equal to operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to compare the receiver to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> the receiver is greater than 
 or equal to <tt>iLV</tt>, <tt>0</tt> otherwise
</dl>
</dl>
<a name="operator &lt;"></a><a name="operator &lt;(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator &lt;</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &lt;</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Less than operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to compare the receiver to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> the receiver is less than 
 <tt>iLV</tt>, <tt>0</tt> otherwise
</dl>
</dl>
<a name="operator &lt;="></a><a name="operator &lt;=(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator &lt;=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &lt;=</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Less than or equal to operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to compare the receiver to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> the receiver is less than or 
 equal to <tt>iLV</tt>, <tt>0</tt> otherwise
</dl>
</dl>
<a name="operator =="></a><a name="operator ==(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator ==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator ==</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iLV</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Equality operator. 
 <br><b>Role</b>: Two lists are equal if they contain the same
 elements in the same lexicographic order.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLV</tt>
   <dd> The list to test for equality
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: <tt>1</tt> if the two lists are equal, 
 <tt>0</tt> otherwise.
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATListValCATUnicodeString&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATListValCATUnicodeString','CATListValCATUnicodeString&amp;')</script> <td><tt>iCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator. 
 <br><b>Role</b>: Overwrites the content of the list with 
 another list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCopy</tt>
   <dd> The assigned list.</dd>
</dl>
</dl>
</dl>
<a name="operator[]"></a><a name="operator[](int)"></a> <dt> o <b>operator[]</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&')</script>  <b>operator[]</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Subscripting operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index of the element.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The <tt>CATUnicodeString</tt> at index <tt>iIndex</tt>.
</dl>
</dl>
<a name="operator[]"></a><a name="operator[](int)"></a> <dt> o <b>operator[]</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeString','const CATUnicodeString&')</script>  <b>operator[]</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Subscripting operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index of the element.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The <tt>CATUnicodeString</tt> at index <tt>iIndex</tt>.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATListOfCATUnicodeString.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
