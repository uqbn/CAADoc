<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATEventSubscriber</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATEventSubscriber','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEventSubscriber','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATEventSubscriber','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATEventSubscriber','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATEventSubscriber</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATEventSubscriber_18770','CATEventSubscriber','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATEventSubscriber</b>
</p>
<p>
<b><i> Base class for event publishers and subscribers.</i></b><br>

 <b>Role</b>: Objects that publish events and objects
 that subscribe to published events can derive from CATEventSubscriber.
 Preferably, use the global methods to add and remove callbacks to event subscribers.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('AddCallback','');return false">AddCallback</a>, <a href="#" onClick="openLink('RemoveCallback','');return false">RemoveCallback</a>, <a href="#" onClick="openLink('RemoveSubscriberCallbacks','');return false">RemoveSubscriberCallbacks</a>, <a href="#" onClick="openLink('RemoveCallbacksOn','');return false">RemoveCallbacksOn</a>, <a href="#" onClick="openLink('DispatchCallbacks','');return false">DispatchCallbacks</a>, <a href="#" onClick="openLink('GetDefaultCallbackManager','');return false">GetDefaultCallbackManager</a>
</dl>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATEventSubscriber()"><b>CATEventSubscriber</b></a>()
<dd>  Constructs an event subscriber.
 <dt> o 
    <a href="#~CATEventSubscriber()"><b>~CATEventSubscriber</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddCallback(CATBaseUnknown*,CATCallbackEvent,CATSubscriberMethod,CATSubscriberData)"><b>AddCallback</b></a>(CATBaseUnknown*,CATCallbackEvent,CATSubscriberMethod,CATSubscriberData)
<dd>  Adds a callback for a given event published by a given event publisher.
 <dt> o 
    <a href="#GetCallbackManager()"><b>GetCallbackManager</b></a>()
<dd>  Returns an event publisher's callback manager.
 <dt> o 
    <a href="#RemoveCallback(CATBaseUnknown*,CATCallback)"><b>RemoveCallback</b></a>(CATBaseUnknown*,CATCallback)
<dd>  Removes a callback with a given identifier from a given event publisher.
 <dt> o 
    <a href="#RemoveCallbacksOn(CATBaseUnknown*,CATCallbackEvent,CATSubscriberData)"><b>RemoveCallbacksOn</b></a>(CATBaseUnknown*,CATCallbackEvent,CATSubscriberData)
<dd>  Removes all the callbacks from a given event published by a given event publisher.
 <dt> o 
    <a href="#RemoveSubscriberCallbacks(CATBaseUnknown*)"><b>RemoveSubscriberCallbacks</b></a>(CATBaseUnknown*)
<dd>  Removes all the callbacks for all events published by a given event publisher.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATEventSubscriber"></a><a name="CATEventSubscriber()"></a> <dt> o <b>CATEventSubscriber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATEventSubscriber</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an event subscriber.
</dl>
<a name="~CATEventSubscriber"></a><a name="~CATEventSubscriber()"></a> <dt> o <b>~CATEventSubscriber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATEventSubscriber</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddCallback"></a><a name="AddCallback(CATBaseUnknown*,CATCallbackEvent,CATSubscriberMethod,CATSubscriberData)"></a> <dt> o <b>AddCallback</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallback','CATCallback')</script>  <b>AddCallback</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iEventPublisher</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script> <td><tt>iPublishedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSubscriberMethod','CATSubscriberMethod')</script> <td><tt>iMethodToCall</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSubscriberData','CATSubscriberData')</script> <td><tt>iClientData</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a callback for a given event published by a given event publisher.
 <br><b>Role</b>:
 The current event subscriber subscribes to a given event that is published
 by a given event publisher.
 Whenever this event is published by this event publisher,
 the method declared when subscribing is called, along with possible useful data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventPublisher</tt>
   <dd>   A pointer to the object that is expected to publish the event
 </dd>
    <dt><tt> iPublishedEvent</tt>
   <dd>   The event in question published by <tt>iEventPublisher</tt>
 </dd>
    <dt><tt> iMethodToCall</tt>
   <dd>   The subscriber's method to call whenever <tt>iEventPublisher</tt>
   publishes <tt>iPublishedEvent</tt>
 </dd>
    <dt><tt> iClientData</tt>
   <dd>   Useful data to pass as an argument of <tt>iMethodToCall</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The identifier of the created callback.
</dl>
</dl>
<a name="GetCallbackManager"></a><a name="GetCallbackManager()"></a> <dt> o <b>GetCallbackManager</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackManager','CATCallbackManager *')</script>  <b>GetCallbackManager</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns an event publisher's callback manager.
 <br><b>Warning</b>: Do not redefine this method.
</dl>
<a name="RemoveCallback"></a><a name="RemoveCallback(CATBaseUnknown*,CATCallback)"></a> <dt> o <b>RemoveCallback</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveCallback</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iEventPublisher</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCallback','CATCallback')</script> <td><tt>iCallback</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Removes a callback with a given identifier from a given event publisher.
 <br><b>Role</b>:
 The current event subscriber resigns its subscription to a given event publisher
 made thanks to a given callback.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventPublisher</tt>
   <dd>   A pointer to the object from which the callback <tt>iCallback</tt>
   is to be removed
 </dd>
    <dt><tt> iCallback</tt>
   <dd>   The identifier of the callback to remove.
   <br><b>Legal values</b>: This identifier was returned by
   the </dd>
<a href="#" onClick="openLink('','AddCallback');return false">AddCallback</a> method.
</dl>
</dl>
</dl>
<a name="RemoveCallbacksOn"></a><a name="RemoveCallbacksOn(CATBaseUnknown*,CATCallbackEvent,CATSubscriberData)"></a> <dt> o <b>RemoveCallbacksOn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveCallbacksOn</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iEventPublisher</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script> <td><tt>iPublishedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSubscriberData','CATSubscriberData')</script> <td><tt>iClientData</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the callbacks from a given event published by a given event publisher.
 <br><b>Role</b>:
 The current event subscriber resigns its subscription to all the callbacks
 set for a given event published by a given event publisher, and
 with a given client data pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventPublisher</tt>
   <dd>   A pointer to the object from which the callback <tt>iCallback</tt>
   is to be removed
 </dd>
    <dt><tt> iPublishedEvent</tt>
   <dd>   The event in question published by <tt>iEventPublisher</tt>
 </dd>
    <dt><tt> iClientData</tt>
   <dd>   Useful data to pass as an argument of the method called</dd>
</dl>
</dl>
</dl>
<a name="RemoveSubscriberCallbacks"></a><a name="RemoveSubscriberCallbacks(CATBaseUnknown*)"></a> <dt> o <b>RemoveSubscriberCallbacks</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveSubscriberCallbacks</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iEventPublisher</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the callbacks for all events published by a given event publisher.
 <br><b>Role</b>:
 The current event subscriber resigns its subscription to all the callbacks
 set for all the events published by a given event publisher.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventPublisher</tt>
   <dd>   A pointer to the object from which all the callbacks are to 
   be removed.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATEventSubscriber.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
