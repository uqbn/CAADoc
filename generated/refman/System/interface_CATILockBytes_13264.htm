<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Interface CATILockBytes</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATILockBytes','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATILockBytes','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATILockBytes','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATILockBytes','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Interface CATILockBytes</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATILockBytes_13264','CATILockBytes','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATILockBytes</b>
</p>
<p>
<b><i> Interface used by the V5 documents to represent their physical storage
 as a byte array.</i></b><br>

 <b>Role</b>: This interface is used by the V5 composite documents to access 
 to their physical storage device, without needing to consider the 
 specifications of the physical storage.
 This interface should be not implemented. 
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Flush(void)"><b>Flush</b></a>(void)
<dd>  Flush all the buffers.
 <dt> o 
    <a href="#LockRegion(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)"><b>LockRegion</b></a>(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)
<dd>  Locks a region of the CATILockBytes.
 <dt> o 
    <a href="#ReadAt(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)"><b>ReadAt</b></a>(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)
<dd>  Reads a block of data in the byte array object.
 <dt> o 
    <a href="#SetSize(ULARGE_INTEGER)"><b>SetSize</b></a>(ULARGE_INTEGER)
<dd>  Sets the size of the CATILockBytes.
 <dt> o 
    <a href="#Stat(STATSTG FAR*,DWORD)"><b>Stat</b></a>(STATSTG FAR*,DWORD)
<dd>  Returns informations for the byte array object.
 <dt> o 
    <a href="#UnlockRegion(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)"><b>UnlockRegion</b></a>(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)
<dd>  Locks a region of the CATILockBytes.
 <dt> o 
    <a href="#WriteAt(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)"><b>WriteAt</b></a>(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)
<dd>  Writes a block of data in the byte array object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Flush"></a><a name="Flush(void)"></a> <dt> o <b>Flush</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>Flush</b>(<td><script type="text/javascript"> activateLink('void','void')</script> <td><tt></tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Flush all the buffers.
 <b>Role</b>: Insures that any internal buffers maintained by the 
 CATILockBytes object are written out to the permanent storage.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
   <br><tt> S_OK :</tt>on Success.
   <br><tt> STG_E_WRITEFAULT :</tt> problem while writing.
   <br><tt> STG_E_MEDIUMFULL :</tt> disk full error.
   <br><tt> STG_E_DISKISWRITEPROTECTED :</tt> disk write protected.
   <br><tt> STG_E_UNKNOWN :</tt> unexpected error.
</dl>
</dl>
<a name="LockRegion"></a><a name="LockRegion(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)"></a> <dt> o <b>LockRegion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>LockRegion</b>(<td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iLegnth</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DWORD','DWORD')</script> <td><tt>dwLockType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Locks a region of the CATILockBytes.
 <b>Role</b>: Locks a region of the CATILockBytes.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd> [in]   Offset of the block from the beginning of the array
 </dd>
    <dt><tt> iLength</tt>
   <dd> [i]    the size of the region.  if iLength and Offset are null, then the lock
   is applied on the whole array.
 </dd>
    <dt><tt> dwLockType</tt>
   <dd> [in]         type of lock. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>: 
   <br><tt> S_OK :</tt>on Success. 
   <br><tt> STG_E_INVALIDFUNCTION :</tt> the underlying object does not 
					   support locking.
   <br><tt> STG_E_LOCKVIOLATION :</tt> array object locked by another caller.
   <br><tt> STG_E_ACCESSDENIED:</tt> array object locked by another caller.
   <br><tt> STG_E_INVALIDHANDLE :</tt> the underlying storage device is not
					 available.
</dl>
</dl>
<a name="ReadAt"></a><a name="ReadAt(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)"></a> <dt> o <b>ReadAt</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>ReadAt</b>(<td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void FAR','void FAR*')</script> <td><tt>iBuff</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULONG','ULONG')</script> <td><tt>iLengthToRead</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULONG FAR','ULONG FAR*')</script> <td><tt>oLengthRead</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Reads a block of data in the byte array object.
 <b>Role</b>: Reads a block of data at the specified offset fom the 
 beginning of the array. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd> [in]  Offset of the block from the beginning of the array 
 </dd>
    <dt><tt>  iBuff</tt>
   <dd> [in]  Buffer where data where will be stored.
 </dd>
    <dt><tt> iLengthToRead</tt>
   <dd> [i]   the size of the requested data.
 </dd>
    <dt><tt> oLengthRead</tt>
   <dd> [out]   the actual length of read data.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
   <br><tt> S_OK :</tt>on Success.
   <br><tt> STG_E_SEEKERROR :</tt> problem in setting the read offset.
   <br><tt> STG_E_READFAULT :</tt> problem while reading.
   <br><tt> STG_E_INVALIDPARAMETER :</tt> invalid arguments.
   <br><tt> STG_E_ACCESSDENIED:</tt> No sufficient permission to read.
   <br><tt> STG_E_UNKNOWN :</tt> unexpected error.
</dl>
</dl>
<a name="SetSize"></a><a name="SetSize(ULARGE_INTEGER)"></a> <dt> o <b>SetSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>SetSize</b>(<td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iLength</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the size of the CATILockBytes.
 <b>Role</b>: Sets the size of the CATILockBytes.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>       <b>Legal values</b>:
   <br><tt> S_OK :</tt>on Success. 
   <br><tt> STG_E_ACCESSDENIED:</tt> No sufficient permission to set 
                                     the size of the document.
   <br><tt> STG_E_SEEKERROR :</tt> problem in setting the new offset.
   <br><tt> STG_E_MEDIUMFULL :</tt> no space left on the backing storage to
                                    increase the size of the byte array.
</dl>
</dl>
<a name="Stat"></a><a name="Stat(STATSTG FAR*,DWORD)"></a> <dt> o <b>Stat</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>Stat</b>(<td><script type="text/javascript"> activateLink('STATSTG FAR','STATSTG FAR*')</script> <td><tt>oStat</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DWORD','DWORD')</script> <td><tt>iStatFlag</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns informations for the byte array object.
 <b>Role</b>:  Returns informations for the CATILockBytes. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStat</tt>
   <dd> [io]    pointer to a STATSTG structure.
 </dd>
    <dt><tt> iStatFlag</tt>
   <dd> [in]    specifies whether the name of the object should be supplied.
   <b>Legal values</b>:
   <br><tt> STATFLAG_NONAME:</tt> no name is supplied.
   <br><tt> STATFLAG_DEFAULT:</tt> all fields are supplied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>:
   <br><tt> S_OK :</tt>on Success.
   <br><tt> STG_E_INVALIDPOINTER :</tt> invalid pointer for the STATSTG
					  structure. 
   <br><tt> STG_E_ACCESSDENIED:</tt> No sufficient permission to retrieve 
                                     the information concerning the array.
   <br><tt> STG_E_INSUFFICIENTMEMORY:</tt> no more memory.
   <br><tt> STG_E_INVALIDFLAG :</tt> value for iStatFlag is not valid.
</dl>
</dl>
<a name="UnlockRegion"></a><a name="UnlockRegion(ULARGE_INTEGER,ULARGE_INTEGER,DWORD)"></a> <dt> o <b>UnlockRegion</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>UnlockRegion</b>(<td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DWORD','DWORD')</script> <td><tt>dwLockType</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Locks a region of the CATILockBytes.
 <b>Role</b>: Locks a region of the CATILockBytes. This method is not 
 implemented by any V5 implementation of this interface and are never
 called by the V5 documents code. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd> [in]   Offset of the block from the beginning of the array  
 </dd>
    <dt><tt> iLength</tt>
   <dd> [i]    the size of the region. 
 </dd>
    <dt><tt> dwLockType</tt>
   <dd> [in]         type of lock. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>: 
   <br><tt> STG_E_INVALIDFUNCTION :</tt> the underlying object does not 
					   support locking.
   <br><tt> STG_E_LOCKVIOLATION :</tt> array object locked by another caller.
   <br><tt> STG_E_INVALIDHANDLE :</tt> the underlying storage device is not
					 available.
</dl>
</dl>
<a name="WriteAt"></a><a name="WriteAt(ULARGE_INTEGER,void FAR*,ULONG,ULONG FAR*)"></a> <dt> o <b>WriteAt</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','HRESULT __stdcall')</script>  <b>WriteAt</b>(<td><script type="text/javascript"> activateLink('ULARGE_INTEGER','ULARGE_INTEGER')</script> <td><tt>iOffset</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('void FAR','void FAR*')</script> <td><tt>iDataSource</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULONG','ULONG')</script> <td><tt>iLengthToWrite</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ULONG FAR','ULONG FAR*')</script> <td><tt>LengthWritten</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Writes a block of data in the byte array object.
 <b>Role</b>: Writes a block of data at the specified offset fom the 
 beginning of the array. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOffset</tt>
   <dd> [in]   Offset of the block  from the beginning of the array 
 </dd>
    <dt><tt>  iDataSource</tt>
   <dd> [in]  Buffer of data to write.
 </dd>
    <dt><tt> iLengthToWrite</tt>
   <dd> [i]   the size of the data to write.
 </dd>
    <dt><tt> oLengthWriten</tt>
   <dd> [out]   the actual length of written data. Should be equal to iLengthToWrite if 
   no problem has occurred.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>:
   <br><tt> S_OK :</tt>on Success.
   <br><tt> STG_E_SEEKERROR :</tt> problem in setting the read offset.
   <br><tt> STG_E_WRITEFAULT :</tt> problem while writing and iLengthToWrite
				      is not equal to LengthWritten.
   <br><tt> STG_E_MEDIUMFULL :</tt> The write operation was not completed 
				      because there is no space left on the
				      storage device. The actual written length
				       is still returned in LengthWritten.
   <br><tt> STG_E_INVALIDPARAMETER :</tt> invalid arguments.
   <br><tt> STG_E_DISKISWRITEPROTECTED :</tt> disk write protected.
   <br><tt> STG_E_ACCESSDENIED:</tt> No sufficient permission to write.
   <br><tt> STG_E_UNKNOWN :</tt> unexpected error.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATILockBytes.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0COMPSPEC</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
