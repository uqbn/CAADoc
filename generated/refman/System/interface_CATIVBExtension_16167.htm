<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Interface CATIVBExtension</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIVBExtension','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIVBExtension','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIVBExtension','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIVBExtension','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Interface CATIVBExtension</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIVBExtension_16167','CATIVBExtension','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIVBExtension</b>
</p>
<p>
<b><i> Interface to implement in order to extend the V5 Automation object model using the CATIABase::GetItem mechanism.</i></b><br>

 The <a href="#" onClick="openLink('CATIABase','GetItem');return false">CATIABase.GetItem</a> mechanism offers a generic way to extend the V5 Automation object model with custom Automation interfaces. It is the
 preferred way to achieve such extensions.
 Script developers use the <tt>GetItem</tt> mechanism in the following
 manner:
 <pre>
 ' VBA sample
 Dim X As MyAutomationInterface
 ' Retrieve the extension object associated to Y under the key "MyCATIVBExtensionImpl"
 Set X = Y.GetItem("MyCATIVBExtensionImpl")
 </pre>
 <ul>
 <li>
 <tt>Y</tt> is any script object which derives from 
<a href="#" onClick="openLink('CATIABase','');return false">CATIABase</a> or 
<a href="#" onClick="openLink('CATIACollection','');return false">CATIACollection</a>. Such objects can be either native V5 Automation objects such as <tt>Viewer</tt> or <tt>Part</tt> or custom objects.
 </li>
 <li>
 <tt>MyCATIVBExtensionImpl</tt> is the name of a V5 implementation object which implements
 
<a href="#" onClick="openLink('CATIVBExtension','');return false">CATIVBExtension</a>. <tt>MyCATIVBExtensionImpl</tt> is responsible for instantiating the Automation extension object which will ultimately be returned by 
<a href="#" onClick="openLink('CATIABase','GetItem');return false">CATIABase.GetItem</a> method. Note that the <tt>MyCATIVBExtensionImpl</tt> object itself is instantiated using 
 the 
<a href="#" onClick="openLink('CATICreateInstance','');return false">CATICreateInstance</a> mechanism, so it must also implement the 
<a href="#" onClick="openLink('CATICreateInstance','');return false">CATICreateInstance</a> interface in a code extension. </li>
 <li>
 <tt>X</tt> is the Automation extension object, of type <tt>MyAutomationInterface</tt>. It
 is associated to the <tt>Y</tt> object and is the result of invoking the 
<a href="#" onClick="openLink('CATIABase','GetItem');return false">CATIABase.GetItem</a> on <tt>Y</tt> with the <tt>MyCATIVBExtensionImpl</tt> key.
 </li>
 </ul>
 Please note that the 
<a href="#" onClick="openLink('CATIABase','GetItem');return false">CATIABase.GetItem</a> mechanism is  implemented by the 
<a href="#" onClick="openLink('CATBaseObject','');return false">CATBaseObject</a> class (the 
<a href="#" onClick="openLink('CATIABase','');return false">CATIABase</a> interface adaptor)  or 
<a href="#" onClick="openLink('CATBaseCollection','');return false">CATBaseCollection</a> class (the 
<a href="#" onClick="openLink('CATIACollection','');return false">CATIACollection</a> interface adaptor),  so make sure your <tt>Y</tt> class derives from either of these adaptors.
 For implementations which override the 
<a href="#" onClick="openLink('CATIABase','GetItem');return false">CATIABase.GetItem</a> method, the overriding implementation must make sure to first invoke the implementation of
 its superclass. If the implementation of the superclass fails to retrieve
 the proper Automation extension, then the overriding implementation can use its own
 algorithm to retrieve it.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetObjects(CATBaseUnknown*,CATBaseDispatch*&amp;)"><b>GetObjects</b></a>(CATBaseUnknown*,CATBaseDispatch*&amp;)
<dd>  Returns the extension object associated
 to the <tt>iGetItemTarget</tt> Automation object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetObjects"></a><a name="GetObjects(CATBaseUnknown*,CATBaseDispatch*&amp;)"></a> <dt> o <b>GetObjects</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObjects</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iGetItemTarget</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch*&amp;')</script> <td><tt>oGetItemResult</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the extension object associated
 to the <tt>iGetItemTarget</tt> Automation object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGetItemTarget</tt>
   <dd> The Automation object on which <tt>GetItem</tt> is invoked.
 </dd>
    <dt><tt> oGetItemResult</tt>
   <dd> The Automation extension object returned by <tt>GetItem</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>S_OK</tt> if the object is extension object is successfully instantiated,
 <tt>E_FAIL</tt> otherwise
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIVBExtension.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
