<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATCallbackManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATCallbackManager','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCallbackManager','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATCallbackManager','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATCallbackManager','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATCallbackManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATCallbackManager_18086','CATCallbackManager','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATCallbackManager</b>
</p>
<p>
<b><i> Class that manages the callbacks of a given event publisher.</i></b><br>

 <b>Role</b>: A callback manager attached to a given event publisher dispatches
 the events that this event publisher publishes to all the subscribers.
 This consists in calling the methods declared by the event subscribers while subscribing.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATCallbackManager()"><b>~CATCallbackManager</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#DispatchCallbacks(CATNotification*,void*)"><b>DispatchCallbacks</b></a>(CATNotification*,void*)
<dd>  Dispatches the event published to all the subscribers.
 <dt> o 
    <a href="#DispatchCallbacks(CATCallbackEvent,CATNotification*,void*)"><b>DispatchCallbacks</b></a>(CATCallbackEvent,CATNotification*,void*)
<dd>  Dispatches the event published to all the event subscribers.
 <dt> o 
    <a href="#HasClients(CATCallbackEvent)"><b>HasClients</b></a>(CATCallbackEvent)
<dd>  Checks whether the callback manager manages a subscriber list for a given event.
 <dt> o 
    <a href="#RemoveAllCallbacks()"><b>RemoveAllCallbacks</b></a>()
<dd>  Removes all the callbacks.
 <dt> o 
    <a href="#RemoveCallbacksOnEvent(CATCallbackEvent)"><b>RemoveCallbacksOnEvent</b></a>(CATCallbackEvent)
<dd>  Removes all the callbacks added by all the subscribers for a given event.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATCallbackManager"></a><a name="~CATCallbackManager()"></a> <dt> o <b>~CATCallbackManager</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATCallbackManager</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="DispatchCallbacks"></a><a name="DispatchCallbacks(CATNotification*,void*)"></a> <dt> o <b>DispatchCallbacks</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DispatchCallbacks</b>(<td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iPublishedNotification</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iEventPublisher</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Dispatches the event published to all the subscribers.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotification</tt>
   <dd>   The notification that stands for the event
 </dd>
    <dt><tt> iPublishingObject</tt>
   <dd>   The event publisher</dd>
</dl>
</dl>
</dl>
<a name="DispatchCallbacks"></a><a name="DispatchCallbacks(CATCallbackEvent,CATNotification*,void*)"></a> <dt> o <b>DispatchCallbacks</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>DispatchCallbacks</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script> <td><tt>iPublishedEvent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATNotification','CATNotification*')</script> <td><tt>iPublishedNotification</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iEventPublisher</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Dispatches the event published to all the event subscribers.
 <br><b>Role</b>: This method calls all the callback methods declared
 by all the subscribers that
 subscribe to the event publisher for the given notification.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd>   The event which occurs
 </dd>
    <dt><tt> iNotification</tt>
   <dd>   The associated notification
 </dd>
    <dt><tt> iEventPublisher</tt>
   <dd>   The event publisher</dd>
</dl>
</dl>
</dl>
<a name="HasClients"></a><a name="HasClients(CATCallbackEvent)"></a> <dt> o <b>HasClients</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>HasClients</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script> <td><tt>iEvent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Checks whether the callback manager manages a subscriber list for a given event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd>   The event in question
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <b>Legal values</b>: -1 if a subscriber list is found and 0 otherwise.
</dl>
</dl>
<a name="RemoveAllCallbacks"></a><a name="RemoveAllCallbacks()"></a> <dt> o <b>RemoveAllCallbacks</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveAllCallbacks</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the callbacks.
 <br><b>Role</b>: Removes all the callbacks managed by the callback manager
 and added to its event publisher.
</dl>
<a name="RemoveCallbacksOnEvent"></a><a name="RemoveCallbacksOnEvent(CATCallbackEvent)"></a> <dt> o <b>RemoveCallbacksOnEvent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveCallbacksOnEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script> <td><tt>iEvent</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes all the callbacks added by all the subscribers for a given event.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd>   The event for which the callbacks must be removed</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATCallbackManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
