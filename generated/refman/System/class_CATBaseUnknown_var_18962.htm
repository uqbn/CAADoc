<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATBaseUnknown_var</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATBaseUnknown_var','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATBaseUnknown_var','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATBaseUnknown_var','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATBaseUnknown_var','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATBaseUnknown_var</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATBaseUnknown_var_18962','CATBaseUnknown_var','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATBaseUnknown_var</b>
</p>
<p>
<b><i> Base class for handler.</i></b><br>

 <b>Role</b>: Base class for the CORBA's object reference variable type for an
 interface, also known as handler, and smart interface pointer with COM.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATBaseUnknown_var()"><b>CATBaseUnknown_var</b></a>()
<dd>  Constructs an empty handler.
 <dt> o 
    <a href="#CATBaseUnknown_var(CATBaseUnknown*)"><b>CATBaseUnknown_var</b></a>(CATBaseUnknown*)
<dd>  Constructs a handler from a pointer.
 <dt> o 
    <a href="#CATBaseUnknown_var(CATBaseUnknown_var&amp;)"><b>CATBaseUnknown_var</b></a>(CATBaseUnknown_var&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATBaseUnknown_var()"><b>~CATBaseUnknown_var</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ThrowErrorNullVar()"><b>ThrowErrorNullVar</b></a>()
<dd>  For illegal operation.
 <dt> o 
    <a href="#operator CATBaseUnknown*()"><b>operator CATBaseUnknown*</b></a>()
<dd>  Type cast operator to a CATBaseUnknown instance pointer.
 <dt> o 
    <a href="#operator!()"><b>operator!</b></a>()
<dd>  Logical not operator.
 <dt> o 
    <a href="#operator!=(CATBaseUnknown*)"><b>operator!=</b></a>(CATBaseUnknown*)
<dd>  Inequality operator.
 <dt> o 
    <a href="#operator-&gt;()"><b>operator-&gt;</b></a>()
<dd>  Pointer to member operator.
 <dt> o 
    <a href="#operator=(CATBaseUnknown_var&amp;)"><b>operator=</b></a>(CATBaseUnknown_var&amp;)
<dd>  Assignment operator from CATBaseUnknown_var reference.
 <dt> o 
    <a href="#operator==(CATBaseUnknown*)"><b>operator==</b></a>(CATBaseUnknown*)
<dd>  Equality operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATBaseUnknown_var"></a><a name="CATBaseUnknown_var()"></a> <dt> o <b>CATBaseUnknown_var</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('inline','inline')</script>  <b>CATBaseUnknown_var</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty handler.
</dl>
<a name="CATBaseUnknown_var"></a><a name="CATBaseUnknown_var(CATBaseUnknown*)"></a> <dt> o <b>CATBaseUnknown_var</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('inline','inline')</script>  <b>CATBaseUnknown_var</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPtr</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a handler from a pointer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPtr</tt>
   <dd> The pointer to the </dd>
<a href="#" onClick="openLink('CATBaseUnknown','');return false">CATBaseUnknown</a> instance to use.
</dl>
</dl>
</dl>
<a name="CATBaseUnknown_var"></a><a name="CATBaseUnknown_var(CATBaseUnknown_var&amp;)"></a> <dt> o <b>CATBaseUnknown_var</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('inline','inline')</script>  <b>CATBaseUnknown_var</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iRef</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRef</tt>
   <dd> The reference of the CATBaseUnknown_var instance to copy.</dd>
</dl>
</dl>
</dl>
<a name="~CATBaseUnknown_var"></a><a name="~CATBaseUnknown_var()"></a> <dt> o <b>~CATBaseUnknown_var</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATBaseUnknown_var</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="ThrowErrorNullVar"></a><a name="ThrowErrorNullVar()"></a> <dt> o <b>ThrowErrorNullVar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ThrowErrorNullVar</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 For illegal operation.
</dl>
<a name="operator CATBaseUnknown*"></a><a name="operator CATBaseUnknown*()"></a> <dt> o <b>operator CATBaseUnknown*</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','inline __stdcall')</script>  <b>operator CATBaseUnknown*</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Type cast operator to a CATBaseUnknown instance pointer.
</dl>
<a name="operator!"></a><a name="operator!()"></a> <dt> o <b>operator!</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','int __stdcall')</script>  <b>operator!</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Logical not operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>:
 <dl>
 <dt>0</dt><dd> The handler points on a valid object</dd>
 <dt>1</dt><dd> The handler does not point on a valid object</dd>
 </dl>
</dl>
</dl>
<a name="operator!="></a><a name="operator!=(CATBaseUnknown*)"></a> <dt> o <b>operator!=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','int __stdcall')</script>  <b>operator!=</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPt</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Inequality operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPt</tt>
   <dd> Pointer to be compared with the internal pointer. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>:
 <dl>
 <dt>0</dt><dd> The handler and iPt are not pointing the same object</dd>
 <dt>1</dt><dd> The handler and iPt are pointing the same object</dd>
 </dl>
</dl>
</dl>
<a name="operator-&gt;"></a><a name="operator-&gt;()"></a> <dt> o <b>operator-&gt;</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','inline CATBaseUnknown * __stdcall')</script>  <b>operator-&gt;</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Pointer to member operator.
</dl>
<a name="operator="></a><a name="operator=(CATBaseUnknown_var&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','CATBaseUnknown_var & __stdcall')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iRef</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from CATBaseUnknown_var reference.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRef</tt>
   <dd> The reference of the CATBaseUnknown_var instance to copy. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The reference of the CATBaseUnknown_var instance valued.
</dl>
</dl>
<a name="operator=="></a><a name="operator==(CATBaseUnknown*)"></a> <dt> o <b>operator==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','int __stdcall')</script>  <b>operator==</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iPt</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Equality operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPt</tt>
   <dd> A pointer to a </dd>
<a href="#" onClick="openLink('CATBaseUnknown','');return false">CATBaseUnknown</a> to compare. 
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>:
 <dl>
 <dt>0</dt><dd> The handler and iPt are pointing the same object</dd>
 <dt>1</dt><dd> The handler and iPt are not pointing the same object</dd>
 </dl>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATBaseUnknown_var.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
