<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATUnicodeChar</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATUnicodeChar','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATUnicodeChar','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATUnicodeChar','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATUnicodeChar','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATUnicodeChar</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATUnicodeChar_11748','CATUnicodeChar','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATUnicodeChar</b>
</p>
<p>
<b><i>  Class to use for language meaningful character.</i></b><br>
 
 <b>Role</b>:
 CATUnicodeChar can be used whenever a character is needed, and that is either seen, entered, or manipulated by the 
 end user. In this way, the client application is shielded from implementation details regarding language, locale,
 bytecoding of characters, and so forth. Client applications thus become portable since they can handle character
 strings expressed in any language.
 <p>
 When NLS support is not required, you can use instead the <a href="#" onClick="openLink('CATChar','');return false">CATChar</a> class from the System framework. It does support only ISO 646, so that to supress all the problems that arise with NLS complexity. You should never use the 
 raw char type.
 <p>
 <b>Note</b>: Among the methods to manipulate instances of this class, you will find below some references to the
 Unicode and UTF-8 standards. See 
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> for precisions. <p><b>Note</b>: You will find also below some references to the SBCS and MBCS acronym, see 
<a href="#" onClick="openLink('CATUnicodeString','');return false">CATUnicodeString</a> for precisions.
 <p><b>CAUTION</b>: The methods manipulating the "char" type of the C language (or "char*", see 
 
<a href="#" onClick="openLink('CATUnicodeChar','BuildFromChar');return false">CATUnicodeChar.BuildFromChar</a> ) should rarely be used. They may be used: <ul>
 <li>combined with the use of Unix MOTIF services</li>
 <li>to display debug traces on the stdout</li>
 </ul>
 The best way to manipulate strings is to use the Unicode encoding, the "char" type of the C language has many
 limitations.
 <br>Suppose, for example, you call 
<a href="#" onClick="openLink('CATUnicodeChar','BuildFromChar');return false">CATUnicodeChar.BuildFromChar</a> on Windows, and, during the execution, the given "char*" contains one byte, B1 in hexa, followed by the NULL byte which ends the string. Then, 
 
<a href="#" onClick="openLink('CATUnicodeChar','BuildFromChar');return false">CATUnicodeChar.BuildFromChar</a> will behave the following way: <ul>
 <li>if the General\"Settings for the current user" field in the "Control Panel"\"Regional Options" window is set to
 English, the built CATUnicodeChar will contain the "PLUS-MINUS SIGN" character</li>
 <li>if it set on Japanese, the built CATUnicodeChar will contain the "HALFWIDTH KATAKANA LETTER A" character:
 the B1 code belongs to the range of one-byte code representations</li>
 <li>if it set on Korean, the built CATUnicodeChar will contain the "QUESTION MARK" character, which is the default
 character. Actually, the B1 code belongs to the range of two-bytes code representations</li>
 </ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATUnicodeChar()"><b>CATUnicodeChar</b></a>()
<dd>  Constructs an empty Unicode character instance.
 <dt> o 
    <a href="#CATUnicodeChar(char)"><b>CATUnicodeChar</b></a>(char)
<dd>  Constructs a CATUnicodeChar instance from a byte.
 <dt> o 
    <a href="#CATUnicodeChar(CATUnicodeChar&amp;)"><b>CATUnicodeChar</b></a>(CATUnicodeChar&amp;)
<dd>   Copy constructor.
 <dt> o 
    <a href="#~CATUnicodeChar()"><b>~CATUnicodeChar</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildFromChar(char*)"><b>BuildFromChar</b></a>(char*)
<dd>  Builds a CATUnicodeChar instance from a character in a localized encoding.
 <dt> o 
    <a href="#BuildFromUC2Bytes(CATUC2Bytes&amp;)"><b>BuildFromUC2Bytes</b></a>(CATUC2Bytes&amp;)
<dd>  Builds a character from a CATUC2Bytes.
 <dt> o 
    <a href="#ConvertToChar()"><b>ConvertToChar</b></a>()
<dd>  Converts the current character into a character in the thread locale localized encoding.
 <dt> o 
    <a href="#ConvertToUC2Bytes()"><b>ConvertToUC2Bytes</b></a>()
<dd>  Converts the current character into a CATUC2Bytes.
 <dt> o 
    <a href="#IsAlnum()"><b>IsAlnum</b></a>()
<dd>  Determines if the current character is an alphanumeric character.
 <dt> o 
    <a href="#IsAlpha()"><b>IsAlpha</b></a>()
<dd>  Determines if the current character is an alphabetic character.
 <dt> o 
    <a href="#IsCntrl()"><b>IsCntrl</b></a>()
<dd>  Determines if the current character is a control character.
 <dt> o 
    <a href="#IsDigit()"><b>IsDigit</b></a>()
<dd>  Determines if the current character is a digit character.
 <dt> o 
    <a href="#IsGraph()"><b>IsGraph</b></a>()
<dd>  Determines if the current character is a graphic character for printing.
 <dt> o 
    <a href="#IsLower()"><b>IsLower</b></a>()
<dd>  Determines if the current character is a lowercase character.
 <dt> o 
    <a href="#IsPrint()"><b>IsPrint</b></a>()
<dd>  Determines if the current character is a print character.
 <dt> o 
    <a href="#IsPunct()"><b>IsPunct</b></a>()
<dd>  Determines if the current character is a punctuation character.
 <dt> o 
    <a href="#IsSpace()"><b>IsSpace</b></a>()
<dd>  Determines if the current character is a space character.
 <dt> o 
    <a href="#IsUpper()"><b>IsUpper</b></a>()
<dd>  Determines if the current character is a uppercase character.
 <dt> o 
    <a href="#IsXDigit()"><b>IsXDigit</b></a>()
<dd>  Determines if the current character is a hexadecimal digit character.
 <dt> o 
    <a href="#ToLower()"><b>ToLower</b></a>()
<dd>  Converts the current character, supposed to be a upper case one to lower case.
 <dt> o 
    <a href="#ToUpper()"><b>ToUpper</b></a>()
<dd>  Converts the current character, supposed to be a lower case one to upper case.
 <dt> o 
    <a href="#operator !=(CATUnicodeChar&amp;)"><b>operator !=</b></a>(CATUnicodeChar&amp;)
<dd>  Inequality operator.
 <dt> o 
    <a href="#operator &gt;(CATUnicodeChar&amp;)"><b>operator &gt;</b></a>(CATUnicodeChar&amp;)
<dd>  Greater-than operator.
 <dt> o 
    <a href="#operator &gt;=(CATUnicodeChar&amp;)"><b>operator &gt;=</b></a>(CATUnicodeChar&amp;)
<dd>  Greater-than or equal operator.
 <dt> o 
    <a href="#operator &lt;(CATUnicodeChar&amp;)"><b>operator &lt;</b></a>(CATUnicodeChar&amp;)
<dd>  Less-than operator.
 <dt> o 
    <a href="#operator &lt;=(CATUnicodeChar&amp;)"><b>operator &lt;=</b></a>(CATUnicodeChar&amp;)
<dd>  Less-than or equal operator.
 <dt> o 
    <a href="#operator ==(CATUnicodeChar&amp;)"><b>operator ==</b></a>(CATUnicodeChar&amp;)
<dd>  Equality operator.
 <dt> o 
    <a href="#operator char()"><b>operator char</b></a>()
<dd>  Cast to char.
 <dt> o 
    <a href="#operator=(char)"><b>operator=</b></a>(char)
<dd>  Assignment operator from a byte.
 <dt> o 
    <a href="#operator=(char*)"><b>operator=</b></a>(char*)
<dd>  Assignment operator from a character in a localized encoding.
 <dt> o 
    <a href="#operator=(CATUnicodeChar&amp;)"><b>operator=</b></a>(CATUnicodeChar&amp;)
<dd>  Assignment operator from a CATUnicodeChar instance.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATUnicodeChar"></a><a name="CATUnicodeChar()"></a> <dt> o <b>CATUnicodeChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUnicodeChar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty Unicode character instance.
</dl>
<a name="CATUnicodeChar"></a><a name="CATUnicodeChar(char)"></a> <dt> o <b>CATUnicodeChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUnicodeChar</b>(<td> const <script type="text/javascript"> activateLink('char','char')</script> <td><tt>iByte</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATUnicodeChar instance from a byte.
 <br><b>Role</b>: Constructs a CATUnicodeChar instance from a byte, supposing the thread code page is a 
 SBCS code page. If, in the thread code page, the given byte does not correspond to any character coded
 representation, the instance will be filled with the default character (QUESTION MARK).
 <br><b>CAUTION</b>: This method, which manipulates the "char" type of the C language should rarely be used (see
 above).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iByte</tt>
   <dd>    The byte, corresponding to a coded representation in the thread code page.</dd>
</dl>
</dl>
</dl>
<a name="CATUnicodeChar"></a><a name="CATUnicodeChar(CATUnicodeChar&amp;)"></a> <dt> o <b>CATUnicodeChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATUnicodeChar</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iChar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Copy constructor. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChar</tt>
   <dd>    The Unicode character to copy</dd>
</dl>
</dl>
</dl>
<a name="~CATUnicodeChar"></a><a name="~CATUnicodeChar()"></a> <dt> o <b>~CATUnicodeChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATUnicodeChar</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildFromChar"></a><a name="BuildFromChar(char*)"></a> <dt> o <b>BuildFromChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>BuildFromChar</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iCodedRepresentation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Builds a CATUnicodeChar instance from a character in a localized encoding.
 <br><b>Role</b>: Builds a CATUnicodeChar instance from a character in a localized encoding. The character code page,
 which must be equal to the thread code page, may be either a SBCS or a MBCS code page. If, in the thread code page,
 the given byte(s) do(es) not correspond to any character coded representation, the instance will be filled with the 
 default character (QUESTION MARK).
 <br><b>CAUTION</b>: This method, which manipulates the "char*" type of the C language should rarely be used (see
 above).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCodedRepresentation</tt>
   <dd>    Character in the thread locale localized encoding.</dd>
</dl>
</dl>
</dl>
<a name="BuildFromUC2Bytes"></a><a name="BuildFromUC2Bytes(CATUC2Bytes&amp;)"></a> <dt> o <b>BuildFromUC2Bytes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>BuildFromUC2Bytes</b>(<td> const <script type="text/javascript"> activateLink('CATUC2Bytes','CATUC2Bytes&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Builds a character from a CATUC2Bytes.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The CATUC2Bytes character.</dd>
</dl>
</dl>
</dl>
<a name="ConvertToChar"></a><a name="ConvertToChar()"></a> <dt> o <b>ConvertToChar</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('char','const char *')</script>  <b>ConvertToChar</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Converts the current character into a character in the thread locale localized encoding.
 <br><b>Role</b>: Converts the current character into a character in the thread locale localized encoding. 
 The character must belong the character set of the thread locale code page. If the character does not belong to the
 character set of the thread locale code page, the default character coded representation is returned.
 <br><b>CAUTION</b>: This method, which manipulates the "char*" type of the C language should rarely be used (see
 above).
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     Character in the thread locale localized encoding.
</dl>
</dl>
<a name="ConvertToUC2Bytes"></a><a name="ConvertToUC2Bytes()"></a> <dt> o <b>ConvertToUC2Bytes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUC2Bytes','const CATUC2Bytes')</script>  <b>ConvertToUC2Bytes</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Converts the current character into a CATUC2Bytes.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The CATUC2Bytes character.
</dl>
</dl>
<a name="IsAlnum"></a><a name="IsAlnum()"></a> <dt> o <b>IsAlnum</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsAlnum</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is an alphanumeric character. 
 <br><b>Role</b>: Determines if the current character is an alphanumeric character. This service takes into account
 the current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is an alphanumeric character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsAlpha"></a><a name="IsAlpha()"></a> <dt> o <b>IsAlpha</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsAlpha</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is an alphabetic character. 
 <br><b>Role</b>: Determines if the current character is an alphabetic character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is an alphabetic character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsCntrl"></a><a name="IsCntrl()"></a> <dt> o <b>IsCntrl</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsCntrl</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a control character. 
 <br><b>Role</b>: Determines if the current character is a control character. This service takes into account the
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a control character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsDigit"></a><a name="IsDigit()"></a> <dt> o <b>IsDigit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsDigit</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a digit character. 
 <br><b>Role</b>: Determines if the current character is a digit character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a digit character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsGraph"></a><a name="IsGraph()"></a> <dt> o <b>IsGraph</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsGraph</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a graphic character for printing. 
 <br><b>Role</b>: Determines if the current character is a graphic character for printing. A graphic character is a
 character which is neither the space character nor a control character. This service takes into account the current
 locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a graphic character for printing, 
   or <tt>0: No</tt> otherwise.
</dl>
</dl>
<a name="IsLower"></a><a name="IsLower()"></a> <dt> o <b>IsLower</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsLower</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a lowercase character. 
 <br><b>Role</b>: Determines if the current character is a lowercase character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a lowercase character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsPrint"></a><a name="IsPrint()"></a> <dt> o <b>IsPrint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsPrint</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a print character. 
 <br><b>Role</b>: Determines if the current character is a print character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a print character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsPunct"></a><a name="IsPunct()"></a> <dt> o <b>IsPunct</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsPunct</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a punctuation character. 
 <br><b>Role</b>: Determines if the current character is a punctuation character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a punctuation character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsSpace"></a><a name="IsSpace()"></a> <dt> o <b>IsSpace</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsSpace</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a space character. 
 <br><b>Role</b>: Determines if the current character is a space character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a space character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsUpper"></a><a name="IsUpper()"></a> <dt> o <b>IsUpper</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsUpper</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a uppercase character. 
 <br><b>Role</b>: Determines if the current character is a uppercase character. This service takes into account the 
 current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a uppercase character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="IsXDigit"></a><a name="IsXDigit()"></a> <dt> o <b>IsXDigit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsXDigit</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Determines if the current character is a hexadecimal digit character. 
 <br><b>Role</b>: Determines if the current character is a hexadecimal digit character. This service takes into
 account the current locale. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>1: Yes</tt> if the current
   character is a hexadecimal digit character, or <tt>0: No</tt> 
   otherwise.
</dl>
</dl>
<a name="ToLower"></a><a name="ToLower()"></a> <dt> o <b>ToLower</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ToLower</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Converts the current character, supposed to be a upper case one to lower case.
</dl>
<a name="ToUpper"></a><a name="ToUpper()"></a> <dt> o <b>ToUpper</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ToUpper</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Converts the current character, supposed to be a lower case one to upper case.
</dl>
<a name="operator !="></a><a name="operator !=(CATUnicodeChar&amp;)"></a> <dt> o <b>operator !=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator !=</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Inequality operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator &gt;"></a><a name="operator &gt;(CATUnicodeChar&amp;)"></a> <dt> o <b>operator &gt;</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &gt;</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Greater-than operator.
 For the comparison, the current locale is taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator &gt;="></a><a name="operator &gt;=(CATUnicodeChar&amp;)"></a> <dt> o <b>operator &gt;=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &gt;=</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Greater-than or equal operator.
 For the comparison, the current locale is taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator &lt;"></a><a name="operator &lt;(CATUnicodeChar&amp;)"></a> <dt> o <b>operator &lt;</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &lt;</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Less-than operator.
 For the comparison, the current locale is taken into account.
 This service calls the C strcoll service, which, for
 the comparison, compares collation weights computed for
 each character.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator &lt;="></a><a name="operator &lt;=(CATUnicodeChar&amp;)"></a> <dt> o <b>operator &lt;=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator &lt;=</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Less-than or equal operator.
 For the comparison, the current locale is taken into account.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator =="></a><a name="operator ==(CATUnicodeChar&amp;)"></a> <dt> o <b>operator ==</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>operator ==</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('const',' const ')</script>  </table></dt>
<dl>
  <dd>
 Equality operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The character to compare to the current one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     boolean
   <br><b>Legal values</b>: <tt>0: False</tt> 
   the condition is not fullfilled, or <tt>Other: True</tt> 
   if the condition is fullfilled.
</dl>
</dl>
<a name="operator char"></a><a name="operator char()"></a> <dt> o <b>operator char</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>operator char</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Cast to char.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The character
</dl>
</dl>
<a name="operator="></a><a name="operator=(char)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('char','char')</script> <td><tt>iByte</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from a byte.
 <br><b>Role</b>: This operator assigns a byte to the current instance. This operator supposes:
 <ul>
 <li>the thread code page is a SBCS code page</li>
 <li>iByte corresponds to a coded representation in the thread code page</li>
 </ul>
 If, in the thread code page,the given byte does not correspond to any character coded representation, the instance
 will be filled with the default character (QUESTION MARK).
 <br><b>CAUTION</b>: This method, which manipulates the "char" type of the C language should rarely be used (see
 above).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iByte</tt>
   <dd>   The byte, corresponding to a coded representation in the thread code page.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(char*)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iCodedRepresentation</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from a character in a localized encoding.
 <br><b>Role</b>: Assigns a coded representation, supposed to belong to the thread code page, to the current instance.
 If, in the thread code page, the given byte(s) do(es) not correspond to any character coded representation, the
 instance will be filled with the default character (QUESTION MARK).
 <br><b>CAUTION</b>: This method, which manipulates the "char*" type of the C language should rarely be used (see
 above).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCodedRepresentation</tt>
   <dd>   Character in the thread locale localized encoding.</dd>
</dl>
</dl>
</dl>
<a name="operator="></a><a name="operator=(CATUnicodeChar&amp;)"></a> <dt> o <b>operator=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&')</script>  <b>operator=</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeChar','CATUnicodeChar&amp;')</script> <td><tt>iCharacter</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator from a CATUnicodeChar instance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCharacter</tt>
   <dd>   The provided character</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATUnicodeChar.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
