<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>System Class CATRscCatalog</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../System.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATRscCatalog','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATRscCatalog','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATRscCatalog','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATRscCatalog','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>System Class CATRscCatalog</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATRscCatalog_10608','CATRscCatalog','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATRscCatalog</b>
</p>
<p>
<b><i> Resource catalog class.</i></b><br>
 
 <b>Role</b>: Processing a resource catalog file.
 The resource catalog file contains keys and their corresponding values. Values are parameterized ASCII string 
 (see <a href="#" onClick="openLink('CATString','');return false">CATString</a> ) which may, for example, identify resources. NLS (National Langage Support) is not supported, this class must be compared to the 
<a href="#" onClick="openLink('CATMsgCatalog','');return false">CATMsgCatalog</a> class: the current class must be used for all non hard-coded strings which must not be translated into other languages.</br>
 A common use of this class corresponds to the storage of resource identifications through the use of dedicated
 sub-keys. See for example the use of the Icon.Normal sub-key described into the 
<a href="#" onClick="openLink('CATImplementHeaderResources','');return false">CATImplementHeaderResources</a> documentation.</br>
 A resource catalog file value may be used to represent a directly resource (for example, a
 workbench category, i.e. the place where a given
 workbench appears in the menu tree). It may also be used to represent a reference to a resource (for example,
 for an icon, you will put the icon file name).</br>
 The class does not support control 
 characters (for example \a, \n, \t).</br>
 A value can be parameterized, ie contains parameters you
 value at run-time. A parameter begins with /p or /P in the value.</br>
 Here is an example of a resource catalog file content:
 <pre>
 Key1 = "This is a simple parameterized string.";
 Key2 = "This parameterized string includes the parameter /P1 that
             is valued by your application at run-time.";
 Key3 = "This is a", "compound ", "parameterized string.";</pre>
 A resource catalog file posess the .CATRsc suffix and is retrieved from the folders specified by the
 CATMsgCatalogPath variable.
 The localized version of the resource catalog is searched first. If it does not exist,
 the english version is taken.</br>
 Example:
 In a japanese environment, if the CATMsgCatalogPath variable is valued the following way:
 <pre>   CATMsgCatalogPath=C:\PersonalFolder;C:\Program Files\Dassault Systemes\B12</pre>
 then, CATIA search the resource catalog file into the following paths:
 <pre>   1 - C:\PersonalFolder\Japanese
   2 - C:\PersonalFolder
   3 - C:\Program Files\Dassault Systemes\B12\Japanese
   4 - C:\Program Files\Dassault Systemes\B12</pre>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATRscCatalog()"><b>CATRscCatalog</b></a>()
<dd>  Constructs an empty resource catalog.
 <dt> o 
    <a href="#CATRscCatalog(CATRscCatalog&amp;)"><b>CATRscCatalog</b></a>(CATRscCatalog&amp;)
<dd>  <dt> o 
    <a href="#~CATRscCatalog()"><b>~CATRscCatalog</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BuildResource(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)"><b>BuildResource</b></a>(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)
<dd>  Computes a message from a given resource catalog.
 <dt> o 
    <a href="#GetCatalogKeys(CATListValCATString*)"><b>GetCatalogKeys</b></a>(CATListValCATString*)
<dd>  Retrieves the list of keys of the catalog.
 <dt> o 
    <a href="#GetCatalogRsc(CATString&amp;,CATString&amp;,CATString*,int)"><b>GetCatalogRsc</b></a>(CATString&amp;,CATString&amp;,CATString*,int)
<dd>  Computes a message from the resource catalog.
 <dt> o 
    <a href="#GetError()"><b>GetError</b></a>()
<dd>  Returns a syntax error.
 <dt> o 
    <a href="#LoadRscCatalog(CATString&amp;,char*)"><b>LoadRscCatalog</b></a>(CATString&amp;,char*)
<dd>  Loads a resource catalog by means of its name and (if desired)
 of a path.
 <dt> o 
    <a href="#UnloadRscCatalog(CATString&amp;)"><b>UnloadRscCatalog</b></a>(CATString&amp;)
<dd>  Unloads a resource catalog by means of its name.
 <dt> o 
    <a href="#operator =(CATRscCatalog&amp;)"><b>operator =</b></a>(CATRscCatalog&amp;)
<dd>  Assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATRscCatalog"></a><a name="CATRscCatalog()"></a> <dt> o <b>CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATRscCatalog</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty resource catalog.
</dl>
<a name="CATRscCatalog"></a><a name="CATRscCatalog(CATRscCatalog&amp;)"></a> <dt> o <b>CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog&amp;')</script> <td><tt>iRscCatalog</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATRscCatalog"></a><a name="~CATRscCatalog()"></a> <dt> o <b>~CATRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATRscCatalog</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="BuildResource"></a><a name="BuildResource(CATString&amp;,CATString&amp;,CATString&amp;,CATString*,int,CATString&amp;)"></a> <dt> o <b>BuildResource</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>BuildResource</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iRscKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oRsc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString*')</script> <td><tt>iParams</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbParams</tt><td><tt>= 0</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iDefaultRsc</tt><td><tt>=(char*)NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes a message from a given resource catalog.
 <br><b>Role</b>: Computes a message from a given resource catalog 
 using the message key. This service does not require 
 that a call to LoadRscCatalog have been made: it loads
 it if it not already done (this service is a static method).  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>   Name of the resource catalog containing the resource to be retrieved.
 </dd>
    <dt><tt> iRscKey</tt>
   <dd>   Key of the resource to be retrieved
 </dd>
    <dt><tt> oRsc</tt>
   <dd>   The computed output output resource string.
 </dd>
    <dt><tt> iParams</tt>
   <dd>   Array giving to the method possible parameter values
   which the method will integrate into the parameterized
   message. 
   The value count should correspond to the message parameter
   count. If it is not the cases, a default behaviour
   is foreseen: "?" characters are introduced into the
   computed output resource string. 
   NULL default value coresponds to no parameter values.
 </dd>
    <dt><tt> iNbParams</tt>
   <dd>   iParams array parameters count.
 </dd>
    <dt><tt> iDefaultRsc</tt>
   <dd>   Resource that the method should use in case of error.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem has occured, or <tt>Other: True</tt> 
   otherwise.
   Use GetError to retrieve the current error
</dl>
</dl>
<a name="GetCatalogKeys"></a><a name="GetCatalogKeys(CATListValCATString*)"></a> <dt> o <b>GetCatalogKeys</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCatalogKeys</b>(<td><script type="text/javascript"> activateLink('CATListValCATString','CATListValCATString*')</script> <td><tt>oKeyList</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the list of keys of the catalog.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oKeyList</tt>
   <dd>   Key list. 
   <br><b>Legal values</b>: <tt>NULL</tt> 
   to get the key count, or <tt>Other</tt> 
   to get also the keys themselves. A call with the NULL value
   should be done first to get the key count and thus allocate
   correctly the oKeyList list for the next call.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     Key count.
</dl>
</dl>
<a name="GetCatalogRsc"></a><a name="GetCatalogRsc(CATString&amp;,CATString&amp;,CATString*,int)"></a> <dt> o <b>GetCatalogRsc</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetCatalogRsc</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iRscKey</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oRsc</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATString','CATString*')</script> <td><tt>iParams</tt><td><tt>= NULL </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbParams</tt><td><tt>= 0 </tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes a message from the resource catalog.
 <br><b>Role</b>: Computes a message from the resource catalog using 
 the message key. Before calling the service,
 the resource catalog must have been loaded using
 LoadRscCatalog.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRscKey</tt>
   <dd>   Key of the resource to be retrieved
 </dd>
    <dt><tt> oRsc</tt>
   <dd>   The retrieved resource.
 </dd>
    <dt><tt> iParams</tt>
   <dd>   Array giving to the method possible parameter values
   which the method will integrate into the parameterized
   message. 
   The value count should correspond to the message parameter
   count. If it is not the cases, a default behaviour
   is foreseen: "?" characters are introduced into the
   computed output resource string. 
   NULL default value coresponds to no parameter values.
 </dd>
    <dt><tt> iNbParams</tt>
   <dd>   iParams array value count.
   0 default value corresponds to no parameter values.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem occured, or <tt>Other: True</tt> 
   otherwise.
   Use 
<a href="#" onClick="openLink('CATRscCatalog','GetError');return false">CATRscCatalog.GetError</a> to retrieve the current error
</dl>
</dl>
<a name="GetError"></a><a name="GetError()"></a> <dt> o <b>GetError</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATString','const CATString')</script>  <b>GetError</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns a syntax error.
 <br><b>Role:</b>
 Returns the first syntax error found detected in the resource 
 catalog during the 
<a href="#" onClick="openLink('CATRscCatalog','LoadRscCatalog');return false">CATRscCatalog.LoadRscCatalog</a> operation. This service should be called after calling 
<a href="#" onClick="openLink('CATRscCatalog','LoadRscCatalog');return false">CATRscCatalog.LoadRscCatalog</a> to check potential errors.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    String containing the error message.
</dl>
</dl>
<a name="LoadRscCatalog"></a><a name="LoadRscCatalog(CATString&amp;,char*)"></a> <dt> o <b>LoadRscCatalog</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>LoadRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iNameOfCatalogToLoad</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iPathName</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Loads a resource catalog by means of its name and (if desired)
 of a path.
 Don't forget to call 
<a href="#" onClick="openLink('CATRscCatalog','GetError');return false">CATRscCatalog.GetError</a> after calling this service to check potential syntax errors in the resource
 catalog.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNameOfCatalogToLoad</tt>
   <dd>   Name of the resource catalog to be retrieved
 </dd>
    <dt><tt> iPathName</tt>
   <dd>   Path for searching the catalog to be retrieved
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    boolean which indicates if the catalog has been loaded.
   <br><b>Legal values</b>: <tt>0: False</tt> 
   if the catalog is not loaded, or <tt>Other: True</tt> 
   if the catalog is loaded.
</dl>
</dl>
<a name="UnloadRscCatalog"></a><a name="UnloadRscCatalog(CATString&amp;)"></a> <dt> o <b>UnloadRscCatalog</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('int','int')</script>  <b>UnloadRscCatalog</b>(<td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iCatalogName</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unloads a resource catalog by means of its name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>    Name of the catalog to be unloaded.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>: <tt>0: False</tt> 
   if a problem has occured, or <tt>Other: True</tt> 
   otherwise.
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATRscCatalog&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATRscCatalog','CATRscCatalog&amp;')</script> <td><tt>iRscCatalog</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRscCatalog</tt>
   <dd>   The resource catalog to be copied
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The resource catalog resulting from the assignment
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATRscCatalog.h</b><br>
If needed, your Imakefile.mk should include the module: <b>JS0GROUP</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
