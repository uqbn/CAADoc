<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecFlatteningItf Interface CATIEhfFlattenManager</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ElecFlatteningItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIEhfFlattenManager','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfFlattenManager','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIEhfFlattenManager','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfFlattenManager','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ElecFlatteningItf Interface CATIEhfFlattenManager</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEhfFlattenManager_38820','CATIEhfFlattenManager','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEhfFlattenManager</b>
</p>
<p>
<b><i> This Interface allows you to extract harness data and flattened 
 the extracted data.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#ExtractHarness(CATString*,CATLISTP(CATBaseUnknown)*,CATLISTP(CATBaseUnknown)*&amp;)"><b>ExtractHarness</b></a>(CATString*,CATLISTP(CATBaseUnknown)*,CATLISTP(CATBaseUnknown)*&amp;)
<dd>  Extract harness.
 <dt> o 
    <a href="#FlattenHarness(CATLISTP(CATBaseUnknown)*)"><b>FlattenHarness</b></a>(CATLISTP(CATBaseUnknown)*)
<dd>  Flatten extracted data.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="ExtractHarness"></a><a name="ExtractHarness(CATString*,CATLISTP(CATBaseUnknown)*,CATLISTP(CATBaseUnknown)*&amp;)"></a> <dt> o <b>ExtractHarness</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ExtractHarness</b>(<td><script type="text/javascript"> activateLink('CATString','CATString*')</script> <td><tt>ipAlgoType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)*')</script> <td><tt>ipListOfCATBaseUnknown</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)*&amp;')</script> <td><tt>opListOfCATBaseUnknown</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Extract harness.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipAlgoType</tt>
   <dd>     Name of Algo used for extract.
  <br><b>Legal values</b>:
   <dl>
     <dt>ExtractWithNewFrom</dt>
     <dd>New From algo</dd>
     <dt>ExtractWithSynchro</dt>
     <dd>Extract With Synchronize algo</dd>
   </dl>
 </dd>
    <dt><tt> ipListOfCATBaseUnknown</tt>
   <dd>     List of pointers on one Electrical Bundle or several Geometrical Bundles from <b>harness model </b>to be extracted.
 </dd>
    <dt><tt> opListOfCATBaseUnknown</tt>
   <dd>     List of pointers on one Electrical Bundle or several Geometrical Bundles extracted into the current root product (flatten model). Output list elements (CATBaseUnknown pointers) need to be released by user to avoid memory leak. Also new will be done for list and its pointer will be returned. User has to delete the list to avoid memory leak.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Extract Harness is successful</dd>
     <dt>E_FAIL </dt>
     <dd>Failed to extract harness - either there are no flattening parameters or some other error</dd>
     <dt>E_INVALIDARG </dt>
     <dd>Invalid input attribute value</dd>
   </dl>
</dl>
</dl>
<a name="FlattenHarness"></a><a name="FlattenHarness(CATLISTP(CATBaseUnknown)*)"></a> <dt> o <b>FlattenHarness</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>FlattenHarness</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATBaseUnknown)','CATLISTP(CATBaseUnknown)*')</script> <td><tt>ipListOfCATBaseUnknown</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Flatten extracted data.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipListOfCATBaseUnknown</tt>
   <dd>     List of pointers on one Electrical Bundle or several Geometrical Bundles from this root product (flatten model) to be flattened.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The interface is successfully retrieved</dd>
     <dt>E_FAIL </dt>
     <dd>Failed to flatten harness - either there are no flattening parameters or some other error</dd>
     <dt>E_INVALIDARG </dt>
     <dd>Invalid input attribute value</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEhfFlattenManager.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEhfInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
