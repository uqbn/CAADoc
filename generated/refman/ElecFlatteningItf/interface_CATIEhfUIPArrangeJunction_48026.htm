<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecFlatteningItf Interface CATIEhfUIPArrangeJunction</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ElecFlatteningItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIEhfUIPArrangeJunction','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfUIPArrangeJunction','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIEhfUIPArrangeJunction','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfUIPArrangeJunction','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ElecFlatteningItf Interface CATIEhfUIPArrangeJunction</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEhfUIPArrangeJunction_48026','CATIEhfUIPArrangeJunction','0');</script>
<p><b>Usage: you can freely reimplement this interface.</b></p>
<hr>
<p>
 interface <b>CATIEhfUIPArrangeJunction</b>
</p>
<p>
<b><i> This Interface CATIEhfUIPArrangeJunction allows “Arrange Junction – User Pattern” command to be implemented by user for the definition of his own branch arrangement rules.</i></b><br>

 Interface must be implemented on component CAAEhfArrangeJunction by extending the component.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#RetrieveUserDirection(CATListPtrCATBaseUnknown&amp;,CATMathPlane&amp;,CATLISTP_CATMathVector&amp;)"><b>RetrieveUserDirection</b></a>(CATListPtrCATBaseUnknown&amp;,CATMathPlane&amp;,CATLISTP_CATMathVector&amp;)
<dd>        
   User has to provide the implementation for this method when he implements this interface on CAAEhfArrangeJunction component.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="RetrieveUserDirection"></a><a name="RetrieveUserDirection(CATListPtrCATBaseUnknown&amp;,CATMathPlane&amp;,CATLISTP_CATMathVector&amp;)"></a> <dt> o <b>RetrieveUserDirection</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RetrieveUserDirection</b>(<td> const <script type="text/javascript"> activateLink('CATListPtrCATBaseUnknown','CATListPtrCATBaseUnknown&amp;')</script> <td><tt>iListOfBundleSegmentExtremity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>iFlatteningPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTP_CATMathVector','CATLISTP_CATMathVector&amp;')</script> <td><tt>ioListOfDirections</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
       
   User has to provide the implementation for this method when he implements this interface on CAAEhfArrangeJunction component.
   This method takes input as connected bundle segment extremities at the junction and tangent of bundle segment selected to remain fixed by user.
   The input bundle segment extremities list is ordered in clock-wise angular fashion with respect to the normal to Flatten Plane selected in Flattening Parameters.
   In case of user has selected fixed bundle segment having a branch point as the selected junction, tangents of both bundle segments of the branch will be input.
   Please refer PES of "Arrange Junction" command for further details.
   Location of header files for argument types in frameworks:
   For CATListPtrCATBaseUnknown type: Application\PublicInterfaces.
   For CATMathPlane, CATMathVector and CATLISTP_CATMathVector types: Mathematics\PublicInterfaces.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfBundleSegmentExtremity</tt>
   <dd>      (Input): List of CATBaseUnknown pointers of bundle segment extremities at the selected junction
   </dd>
    <dt><tt> iFlatteningPlane</tt>
   <dd>      (Input): Active plane in Flattening Parameters. User is supposed to have flattened the model on this plane. Programmer can use this plane to calculate the rotated vectors
   </dd>
    <dt><tt> ioListOfDirections</tt>
   <dd>      (Input and Output): List of CATMathVector pointers. If the vector is valuated in Input, then it is considered as the main direction. For other vector pointers, the implementation must put a value as Output
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Method is successful</dd>
     <dt>E_FAIL </dt>
     <dd>Method Failed</dd>
   </dl>

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEhfUIPArrangeJunction.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEhfInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
