<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ElecFlatteningItf Interface CATIEhfManageLengthTolerance</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ElecFlatteningItf.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIEhfManageLengthTolerance','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfManageLengthTolerance','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIEhfManageLengthTolerance','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIEhfManageLengthTolerance','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ElecFlatteningItf Interface CATIEhfManageLengthTolerance</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIEhfManageLengthTolerance_55991','CATIEhfManageLengthTolerance','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIEhfManageLengthTolerance</b>
</p>
<p>
<b><i> This Interface CATIEhfManageLengthTolerance allows to manage the creation, removal and retrieve of
 Length Tolerance objects on a Branch.</i></b><br>

 This interface is implemented on a Branch (Branchable) bundle segment.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateLengthTolerance(CATIEhfLengthTolerance**,CATBaseUnknown*,CATBaseUnknown*,CATIProduct*,CATBaseUnknown*,CATICkeInst*)"><b>CreateLengthTolerance</b></a>(CATIEhfLengthTolerance**,CATBaseUnknown*,CATBaseUnknown*,CATIProduct*,CATBaseUnknown*,CATICkeInst*)
<dd>  This method allows to create Length Tolerance on a Branch.
 <dt> o 
    <a href="#ListOfLengthTolerance(CATListValCATBaseUnknown_var**)"><b>ListOfLengthTolerance</b></a>(CATListValCATBaseUnknown_var**)
<dd>  This method allows to provide the list of Length Tolerance on the selected branch.
 <dt> o 
    <a href="#RemoveLengthTolerance(CATListValCATBaseUnknown_var*,CATIProduct*,CATBoolean)"><b>RemoveLengthTolerance</b></a>(CATListValCATBaseUnknown_var*,CATIProduct*,CATBoolean)
<dd>  This method allows to remove the applied Length Tolerance on branch.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateLengthTolerance"></a><a name="CreateLengthTolerance(CATIEhfLengthTolerance**,CATBaseUnknown*,CATBaseUnknown*,CATIProduct*,CATBaseUnknown*,CATICkeInst*)"></a> <dt> o <b>CreateLengthTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateLengthTolerance</b>(<td><script type="text/javascript"> activateLink('CATIEhfLengthTolerance','CATIEhfLengthTolerance**')</script> <td><tt>opILengthTolerance</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipFixExtremity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipMoveExtremity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>ipIProdRoot</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>ipDimension</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeInst','CATICkeInst*')</script> <td><tt>ipLengthTolerance</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method allows to create Length Tolerance on a Branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opILengthTolerance</tt>
   <dd>     (Output): Return a pointer on the new Length Tolerance.
 </dd>
    <dt><tt> ipFixExtremity</tt>
   <dd>     (Input): First extremity for the definition of the portion on bundle segment.
 It is considered as the FIX point.
 Following elements are authorized for the selection:
 -    Bundle Segment extremity (device connection point, branch point)
 -    Route Definition point (including Support)
 -    Protection Extremity Point
 </dd>
    <dt><tt> ipMoveExtremity</tt>
   <dd>     (Input): Second extremity for the definition of the portion on bundle segment.
 It is considered as the MOVE point. Elements authorised for selection are same as Fixed extremity
 </dd>
    <dt><tt> ipIProdRoot</tt>
   <dd>     (Input): Pointer on the "Root" Product of Flattened document.
 </dd>
    <dt><tt> ipDimension</tt>
   <dd>     (Input): Pointer to a Dimension which will allow to show the ‘dual value’ in the selected Dimension after applying the Length Tolerance.
 This input is optional, it can be NULL.
 </dd>
    <dt><tt> ipLengthTolerance</tt>
   <dd>     (Input): Length Tolerance value to apply (mm).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Length Tolerance is successfully applied</dd>
     <dt>E_INVALIDARG</dt>
     <dd>If the two inputs “ipFixExtremity” and “IpMoveExtremity” do not belong to the same branchable bundle
 OR
 the type of those inputs are different from the authorized one</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while applying the Length Tolerance</dd>
   </dl>
</dl>
</dl>
<a name="ListOfLengthTolerance"></a><a name="ListOfLengthTolerance(CATListValCATBaseUnknown_var**)"></a> <dt> o <b>ListOfLengthTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListOfLengthTolerance</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var**')</script> <td><tt>oListLengthTolerances</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method allows to provide the list of Length Tolerance on the selected branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListLengthTolerances</tt>
   <dd>     (Output): List of pointers of the Length Tolerance objects on the branch.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>The Length Tolerance features successfully retrieved</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while retrieving the Length Tolerance features</dd>
   </dl>
</dl>
</dl>
<a name="RemoveLengthTolerance"></a><a name="RemoveLengthTolerance(CATListValCATBaseUnknown_var*,CATIProduct*,CATBoolean)"></a> <dt> o <b>RemoveLengthTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveLengthTolerance</b>(<td><script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var*')</script> <td><tt>ipListLengthTolerances</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIProduct','CATIProduct*')</script> <td><tt>ipIProdRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iKeepExtraLength</tt><td><tt>= FALSE </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 This method allows to remove the applied Length Tolerance on branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ipListLengthTolerances</tt>
   <dd>     (Input): List of pointer on the Length Tolerance object which will be removed.
 </dd>
    <dt><tt> ipIProdRoot</tt>
   <dd>     (Input): Pointer on the "Root" Product of Flattened document.
 </dd>
    <dt><tt> iKeepExtraLength</tt>
   <dd>     (Input, Optional): Optional setting during the removal of Length Tolerance:
 If TRUE, the result of the length adjustment applied by the ‘Length Tolerance’ command will be kept. In this case, the network which links to the MOVE extremity will NOT be moved. The Length Tolerance value will be added to the Design Length attribute of the bundle segment to make the bundle segment in standard mode (not in scale mode).
 If FALSE (this is the Default value), the added or reduced length on the given portion by the Length Tolerance command will be removed, and the network which links to the MOVE extremity will be moved back to the original position.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT value
   <br><b>Legal values</b>:
   <dl>
     <dt>S_OK</dt>
     <dd>Length Tolerance features successfully removed</dd>
     <dt>E_FAIL</dt>
     <dd>An error occurred while removing the Length Tolerance features</dd>
   </dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIEhfManageLengthTolerance.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATEhfInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
