<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATTTRSInterfaces Interface CATIRGETopology</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATTTRSInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIRGETopology','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIRGETopology','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIRGETopology','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIRGETopology','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATTTRSInterfaces Interface CATIRGETopology</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIRGETopology_28044','CATIRGETopology','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIRGETopology</b>
</p>
<p>
<b><i> Interface that allows to retreive topological information
 <b>Role</b>: <b>Topologiy</b> retreive topological information: Cells from a RGE</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetCells(CATLISTP(CATCell)**)"><b>GetCells</b></a>(CATLISTP(CATCell)**)
<dd>  Retreive the cells of a RGE.
 <dt> o 
    <a href="#GetCellsAndBodies(CATLISTV(CATBaseUnknown_var)**,CATLISTV(CATBaseUnknown_var)**)"><b>GetCellsAndBodies</b></a>(CATLISTV(CATBaseUnknown_var)**,CATLISTV(CATBaseUnknown_var)**)
<dd>  Retreive the cells and their bodies of a RGE.
 <dt> o 
    <a href="#GetOutsideMaterialCoefficientOnNormal(int*)"><b>GetOutsideMaterialCoefficientOnNormal</b></a>(int*)
<dd>  Retrieves the coefficient to apply on the surface normal.
 <dt> o 
    <a href="#GetTransformation(CATMathTransformation**)"><b>GetTransformation</b></a>(CATMathTransformation**)
<dd>  Get the transformation to apply to the cells.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetCells"></a><a name="GetCells(CATLISTP(CATCell)**)"></a> <dt> o <b>GetCells</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCells</b>(<td><script type="text/javascript"> activateLink('CATLISTP(CATCell)','CATLISTP(CATCell)**')</script> <td><tt>opCellList</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retreive the cells of a RGE.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opCellList</tt>
   <dd>  List of the Cells of the RGE
 as a explicit AddRef is done on the Cells,
 after using opCellList, do a Release() on each its member
 before deleting the list.
 Example of utilisation :
 CATLISTP (CATCell) *List;
 RGETopology -> GetCell (&List);
 ...
 int CellCount = List->Size();
 for (int CellIdx=1; CellIdx<=CellCount; CellIdx++)
 {
   *List[CellIdx]->Release();
 }
 delete List;
 ...</dd>
</dl>
</dl>
</dl>
<a name="GetCellsAndBodies"></a><a name="GetCellsAndBodies(CATLISTV(CATBaseUnknown_var)**,CATLISTV(CATBaseUnknown_var)**)"></a> <dt> o <b>GetCellsAndBodies</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetCellsAndBodies</b>(<td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)**')</script> <td><tt>opCellList</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLISTV(CATBaseUnknown_var)','CATLISTV(CATBaseUnknown_var)**')</script> <td><tt>opBodyList</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Retreive the cells and their bodies of a RGE.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> opCellList</tt>
   <dd>  List of the Cells of the RGE

 </dd>
    <dt><tt> pListBody</tt>
   <dd>  List of the Bodies of cells.

 Example of utilisation :
 CATLISTV(CATBaseUnknown_var)* pListCell = NULL;
 CATLISTV(CATBaseUnknown_var)* pListBody = NULL;
 HRESULT rc = piRGETopology -> GetCellsAndBodies (&pListCell, &pListBody);
 if( SUCCEEDED(rc) )
 {
   int CellCount = pListCell -> Size();
   for (int CellIdx=1; CellIdx<=CellCount; CellIdx++)
   {
      ...
      
   }
   delete pListCell;
   pListCell = NULL;

   delete pListBody;
   pListBody = NULL;
 }
 ...</dd>
</dl>
</dl>
</dl>
<a name="GetOutsideMaterialCoefficientOnNormal"></a><a name="GetOutsideMaterialCoefficientOnNormal(int*)"></a> <dt> o <b>GetOutsideMaterialCoefficientOnNormal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetOutsideMaterialCoefficientOnNormal</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>oCoefficient</tt>)<script type="text/javascript"> activateLink('0',' const= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the coefficient to apply on the surface normal.
 The result is valid when the cells returned by the GetCells method are faces.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oCoefficient</tt>
   <dd>    1 if the orientation of material and geometry underlying the face are the same.
   -1 if the orientation of material and geometry underlying the face are opposite.
    0 if the system didn't succeed in computing the result.</dd>
</dl>
</dl>
</dl>
<a name="GetTransformation"></a><a name="GetTransformation(CATMathTransformation**)"></a> <dt> o <b>GetTransformation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTransformation</b>(<td><script type="text/javascript"> activateLink('CATMathTransformation','CATMathTransformation**')</script> <td><tt>oMathTransfo</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Get the transformation to apply to the cells.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMathTransfo</tt>
   <dd> matrix of transformation.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIRGETopology.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTTRSItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
