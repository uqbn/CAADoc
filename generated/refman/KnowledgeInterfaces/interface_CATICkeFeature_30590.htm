<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeFeature</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeFeature','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFeature','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeFeature','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFeature','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeFeature</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeFeature_30590','CATICkeFeature','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../KnowledgeInterfaces/class_CATKweInstanceAdapter_40288.htm">CATKweInstanceAdapter</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATICkeFeature</b>
</p>
<p>
<b><i>    Interface dedicated to manipulating objects in Knowledgeware.</i></b><br>


 <b>Role</b>: this interface allows one to make his objects utilizable
 in KnowledgeWare rule, check and formula editors.<br>
 <br>
 Implementations of that interface should derive from CATKweInstanceAdapter.

 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>

 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIInstance','');return false">CATIInstance</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIType','');return false">CATIType</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetType()"><b>GetType</b></a>()
<dd>  Returns the type of the object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetType"></a><a name="GetType()"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetType</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of the object.
 This type is used to check that the formula (rule or check) syntax is correct. 
 If your object implements CATIInstance, the classical implementation returns the CATIInstance::Type method.
 If not, usually the implementation consists in calling CATGlobalFunctions::GetTypeDictionary()->FindTypeSafe("TypeName","PackageName",oType)

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the main type of the object. It is also a CATIType.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeFeature.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
