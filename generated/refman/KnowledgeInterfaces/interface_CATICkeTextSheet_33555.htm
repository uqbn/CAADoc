<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeTextSheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeTextSheet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeTextSheet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeTextSheet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeTextSheet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeTextSheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeTextSheet_33555','CATICkeTextSheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeTextSheet</b>
</p>
<p>
<b><i> This interface is an encapsulation of an array of arrays (a sheet) <br>
 of strings contained in a file <br>
 The file has to be a tabulated text file.</i></b><br>
 Its format has to be<br>
 string1 (tab) string2 etc <br>
 (n lines) <br>
 stringn (tab) stringn+1 etc <br>
 Empty strings are allowed, but not in the first row because the number of <br>
 columns is computed using the first row, except if you use the forceWidth <br>
 argument of the UpdateLocalCopy method (ancestor CATICkeSheet interface <br>
 method)<br><br>
 To create a CATICkeTextSheet, use the CATICkeParmFactory::CreateSheet method<br>
 with a text file path as argument
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDesignTable','');return false">CATIDesignTable</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeSheet','');return false">CATICkeSheet</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddRow(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)"><b>AddRow</b></a>(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)
<dd>  This methods adds a row in the text file.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddRow"></a><a name="AddRow(CATListOfCATUnicodeString&amp;,CATCke::Boolean,CATCke::Boolean)"></a> <dt> o <b>AddRow</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>AddRow</b>(<td><script type="text/javascript"> activateLink('CATListOfCATUnicodeString','CATListOfCATUnicodeString&amp;')</script> <td><tt>row</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>init</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>save</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 This methods adds a row in the text file.
 For vertical sheets, this method is much more effective than several calls to SetCell
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> row</tt>
   <dd> the list of strings to add at the end of the file.
 </dd>
    <dt><tt> init</tt>
   <dd> opens the file if equal to CATCke::True
 </dd>
    <dt><tt> save</tt>
   <dd> saves the file if equal to CATCke::True
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATCke::True if the operations succeeds, CATCke::False else
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeTextSheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
