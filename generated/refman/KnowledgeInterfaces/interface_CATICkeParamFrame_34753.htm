<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeParamFrame</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeParamFrame','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeParamFrame','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeParamFrame','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeParamFrame','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeParamFrame</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeParamFrame_34753','CATICkeParamFrame','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeParamFrame</b>
</p>
<p>
<b><i>    Interface to create an editor from a parameter (persistant or volatile).</i></b><br>

 <b>Role</b>: From this interface you'll get an editor of the parameter that you will integrate in a complex dialog.
 <br>It can be used on feature literals or C++ values.<br>
 This frame will offer a way to show a parameter value or to modify it.<br>
  <li> All informations are available on the parameter</li>
  <li> if the parameter is ReadOnly, or with a Visibility equal to false or</li>
  is valuated by a relation, the frame sensitivity will be false<br>
=============================================================================<br>
 Depending on the type of the parameter, the frame will contain an editor, a combo<br> 
 (for enumere parameters), or a spinner<br>
<br>
 The frame style is used to detail the frame look :<br>
   <li> CATCkeNoLabel / CATCkeLabel : indicates if you want to have a label before your editor</li>
   <li> CATCkeWithSpinner : to have a spinner and not an editor on real parameters</li>
   <li> CATCkeNoRename : not to have the rename command available on contextual menu</li>
   <li> CATCkeNoFormula : not to have the Edit formula command available on contextual menu</li>
   method is triggered on the CATDlgFrame.<br>
<br>
 To customise the NLS, all you have to know is the ressources structure<br>
 The returned CATDlgFrame is a frame named "ParamFrame"<br>
 The children of this frame are :   <br>
   <li>if CATCkeLabel option is chosen, the name of the label is "Label", and its value defaults to "Label",
       if not given by NLS tag "ParamFrame.EnglobingFrame.IntermediateFrame.Label.Title" .</li>
   <li>if CATCkeWithSpinner option is chosen, the name of the editor is "Spinner" .</li>
   <li>if it is a combo, its name is "Combo"</li>
   <li>if not, it's an editor whose name is "Value"</li>
<br>
 If the last argument is different from "", then the name of the CATDlgFrame will<br>
 be the name in argument instead of "ParamFrame" <br>   
<br>
=============================================================================<br>
 Usage Note <br>
  //  Imagine you have a parameter p <br>
  CATICkeParm_var p = ...;<br>
  // and a CATDialog d<br>
  CATDialog *d = ...<br>
  <br>
  // QI on CATICkeParamFrame <br>
  CATICkeParamFrame_var pf = p;<br>
<br>
  // Get the frame (spinner, No formulas, and no label<br>
  CATDlgFrame *fr = pf->GetInPanelEdition (NULL_var,d,CATCkeNoLabel | CATCkeNoFormula | CATCkeNoRename | CATCkeWithSpinner);<br>
<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetInPanelEdition(CATIParmPublisher_var&amp;,CATDialog*,CATCkeFrameStyle,CATUnicodeString&amp;)"><b>GetInPanelEdition</b></a>(CATIParmPublisher_var&amp;,CATDialog*,CATCkeFrameStyle,CATUnicodeString&amp;)
<dd>  Creates a frame-editor linked to a literal to include in your panel.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetInPanelEdition"></a><a name="GetInPanelEdition(CATIParmPublisher_var&amp;,CATDialog*,CATCkeFrameStyle,CATUnicodeString&amp;)"></a> <dt> o <b>GetInPanelEdition</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATDlgFrame','CATDlgFrame *')</script>  <b>GetInPanelEdition</b>(<td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDialog','CATDialog*')</script> <td><tt>iFather</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeFrameStyle','CATCkeFrameStyle')</script> <td><tt>iStyle</tt><td><tt>= CATCkeLabel</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLabelName</tt><td><tt>= ""</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a frame-editor linked to a literal to include in your panel.
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRroot</tt>
   <dd> the place where formulas will be added (can be NULL_var if no formulas)  </dd>
    <dt><tt> iFather</tt>
   <dd> the father CATDialog object </dd>
    <dt><tt> iStyle</tt>
   <dd>  the frame style  </dd>
    <dt><tt> iLabelName</tt>
   <dd> if <> from "", it's the name (CATString) of the frame </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  a frame containing the editor associated to the literal
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeParamFrame.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
