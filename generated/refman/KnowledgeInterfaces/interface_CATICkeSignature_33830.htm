<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeSignature</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeSignature','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeSignature','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeSignature','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeSignature','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeSignature</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeSignature_33830','CATICkeSignature','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeSignature</b>
</p>
<p>
<b><i>    Interface dedicated to signature management.</i></b><br>

 <b>Role</b>: A signature is a definition of the arguments of a function, method, operator in the KBware language.<br>
 for example : "name [arg: mode Type] : mode Type"  ie: "Real sin (x: in int): out Real".<br>
 Such a signature is used to check the types compatibility when writing a relation<br>
 Example : cos(sin(tan(c)*2))<br>
 If you want to create a new function usable in formulas/checks/programs, you'll have<br>
 to define a signature and an evaluator<br>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeArg','');return false">CATICkeArg</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddArgument(CATICkeArg_var)"><b>AddArgument</b></a>(CATICkeArg_var)
<dd>  Add an argument to the list.
 <dt> o 
    <a href="#Family()"><b>Family</b></a>()
<dd>  Returns the family of the signature.
 <dt> o 
    <a href="#HasVariableArgNb()"><b>HasVariableArgNb</b></a>()
<dd>  Indicates if the number of argument is variable.
 <dt> o 
    <a href="#IsUserVisible()"><b>IsUserVisible</b></a>()
<dd>  Indicates if the function is visible.
 <dt> o 
    <a href="#Name()"><b>Name</b></a>()
<dd>  Returns the name of the signature.
 <dt> o 
    <a href="#Notation()"><b>Notation</b></a>()
<dd>  Returns signatures notation.
 <dt> o 
    <a href="#Prototype()"><b>Prototype</b></a>()
<dd>  Returns the list of arguments of this signature.
 <dt> o 
    <a href="#PrototypeSize()"><b>PrototypeSize</b></a>()
<dd>  Returns the number of arguments of this signature.
 <dt> o 
    <a href="#RankOfOptionalArguments()"><b>RankOfOptionalArguments</b></a>()
<dd>  
 <dt> o 
    <a href="#Rename(CATUnicodeString&amp;)"><b>Rename</b></a>(CATUnicodeString&amp;)
<dd>  Renames the signature.
 <dt> o 
    <a href="#ReturnedArg()"><b>ReturnedArg</b></a>()
<dd>  Returns the returned argument of the signature.
 <dt> o 
    <a href="#SetFamily(CATUnicodeString&amp;)"><b>SetFamily</b></a>(CATUnicodeString&amp;)
<dd>  Sets family of the signature.
 <dt> o 
    <a href="#SetNotation(CATICkeSignature::Mode,CATCkeShowExpression)"><b>SetNotation</b></a>(CATICkeSignature::Mode,CATCkeShowExpression)
<dd>  Sets notation of the signature.
 <dt> o 
    <a href="#SetPrototype(CATCkeListOfArg)"><b>SetPrototype</b></a>(CATCkeListOfArg)
<dd>  Modifies the whole list of arguments.
 <dt> o 
    <a href="#SetRankOfOptionalArguments(int)"><b>SetRankOfOptionalArguments</b></a>(int)
<dd>  
 <dt> o 
    <a href="#SetReturnedArg(CATICkeArg_var&amp;)"><b>SetReturnedArg</b></a>(CATICkeArg_var&amp;)
<dd>  Sets the returned argument.
 <dt> o 
    <a href="#SetUserVisibility(CATCke::Boolean&amp;)"><b>SetUserVisibility</b></a>(CATCke::Boolean&amp;)
<dd>  Modifies the visibility of the function.
 <dt> o 
    <a href="#SetVariableArgNb(CATCke::Boolean&amp;)"><b>SetVariableArgNb</b></a>(CATCke::Boolean&amp;)
<dd>  Modifies the variable number of arguments property.
 <dt> o 
    <a href="#Show()"><b>Show</b></a>()
<dd>  Shows the signature to the user.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#Mode"><b>Mode</b></a>
<dd>  Signature mode: indicates how this function will be written in KBWare.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddArgument"></a><a name="AddArgument(CATICkeArg_var)"></a> <dt> o <b>AddArgument</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddArgument</b>(<td> const <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script> <td><tt>iArgToAdd</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add an argument to the list.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAgrToAdd</tt>
   <dd> argument to be added</dd>
</dl>
</dl>
</dl>
<a name="Family"></a><a name="Family()"></a> <dt> o <b>Family</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Family</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the family of the signature.<br>
 The family is used to classify signatures in the wizard.
</dl>
<a name="HasVariableArgNb"></a><a name="HasVariableArgNb()"></a> <dt> o <b>HasVariableArgNb</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>HasVariableArgNb</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the number of argument is variable.<br>
 those signature must have at least one argument that defines the type of variable arguments.<br>   
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it has a variable number of arguments.
 <tt>CATCke::False</tt> if it has a constant number of arguments (default value).
</dl>
</dl>
<a name="IsUserVisible"></a><a name="IsUserVisible()"></a> <dt> o <b>IsUserVisible</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsUserVisible</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the function is visible.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it is visible.
 <tt>CATCke::False</tt> if not.
</dl>
</dl>
<a name="Name"></a><a name="Name()"></a> <dt> o <b>Name</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Name</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the signature.<br>
 (example : "sin")
</dl>
<a name="Notation"></a><a name="Notation()"></a> <dt> o <b>Notation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script>  <b>Notation</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns signatures notation.<br>
 Indicates if it is an operator, a function, a method or something else<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: the notation can be <tt>Function</tt> to be seen as a function : f(x,y), or
 <tt>Method</tt> to be seen as a method : x,f(y), or
 <tt>Operator</tt> do not use, or
 <tt>Special</tt> do not use, or
 <tt>Attribut</tt> to be seen as an attribute : x.f.
</dl>
</dl>
<a name="Prototype"></a><a name="Prototype()"></a> <dt> o <b>Prototype</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeListOfArg','CATCkeListOfArg')</script>  <b>Prototype</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of arguments of this signature.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  list of arguments (not to be deallocated)
</dl>
</dl>
<a name="PrototypeSize"></a><a name="PrototypeSize()"></a> <dt> o <b>PrototypeSize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>PrototypeSize</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of arguments of this signature.<br>
 (Can be 0).
</dl>
<a name="RankOfOptionalArguments"></a><a name="RankOfOptionalArguments()"></a> <dt> o <b>RankOfOptionalArguments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>RankOfOptionalArguments</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   Indicates if the signature has optional arguments and starting from which argument (rank 1 to N).
 0 to declare that there is no optional argument (by default). 1 to N
</dl>
</dl>
<a name="Rename"></a><a name="Rename(CATUnicodeString&amp;)"></a> <dt> o <b>Rename</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Rename</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewName</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Renames the signature.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iNewName</tt>
   <dd> New name</dd>
</dl>
</dl>
</dl>
<a name="ReturnedArg"></a><a name="ReturnedArg()"></a> <dt> o <b>ReturnedArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>ReturnedArg</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the returned argument of the signature.
</dl>
<a name="SetFamily"></a><a name="SetFamily(CATUnicodeString&amp;)"></a> <dt> o <b>SetFamily</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetFamily</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFamilyName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets family of the signature.<br>
 The family is used to classify signatures in the wizard. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFamilyName</tt>
   <dd> NLS name for family</dd>
</dl>
</dl>
</dl>
<a name="SetNotation"></a><a name="SetNotation(CATICkeSignature::Mode,CATCkeShowExpression)"></a> <dt> o <b>SetNotation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetNotation</b>(<td><script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script> <td><tt>iNotation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeShowExpression','CATCkeShowExpression')</script> <td><tt>iHowToShow</tt><td><tt>= NULL</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets notation of the signature.
 Function is default value.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNotation</tt>
   <dd> notation to be set. <br><b>Legal values</b>: the notation can be
 <tt>Function</tt> to be seen as a function : f(x,y), or
 <tt>Method</tt> to be seen as a method : x,f(y), or
 <tt>Operator</tt> do not use, or
 <tt>Special</tt> do not use, or
 <tt>Attribut</tt> to be seen as an attribute : x.f.
 </dd>
    <dt><tt> iHowToShow</tt>
   <dd> function pointer to specify how to show such a signature in special cases.</dd>
</dl>
</dl>
</dl>
<a name="SetPrototype"></a><a name="SetPrototype(CATCkeListOfArg)"></a> <dt> o <b>SetPrototype</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPrototype</b>(<td> const <script type="text/javascript"> activateLink('CATCkeListOfArg','CATCkeListOfArg')</script> <td><tt>iListOfArguments</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the whole list of arguments.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfArguments</tt>
   <dd> list of arguments to replace</dd>
</dl>
</dl>
</dl>
<a name="SetRankOfOptionalArguments"></a><a name="SetRankOfOptionalArguments(int)"></a> <dt> o <b>SetRankOfOptionalArguments</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetRankOfOptionalArguments</b>(<td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iRankForOptionalArguments</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRankForOptionalArguments</tt>
   <dd> Defines if the signature has optional arguments and starting from which argument (rank 1 to N).
 0 to declare that there is no optional argument (by default). 1 to N</dd>
</dl>
</dl>
</dl>
<a name="SetReturnedArg"></a><a name="SetReturnedArg(CATICkeArg_var&amp;)"></a> <dt> o <b>SetReturnedArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetReturnedArg</b>(<td> const <script type="text/javascript"> activateLink('CATICkeArg_var','CATICkeArg_var&amp;')</script> <td><tt>iReturnedArg</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the returned argument.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReturnedArg</tt>
   <dd> returned arg</dd>
</dl>
</dl>
</dl>
<a name="SetUserVisibility"></a><a name="SetUserVisibility(CATCke::Boolean&amp;)"></a> <dt> o <b>SetUserVisibility</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetUserVisibility</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iVariable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the visibility of the function.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVariable</tt>
   <dd> <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it should be visible.
 <tt>CATCke::False</tt> if not.</dd>
</dl>
</dl>
</dl>
<a name="SetVariableArgNb"></a><a name="SetVariableArgNb(CATCke::Boolean&amp;)"></a> <dt> o <b>SetVariableArgNb</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetVariableArgNb</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iVariable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Modifies the variable number of arguments property.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVariable</tt>
   <dd> <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it has a variable number of arguments.
 <tt>CATCke::False</tt> if it has a constant number of arguments (default value).</dd>
</dl>
</dl>
</dl>
<a name="Show"></a><a name="Show()"></a> <dt> o <b>Show</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Show</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Shows the signature to the user.<br>
 Exampel: "sin(Real) : Real"
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="Mode"> <dt> o <b>Mode</b>
<dl>
  <dd>
<pre>
enum <b>Mode</b> {
  Function,
  Method,
  Operator,
  Special,
  Attribute,
  Event
}
</pre>
 Signature mode: indicates how this function will be written in KBWare.
 <br><b>Legal values</b>: the notation can be
 <tt>Function</tt> to be seen as a function : f(x,y), or
 <tt>Method</tt> to be seen as a method : x,f(y), or
 <tt>Operator</tt> do not use, or
 <tt>Special</tt> do not use, or
 <tt>Attribut</tt> to be seen as an attribute : x.f.
</dl>
<hr>
 This object is included in the file: <b>CATICkeSignature.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
