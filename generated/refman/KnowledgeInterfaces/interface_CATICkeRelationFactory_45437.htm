<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeRelationFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeRelationFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeRelationFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeRelationFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeRelationFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeRelationFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeRelationFactory_45437','CATICkeRelationFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeRelationFactory</b>
</p>
<p>
<b><i>    Interface dedicated to parameter sets creation.</i></b><br>

 <b>Role</b>: manages the creation of parameter sets.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIParmPublisher','');return false">CATIParmPublisher</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIParmManipulator','');return false">CATIParmManipulator</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Copy(CATICkeRelation_var&amp;)"><b>Copy</b></a>(CATICkeRelation_var&amp;)
<dd>  Creates a relation from another by copying it.
 <dt> o 
    <a href="#CreateAction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeSignature_var&amp;,CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)"><b>CreateAction</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeSignature_var&amp;,CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)
<dd>  Do not use.
 <dt> o 
    <a href="#CreateConstraint(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"><b>CreateConstraint</b></a>(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)
<dd>  
 <dt> o 
    <a href="#CreateDesignTable(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"><b>CreateDesignTable</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)
<dd>  Creates a fully functional design table (with its embedded sheet) from a file (excel or text file).
 <dt> o 
    <a href="#CreateFunctionalExpression(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"><b>CreateFunctionalExpression</b></a>(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)
<dd>  
 <dt> o 
    <a href="#CreateKweMacro(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>CreateKweMacro</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>  Creates a feature macro with arguments.
 <dt> o 
    <a href="#CreateParameterSet(CATUnicodeString)"><b>CreateParameterSet</b></a>(CATUnicodeString)
<dd>  Creates a parameter set.
 <dt> o 
    <a href="#CreateProgram(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"><b>CreateProgram</b></a>(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)
<dd>  
 <dt> o 
    <a href="#CreateReaction()"><b>CreateReaction</b></a>()
<dd>  Creates a feature reaction.
 <dt> o 
    <a href="#CreateRelationSet(CATUnicodeString)"><b>CreateRelationSet</b></a>(CATUnicodeString)
<dd>  Creates a relation set.
 <dt> o 
    <a href="#CreateSheet(CATUnicodeString&amp;,int)"><b>CreateSheet</b></a>(CATUnicodeString&amp;,int)
<dd>  Create a design table sheet.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Copy"></a><a name="Copy(CATICkeRelation_var&amp;)"></a> <dt> o <b>Copy</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeRelation','CATICkeRelation_var')</script>  <b>Copy</b>(<td> const <script type="text/javascript"> activateLink('CATICkeRelation_var','CATICkeRelation_var&amp;')</script> <td><tt>iRelationToCopy</tt>)<script type="text/javascript"> activateLink('0',' = 0 ')</script>  </table></dt>
<dl>
  <dd>
 Creates a relation from another by copying it.
 Works only on formulas, not on rules or checks.
 Note that second relation will reference the same parameters, il will be deactivated
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelationToCopy</tt>
   <dd> parameter to copy </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATICkeRelation_var relation copied
</dl>
</dl>
<a name="CreateAction"></a><a name="CreateAction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeSignature_var&amp;,CATCkeListOfParm,CATUnicodeString&amp;,CATIParmPublisher_var&amp;,CATCke::Boolean&amp;)"></a> <dt> o <b>CreateAction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeRelation','CATICkeRelation_var')</script>  <b>CreateAction</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iRelationName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iComment</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFamily</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeSignature_var','CATICkeSignature_var&amp;')</script> <td><tt>iSignature</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iListOfParameters</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iBody</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt><td><tt>= NULL_var</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iRealnames</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Do not use.
</dl>
<a name="CreateConstraint"></a><a name="CreateConstraint(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"></a> <dt> o <b>CreateConstraint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeExpression','CATICkeExpression_var')</script>  <b>CreateConstraint</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>name</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>comment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>formalSignature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>body</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R16 CATICkeExpressionFactory#CreateConstraint <br>    
 Creates a check expression.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> name</tt>
   <dd> name of the expression 
 </dd>
    <dt><tt> comment</tt>
   <dd> comment of the expression
 </dd>
    <dt><tt> formalSignature</tt>
   <dd> This string describes the type of used parameters and the returned type of the expression. <br>
 For a check, no value is returned<br>
 </dd>
    <dt><tt> body</tt>
   <dd> the body of the check expression</dd>
</dl>
</dl>
</dl>
<a name="CreateDesignTable"></a><a name="CreateDesignTable(CATUnicodeString&amp;,CATUnicodeString&amp;,CATUnicodeString&amp;,int,int)"></a> <dt> o <b>CreateDesignTable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIDesignTable','CATIDesignTable_var')</script>  <b>CreateDesignTable</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iRelationName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iComment</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>orientation</tt><td><tt>= 1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>sheetWithoutFile</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a fully functional design table (with its embedded sheet) from a file (excel or text file).<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelationName</tt>
   <dd> The name of the design table </dd>
    <dt><tt> iComment</tt>
   <dd> The comment associated to the design table </dd>
    <dt><tt> iFilePath</tt>
   <dd>	The path of the sheet file.
	- If param sheetWithoutFile = 0 :
			if this path contains ".xls", the Excel format is assumed, else the tabulated text format is used.
			If this path is empty, no sheet is aggregated to the design table, and the user has to create a sheet 
			(method CreateSheet) and associate it to an excel or text file)
	- If param sheetWithoutFile = 1 :
			no matter with the content of this path
 </dd>
    <dt><tt> orientation</tt>
   <dd>	1 if vertical, 0 else (used only if path != "" and sheetWithoutFile = 0)
 </dd>
    <dt><tt> sheetWithoutFile</tt>
   <dd>	If sheetWithoutFile = 1, a model sheet is created (sheet with persitent memory storage, but no file)
	and it won't be possible to associate a file to this sheet.</dd>
</dl>
</dl>
</dl>
<a name="CreateFunctionalExpression"></a><a name="CreateFunctionalExpression(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"></a> <dt> o <b>CreateFunctionalExpression</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeExpression','CATICkeExpression_var')</script>  <b>CreateFunctionalExpression</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>name</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>comment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>formalSignature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>body</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R16 CATICkeExpressionFactory#CreateFunctionalExpression <br>    
 Creates a functional expression (to be used in a knowledgeware formula).
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> name</tt>
   <dd> name of the expression 
 </dd>
    <dt><tt> comment</tt>
   <dd> comment of the expression
 </dd>
    <dt><tt> formalSignature</tt>
   <dd> This string describes the type of used parameters and the returned type of the expression. <br>
 For a formula, the returned value is the type of the output parameter of the formula<br>
 </dd>
    <dt><tt> body</tt>
   <dd> the body of the functional expression</dd>
</dl>
</dl>
</dl>
<a name="CreateKweMacro"></a><a name="CreateKweMacro(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>CreateKweMacro</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeFunction','CATICkeFunction_var')</script>  <b>CreateKweMacro</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgumentString</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iScriptText</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a feature macro with arguments.<br>
 It is initialized with the given arguments
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgumentString</tt>
   <dd> the argument string </dd>
    <dt><tt> iScriptText</tt>
   <dd> the script text </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The feature macro 
  <dt> <b>Example:</b> 
  <dd> 	CATICkeFunction_var MyFunc = MyFact->CreateKweMacro("MyArg","MyArg.Value = 10.0\nEnd Sub");
</dl>
</dl>
<a name="CreateParameterSet"></a><a name="CreateParameterSet(CATUnicodeString)"></a> <dt> o <b>CreateParameterSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIParmPublisher','CATIParmPublisher_var')</script>  <b>CreateParameterSet</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>name</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates a parameter set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> name</tt>
   <dd> name of the parameter set. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the newly created relation set viewed a a parameter publisher.
</dl>
</dl>
<a name="CreateProgram"></a><a name="CreateProgram(CATUnicodeString,CATUnicodeString,CATUnicodeString,CATUnicodeString)"></a> <dt> o <b>CreateProgram</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeExpression','CATICkeExpression_var')</script>  <b>CreateProgram</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>name</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>comment</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>formalSignature</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>body</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R16 CATICkeExpressionFactory#CreateProgram <br>    
 Creates a rule expression.
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> name</tt>
   <dd> name of the expression 
 </dd>
    <dt><tt> comment</tt>
   <dd> comment of the expression
 </dd>
    <dt><tt> formalSignature</tt>
   <dd> This string describes the type of used parameters and the returned type of the expression. <br>
 For a rule, no value is returned<br>
 </dd>
    <dt><tt> body</tt>
   <dd> the body of the rule expression</dd>
</dl>
</dl>
</dl>
<a name="CreateReaction"></a><a name="CreateReaction()"></a> <dt> o <b>CreateReaction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATISpecObject','CATISpecObject_var')</script>  <b>CreateReaction</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates a feature reaction.
</dl>
<a name="CreateRelationSet"></a><a name="CreateRelationSet(CATUnicodeString)"></a> <dt> o <b>CreateRelationSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIParmPublisher','CATIParmPublisher_var')</script>  <b>CreateRelationSet</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>name</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Creates a relation set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> name</tt>
   <dd> name of the relation set. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the newly created relation set viewed a a parameter publisher.
</dl>
</dl>
<a name="CreateSheet"></a><a name="CreateSheet(CATUnicodeString&amp;,int)"></a> <dt> o <b>CreateSheet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSheet','CATICkeSheet_var')</script>  <b>CreateSheet</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFilePath</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iType</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Create a design table sheet. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFilePath</tt>
   <dd> The path of the source file. It can be an Excel or a Lotus sheet or a tabulated text file, or an empty path (if iType != 4, you'll have to call 
 CreateSourceFile on CATICkeSheet interface).
 If the path isn't empty and the file doesn't exist, the file is created.
 </dd>
    <dt><tt> iType</tt>
   <dd> - if iType = 4, whatever the content of the path, a model sheet 
   is created (sheet with persitent memory storage, but no file) 
 - if path is empty, uses the type to know what kind of sheet has to be created
   <br><b>Legal values</b>: the test can be either
   <tt>1</tt> Excel one.
   <tt>2</tt> Text one
   <tt>3</tt> Lotus one
   <tt>4</tt> Model one
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the created sheet. It returns NULL_var if the file creation failed (in the case where the file has to be created) or if Excel or Lotus is asked on UNIX
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeRelationFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
