<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeFunction</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeFunction','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFunction','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeFunction','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFunction','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeFunction</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeFunction_32216','CATICkeFunction','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../KnowledgeInterfaces/class_CATCkeLawAdapter_30925.htm">CATCkeLawAdapter</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATICkeFunction</b>
</p>
<p>
<b><i> Interface to describe functions.</i></b><br>

 <b>Role</b>: This interface defines functions that can be used in our language.<br>
 This interface gives access to a CATICkeSignature which contains the<br>
 description of this function (arguments, name, comment, etc...<br>
 It is also used to evaluate the function.
 <br>
 Implementations of that interface should derive from CATCkeLawAdapter.

 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p>
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeSignature','');return false">CATICkeSignature</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeArg','');return false">CATICkeArg</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDescription()"><b>GetDescription</b></a>()
<dd>  Returns the description of this function.
 <dt> o 
    <a href="#IsRunnable()"><b>IsRunnable</b></a>()
<dd>  Indicates if this function can be evaluated.
 <dt> o 
    <a href="#Run(CATCkeListOfParm,CATICkeParm_var&amp;,CATCkeEvalContext*)"><b>Run</b></a>(CATCkeListOfParm,CATICkeParm_var&amp;,CATCkeEvalContext*)
<dd>  Evaluates the function on a list of parameters.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetDescription"></a><a name="GetDescription()"></a> <dt> o <b>GetDescription</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>GetDescription</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the description of this function.

<dl>
  <dt> <b>Returns:</b> 
  <dd>  The signature of the function.
</dl>
</dl>
<a name="IsRunnable"></a><a name="IsRunnable()"></a> <dt> o <b>IsRunnable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsRunnable</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if this function can be evaluated.

<dl>
  <dt> <b>Returns:</b> 
  <dd>  true : the function is runnable, false : the function is not runnable
</dl>
</dl>
<a name="Run"></a><a name="Run(CATCkeListOfParm,CATICkeParm_var&amp;,CATCkeEvalContext*)"></a> <dt> o <b>Run</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Run</b>(<td><script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script> <td><tt>iListOfParameters</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iReturnedParameter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATCkeEvalContext','CATCkeEvalContext*')</script> <td><tt>iEvaluationContext</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Evaluates the function on a list of parameters.<br>
 This method may raise evaluation error (CATLifEvaluationError). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfParameters</tt>
   <dd>     List of parameters in argument of the function.<br>
     Those arguments can be in input or in output of the function.<br>
     (Note that CATCkeListOfParm is a CATLISTV(CATBaseUnknown_var)* )
 </dd>
    <dt><tt> iReturnedParameter</tt>
   <dd>     parameter returned by the function.<br>
 </dd>
    <dt><tt> iEvaluationContext</tt>
   <dd>     context of evaluation.<br></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeFunction.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
