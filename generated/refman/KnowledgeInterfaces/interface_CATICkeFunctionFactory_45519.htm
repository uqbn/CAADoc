<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeFunctionFactory</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeFunctionFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFunctionFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeFunctionFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeFunctionFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeFunctionFactory</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeFunctionFactory_45519','CATICkeFunctionFactory','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeFunctionFactory</b>
</p>
<p>
<b><i>    Interface to gather methods to create user functions.</i></b><br>

 Gathers services about literals and relations.
 <p>
 <b>Role</b>: This class gathers methods managing literals and relations.<br>
 It gives a way to create your own functions that can later be used in relations, and add them 
 to the dictionary.<br>
 It gives a way to add your own applications that can later be used in applications dialog in the
 knowledgeware workbench.<br></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddConstant(CATICkeParm_var&amp;)"><b>AddConstant</b></a>(CATICkeParm_var&amp;)
<dd>   Adds a constant (true, false).
 <dt> o 
    <a href="#AddToCurrentParameterSet(CATICkeParm_var&amp;,CATIParmPublisher_var&amp;)"><b>AddToCurrentParameterSet</b></a>(CATICkeParm_var&amp;,CATIParmPublisher_var&amp;)
<dd>   
 <dt> o 
    <a href="#AddToCurrentRelationSet(CATISpecObject_var&amp;,CATIParmPublisher_var&amp;)"><b>AddToCurrentRelationSet</b></a>(CATISpecObject_var&amp;,CATIParmPublisher_var&amp;)
<dd>   
 <dt> o 
    <a href="#CreateArg(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)"><b>CreateArg</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)
<dd>  Creates an argument to be added to a signature.
 <dt> o 
    <a href="#CreateArg(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"><b>CreateArg</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)
<dd>  Creates an argument to be added to a signature.
 <dt> o 
    <a href="#CreateEvaluationContext(CATBaseUnknown_var&amp;)"><b>CreateEvaluationContext</b></a>(CATBaseUnknown_var&amp;)
<dd>  Creates an evaluator context that can be given to the evaluation function.
 <dt> o 
    <a href="#CreateEvent(CATUnicodeString&amp;)"><b>CreateEvent</b></a>(CATUnicodeString&amp;)
<dd>  Creates an event signature and add it to the dictionary.
 <dt> o 
    <a href="#CreateFunction(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"><b>CreateFunction</b></a>(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)
<dd>  Creates a signature and adds it to the dictionary.
 <dt> o 
    <a href="#CreateFunction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"><b>CreateFunction</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)
<dd>  Creates a signature and add it to the dictionary.
 <dt> o 
    <a href="#GetCurrentSet(CATICkeFunctionFactory::SetType,CATIParmPublisher_var&amp;,int)"><b>GetCurrentSet</b></a>(CATICkeFunctionFactory::SetType,CATIParmPublisher_var&amp;,int)
<dd>   Get the current set : ParameterSet,RelationSet,OptimizationSet,RuleBaseSet.
 <dt> o 
    <a href="#Methods()"><b>Methods</b></a>()
<dd>   Initializes the list of methods and sort it.
 <dt> o 
    <a href="#ParseAndEval(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;)"><b>ParseAndEval</b></a>(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;)
<dd>   Evaluates a formula whithout parameters.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#SetType"><b>SetType</b></a>
<dd>  Type of Set.
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddConstant"></a><a name="AddConstant(CATICkeParm_var&amp;)"></a> <dt> o <b>AddConstant</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddConstant</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Adds a constant (true, false).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameter</tt>
   <dd> parameter to add to list of Constant.</dd>
</dl>
</dl>
</dl>
<a name="AddToCurrentParameterSet"></a><a name="AddToCurrentParameterSet(CATICkeParm_var&amp;,CATIParmPublisher_var&amp;)"></a> <dt> o <b>AddToCurrentParameterSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddToCurrentParameterSet</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameterToAdd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt><td><tt>=NULL_var</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 - Use GetCurrentSet method instead.<br>
 Adds a parameter to the current ParameterSet.<br>
 It is dedicated to applications which create parameters and want to see
 them in the parameter set (in the tree view).<br>
 If the ParameterSet does not exist, it is created and appended to the root
 Object.<br>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameterToAdd</tt>
   <dd> parameter to add to the parameter set.  </dd>
    <dt><tt> iRoot</tt>
   <dd> The root object is where the parameterset will be appended. If the root object is NULL, the default one is asked to CATILiteralsRoot::GetRoot
 on the container of the parameter</dd>
</dl>
</dl>
</dl>
<a name="AddToCurrentRelationSet"></a><a name="AddToCurrentRelationSet(CATISpecObject_var&amp;,CATIParmPublisher_var&amp;)"></a> <dt> o <b>AddToCurrentRelationSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddToCurrentRelationSet</b>(<td> const <script type="text/javascript"> activateLink('CATISpecObject_var','CATISpecObject_var&amp;')</script> <td><tt>iRelationToAdd</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
  
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R14 - Use GetCurrentSet method instead.<br>
 Adds a relation to the current RelationSet.<br>
 It is dedicated to applications which create relations and want to see
 them in the relation set (in the tree view).<br>
 If the RelationSet does not exist, it is created and appended to the root
 Object.<br>
 
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelationToAdd</tt>
   <dd> relation to add to the relation set.  </dd>
    <dt><tt> iRoot</tt>
   <dd> The root object is where the relationset will be appended. If the root object is NULL, the default one is asked to CATILiteralsRoot::GetRoot
 on the container of the relation</dd>
</dl>
</dl>
</dl>
<a name="CreateArg"></a><a name="CreateArg(CATUnicodeString&amp;,CATICkeType_var&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArg</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an argument to be added to a signature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgName</tt>
   <dd> argument name (example : "x")  </dd>
    <dt><tt> iArgType</tt>
   <dd> argument type (example : CATParmDictionary::RealType in our example) </dd>
    <dt><tt> iMode</tt>
   <dd> indicates if the argument is In, Out or InOut</dd>
</dl>
</dl>
</dl>
<a name="CreateArg"></a><a name="CreateArg(CATUnicodeString&amp;,CATUnicodeString&amp;,CATICkeArg::Mode)"></a> <dt> o <b>CreateArg</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeArg','CATICkeArg_var')</script>  <b>CreateArg</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iArgType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iArgMode</tt><td><tt>= CATICkeArg::In</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates an argument to be added to a signature. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iArgName</tt>
   <dd> argument name (example : "x")  </dd>
    <dt><tt> iArgType</tt>
   <dd> argument type (example : "Real" in our example) </dd>
    <dt><tt> Mode</tt>
   <dd> iArgMode: indicates if the argument is In, Out or InOut</dd>
</dl>
</dl>
</dl>
<a name="CreateEvaluationContext"></a><a name="CreateEvaluationContext(CATBaseUnknown_var&amp;)"></a> <dt> o <b>CreateEvaluationContext</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeEvalContext','CATCkeEvalContext *')</script>  <b>CreateEvaluationContext</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iObject</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an evaluator context that can be given to the evaluation function.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> :  relation that controls the evaluation. The return value must be deallocated</dd>
</dl>
</dl>
</dl>
<a name="CreateEvent"></a><a name="CreateEvent(CATUnicodeString&amp;)"></a> <dt> o <b>CreateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateEvent</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an event signature and add it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEventName</tt>
   <dd> :  function name (example : "Instanciation") </dd>
    <dt><tt> iNotation:</tt>
   <dd> notation</dd>
</dl>
</dl>
</dl>
<a name="CreateFunction"></a><a name="CreateFunction(CATUnicodeString&amp;,CATICkeType_var&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"></a> <dt> o <b>CreateFunction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateFunction</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeType_var','CATICkeType_var&amp;')</script> <td><tt>iReturnedType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeFunctionEvaluator','CATCkeFunctionEvaluator')</script> <td><tt>iEvalFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeCheckMagnitude','CATCkeCheckMagnitude')</script> <td><tt>iCheckMagnitudeFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script> <td><tt>iNotation</tt><td><tt>= CATICkeSignature::Function</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a signature and adds it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFunctionName</tt>
   <dd> function name (example : "sin") It is the name that will be used in formulas
 </dd>
    <dt><tt> iReturnedType</tt>
   <dd> returned type of the function (example : CATParmDictionary::RealType in our sinus example)  </dd>
    <dt><tt> iEvalFuncPtr</tt>
   <dd> function evaluator  </dd>
    <dt><tt> iCheckMagnitudeFuncPtr</tt>
   <dd> function evaluator </dd>
    <dt><tt> iNotation</tt>
   <dd> notation</dd>
</dl>
</dl>
</dl>
<a name="CreateFunction"></a><a name="CreateFunction(CATUnicodeString&amp;,CATUnicodeString&amp;,CATCkeFunctionEvaluator,CATCkeCheckMagnitude,CATICkeSignature::Mode)"></a> <dt> o <b>CreateFunction</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeSignature','CATICkeSignature_var')</script>  <b>CreateFunction</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iFunctionName</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iReturnedType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeFunctionEvaluator','CATCkeFunctionEvaluator')</script> <td><tt>iEvalFuncPtr</tt><td><tt>= NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATCkeCheckMagnitude','CATCkeCheckMagnitude')</script> <td><tt>iCheckMagnitudePtr</tt><td><tt>= NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeSignature::Mode','CATICkeSignature::Mode')</script> <td><tt>iNotation</tt><td><tt>= CATICkeSignature::Function</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a signature and add it to the dictionary.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFunctionName</tt>
   <dd>  function name (example : "sin") It is the name that will be used in formulas
 </dd>
    <dt><tt> iReturnedType</tt>
   <dd> returned type of the function (example : CATParmDictionary::RealType in our sinus example)  </dd>
    <dt><tt> iEvalFuncPtr</tt>
   <dd> function evaluator  </dd>
    <dt><tt> iCheckMagnitudePtr</tt>
   <dd> check magnitude evaluator </dd>
    <dt><tt> iNotation</tt>
   <dd> notation</dd>
</dl>
</dl>
</dl>
<a name="GetCurrentSet"></a><a name="GetCurrentSet(CATICkeFunctionFactory::SetType,CATIParmPublisher_var&amp;,int)"></a> <dt> o <b>GetCurrentSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script>  <b>GetCurrentSet</b>(<td> const <script type="text/javascript"> activateLink('CATICkeFunctionFactory::SetType','CATICkeFunctionFactory::SetType')</script> <td><tt>iSetType</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIParmPublisher_var','CATIParmPublisher_var&amp;')</script> <td><tt>iRoot</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int')</script> <td><tt>iForceCreation</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Get the current set : ParameterSet,RelationSet,OptimizationSet,RuleBaseSet.<br>
 It is dedicated to applications which create parameters,relations,optimizations or rulebase and want to see
 them in the parameter set, relation set, optimization set and rulebase set (in the tree view).<br>
 If the Set does not exist, it is created if argument iForceCreation is true.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetType</tt>
   <dd> to choose the type of set (Parameter, relation, optimization or rulebase).  </dd>
    <dt><tt> iForceCreation</tt>
   <dd> to force the creation of set if it doesn't exist. </dd>
    <dt><tt> iRoot</tt>
   <dd> The root object is where the set will be appended.</dd>
</dl>
</dl>
</dl>
<a name="Methods"></a><a name="Methods()"></a> <dt> o <b>Methods</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Methods</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Initializes the list of methods and sort it.<br>
 Load all libraries if necessary
</dl>
<a name="ParseAndEval"></a><a name="ParseAndEval(CATUnicodeString&amp;,CATICkeMagnitude_var&amp;)"></a> <dt> o <b>ParseAndEval</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeInst','CATICkeInst_var')</script>  <b>ParseAndEval</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>itexte</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeMagnitude_var','CATICkeMagnitude_var&amp;')</script> <td><tt>imag</tt><td><tt>= NULL_var</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
  Evaluates a formula whithout parameters.
 Ex : 3*10+sin(80) ou "Hello"+" World".<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> itexte</tt>
   <dd> is the texte of the formula.  the return value is in MKS unit</dd>
</dl>
</dl>
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="SetType"> <dt> o <b>SetType</b>
<dl>
  <dd>
<pre>
enum <b>SetType</b> {
  Parameter,
  Relation,
  Optimization,
  RuleBase
}
</pre>
 Type of Set.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Parameter</tt>
   <dd>   This set contains parameters.
 </dd>
    <dt><tt> Relation</tt>
   <dd>   This set contains Relations.
 </dd>
    <dt><tt> Optimization</tt>
   <dd>   This set contains optimizations.
 </dd>
    <dt><tt> RuleBase</tt>
   <dd>   This set contains Rulebases.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeFunctionFactory.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
