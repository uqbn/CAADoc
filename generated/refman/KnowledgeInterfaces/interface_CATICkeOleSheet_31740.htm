<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeOleSheet</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeOleSheet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeOleSheet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeOleSheet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeOleSheet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeOleSheet</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeOleSheet_31740','CATICkeOleSheet','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeOleSheet</b>
</p>
<p>
<b><i> This interface is an encapsulation of an array of arrays (a sheet) <br>
 of strings contained in a file.</i></b><br>
 <br>
 The file has to be an excel or a lotus sheet file. Its format has to be<br>
 string1 (tab) string2 etc <br>
 (n lines) <br>
 stringn (tab) stringn+1 etc <br>
 Empty strings are allowed, but not in the first row because the number of <br>
 columns is computed using the first row, except if you use the forceWidth <br>
 argument of the UpdateLocalCopy method (ancestor CATICkeSheet interface <br>
 method).<br><br>
 To create a CATICkeOleSheet, use the CATICkeParmFactory::CreateSheet method<br>
 with an excel or a lotus file path as argument.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATIDesignTable','');return false">CATIDesignTable</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeSheet','');return false">CATICkeSheet</a>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeTextSheet','');return false">CATICkeTextSheet</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetOleModifyAndCloseNotification()"><b>GetOleModifyAndCloseNotification</b></a>()
<dd>  Returns the notification associated with the modification of the OLE doc.
 <dt> o 
    <a href="#GetSheetIndex()"><b>GetSheetIndex</b></a>()
<dd>  Returns the index of the sheet in the workboook where data has to be found.
 <dt> o 
    <a href="#SetSheetIndex(int)"><b>SetSheetIndex</b></a>(int)
<dd>  Sets the index of the sheet in the workbook.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetOleModifyAndCloseNotification"></a><a name="GetOleModifyAndCloseNotification()"></a> <dt> o <b>GetOleModifyAndCloseNotification</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent')</script>  <b>GetOleModifyAndCloseNotification</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the notification associated with the modification of the OLE doc.
 The notification is sent when the OLE doc. has been modified, and Ole doc viewer closed
 (the sheet can't be parsed if Ole doc. is opened and sends notifications to CATIA)
</dl>
<a name="GetSheetIndex"></a><a name="GetSheetIndex()"></a> <dt> o <b>GetSheetIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetSheetIndex</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the index of the sheet in the workboook where data has to be found.
</dl>
<a name="SetSheetIndex"></a><a name="SetSheetIndex(int)"></a> <dt> o <b>SetSheetIndex</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSheetIndex</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>index</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the index of the sheet in the workbook. This method has to be called before any call of CATICkeSheet::UpdateLocalCopy
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> index</tt>
   <dd> index of the sheet in the workbook. Minimum value : 1</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeOleSheet.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
