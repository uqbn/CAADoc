<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATICkeRelation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICkeRelation','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeRelation','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICkeRelation','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICkeRelation','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATICkeRelation</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICkeRelation_32134','CATICkeRelation','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATICkeRelation</b>
</p>
<p>
<b><i>    Interface dedicated to relations management.</i></b><br>

 <b>Role</b>: A relation is an oriented link stored between parameters.<br>
 It manages the propagation of input modifications to outputs.<br>
 This interface is implemented on relations.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CATICkeParm','');return false">CATICkeParm</a>
</dl>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Add(CATICkeParm_var&amp;,CATICkeArg::Mode)"><b>Add</b></a>(CATICkeParm_var&amp;,CATICkeArg::Mode)
<dd>  Add a parameter in Input or Output.
 <dt> o 
    <a href="#CanBeEvaluated()"><b>CanBeEvaluated</b></a>()
<dd>  Indicates if the relation can be evaluated.
 <dt> o 
    <a href="#ClearParameters()"><b>ClearParameters</b></a>()
<dd>  Clears the links to all parameters.
 <dt> o 
    <a href="#Evaluate()"><b>Evaluate</b></a>()
<dd>  Evaluates the relation.
 <dt> o 
    <a href="#InParameters()"><b>InParameters</b></a>()
<dd>  Returns the list of parameters linked in input.
 <dt> o 
    <a href="#IntegrateToUpdateProcess(int&amp;)"><b>IntegrateToUpdateProcess</b></a>(int&amp;)
<dd>  Defines if the relation will be evaluated during the update process.
 <dt> o 
    <a href="#IsBroken()"><b>IsBroken</b></a>()
<dd>  Indicates if the relation is Broken.
 <dt> o 
    <a href="#IsConst()"><b>IsConst</b></a>()
<dd>  Indicates if this relation is const or not.
 <dt> o 
    <a href="#IsHidden()"><b>IsHidden</b></a>()
<dd>  Is this relation hidden or shown.
 <dt> o 
    <a href="#IsIntegratedToUpdateProcess()"><b>IsIntegratedToUpdateProcess</b></a>()
<dd>  Indicates if the relation is evaluated during the update process.
 <dt> o 
    <a href="#IsSynchronous()"><b>IsSynchronous</b></a>()
<dd>  Indicates if update will be synchronous or not.
 <dt> o 
    <a href="#IsUpdated()"><b>IsUpdated</b></a>()
<dd>  Indicates if the relation is updated.
 <dt> o 
    <a href="#OutParameters()"><b>OutParameters</b></a>()
<dd>  Returns the list of parameters linked in output.
 <dt> o 
    <a href="#Parameters()"><b>Parameters</b></a>()
<dd>  Returns the list of all parameters linked.
 <dt> o 
    <a href="#Replace(CATICkeParm_var&amp;,CATICkeParm_var&amp;)"><b>Replace</b></a>(CATICkeParm_var&amp;,CATICkeParm_var&amp;)
<dd>  Replaces a parameter by another.
 <dt> o 
    <a href="#Root()"><b>Root</b></a>()
<dd>  Returns the root of the relation.
 <dt> o 
    <a href="#SetConst(CATCke::Boolean)"><b>SetConst</b></a>(CATCke::Boolean)
<dd>  Sets Const facet.
 <dt> o 
    <a href="#SetHidden(CATCke::Boolean)"><b>SetHidden</b></a>(CATCke::Boolean)
<dd>  Sets HideShow facet.
 <dt> o 
    <a href="#SetSynchronous(CATCke::Boolean&amp;)"><b>SetSynchronous</b></a>(CATCke::Boolean&amp;)
<dd>  Defines if update will be synchronous or not.
 <dt> o 
    <a href="#Suppress(CATICkeParm_var&amp;)"><b>Suppress</b></a>(CATICkeParm_var&amp;)
<dd>  Suppresses a link to a given parameter in Input or Output.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="Add"></a><a name="Add(CATICkeParm_var&amp;,CATICkeArg::Mode)"></a> <dt> o <b>Add</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Add</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameter</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATICkeArg::Mode','CATICkeArg::Mode')</script> <td><tt>iMode</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Add a parameter in Input or Output.
 (deactivates relation)<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iParameter</tt>
   <dd> parameter to add </dd>
    <dt><tt>  iMode</tt>
   <dd> <br><b>Legal values</b>: the mode can be either <tt>In</tt> when parameter will be used as an input.
 <tt>Out</tt> when parameter will be used as an output.</dd>
</dl>
</dl>
</dl>
<a name="CanBeEvaluated"></a><a name="CanBeEvaluated()"></a> <dt> o <b>CanBeEvaluated</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>CanBeEvaluated</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the relation can be evaluated.<br>
 This method may raise syntax error (CATCkeParseException). No ability to catch them in CAA.<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: the test can be either <tt>CATCke::True</tt> if it can be evaluated
 <tt>0</tt> if it can't.
</dl>
</dl>
<a name="ClearParameters"></a><a name="ClearParameters()"></a> <dt> o <b>ClearParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ClearParameters</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Clears the links to all parameters.
</dl>
<a name="Evaluate"></a><a name="Evaluate()"></a> <dt> o <b>Evaluate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>Evaluate</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Evaluates the relation.
 This method may raise evaluation error (CATLifEvaluationError). No ability to catch them in CAA.<br
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>CATCke::True</tt> if evaluation is Ok
 <tt>CATCke::False</tt> if evaluation is Ko.
</dl>
</dl>
<a name="InParameters"></a><a name="InParameters()"></a> <dt> o <b>InParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script>  <b>InParameters</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of parameters linked in input.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  list of parameters in input (not to be deallocated)
</dl>
</dl>
<a name="IntegrateToUpdateProcess"></a><a name="IntegrateToUpdateProcess(int&amp;)"></a> <dt> o <b>IntegrateToUpdateProcess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IntegrateToUpdateProcess</b>(<td> const <script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>iYesOrNo</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines if the relation will be evaluated during the update process.
 This can only be done if your relation is in a part document.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iYesOrNo</tt>
   <dd> <br><b>Legal values</b>:   <tt>S_OK</tt> The relation has been integrated to update.
 <tt>CATCke::False</tt> The relation has not been integrated to update.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>0</tt> The relation will not be integrated to update.
 <tt>1</tt> The relation will be integrated to update.
</dl>
</dl>
<a name="IsBroken"></a><a name="IsBroken()"></a> <dt> o <b>IsBroken</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsBroken</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the relation is Broken.<br>
 Broken means that it cannot be runned.<br> 
 2 reasons for that: an operator doesn't exist anymore in our session b/c of licensing<br>
 or a parameter has been lost in multi-document context<br>
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>: the test can be either <tt>CATCke::True</tt> if it is broken
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsConst"></a><a name="IsConst()"></a> <dt> o <b>IsConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsConst</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if this relation is const or not.
 Default value is always not Const 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <b>Legal values</b>: <tt>CATCke::True</tt> if it is constant
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsHidden"></a><a name="IsHidden()"></a> <dt> o <b>IsHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsHidden</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Is this relation hidden or shown.
 Default value is always Shown<br> 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: 
 <tt>CATCke::True</tt> if it is hidden
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsIntegratedToUpdateProcess"></a><a name="IsIntegratedToUpdateProcess()"></a> <dt> o <b>IsIntegratedToUpdateProcess</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsIntegratedToUpdateProcess</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the relation is evaluated during the update process.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>1</tt> The relation is integrated to update.
 <tt>0</tt> The relation is not integrated to update.
</dl>
</dl>
<a name="IsSynchronous"></a><a name="IsSynchronous()"></a> <dt> o <b>IsSynchronous</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsSynchronous</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if update will be synchronous or not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>: the test can be either <tt>CATCke::True</tt> if is is synchronous
 <tt>CATCke::False</tt> if it isn't.
</dl>
</dl>
<a name="IsUpdated"></a><a name="IsUpdated()"></a> <dt> o <b>IsUpdated</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script>  <b>IsUpdated</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Indicates if the relation is updated.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it is already updated
 <tt>CATCke::False</tt> if it must be updated.
</dl>
</dl>
<a name="OutParameters"></a><a name="OutParameters()"></a> <dt> o <b>OutParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script>  <b>OutParameters</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of parameters linked in output. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  list of parameters in output (not to be deallocated)
</dl>
</dl>
<a name="Parameters"></a><a name="Parameters()"></a> <dt> o <b>Parameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATCkeListOfParm','CATCkeListOfParm')</script>  <b>Parameters</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the list of all parameters linked. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  list of all parameters (not to be deallocated)
</dl>
</dl>
<a name="Replace"></a><a name="Replace(CATICkeParm_var&amp;,CATICkeParm_var&amp;)"></a> <dt> o <b>Replace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Replace</b>(<td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameterToReplace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iReplacingParameter</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Replaces a parameter by another.
 (keep the order and mode)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iParameterToReplace</tt>
   <dd> parameter that is replaced </dd>
    <dt><tt>  iReplacingParameter</tt>
   <dd> parameter that replaces the other</dd>
</dl>
</dl>
</dl>
<a name="Root"></a><a name="Root()"></a> <dt> o <b>Root</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIParmPublisher','CATIParmPublisher_var')</script>  <b>Root</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the root of the relation.
 A relation knows a root of object.<br>
 This root is the place in which the relation can find its parameters.<br>
 It corresponds in fact to the SpecObject where the relation is agregated.<br>
 (to be more precise, it corresponds to the owner of the relation set)<br>
 the root can be null
</dl>
<a name="SetConst"></a><a name="SetConst(CATCke::Boolean)"></a> <dt> o <b>SetConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetConst</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>iConstant</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets Const facet.
 Default value is always not Const 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConstant</tt>
   <dd> <b>Legal values</b>:
 <tt>CATCke::True</tt> if it is constant
 <tt>CATCke::False</tt> if it isn't.</dd>
</dl>
</dl>
</dl>
<a name="SetHidden"></a><a name="SetHidden(CATCke::Boolean)"></a> <dt> o <b>SetHidden</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHidden</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean')</script> <td><tt>iHidden</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets HideShow facet.
 Default value is always Shown
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iHidden</tt>
   <dd> <br><b>Legal values</b>:  <tt>CATCke::True</tt> if it is hidden
 <tt>CATCke::False</tt> if it isn't.</dd>
</dl>
</dl>
</dl>
<a name="SetSynchronous"></a><a name="SetSynchronous(CATCke::Boolean&amp;)"></a> <dt> o <b>SetSynchronous</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetSynchronous</b>(<td> const <script type="text/javascript"> activateLink('CATCke::Boolean','CATCke::Boolean&amp;')</script> <td><tt>iSynchronous</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Defines if update will be synchronous or not.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSynchronous</tt>
   <dd> <br><b>Legal values</b>: the test can be either
 <tt>CATCke::True</tt> if is is synchronous
 <tt>CATCke::False</tt> if it isn't.</dd>
</dl>
</dl>
</dl>
<a name="Suppress"></a><a name="Suppress(CATICkeParm_var&amp;)"></a> <dt> o <b>Suppress</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Suppress</b>(<td> const <script type="text/javascript"> activateLink('CATICkeParm_var','CATICkeParm_var&amp;')</script> <td><tt>iParameter</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Suppresses a link to a given parameter in Input or Output.
 (deactivates relation) <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iParameter</tt>
   <dd> parameter to suppress</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICkeRelation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
