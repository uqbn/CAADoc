<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Interface CATIValue</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIValue','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIValue','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIValue','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIValue','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Interface CATIValue</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIValue_24986','CATIValue','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIValue</b>
</p>
<p>
<b><i> Interface dedicated to the management of values.</i></b><br>
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AsBoolean(boolean&amp;)"><b>AsBoolean</b></a>(boolean&amp;)
<dd>  Converts the value to a boolean (for boolean values only).
 <dt> o 
    <a href="#AsInteger(int&amp;)"><b>AsInteger</b></a>(int&amp;)
<dd>  Converts the value to an integer.
 <dt> o 
    <a href="#AsObject(CATBaseUnknown_var&amp;)"><b>AsObject</b></a>(CATBaseUnknown_var&amp;)
<dd>  Converts the value to an object reference (useful for complex values).
 <dt> o 
    <a href="#AsReal(double&amp;)"><b>AsReal</b></a>(double&amp;)
<dd>  Converts the value to a double.
 <dt> o 
    <a href="#AsString(CATUnicodeString&amp;)"><b>AsString</b></a>(CATUnicodeString&amp;)
<dd>  Converts the value to a string.
 <dt> o 
    <a href="#Compare(CATIValue_var&amp;)"><b>Compare</b></a>(CATIValue_var&amp;)
<dd>  Compares two values (taking tolerance into account for numerical values).
 <dt> o 
    <a href="#GetConst()"><b>GetConst</b></a>()
<dd>  Returns the constantness of the value.
 <dt> o 
    <a href="#GetIsSet()"><b>GetIsSet</b></a>()
<dd>  Returns the status of the value.
 <dt> o 
    <a href="#GetReadOnly()"><b>GetReadOnly</b></a>()
<dd>  Returns the writability of the value.
 <dt> o 
    <a href="#SetConst(boolean)"><b>SetConst</b></a>(boolean)
<dd>  Sets the constantness of the value.
 <dt> o 
    <a href="#SetReadOnly(boolean)"><b>SetReadOnly</b></a>(boolean)
<dd>  Sets the writability of the value.
 <dt> o 
    <a href="#Show()"><b>Show</b></a>()
<dd>  Returns a string showing the value (example : "3mm").
 <dt> o 
    <a href="#Unset()"><b>Unset</b></a>()
<dd>  Unsets the value.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AsBoolean"></a><a name="AsBoolean(boolean&amp;)"></a> <dt> o <b>AsBoolean</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AsBoolean</b>(<td><script type="text/javascript"> activateLink('boolean','boolean&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Converts the value to a boolean (for boolean values only).
</dl>
<a name="AsInteger"></a><a name="AsInteger(int&amp;)"></a> <dt> o <b>AsInteger</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AsInteger</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Converts the value to an integer.

 For enum values (including booleans), it returns the rank.<br>
 For real values, it converts their value to the nearest lower integer.<br>
</dl>
<a name="AsObject"></a><a name="AsObject(CATBaseUnknown_var&amp;)"></a> <dt> o <b>AsObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AsObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Converts the value to an object reference (useful for complex values).
</dl>
<a name="AsReal"></a><a name="AsReal(double&amp;)"></a> <dt> o <b>AsReal</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AsReal</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Converts the value to a double.

 For enum values (including booleans), it returns the rank.<br>
 For dimensions, it returns their value in MKS system !
</dl>
<a name="AsString"></a><a name="AsString(CATUnicodeString&amp;)"></a> <dt> o <b>AsString</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AsString</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oValue</tt>)<script type="text/javascript"> activateLink('=0',' const =0')</script>  </table></dt>
<dl>
  <dd>
 Converts the value to a string.

 For enum types (including booleans), it returns the string corresponding to the rank.
</dl>
<a name="Compare"></a><a name="Compare(CATIValue_var&amp;)"></a> <dt> o <b>Compare</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>Compare</b>(<td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('0',' const = 0')</script>  </table></dt>
<dl>
  <dd>
 Compares two values (taking tolerance into account for numerical values).

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iValue</tt>
   <dd> Value to be compared to the current one. </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if equal, else FALSE.
</dl>
</dl>
<a name="GetConst"></a><a name="GetConst()"></a> <dt> o <b>GetConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>GetConst</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the constantness of the value.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if constant, else FALSE.
</dl>
</dl>
<a name="GetIsSet"></a><a name="GetIsSet()"></a> <dt> o <b>GetIsSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>GetIsSet</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the status of the value.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if the value is set, else FALSE.
</dl>
</dl>
<a name="GetReadOnly"></a><a name="GetReadOnly()"></a> <dt> o <b>GetReadOnly</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('boolean','boolean')</script>  <b>GetReadOnly</b>(<td>)<script type="text/javascript"> activateLink('0','const = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the writability of the value.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE is read-only, else FALSE.
</dl>
</dl>
<a name="SetConst"></a><a name="SetConst(boolean)"></a> <dt> o <b>SetConst</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetConst</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iConst</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the constantness of the value.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConst</tt>
   <dd> TRUE to set to constant, else FALSE.</dd>
</dl>
</dl>
</dl>
<a name="SetReadOnly"></a><a name="SetReadOnly(boolean)"></a> <dt> o <b>SetReadOnly</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetReadOnly</b>(<td> const <script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iReadOnly</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the writability of the value.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReadOnly</tt>
   <dd> TRUE to set read-only, FALSE to set the value writable.</dd>
</dl>
</dl>
</dl>
<a name="Show"></a><a name="Show()"></a> <dt> o <b>Show</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script>  <b>Show</b>(<td>)<script type="text/javascript"> activateLink('=0','const =0')</script>  </table></dt>
<dl>
  <dd>
 Returns a string showing the value (example : "3mm").

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  a string.
</dl>
</dl>
<a name="Unset"></a><a name="Unset()"></a> <dt> o <b>Unset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Unset</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Unsets the value.
</dl>
<hr>
 This object is included in the file: <b>CATIValue.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
