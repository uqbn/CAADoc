<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Class CATKweInstanceAdapter</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATKweInstanceAdapter','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATKweInstanceAdapter','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATKweInstanceAdapter','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATKweInstanceAdapter','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>KnowledgeInterfaces Class CATKweInstanceAdapter</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATKweInstanceAdapter_40288','CATKweInstanceAdapter','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATKweInstanceAdapter</b>
</p>
<p>
<b><i> Class to be used as an adapter for objects that want to be used through Knowledge Expert and Search.</i></b><br>


 First of all, it is an adapter of CATIParmPublisher interface. This interface is used
 by a feature to publish its parameters so that they can be used in F(x).

 It is also an adapter of CATIInstance. This interface is used by Knowledge Expert to 
 identify an object through its type. It is also used by GenerativeKnwoledge and the search 
 of CATIA
 In addition to that, the object may implement CATIInstance to give access
 to its attributes. It may also implement CATIDynamicAttributes and CATIAttributesDescription
 to support the ability for a user to add dynamic attributes on it.

 Note that it is also an adapter of CATIInstancesProvider which is the interface to implement
 to provide the instances of your hierarchy and to be thus used by Knowledge Expert

 In addition to extension, you must create the TIE object with 
 - TIEchain_CATIParmPublisher
 - TIEchain_CATIInstance
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATKweInstanceAdapter()"><b>CATKweInstanceAdapter</b></a>()
<dd>  <dt> o 
    <a href="#~CATKweInstanceAdapter()"><b>~CATKweInstanceAdapter</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddInstanceListener(CATIInstanceListener_var&amp;)"><b>AddInstanceListener</b></a>(CATIInstanceListener_var&amp;)
<dd> 	Description: adds a listener to the object.
 <dt> o 
    <a href="#AdviseAttributeChanged(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>AdviseAttributeChanged</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>   Description: propagates an attribute changed information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseDynamicAttributeAdded(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>AdviseDynamicAttributeAdded</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>   Description: propagates an attribute creation information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseDynamicAttributeRemoved(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>AdviseDynamicAttributeRemoved</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd>   Description: propagates an attribute deletion information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseDynamicAttributeRenamed(CATUnicodeString&amp;,CATUnicodeString&amp;)"><b>AdviseDynamicAttributeRenamed</b></a>(CATUnicodeString&amp;,CATUnicodeString&amp;)
<dd>   Description: propagates an attribute rename information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseModification()"><b>AdviseModification</b></a>()
<dd>   Description: propagates a modification information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseRemoved()"><b>AdviseRemoved</b></a>()
<dd>   Description: propagates a remove information on an instance to all its listeners.
 <dt> o 
    <a href="#AdviseSpecificEvent(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"><b>AdviseSpecificEvent</b></a>(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)
<dd>  Propagates a specific event that occured on the instance.
 <dt> o 
    <a href="#AdviseTypeChanged()"><b>AdviseTypeChanged</b></a>()
<dd>   Description: propagates a change type information on an instance to all its listeners.
 <dt> o 
    <a href="#GetOwner()"><b>GetOwner</b></a>()
<dd>  Description: returns the owner of the object.
 <dt> o 
    <a href="#GetType()"><b>GetType</b></a>()
<dd>  Returns the type of the object.
 <dt> o 
    <a href="#GetValue(CATUnicodeString&amp;)"><b>GetValue</b></a>(CATUnicodeString&amp;)
<dd> 	Description: Gets an attributes value.
 <dt> o 
    <a href="#GetValueInternal(CATUnicodeString&amp;)"><b>GetValueInternal</b></a>(CATUnicodeString&amp;)
<dd> 	Description: Gets an attributes value.
 <dt> o 
    <a href="#IsSupporting(CATIType_var&amp;)"><b>IsSupporting</b></a>(CATIType_var&amp;)
<dd>   Description: Tests if an object supports a given type.
 <dt> o 
    <a href="#ListSupportedTypes(CATListValCATIType_var&amp;)"><b>ListSupportedTypes</b></a>(CATListValCATIType_var&amp;)
<dd>   Description: fills the list of types supported by this object.
 <dt> o 
    <a href="#ListSupportedTypesInternal(CATListValCATIType_var&amp;)"><b>ListSupportedTypesInternal</b></a>(CATListValCATIType_var&amp;)
<dd>   Description: fills the list of types supported by this object in addition to the one returned by Type method.
 <dt> o 
    <a href="#RemoveInstanceListener(CATIInstanceListener_var&amp;)"><b>RemoveInstanceListener</b></a>(CATIInstanceListener_var&amp;)
<dd> 	Description: removes a listener to the object.
 <dt> o 
    <a href="#SetValue(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>SetValue</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd> 	Description: Sets an attributes value.
 <dt> o 
    <a href="#SetValueInternal(CATUnicodeString&amp;,CATIValue_var&amp;)"><b>SetValueInternal</b></a>(CATUnicodeString&amp;,CATIValue_var&amp;)
<dd> 	Description: Sets an attributes value.
 <dt> o 
    <a href="#Type()"><b>Type</b></a>()
<dd>   Description: Returns the main type of an object.
 <dt> o 
    <a href="#TypeInternal()"><b>TypeInternal</b></a>()
<dd>   Description: Returns the main type of an object.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATKweInstanceAdapter"></a><a name="CATKweInstanceAdapter()"></a> <dt> o <b>CATKweInstanceAdapter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATKweInstanceAdapter</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="~CATKweInstanceAdapter"></a><a name="~CATKweInstanceAdapter()"></a> <dt> o <b>~CATKweInstanceAdapter</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATKweInstanceAdapter</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddInstanceListener"></a><a name="AddInstanceListener(CATIInstanceListener_var&amp;)"></a> <dt> o <b>AddInstanceListener</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddInstanceListener</b>(<td> const <script type="text/javascript"> activateLink('CATIInstanceListener_var','CATIInstanceListener_var&amp;')</script> <td><tt>iListener</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: adds a listener to the object.
  The Listerner is called back when events are raised by the object.
  Default implementation works very well. You shouldn't overide this method.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListerner</tt>
   <dd> listener to be called back.<br></dd>
</dl>
</dl>
</dl>
<a name="AdviseAttributeChanged"></a><a name="AdviseAttributeChanged(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>AdviseAttributeChanged</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseAttributeChanged</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates an attribute changed information on an instance to all its listeners.
  if the name of attribute is different of the name of parm, you must overload this method to
  call AdviseAttributeChanged with the attribute name.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd> Parm Name  </dd>
    <dt><tt> iValue</tt>
   <dd></dd>
</dl>
</dl>
</dl>
<a name="AdviseDynamicAttributeAdded"></a><a name="AdviseDynamicAttributeAdded(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>AdviseDynamicAttributeAdded</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseDynamicAttributeAdded</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates an attribute creation information on an instance to all its listeners.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey</tt>
   <dd> attribute added   </dd>
    <dt><tt> iValue</tt>
   <dd>  value added</dd>
</dl>
</dl>
</dl>
<a name="AdviseDynamicAttributeRemoved"></a><a name="AdviseDynamicAttributeRemoved(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>AdviseDynamicAttributeRemoved</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseDynamicAttributeRemoved</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates an attribute deletion information on an instance to all its listeners.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttributes</tt>
   <dd> instance where attribute is deleted  </dd>
    <dt><tt> iKey</tt>
   <dd> attribute deleted   </dd>
    <dt><tt> iValue</tt>
   <dd>  value deleted</dd>
</dl>
</dl>
</dl>
<a name="AdviseDynamicAttributeRenamed"></a><a name="AdviseDynamicAttributeRenamed(CATUnicodeString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>AdviseDynamicAttributeRenamed</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseDynamicAttributeRenamed</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iNewKey</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates an attribute rename information on an instance to all its listeners.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttributes</tt>
   <dd> instance where attribute is renamed  </dd>
    <dt><tt> iKey</tt>
   <dd> attribute renamed  </dd>
    <dt><tt> iValue</tt>
   <dd>  value renamed</dd>
</dl>
</dl>
</dl>
<a name="AdviseModification"></a><a name="AdviseModification()"></a> <dt> o <b>AdviseModification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseModification</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates a modification information on an instance to all its listeners.
</dl>
<a name="AdviseRemoved"></a><a name="AdviseRemoved()"></a> <dt> o <b>AdviseRemoved</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseRemoved</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates a remove information on an instance to all its listeners.
</dl>
<a name="AdviseSpecificEvent"></a><a name="AdviseSpecificEvent(CATBaseUnknown_var&amp;,CATListValCATBaseUnknown_var&amp;)"></a> <dt> o <b>AdviseSpecificEvent</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseSpecificEvent</b>(<td> const <script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iEvent</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATListValCATBaseUnknown_var','CATListValCATBaseUnknown_var&amp;')</script> <td><tt>iList</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Propagates a specific event that occured on the instance.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEvent</tt>
   <dd> Event that happened. </dd>
    <dt><tt> iList</tt>
   <dd>  List of values carried by the event.</dd>
</dl>
</dl>
</dl>
<a name="AdviseTypeChanged"></a><a name="AdviseTypeChanged()"></a> <dt> o <b>AdviseTypeChanged</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AdviseTypeChanged</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Description: propagates a change type information on an instance to all its listeners.
</dl>
<a name="GetOwner"></a><a name="GetOwner()"></a> <dt> o <b>GetOwner</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIInstance','CATIInstance*')</script>  <b>GetOwner</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Description: returns the owner of the object.
 Default implementation returns NULL
</dl>
<a name="GetType"></a><a name="GetType()"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATICkeType','CATICkeType_var')</script>  <b>GetType</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of the object.
 This type is used to check that the formula (rule or check) syntax is correct. 
 If your object implements CATIInstance, the classical implementation returns the CATIInstance::Type method.
 If not, usually the implementation consists in calling CATGlobalFunctions::GetTypeDictionary()->FindTypeSafe("TypeName","PackageName",oType)
 Default implementation returns CATIInstance::Type method.

 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the main type of the object. It is also a CATIType.
</dl>
</dl>
<a name="GetValue"></a><a name="GetValue(CATUnicodeString&amp;)"></a> <dt> o <b>GetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIValue','CATIValue*')</script>  <b>GetValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: Gets an attributes value.
  Default implementation gets parameter with GetParmFromName and valuates value
  GetParmFromName scans the direct children
  Default implementation also tries to get value through feature extensions if any
  using the CATIInstanceExtension::GetValue method.
  If you override this method, you should call this one at the end to be
  able to access those kind of attributes.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey:</tt>
   <dd> the name of the attribute.  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  iValue: the value of the attribute (an AddRef is done) It can return NULL.
</dl>
</dl>
<a name="GetValueInternal"></a><a name="GetValueInternal(CATUnicodeString&amp;)"></a> <dt> o <b>GetValueInternal</b>

<dt>  <table><tr><td>  protected virtual <script type="text/javascript"> activateLink('CATIValue','CATIValue*')</script>  <b>GetValueInternal</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: Gets an attributes value. Must be re-implemented when deriving 
 from this adapter.
  Default implementation gets parameter with GetParmFromName and valuates value
  GetParmFromName scans the direct children
  Default implementation also tries to get value through feature extensions if any
  using the CATIInstanceExtension::GetValue method.
  If you override this method, you should call this one at the end to be
  able to access those kind of attributes.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey:</tt>
   <dd> the name of the attribute.  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  iValue: the value of the attribute (an AddRef is done) It can return NULL.
</dl>
</dl>
<a name="IsSupporting"></a><a name="IsSupporting(CATIType_var&amp;)"></a> <dt> o <b>IsSupporting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIInstance','CATIInstance*')</script>  <b>IsSupporting</b>(<td> const <script type="text/javascript"> activateLink('CATIType_var','CATIType_var&amp;')</script> <td><tt>iType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
  Description: Tests if an object supports a given type.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> type that we want to check.<br>  An AddRef is done.
  Default implementation returns self if type belongs to the supported types
  Usually you shouldn't need to override this method.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  the instance supporting this type (may be NULL or self)
</dl>
</dl>
<a name="ListSupportedTypes"></a><a name="ListSupportedTypes(CATListValCATIType_var&amp;)"></a> <dt> o <b>ListSupportedTypes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSupportedTypes</b>(<td><script type="text/javascript"> activateLink('CATListValCATIType_var','CATListValCATIType_var&amp;')</script> <td><tt>oListOfCATIType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
  Description: fills the list of types supported by this object.
  Default implementation returns a list containing main Type first returned by Type method.
  and the list of types returned by ListSupportedTypesInternal. 
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfCATIType</tt>
   <dd> this list is filled.<br></dd>
</dl>
</dl>
</dl>
<a name="ListSupportedTypesInternal"></a><a name="ListSupportedTypesInternal(CATListValCATIType_var&amp;)"></a> <dt> o <b>ListSupportedTypesInternal</b>

<dt>  <table><tr><td>  protected virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ListSupportedTypesInternal</b>(<td><script type="text/javascript"> activateLink('CATListValCATIType_var','CATListValCATIType_var&amp;')</script> <td><tt>oListOfCATIType</tt>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
  Description: fills the list of types supported by this object in addition to the one returned by Type method.
  Default implementation adds nothing.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfCATIType</tt>
   <dd> this list is filled.<br></dd>
</dl>
</dl>
</dl>
<a name="RemoveInstanceListener"></a><a name="RemoveInstanceListener(CATIInstanceListener_var&amp;)"></a> <dt> o <b>RemoveInstanceListener</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveInstanceListener</b>(<td> const <script type="text/javascript"> activateLink('CATIInstanceListener_var','CATIInstanceListener_var&amp;')</script> <td><tt>iListener</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: removes a listener to the object.
  The Listerner is called back when events are raised by the object.
  Default implementation works very well. You shouldn't overide this method.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListerner</tt>
   <dd> listener to be called back.<br></dd>
</dl>
</dl>
</dl>
<a name="SetValue"></a><a name="SetValue(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>SetValue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValue</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: Sets an attributes value.
  Default implementation gets parameter with GetParmFromName and valuates value
  GetParmFromName scans the direct children
  Default implementation also tries to set value through feature extensions if any
  using the CATIInstanceExtension::SetValue method.
  If you override this method, you should call this one at the end to be
  able to access those kind of attributes.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey:</tt>
   <dd> the name of the attribute.  </dd>
    <dt><tt> iValue:</tt>
   <dd> the value of the attribute.</dd>
</dl>
</dl>
</dl>
<a name="SetValueInternal"></a><a name="SetValueInternal(CATUnicodeString&amp;,CATIValue_var&amp;)"></a> <dt> o <b>SetValueInternal</b>

<dt>  <table><tr><td>  protected virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetValueInternal</b>(<td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iKey</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATIValue_var','CATIValue_var&amp;')</script> <td><tt>iValue</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
	Description: Sets an attributes value. Must be re-implemented when deriving 
 from this adapter.
  Default implementation gets parameter with GetParmFromName and valuates value
  GetParmFromName scans the direct children
  Default implementation also tries to set value through feature extensions if any
  using the CATIInstanceExtension::SetValue method.
  If you override this method, you should call this one at the end to be
  able to access those kind of attributes.

  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKey:</tt>
   <dd> the name of the attribute.  </dd>
    <dt><tt> iValue:</tt>
   <dd> the value of the attribute.  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  E_NOTIMPL if this method is overridden but that the SetValue is not done by your implementation.          S_OK if the override has done the valuation.
          E_FAIL otherwise.
</dl>
</dl>
<a name="Type"></a><a name="Type()"></a> <dt> o <b>Type</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIType','CATIType*')</script>  <b>Type</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
  Description: Returns the main type of an object.
  An AddRef is done. Warning : Do not redefined this method.
  Default implementation returns GetType().
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the main type of the object.
</dl>
</dl>
<a name="TypeInternal"></a><a name="TypeInternal()"></a> <dt> o <b>TypeInternal</b>

<dt>  <table><tr><td>  protected virtual <script type="text/javascript"> activateLink('CATIType','CATIType*')</script>  <b>TypeInternal</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Description: Returns the main type of an object.
  An AddRef must be done. This method must be re-implemented.
  The classic implementation of this method is to use
  CATGlobalFunctions::GetTypeDictionary()->FindSafe("MyType","MyPackage",oType)
  and return oType after having done an AddRef.
  This method finds a type by its name and loads the package in which the type
  is defined if needed.
  this method is called by the Type() method.
  If you do not want to specify an accurate type, you can return NULL and Type method
  will return the type Feature
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  the main type of the object.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATKweInstanceAdapter.h</b><br>
If needed, your Imakefile.mk should include the module: <b>KnowledgeItf</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
