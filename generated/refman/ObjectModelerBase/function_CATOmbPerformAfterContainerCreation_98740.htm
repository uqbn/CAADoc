<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Global Function CATOmbPerformAfterContainerCreation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ObjectModelerBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a></pre>
<hr>
<h1>ObjectModelerBase Global Function CATOmbPerformAfterContainerCreation</h1>

<br><dt><table><tr><td>  <script type="text/javascript"> activateLink('HRESULT',' HRESULT')</script>  <b>CATOmbPerformAfterContainerCreation</b>(<td><script type="text/javascript"> activateLink('CATIContainer','CATIContainer*')</script> <td><tt>iContainer</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 This service should be called after a container creation to declare this new container in the undo/redo mechanism.
 It should be called either directly after 
<a href="#" onClick="openLink('CATCreateApplicativeContainer','');return false">CATCreateApplicativeContainer</a> if no initialization is done for this container, either after initializing 
 this container. For example:
 <br><br>
 <b>Without initialization :</b>
 <pre>
   CATBaseUnknown * pAppliContainer = NULL;
   CATDocument *pDocument = ... ;
   CATIdent AppliContainerType = "....";
   CATIdent AppliContainerSuperType = "....";
   CATUnicodeString AppliContainerIdentifier = "...";
 
   HRESULT hr = ::<b>CATCreateApplicativeContainer</b>(&pAppliContainer,
                                                 pDocument,
                                                 AppliContainerType,
                                                 IID_CATIContainer,
                                                 AppliContainerSuperType
                                                 AppliContainerIdentifier);

   CATIContainer * pIContainer = (CATIContainer*) pAppliContainer ;

   if( SUCCEEDED(hr) && ( NULL!=pIContainer) )
      hr = ::<b>CATOmbPerformAfterContainerCreation</b>( pIContainer );
 </pre>
 
 <b>With initialization</b>

 <pre>
   CATBaseUnknown * pAppliContainer = NULL;
   CATDocument *pDocument = ... ;
   CATIdent AppliContainerType = "....";
   CATIdent AppliContainerSuperType = "....";
   CATUnicodeString AppliContainerIdentifier = "...";
 
   HRESULT hr = ::<b>CATCreateApplicativeContainer</b>(&pAppliContainer,
                                                 pDocument,
                                                 AppliContainerType,
                                                 IID_CATIContainer,
                                                 AppliContainerSuperType
                                                 AppliContainerIdentifier);

   CATIContainer * pIContainer = (CATIContainer*) pAppliContainer ;

   if( SUCCEEDED(hr) && ( NULL!=pIContainer))
   {
      CATInit_var MyContInit(pIContainer);
      if(MyContInit != NULL_var)
      {
        MyContInit-><b>Init</b>(FALSE);
      }
      hr = ::<b>CATOmbPerformAfterContainerCreation</b>( pIContainer );
   }
 </pre>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContainer</tt>
   <dd>      The created applicative container.       
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       <tt>S_OK</tt>: The created applicative container has been successfuly declared
       in undo/redo mechanism.
	 <br><tt> E_FAIL</tt>: the operation has failed.
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATAppliContServices.h</b><br>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
