<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ObjectModelerBase Interface CATICutAndPastable</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../ObjectModelerBase.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATICutAndPastable','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICutAndPastable','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATICutAndPastable','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATICutAndPastable','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ObjectModelerBase Interface CATICutAndPastable</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATICutAndPastable_32611','CATICutAndPastable','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../ObjectSpecsModeler/class_ObjectCCP_SPEC_24258.htm">ObjectCCP_SPEC</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATICutAndPastable</b>
</p>
<p>
<b><i> Interface to manage Cut Copy Paste.</i></b><br>

 <b> Role:</b> this interface is used by interactive commands such as Drag&Drop
 or Cut Copy Paste.
 
 <br> CATICutAndPastable exposes the methods required to: 
 <br>
 <br>    extract the selected objects for either a cut or a copy 
 <br>    paste these objects 
 <br>    remove the selected objects from their initial location for a cut 
 <br>    paste an object as a link rather than copying its actual data.
 <br>
 <p><b>BOA information</b>: this interface CANNOT be implemented
 using the BOA (Basic Object Adapter).
 To know more about the BOA, refer to the CAA Encyclopedia home page.
 Click Middleware at the bottom left, then click the Object Modeler tab page.
 Several articles deal with the BOA.</p></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#BoundaryExtract(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"><b>BoundaryExtract</b></a>(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)
<dd>  Lists objects to extract.
 <dt> o 
    <a href="#BoundaryRemove(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"><b>BoundaryRemove</b></a>(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)
<dd>  Lists objects to remove.
 <dt> o 
    <a href="#Create(CATBaseUnknown_Associations&amp;,CATFormat*)"><b>Create</b></a>(CATBaseUnknown_Associations&amp;,CATFormat*)
<dd>  Creates in the client side, all objects required, and provides associations.
 <dt> o 
    <a href="#Extract(ListOfVarBaseUnknown&amp;,CATFormat*)"><b>Extract</b></a>(ListOfVarBaseUnknown&amp;,CATFormat*)
<dd>  Creates a structure to receive the boundary object in the requested format.
 <dt> o 
    <a href="#ListExtractFormats()"><b>ListExtractFormats</b></a>()
<dd>  Lists formats which can be extracted from the selection.
 <dt> o 
    <a href="#ListPasteFormats()"><b>ListPasteFormats</b></a>()
<dd>  Lists formats which can be pasted.
 <dt> o 
    <a href="#ListRemoveFormats()"><b>ListRemoveFormats</b></a>()
<dd>  Lists formats which can be removed from the selection.
 <dt> o 
    <a href="#Paste(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"><b>Paste</b></a>(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)
<dd>  Returns the path of the object to copy.
 <dt> o 
    <a href="#Remove(ListOfVarBaseUnknown&amp;,CATFormat*)"><b>Remove</b></a>(ListOfVarBaseUnknown&amp;,CATFormat*)
<dd>  Removes objects from the client.
 <dt> o 
    <a href="#Update(CATBaseUnknown_Associations&amp;,CATFormat*,ListOfVarBaseUnknown*)"><b>Update</b></a>(CATBaseUnknown_Associations&amp;,CATFormat*,ListOfVarBaseUnknown*)
<dd>  Makes in the client, the update of data and relations.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="BoundaryExtract"></a><a name="BoundaryExtract(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"></a> <dt> o <b>BoundaryExtract</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>BoundaryExtract</b>(<td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown&amp;')</script> <td><tt>ioObjectsAlreadyInBoundary</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown*')</script> <td><tt>iObjectsToAdd</tt><td><tt>=NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Lists objects to extract.
 <br><b> Role: </b> used on copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioObjectsAlreadyInBoundary</tt>
   <dd>        list of objects to extract.
 </dd>
    <dt><tt> iObjectsToAdd</tt>
   <dd>		 list objects to add to list of objects to extract.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>          1 if there is at least one object extracted.
   <br> 0 otherwise
</dl>
</dl>
<a name="BoundaryRemove"></a><a name="BoundaryRemove(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"></a> <dt> o <b>BoundaryRemove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>BoundaryRemove</b>(<td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown&amp;')</script> <td><tt>ioObjectsAlreadyInBoundary</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown*')</script> <td><tt>iObjectsToRemove</tt><td><tt>=NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Lists objects to remove.
 <br><b> Role: </b> used on cut and delete.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioObjectsAlreadyInBoundary</tt>
   <dd>        list of objects to remove.
 </dd>
    <dt><tt> iObjectsToRemove</tt>
   <dd>		 list objects to remove to list of objects to extract.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>          1 if there is at least one object removed.
   <br> 0 otherwise
</dl>
</dl>
<a name="Create"></a><a name="Create(CATBaseUnknown_Associations&amp;,CATFormat*)"></a> <dt> o <b>Create</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Create</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_Associations','CATBaseUnknown_Associations&amp;')</script> <td><tt>ioAssociationOfObjects</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>an_imposed_format</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates in the client side, all objects required, and provides associations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioAssociationOfObjects</tt>
   <dd>        couples of objects source/target.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         0 if failed
</dl>
</dl>
<a name="Extract"></a><a name="Extract(ListOfVarBaseUnknown&amp;,CATFormat*)"></a> <dt> o <b>Extract</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('VarBaseUnknown','VarBaseUnknown')</script>  <b>Extract</b>(<td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown&amp;')</script> <td><tt>iObjectToCopy</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('const=0',' const=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a structure to receive the boundary object in the requested format.
 <br><b> Role: </b> used on copy.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToCopy</tt>
   <dd>        list of objects to copy.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>          structure created by extract.
</dl>
</dl>
<a name="ListExtractFormats"></a><a name="ListExtractFormats()"></a> <dt> o <b>ListExtractFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATFormat)','CATLISTP(CATFormat)')</script>  <b>ListExtractFormats</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Lists formats which can be extracted from the selection.
 <br><b> Role: </b> used on copy.
</dl>
<a name="ListPasteFormats"></a><a name="ListPasteFormats()"></a> <dt> o <b>ListPasteFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATFormat)','CATLISTP(CATFormat)')</script>  <b>ListPasteFormats</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Lists formats which can be pasted.
 <br><b> Role: </b> used on paste.
</dl>
<a name="ListRemoveFormats"></a><a name="ListRemoveFormats()"></a> <dt> o <b>ListRemoveFormats</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLISTP(CATFormat)','CATLISTP(CATFormat)')</script>  <b>ListRemoveFormats</b>(<td>)<script type="text/javascript"> activateLink('const=0','const=0')</script>  </table></dt>
<dl>
  <dd>
 Lists formats which can be removed from the selection.
 <br><b> Role: </b> used on cut and delete.
</dl>
<a name="Paste"></a><a name="Paste(ListOfVarBaseUnknown&amp;,ListOfVarBaseUnknown*,CATFormat*)"></a> <dt> o <b>Paste</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown')</script>  <b>Paste</b>(<td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown&amp;')</script> <td><tt>iObjectToCopy</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown*')</script> <td><tt>iToCurObjects</tt><td><tt>=NULL</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the path of the object to copy.
 <br><b> Role: </b> used on copy and paste.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToCopy</tt>
   <dd>        list of objects to copy.
 </dd>
    <dt><tt> iToCurObjects</tt>
   <dd>           target objects for paste corresponding to selected objects.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.</dd>
</dl>
</dl>
</dl>
<a name="Remove"></a><a name="Remove(ListOfVarBaseUnknown&amp;,CATFormat*)"></a> <dt> o <b>Remove</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Remove</b>(<td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown&amp;')</script> <td><tt>iObjectToRemove</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes objects from the client.
 <br><b> Role: </b> used on cut and delete.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObjectToRemove</tt>
   <dd>        list of objects to remove.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>          structure created by remove.
</dl>
</dl>
<a name="Update"></a><a name="Update(CATBaseUnknown_Associations&amp;,CATFormat*,ListOfVarBaseUnknown*)"></a> <dt> o <b>Update</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Update</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_Associations','CATBaseUnknown_Associations&amp;')</script> <td><tt>ioAssociationOfObjects</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATFormat','CATFormat*')</script> <td><tt>iAnImposedFormat</tt><td><tt>=NULL</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ListOfVarBaseUnknown','ListOfVarBaseUnknown*')</script> <td><tt>iToCurObjects</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Makes in the client, the update of data and relations.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioAssociationOfObjects</tt>
   <dd>        couples of objects source/target.
 </dd>
    <dt><tt> iAnImposedFormat</tt>
   <dd>        if this format is not valid, it will be reinitialized.
 </dd>
    <dt><tt> iToCurObjects</tt>
   <dd>           target objects for paste corresponding to selected objects.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>         0 if failed
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATICutAndPastable.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATObjectModelerBase</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
