<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>NewTopologicalObjects Class CATTopEdgePropagation</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../NewTopologicalObjects.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATTopEdgePropagation','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopEdgePropagation','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATTopEdgePropagation','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATTopEdgePropagation','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>NewTopologicalObjects Class CATTopEdgePropagation</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATTopEdgePropagation_44725','CATTopEdgePropagation','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATTopEdgePropagation</b>
</p>
<p>
<b><i> Class representing the topological operator which performs an edge propagation on a body.</i></b><br>

 <ul>
 <li>Create it with the CATCreateTopEdgePropagation global function.
 <li>Tune it with appropriate options, using the Setxxx methods. 
 <li>Run it ( only one time ).
 <li>Get the resulting body with the GetResult method. This body is made of a single wire which 
 is the result of the propagation. If you do not want to keep this resulting body, 
 use the <a href="#" onClick="openLink('CATICGMContainer','Remove');return false">CATICGMContainer.Remove</a> method to remove it from the  geometric factory, after the operator deletion.
 <li>Optionally get the two propagation diagnoses with the GetDiagnoses method.
 <li>Delete it after use  with the usual C++ delete operator. 
 </ul>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#~CATTopEdgePropagation()"><b>~CATTopEdgePropagation</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetDiagnoses(CATTopEdgePropagationDiagnosis [2],double*)"><b>GetDiagnoses</b></a>(CATTopEdgePropagationDiagnosis [2],double*)
<dd>  Gets the propagation diagnoses at each extremity of the output wire.
 <dt> o 
    <a href="#SetBoundaryMode(CATBoolean)"><b>SetBoundaryMode</b></a>(CATBoolean)
<dd>   Defines the boundary propagation mode on shell.
 <dt> o 
    <a href="#SetContinuityMode(CATResolutionType)"><b>SetContinuityMode</b></a>(CATResolutionType)
<dd>  Defines the continuity propagation mode.
 <dt> o 
    <a href="#SetReferenceFace(CATFace*,CATOrientation)"><b>SetReferenceFace</b></a>(CATFace*,CATOrientation)
<dd>  Defines the face to be used as a reference for the orientation of the resulting wire.
 <dt> o 
    <a href="#SetTolerance(CATResolutionType,double&amp;)"><b>SetTolerance</b></a>(CATResolutionType,double&amp;)
<dd>  Defines the tolerance propagation value for a continuity level.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="~CATTopEdgePropagation"></a><a name="~CATTopEdgePropagation()"></a> <dt> o <b>~CATTopEdgePropagation</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATTopEdgePropagation</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="GetDiagnoses"></a><a name="GetDiagnoses(CATTopEdgePropagationDiagnosis [2],double*)"></a> <dt> o <b>GetDiagnoses</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>GetDiagnoses</b>(<td><script type="text/javascript"> activateLink('CATTopEdgePropagationDiagnosis [2','CATTopEdgePropagationDiagnosis [2]')</script> <td><tt>oDiagnoses</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oDiagnosesValue</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Gets the propagation diagnoses at each extremity of the output wire. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDiagnoses</tt>
   <dd> This array is filled with two diagnoses corresponding to the start and end of the output wire.
 </dd>
    <dt><tt> oDiagnosesValue</tt>
   <dd> If not <tt>NULL</tt> , this array must be allocated for two values.
 <br>It is then filled with the two values corresponding to the limit reached 
 at the start and end of the output wire.
 <br><b>In case of</b>:
 <dl>
 <dt><tt>POINT_DISCONTINUITY</tt></dt><dd> The value is the lowest point discontinuity found.
 <dt><tt>ANGULAR_DISCONTINUITY</tt></dt><dd> The value is the lowest angular discontinuity found.
 <dt><tt>CURVATURE_DISCONTINUITY</tt></dt><dd> The value is the lowest curvature discontinuity found.
 <dt><tt>for other value</tt></dt><dd> It is filled with 0 ( meaning less ).
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetBoundaryMode"></a><a name="SetBoundaryMode(CATBoolean)"></a> <dt> o <b>SetBoundaryMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetBoundaryMode</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iIsBoundaryModeActive</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Defines the boundary propagation mode on shell.
 <br>by default this mode is off.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIsBoundaryModeActive</tt>
   <dd> Specifies whether the propagation is restricted to the boundary of the shell.
 <br><b>Legal values</b>: <tt>TRUE</tt> or, <tt>FALSE</tt>.
 <br>In case this mode is on, the initial edge has to belong to the boundary
 of the shell.
 <br>This service is meaningless if the input body contains wires.</dd>
</dl>
</dl>
</dl>
<a name="SetContinuityMode"></a><a name="SetContinuityMode(CATResolutionType)"></a> <dt> o <b>SetContinuityMode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetContinuityMode</b>(<td> const <script type="text/javascript"> activateLink('CATResolutionType','CATResolutionType')</script> <td><tt>iContinuity</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the continuity propagation mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContinuity</tt>
   <dd> <br><b>Legal values</b>:
 <dl>
 <dt><tt>CatC0</tt></dt><dd> Point continuity.
 <dt><tt>CatC1</tt></dt><dd> Point and tangency continuity.
 <dt><tt>CatC2</tt></dt><dd> Point, tangency and curvature continuity.
 </dl>
 <br>In case of point continuity and when boundary mode is off, propagation occurs
 only around the reference face.
 <br>The continuity evaluation does not take into account the junction edge
 (continuity is evaluated on their neighbor).</dd>
</dl>
</dl>
</dl>
<a name="SetReferenceFace"></a><a name="SetReferenceFace(CATFace*,CATOrientation)"></a> <dt> o <b>SetReferenceFace</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetReferenceFace</b>(<td><script type="text/javascript"> activateLink('CATFace','CATFace*')</script> <td><tt>iReferenceFace</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATOrientation','CATOrientation')</script> <td><tt>iReferenceOrientation</tt><td><tt>= CATOrientationPositive </tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the face to be used as a reference for the orientation of the resulting wire.
 <br>This face must be bounded by the initial edge.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReferenceFace</tt>
   <dd> The reference face for the wire orientation.
 <ul>
 <li>In case the initial edge is a shell internal edge, this service is mandatory
 for the result orientation.
 <li>In case the initial edge is at the boundary of a single shell, 
 this single shell is used as a reference face and this service is useless.
 <li>In case the initial edge is at the boundary of several shells (non manifold
 situation), this service is mandatory to define the result orientation and specify the
 shell on which the propagation is carried out.
 </ul>
 <br>This service is meaningless if the input body contains wires.
 </dd>
    <dt><tt> iReferenceOrientation</tt>
   <dd> <ul>
 <li>If CATOrientationPositive , the reference orientation is the orientation of the reference face in the shell.
 <li>If CATOrientationNegative , the reference orientation is the inverse of the orientation of the reference face in the shell.
 </ul></dd>
</dl>
</dl>
</dl>
<a name="SetTolerance"></a><a name="SetTolerance(CATResolutionType,double&amp;)"></a> <dt> o <b>SetTolerance</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetTolerance</b>(<td> const <script type="text/javascript"> activateLink('CATResolutionType','CATResolutionType')</script> <td><tt>iContinuity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iTolerance</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Defines the tolerance propagation value for a continuity level.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContinuity</tt>
   <dd> Defines the continuity level.
 <dl>
 <dt><tt>CatC0</tt></dt><dd> Point tolerance in model unit.
 <br> Value is restricted to interval [ 0.001 , 0.1 ] with 0.001 as default.
 <dt><tt>CatC1</tt></dt><dd> Tangency tolerance in radians.
 <br> Value is restricted to interval [ 0.00872665 radian , 0.0872665 ] with 0.00872665 as default. 
 <br>Equivalent value in degree are [ 0.5 degree , 5. degree ].
 <dt><tt>CatC2</tt></dt><dd>Curvature tolerance with no dimension.
 <br>Value is stricly positive , restricted to interval ] 0 , 1 ] with 0.98 as default..
 <br>Curvature value "c" is defined by : | R2 - R1 | / max ( |R1| , |R2| ) < ( 1 - c ) / c.
 ( where R1 and R2 are the curvatures on both side ).
 </dl></dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATTopEdgePropagation.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATTopologicalObjects</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
