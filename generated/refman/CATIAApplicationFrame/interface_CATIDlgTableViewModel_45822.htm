<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATIAApplicationFrame Interface CATIDlgTableViewModel</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../CATIAApplicationFrame.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIDlgTableViewModel','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDlgTableViewModel','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIDlgTableViewModel','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIDlgTableViewModel','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>CATIAApplicationFrame Interface CATIDlgTableViewModel</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIDlgTableViewModel_45822','CATIDlgTableViewModel','0');</script>
<p><b>Usage: you can reimplement this interface by deriving the supplied <a href="../CATIAApplicationFrame/class_CATExtIDlgTableViewModel_49746.htm">CATExtIDlgTableViewModel</a> adapter class.</b></p>
<hr>
<p>
 interface <b>CATIDlgTableViewModel</b>
</p>
<p>
<b><i> Interface to retrieve data to be visualized through the CATDlgTableView component.</i></b><br>

 <b>Role</b>: . <br>
 <br>
 The goal of this interface is to provide 
 
 You should implement the CATIDlgTableViewModel interface, for each model

 BOA information: this interface cannot be implemented using the BOA (Basic Object Adapter). 
 To know more about the BOA, refer to the CAA Encyclopedia home page. 
 Click Middleware at the bottom left, then click the Object Modeler tab page. 
 Several articles deal with the BOA.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetBackgroundColor(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"><b>GetBackgroundColor</b></a>(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)
<dd>  Retrieves the cell background color for all cells of given style

 <br><b>Role</b>: 
 Style possible value are : OK, Normal, Warning, Error, Highlight, SubHighlight
 input : Default color value
 ouput : new color value.
 <dt> o 
    <a href="#GetBackgroundColor(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"><b>GetBackgroundColor</b></a>(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)
<dd>   Retrieves the cell background color for the cell defined by iLine, iColumn.
 <dt> o 
    <a href="#GetEventPublisher(CATBaseUnknown**)"><b>GetEventPublisher</b></a>(CATBaseUnknown**)
<dd>   Retrieves the Event publisher that dispatches the update events when the view 
 needs to be updated.
 <dt> o 
    <a href="#GetIcon(CATBaseUnknown_var,CATString&amp;,CATUnicodeString&amp;)"><b>GetIcon</b></a>(CATBaseUnknown_var,CATString&amp;,CATUnicodeString&amp;)
<dd>   Retrieves the icon content of the cell defined by iLine, iColumn.
 <dt> o 
    <a href="#GetLabel(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)"><b>GetLabel</b></a>(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)
<dd>   Retrieves the text content of the cell defined by iLine, iColumn.
 <dt> o 
    <a href="#GetLineCount(int&amp;)"><b>GetLineCount</b></a>(int&amp;)
<dd>   retrieves the total number of lines that can be displayed.
 <dt> o 
    <a href="#GetLines(int,int,CATListOfCATBaseUnknown_var&amp;)"><b>GetLines</b></a>(int,int,CATListOfCATBaseUnknown_var&amp;)
<dd>   Retrieves iCount lines from line number iStart.
 <dt> o 
    <a href="#GetStyle(CATBaseUnknown_var,CATString&amp;,CATDlgTableStyle&amp;)"><b>GetStyle</b></a>(CATBaseUnknown_var,CATString&amp;,CATDlgTableStyle&amp;)
<dd>   Retrieves the cell style combination.
 <dt> o 
    <a href="#GetTextColor(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"><b>GetTextColor</b></a>(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)
<dd>  Retrieves the cell background color for all cells of given style.
 <dt> o 
    <a href="#GetTextColor(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"><b>GetTextColor</b></a>(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)
<dd>   Retrieves the cell text color for the cell defined by iLine, iColumn.
 <dt> o 
    <a href="#GetUpdateEvent(CATCallbackEvent*)"><b>GetUpdateEvent</b></a>(CATCallbackEvent*)
<dd>   Retrieves the event dispatched by the model when the view needs to be updated.
 <dt> o 
    <a href="#IsEditable(CATBaseUnknown_var&amp;,CATString&amp;,CATBoolean&amp;)"><b>IsEditable</b></a>(CATBaseUnknown_var&amp;,CATString&amp;,CATBoolean&amp;)
<dd>   Indicates if the pointed cell can be edited.
 <dt> o 
    <a href="#SetLabel(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)"><b>SetLabel</b></a>(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)
<dd>   Sets the text entered by the user.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetBackgroundColor"></a><a name="GetBackgroundColor(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"></a> <dt> o <b>GetBackgroundColor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBackgroundColor</b>(<td><script type="text/javascript"> activateLink('CATDlgTableStyle','CATDlgTableStyle')</script> <td><tt>iStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioRed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioGreen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioBlue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioAlpha</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the cell background color for all cells of given style

 <br><b>Role</b>: 
 Style possible value are : OK, Normal, Warning, Error, Highlight, SubHighlight
 input : Default color value
 ouput : new color value. Leave value unchanged to keep default colors

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStyle</tt>
   <dd> [in]   The searched cell style. The possible values are:
   <ul>
       <li>CATDlgTableLeftJustify   | </li>
       <li>CATDlgTableRightJustify  |- Horizontal cell alignement</li>
       <li>CATDlgTableCenterJustify | </li>

       <li>CATDlgTableTopJustify    | </li>
       <li>CATDlgTableBottomJustify |- Vertical cell alignement</li>
       <li>CATDlgTableMiddleJustify | </li>

       <li>CATDlgTableCellOK      | OK cell style</li>
       <li>CATDlgTableCellNormal  | Normal cell style</li>
       <li>CATDlgTableCellWarning | Warning cell style</li>
       <li>CATDlgTableCellError   | Error cell style</li>
       <li>CATDlgTableCellCustom  | Custom cell style</li>
   </ul>
 </dd>
    <dt><tt> ioRed</tt>
   <dd> [inout]   It defines the red component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioGreen</tt>
   <dd> [inout]   It defines the green component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioBlue</tt>
   <dd> [inout]   It defines the blue component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioAlpha</tt>
   <dd> [inout]   Not supported.</dd>
</dl>
</dl>
</dl>
<a name="GetBackgroundColor"></a><a name="GetBackgroundColor(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"></a> <dt> o <b>GetBackgroundColor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBackgroundColor</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumnID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioRed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioGreen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioBlue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioAlpha</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the cell background color for the cell defined by iLine, iColumn.

 <br><b>Role</b>: This method is not called if the cells does not have the style CustomColor.

 input : Default color value
 ouput : New color value. Leave value unchanged to keep default colors

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell.
 </dd>
    <dt><tt> iColumnID</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> ioRed</tt>
   <dd> [inout]   It defines the red component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioGreen</tt>
   <dd> [inout]   It defines the green component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioBlue</tt>
   <dd> [inout]   It defines the blue component of the background color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioAlpha</tt>
   <dd> [inout]   Not supported.</dd>
</dl>
</dl>
</dl>
<a name="GetEventPublisher"></a><a name="GetEventPublisher(CATBaseUnknown**)"></a> <dt> o <b>GetEventPublisher</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetEventPublisher</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**')</script> <td><tt>oTableModelEventPublisher</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the Event publisher that dispatches the update events when the view 
 needs to be updated.

 <br><b>Role</b>: Retrieves the Event publisher that dispatches the update events when the view 
 needs to be updated. The view subscribes to this publiser on the UpdateEvent.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTableModelEventPublisher</tt>
   <dd> [out]   The event publisher that dispatches the update events.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetIcon"></a><a name="GetIcon(CATBaseUnknown_var,CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetIcon</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIcon</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oIcon</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the icon content of the cell defined by iLine, iColumn.

 <br><b>Role</b>: Retrieves the icon content of the cell defined by iLine, iColumn.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> oIcon</tt>
   <dd> [out]   The Icon's ID.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetLabel"></a><a name="GetLabel(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>GetLabel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLabel</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oLabel</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the text content of the cell defined by iLine, iColumn.

 <br><b>Role</b>: Retrieves the text content of the cell defined by iLine, iColumn.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> oLabel</tt>
   <dd> [out]   The text content of the pointed cell.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetLineCount"></a><a name="GetLineCount(int&amp;)"></a> <dt> o <b>GetLineCount</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLineCount</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oLineCount</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  retrieves the total number of lines that can be displayed.

 <br><b>Role</b>: retrieves the total number of lines that can be displayed.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oLineCount</tt>
   <dd> [out]   The number of lines that can be displayed.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetLines"></a><a name="GetLines(int,int,CATListOfCATBaseUnknown_var&amp;)"></a> <dt> o <b>GetLines</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLines</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iCount</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATListOfCATBaseUnknown_var','CATListOfCATBaseUnknown_var&amp;')</script> <td><tt>oLines</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves iCount lines from line number iStart.

 <br><b>Role</b>: Retrieves iCount lines from line number iStart.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStart</tt>
   <dd> [in]   Number of the first line to be retrieved.
 </dd>
    <dt><tt> iCount</tt>
   <dd> [in]   Integer, number of lines to be retrieved.
 </dd>
    <dt><tt> oLines</tt>
   <dd> [out]   List of the retrieved iCount lines.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetStyle"></a><a name="GetStyle(CATBaseUnknown_var,CATString&amp;,CATDlgTableStyle&amp;)"></a> <dt> o <b>GetStyle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetStyle</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumnID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATDlgTableStyle','CATDlgTableStyle&amp;')</script> <td><tt>oStyle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the cell style combination.

 <br><b>Role</b>: Retrieves the cell style combination. The style are cumulated by logical or.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumnID</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> oStyle</tt>
   <dd> [out]   The cell style, available styles are :
   <ul>
       <li>CATDlgTableLeftJustify   | </li>
       <li>CATDlgTableRightJustify  |- for text horizontal alignement</li>
       <li>CATDlgTableCenterJustify | </li>

       <li>CATDlgTableTopJustify    | </li>
       <li>CATDlgTableBottomJustify |- for text vertical alignement</li>
       <li>CATDlgTableMiddleJustify | </li>

       <li>CATDlgTableCellOK      | OK cell style      | </li>
       <li>CATDlgTableCellNormal  | Normal cell style  | </li>
       <li>CATDlgTableCellWarning | Warning cell style | - for cell color</li>
       <li>CATDlgTableCellError   | Error cell style   | </li>
       <li>CATDlgTableCellCustom  | Custom cell style  | </li>
   </ul>
   Default value is: CATDlgTableLeftJustify | CATDlgTableMiddleJustify | CATDlgTableCellNormal

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="GetTextColor"></a><a name="GetTextColor(CATDlgTableStyle,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"></a> <dt> o <b>GetTextColor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTextColor</b>(<td><script type="text/javascript"> activateLink('CATDlgTableStyle','CATDlgTableStyle')</script> <td><tt>iStyle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioRed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioGreen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioBlue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioAlpha</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the cell background color for all cells of given style.
 
 <br><b>Role</b>: Retrieves the cell background color for all cells of given style.

 input : Default color value
 ouput : new color value. Leave value unchanged to keep default colors

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStyle</tt>
   <dd> [in]   The searched cell style. The possible values are:
   <ul>
       <li>CATDlgTableLeftJustify   | </li>
       <li>CATDlgTableRightJustify  |- Horizontal cell alignement</li>
       <li>CATDlgTableCenterJustify | </li>

       <li>CATDlgTableTopJustify    | </li>
       <li>CATDlgTableBottomJustify |- Vertical cell alignement</li>
       <li>CATDlgTableMiddleJustify | </li>

       <li>CATDlgTableCellOK      | OK cell style</li>
       <li>CATDlgTableCellNormal  | Normal cell style</li>
       <li>CATDlgTableCellWarning | Warning cell style</li>
       <li>CATDlgTableCellError   | Error cell style</li>
       <li>CATDlgTableCellCustom  | Custom cell style</li>
   </ul>
 </dd>
    <dt><tt> ioRed</tt>
   <dd> [inout]   It defines the red component of the text color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioGreen</tt>
   <dd> [inout]   It defines the green component of the text color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioBlue</tt>
   <dd> [inout]   It defines the blue component of the text color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioAlpha</tt>
   <dd> [inout]   Not supported.</dd>
</dl>
</dl>
</dl>
<a name="GetTextColor"></a><a name="GetTextColor(CATBaseUnknown_var,CATString&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"></a> <dt> o <b>GetTextColor</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTextColor</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown_var')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioRed</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioGreen</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioBlue</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>ioAlpha</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the cell text color for the cell defined by iLine, iColumn.

 <br><b>Role</b>: Retrieves the cell text color for the cell defined by iLine, iColumn.
 This method is not called if the cells does not have the style CustomColor

 input : Default color value
 ouput : new color value. Leave value unchanged to keep default colors

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> ioRed</tt>
   <dd> [inout]   It defines the red component of the text color.The value ranges from 0 to 255. 
 </dd>
    <dt><tt> ioGreen</tt>
   <dd> [inout]   It defines the green component of the text color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioBlue</tt>
   <dd> [inout]   It defines the blue component of the text color.The value ranges from 0 to 255.
 </dd>
    <dt><tt> ioAlpha</tt>
   <dd> [inout]   Not supported

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok, otherwise...

</dl>
</dl>
<a name="GetUpdateEvent"></a><a name="GetUpdateEvent(CATCallbackEvent*)"></a> <dt> o <b>GetUpdateEvent</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetUpdateEvent</b>(<td><script type="text/javascript"> activateLink('CATCallbackEvent','CATCallbackEvent*')</script> <td><tt>oUpdateEvent</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the event dispatched by the model when the view needs to be updated.

 <br><b>Role</b>: Retrieves the event dispatched by the model when the view needs to be updated.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oUpdateEvent</tt>
   <dd> [out]   The event dispatched by the model

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok, E_FAIL otherwise.

</dl>
</dl>
<a name="IsEditable"></a><a name="IsEditable(CATBaseUnknown_var&amp;,CATString&amp;,CATBoolean&amp;)"></a> <dt> o <b>IsEditable</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsEditable</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oEditable</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
  Indicates if the pointed cell can be edited.

 <br><b>Role</b>: Indicates if the pointed cell can be edited.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> oEditable</tt>
   <dd> [out]   CATBoolean indicating the pointed cell's editability.
   Returns true if the cell can be edited by user

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<a name="SetLabel"></a><a name="SetLabel(CATBaseUnknown_var&amp;,CATString&amp;,CATUnicodeString&amp;)"></a> <dt> o <b>SetLabel</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetLabel</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown_var','CATBaseUnknown_var&amp;')</script> <td><tt>iLine</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iColumn</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>iLabel</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
  Sets the text entered by the user.

 <br><b>Role</b>: Sets the text entered by the user. This method is not 
 called if the cell cannot be edited.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLine</tt>
   <dd> [in]   The line containing the cell. This data must be serializable.
 </dd>
    <dt><tt> iColumn</tt>
   <dd> [in]   ID of the column containing the cell.
 </dd>
    <dt><tt> iLabel</tt>
   <dd> [in]   The text to set the content of the pointed cell.

 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <code>S_OK</code> if everything ran ok.

</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIDlgTableViewModel.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATDlgView</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
