<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AdvancedMathematics Class CATMathInterval</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../AdvancedMathematics.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMathInterval','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathInterval','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMathInterval','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathInterval','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>AdvancedMathematics Class CATMathInterval</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathInterval_29872','CATMathInterval','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathInterval</b>
</p>
<p>
<b><i> Class representing a closed bounded interval of R.</i></b><br>
 
 <br>A CATMathInterval is the set of the reals <tt>x</tt> lying between two 
 real bounds <tt>Low</tt> and <tt>High</tt>: <tt>Low <= x <= High</tt>.
 If <tt>Low > High</tt>, the interval is empty.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathInterval()"><b>CATMathInterval</b></a>()
<dd>  Constructs a CATMathInterval with <tt> Low = High = 0</tt>.
 <dt> o 
    <a href="#CATMathInterval(CATMathInterval&amp;)"><b>CATMathInterval</b></a>(CATMathInterval&amp;)
<dd>  Copy Constructor.
 <dt> o 
    <a href="#CATMathInterval(double&amp;,double&amp;)"><b>CATMathInterval</b></a>(double&amp;,double&amp;)
<dd>  Constructs a CATMathInterval.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Center()"><b>Center</b></a>()
<dd>  Returns the center  of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#ClosestPeriodicEndpoint(double&amp;,double)"><b>ClosestPeriodicEndpoint</b></a>(double&amp;,double)
<dd>  Retrieves the closest external point of <tt>this</tt> CATMathInterval among those obtained
 by all the successive translations of length + or -<tt>iPeriod</tt>.
 <dt> o 
    <a href="#DistanceTo(double&amp;)"><b>DistanceTo</b></a>(double&amp;)
<dd>  <dt> o 
    <a href="#DistanceTo(double&amp;)"><b>DistanceTo</b></a>(double&amp;)
<dd>  Return the distance between <tt>this</tt> CATMathInterval and a point.
 <dt> o 
    <a href="#GetMax()"><b>GetMax</b></a>()
<dd>  Returns the high limitation of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#GetMin()"><b>GetMin</b></a>()
<dd>  Returns the low limitation of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#InPeriodicTrim(double,double,double)"><b>InPeriodicTrim</b></a>(double,double,double)
<dd>  Tests whether a point belongs to <tt>this</tt> CATMathInterval 
 after a given number of translation of length + or -<tt>iPeriod+iTolerance</tt>.
 <dt> o 
    <a href="#IsEmpty()"><b>IsEmpty</b></a>()
<dd>  Tests if <tt>this</tt> CATMathInterval is empty.
 <dt> o 
    <a href="#IsIncludedIn(CATMathInterval&amp;)"><b>IsIncludedIn</b></a>(CATMathInterval&amp;)
<dd>  Tests if <tt>this</tt> CATMathInterval is included into an other one.
 <dt> o 
    <a href="#IsIncludedIn(CATMathInterval&amp;,double)"><b>IsIncludedIn</b></a>(CATMathInterval&amp;,double)
<dd>  Tests if <tt>this</tt> CATMathInterval is included into an other one
 at a given absolute tolerance.
 <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  <dt> o 
    <a href="#Norm()"><b>Norm</b></a>()
<dd>  Returns the norm of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#PeriodicResidue(double&amp;)"><b>PeriodicResidue</b></a>(double&amp;)
<dd>  Translates a point to locate it at <tt>this</tt> CATMathInterval point 
 such that the distance between these two points
 is a multiple of <tt>this</tt> CATMathInterval width.
 <dt> o 
    <a href="#SetMax(double&amp;)"><b>SetMax</b></a>(double&amp;)
<dd>  Modifies the high limitation of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#SetMin(double&amp;)"><b>SetMin</b></a>(double&amp;)
<dd>  Modifies the low limitation of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#Sign()"><b>Sign</b></a>()
<dd>  Tests the relative position of <tt>this</tt> CATMathInterval with regards
 to <tt>0</tt>.
 <dt> o 
    <a href="#Width()"><b>Width</b></a>()
<dd>  Returns the width  of <tt>this</tt> CATMathInterval.
 <dt> o 
    <a href="#operator &&(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator &&</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Returns the interval resulting of the intersection of two CATMathIntervals.
 <dt> o 
    <a href="#operator *(double&amp;,CATMathInterval&amp;)"><b>operator *</b></a>(double&amp;,CATMathInterval&amp;)
<dd>  Defines the multiplication of a CATMathInterval with a scalar.
 <dt> o 
    <a href="#operator *(CATMathInterval&amp;,double&amp;)"><b>operator *</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the multiplication of a scalar with a CATMathInterval.
 <dt> o 
    <a href="#operator *=(CATMathInterval&amp;,double)"><b>operator *=</b></a>(CATMathInterval&amp;,double)
<dd>  Defines the *= operator of a CATMathInterval with a scalar.
 <dt> o 
    <a href="#operator +(double&amp;,CATMathInterval&amp;)"><b>operator +</b></a>(double&amp;,CATMathInterval&amp;)
<dd>  Defines the scalar addition with a CATMathInterval.
 <dt> o 
    <a href="#operator +(CATMathInterval&amp;,double&amp;)"><b>operator +</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the addition of a CATMathInterval with a scalar.
 <dt> o 
    <a href="#operator +(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator +</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Unary plus operator.
 <dt> o 
    <a href="#operator +=(CATMathInterval&amp;,double&amp;)"><b>operator +=</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the += operator of a CATMathInterval with a scalar.
 <dt> o 
    <a href="#operator +=(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator +=</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Addition assignment operator.
 <dt> o 
    <a href="#operator -(CATMathInterval&amp;)"><b>operator -</b></a>(CATMathInterval&amp;)
<dd>  Defines the opposite of a CATMathInterval.
 <dt> o 
    <a href="#operator -(double&amp;,CATMathInterval&amp;)"><b>operator -</b></a>(double&amp;,CATMathInterval&amp;)
<dd>  Defines the scalar substraction with a CATMathInterval.
 <dt> o 
    <a href="#operator -(CATMathInterval&amp;,double&amp;)"><b>operator -</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the scalar substraction with a CATMathInterval.
 <dt> o 
    <a href="#operator -(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator -</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Subtraction operator.
 <dt> o 
    <a href="#operator -=(CATMathInterval&amp;,double&amp;)"><b>operator -=</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the -= operator of a CATMathInterval with a scalar.
 <dt> o 
    <a href="#operator -=(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator -=</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Subtraction assignment operator.
 <dt> o 
    <a href="#operator /(CATMathInterval&amp;,double&amp;)"><b>operator /</b></a>(CATMathInterval&amp;,double&amp;)
<dd>  Defines the division of a CATMathInterval by a scalar.
 <dt> o 
    <a href="#operator /(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator /</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Defines the dividion of a CATMathInterval by another one.
 <dt> o 
    <a href="#operator ||(CATMathInterval&amp;,CATMathInterval&amp;)"><b>operator ||</b></a>(CATMathInterval&amp;,CATMathInterval&amp;)
<dd>  Returns the interval resulting of the union of two CATMathIntervals.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathInterval"></a><a name="CATMathInterval()"></a> <dt> o <b>CATMathInterval</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathInterval</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathInterval with <tt> Low = High = 0</tt>.
</dl>
<a name="CATMathInterval"></a><a name="CATMathInterval(CATMathInterval&amp;)"></a> <dt> o <b>CATMathInterval</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathInterval</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>iToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy Constructor.
</dl>
<a name="CATMathInterval"></a><a name="CATMathInterval(double&amp;,double&amp;)"></a> <dt> o <b>CATMathInterval</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathInterval</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iLow</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iHigh</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathInterval.
 <br> If <tt>iLow > iHigh</tt>, the interval is empty.
</dl>
 <h2>Methods</h2> <br>
<a name="Center"></a><a name="Center()"></a> <dt> o <b>Center</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>Center</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the center  of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The center (<tt>(High + Low)*0.5</tt>).
</dl>
</dl>
<a name="ClosestPeriodicEndpoint"></a><a name="ClosestPeriodicEndpoint(double&amp;,double)"></a> <dt> o <b>ClosestPeriodicEndpoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>ClosestPeriodicEndpoint</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPeriod</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the closest external point of <tt>this</tt> CATMathInterval among those obtained
 by all the successive translations of length + or -<tt>iPeriod</tt>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The initial point (input) and the resulting one (output).
 </dd>
    <dt><tt> iPeriod</tt>
   <dd> The period.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The distance between this point and the initial one.
</dl>
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(double&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>DistanceTo</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(double&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>DistanceTo</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Return the distance between <tt>this</tt> CATMathInterval and a point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The value to which the distance is computed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>0</tt><dd> if the point is included into <tt>this</tt>.
     <dt><tt>iPoint-High</tt><dd> if the point does not belong to <tt>this</tt>
 and <tt> iPoint >= High</tt>
     <dt><tt>Low-iPoint</tt><dd> if the point does not belong to <tt>this</tt>
 and <tt>Low>=iPoint</tt>
</dl>.
 
  <dt> <b>Returns:</b> 
  <dd> 
</dl>
</dl>
<a name="GetMax"></a><a name="GetMax()"></a> <dt> o <b>GetMax</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>GetMax</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the high limitation of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The high limitation.
</dl>
</dl>
<a name="GetMin"></a><a name="GetMin()"></a> <dt> o <b>GetMin</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>GetMin</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the low limitation of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The low limitation.
</dl>
</dl>
<a name="InPeriodicTrim"></a><a name="InPeriodicTrim(double,double,double)"></a> <dt> o <b>InPeriodicTrim</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>InPeriodicTrim</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPeriod</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTolerance</tt><td><tt>= 0.0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Tests whether a point belongs to <tt>this</tt> CATMathInterval 
 after a given number of translation of length + or -<tt>iPeriod+iTolerance</tt>.
 <br>
 The difference with the preceding method, is that <tt>iPeriod</tt>
 is greater than the width of the CATMathInterval (the CATMathInterval
 may be seen as a trimmed interval of the </tt>[0,iPeriod]</tt> one.)
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The tested point.
 </dd>
    <dt><tt> iPeriod</tt>
   <dd> A value greater than the with of <tt>this</tt> CATMathInterval.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance at which the tests is run.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  TRUE if iPoint is in the interval with regards to iPeriod, FALSE otherwise.
</dl>
</dl>
<a name="IsEmpty"></a><a name="IsEmpty()"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','INLINE CATLONG32')</script>  <b>IsEmpty</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathInterval is empty.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The result of the test.
 <br><b>Legal values</b>: <tt>1</tt> if <tt>Low > High</tt>,
 <tt>0</tt> otherwise.
</dl>
</dl>
<a name="IsIncludedIn"></a><a name="IsIncludedIn(CATMathInterval&amp;)"></a> <dt> o <b>IsIncludedIn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsIncludedIn</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>iOther</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathInterval is included into an other one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOther</tt>
   <dd> The other interval.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>1</tt><dd> if <tt>this</tt> is included.
     <dt><tt>0</tt><dd> otherwise</dl>.
 <br> An empty interval is always included into another one, 
 except if this other one is empty too.
</dl>
</dl>
<a name="IsIncludedIn"></a><a name="IsIncludedIn(CATMathInterval&amp;,double)"></a> <dt> o <b>IsIncludedIn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsIncludedIn</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>iOther</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathInterval is included into an other one
 at a given absolute tolerance.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iOther</tt>
   <dd> The other interval
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance at which the tests is run.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>1</tt><dd> if <tt>this</tt> is included.
     <dt><tt>0</tt><dd> otherwise</dl>.
 <br> An empty interval is always included into another one, 
 except if this other one is empty too.
</dl>
</dl>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>Norm</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="Norm"></a><a name="Norm()"></a> <dt> o <b>Norm</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>Norm</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the norm of <tt>this</tt> CATMathInterval.
 <br> This norm may be negative if the interval is empty.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The norm.
 <dl><dt><tt>High</tt><dd> if <tt>Low > 0</tt>.
     <dt><tt>-Low</tt><dd> if <tt>High < 0</tt>.
     <dt><tt>High</tt><dd> if <tt>High >= -Low</tt>(and the interval
 is not empty)
     <dt><tt>-Low</tt><dd> <tt>High < -Low</tt>(and the interval
 is not empty)</dl> 
 
  <dt> <b>Returns:</b> 
  <dd>  The norm.
</dl>
</dl>
<a name="PeriodicResidue"></a><a name="PeriodicResidue(double&amp;)"></a> <dt> o <b>PeriodicResidue</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>PeriodicResidue</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioToTranslate</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Translates a point to locate it at <tt>this</tt> CATMathInterval point 
 such that the distance between these two points
 is a multiple of <tt>this</tt> CATMathInterval width.<br>
 This is useful in case of periodic functions to find the parameter of the
 fundamental interval corresponding to a given point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioToTranslate</tt>
   <dd> The point to translate (in input), and the resulting one (in output).</dd>
</dl>
</dl>
</dl>
<a name="SetMax"></a><a name="SetMax(double&amp;)"></a> <dt> o <b>SetMax</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetMax</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iNewHigh</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the high limitation of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewHigh</tt>
   <dd> The new value of the high limitation.</dd>
</dl>
</dl>
</dl>
<a name="SetMin"></a><a name="SetMin(double&amp;)"></a> <dt> o <b>SetMin</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetMin</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iNewLow</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the low limitation of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNewLow</tt>
   <dd> The new value of the low limitation.</dd>
</dl>
</dl>
</dl>
<a name="Sign"></a><a name="Sign()"></a> <dt> o <b>Sign</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>Sign</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests the relative position of <tt>this</tt> CATMathInterval with regards
 to <tt>0</tt>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   The result of the test.
 <br><b>Legal values</b>:
 <dl><dt><tt>1</tt><dd> if <tt>Low > 0</tt> or the interval is empty.
     <dt><tt>-1</tt><dd> if <tt>Low < 0</tt> and the interval is not empty.
     <dt><tt>0</tt><dd> otherwise. In this case, <tt>0</tt> belongs to
 the interval, which is not empty</dl>
</dl>
</dl>
<a name="Width"></a><a name="Width()"></a> <dt> o <b>Width</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE double')</script>  <b>Width</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the width  of <tt>this</tt> CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The width (<tt>(High - Low)</tt>).
</dl>
</dl>
<a name="operator &&"></a><a name="operator &&(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator &&</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator &&</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the interval resulting of the intersection of two CATMathIntervals.
</dl>
<a name="operator *"></a><a name="operator *(double&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator *</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator *</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the multiplication of a CATMathInterval with a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>[i.GetMin()*iScalar,i.GetMax()*iScalar]</tt></dt>
                 <dd> if <tt>iScalar>0</tt>
     <dt><tt>[i.GetMax()*iScalar,i.GetMin()*iScalar]</tt></dt>
                 <dd> if <tt>iScalar<=0</tt></dl>
</dl>
</dl>
<a name="operator *"></a><a name="operator *(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator *</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator *</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the multiplication of a scalar with a CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>[i.GetMin()*iScalar,i.GetMax()*iScalar]</tt></dt>
                 <dd> if <tt>iScalar>0</tt>
     <dt><tt>[i.GetMax()*iScalar,i.GetMin()*iScalar]</tt></dt>
                 <dd> if <tt>iScalar<=0</tt></dl>
</dl>
</dl>
<a name="operator *="></a><a name="operator *=(CATMathInterval&amp;,double)"></a> <dt> o <b>operator *=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE friend  void')</script>  <b>operator *=</b>(<td><script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>io</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the *= operator of a CATMathInterval with a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>[io.GetMin()*=iScalar,io.GetMax()*=iScalar]</tt>
                 <dd> if <tt>iScalar>0</tt>
     <dt><tt>[io.GetMax()*=iScalar,io.GetMin()*=iScalar]</tt>
                 <dd> if <tt>iScalar<=0</tt></dl>
</dl>
</dl>
<a name="operator +"></a><a name="operator +(double&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator +</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator +</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the scalar addition with a CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[i.GetMin()+iScalar,i.GetMax()+iScalar]</tt>
</dl>
</dl>
<a name="operator +"></a><a name="operator +(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator +</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator +</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the addition of a CATMathInterval with a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[i.GetMin()+iScalar,i.GetMax()+iScalar]</tt>
</dl>
</dl>
<a name="operator +"></a><a name="operator +(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator +</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator +</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Unary plus operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[i1.GetMin()+i2.GetMin(),i1.GetMax()+i2.GetMax()]</tt>
</dl>
</dl>
<a name="operator +="></a><a name="operator +=(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator +=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE friend  void')</script>  <b>operator +=</b>(<td><script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>io</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the += operator of a CATMathInterval with a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>io = [io.GetMin()+=iScalar,io.GetMax()+=iScalar]</tt>
</dl>
</dl>
<a name="operator +="></a><a name="operator +=(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator +=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE friend  void')</script>  <b>operator +=</b>(<td><script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>io1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Addition assignment operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>io1 = [io1.GetMin()+=i2.GetMin(),io1.GetMax()+=i2.GetMax()]</tt>
</dl>
</dl>
<a name="operator -"></a><a name="operator -(CATMathInterval&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the opposite of a CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[-i.GetMax(),-i.GetMin()]</tt>
</dl>
</dl>
<a name="operator -"></a><a name="operator -(double&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the scalar substraction with a CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <tt>[iScalar-i.GetMin(),iScalar-i.GetMax()]</tt>
</dl>
</dl>
<a name="operator -"></a><a name="operator -(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the scalar substraction with a CATMathInterval.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[i.GetMin()-iScalar,i.GetMax()-iScalar]</tt>
</dl>
</dl>
<a name="operator -"></a><a name="operator -(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Subtraction operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>[i1.GetMin()-i2.GetMin(),i1.GetMax()-i2.GetMax()]</tt>
</dl>
</dl>
<a name="operator -="></a><a name="operator -=(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator -=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE friend  void')</script>  <b>operator -=</b>(<td><script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>io</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the -= operator of a CATMathInterval with a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>io = [io.GetMin()-=iScalar,io.GetMax()-=iScalar]</tt>
</dl>
</dl>
<a name="operator -="></a><a name="operator -=(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator -=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE friend  void')</script>  <b>operator -=</b>(<td><script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>io1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Subtraction assignment operator.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>io1= [i1.GetMin()-=i2.GetMax(),i1.GetMax()-=i2.GetMin()]</tt>
</dl>
</dl>
<a name="operator /"></a><a name="operator /(CATMathInterval&amp;,double&amp;)"></a> <dt> o <b>operator /</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator /</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>iScalar</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the division of a CATMathInterval by a scalar.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <dl><dt><tt>[i.GetMin()/iScalar,i.GetMax()/iScalar]</tt></dt>
                 <dd> if <tt>iScalar>0</tt>
     <dt><tt>[i.GetMax()/iScalar,i.GetMin()/iScalar]</tt></dt>
                 <dd> if <tt>iScalar<=0</tt></dl>
</dl>
</dl>
<a name="operator /"></a><a name="operator /(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator /</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator /</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Defines the dividion of a CATMathInterval by another one.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <dl> <dt><tt>i1*[1/i2.GetMax(), 1/i2.GetMin()]</tt>
          <dd>if <tt>i2.GetMax()*i2.GetMin() >0</tt>
     <dt><tt>[-CATMathInfinite,CATMathInfinite]</tt>
          <dd>if <tt>i2.GetMax()*i2.GetMin() <=0</tt></dl>
</dl>
</dl>
<a name="operator ||"></a><a name="operator ||(CATMathInterval&amp;,CATMathInterval&amp;)"></a> <dt> o <b>operator ||</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathInterval','INLINE friend  CATMathInterval')</script>  <b>operator ||</b>(<td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathInterval','CATMathInterval&amp;')</script> <td><tt>i2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Returns the interval resulting of the union of two CATMathIntervals.
</dl>
<hr>
 This object is included in the file: <b>CATMathInterval.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAdvancedMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
