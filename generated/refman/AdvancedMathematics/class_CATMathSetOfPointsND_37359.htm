<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AdvancedMathematics Class CATMathSetOfPointsND</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../AdvancedMathematics.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMathSetOfPointsND','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathSetOfPointsND','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMathSetOfPointsND','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathSetOfPointsND','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>AdvancedMathematics Class CATMathSetOfPointsND</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathSetOfPointsND_37359','CATMathSetOfPointsND','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathSetOfPointsND</b>
</p>
<p>
<b><i> Class defining a set of points in <tt>R^n</tt>.</i></b><br>
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathSetOfPointsND(CATLONG32,CATLONG32)"><b>CATMathSetOfPointsND</b></a>(CATLONG32,CATLONG32)
<dd>   Constructs a CATMathSetOfPointsND.
 <dt> o 
    <a href="#CATMathSetOfPointsND(CATMathSetOfPointsND&amp;)"><b>CATMathSetOfPointsND</b></a>(CATMathSetOfPointsND&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#~CATMathSetOfPointsND()"><b>~CATMathSetOfPointsND</b></a>()
<dd> </dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddNewPoint(double*,double)"><b>AddNewPoint</b></a>(double*,double)
<dd>  Appends a point at the end of the set if it is different from the last point.
 <dt> o 
    <a href="#AddPoint(double*)"><b>AddPoint</b></a>(double*)
<dd>  Appends a  point at the end of the set.
 <dt> o 
    <a href="#AddSet(CATMathSetOfPointsND&amp;,CATBoolean)"><b>AddSet</b></a>(CATMathSetOfPointsND&amp;,CATBoolean)
<dd>  Concatenates a CATMathSetOfPointsND just after the last point of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#AutoInvert()"><b>AutoInvert</b></a>()
<dd>  Inverts the content of <tt>this</tt> CATMathSetOfPointsND inside itself.
 <dt> o 
    <a href="#Beginning()"><b>Beginning</b></a>()
<dd>  <dt> o 
    <a href="#Beginning()"><b>Beginning</b></a>()
<dd>  Resets the iterator to read the points again.
 <dt> o 
    <a href="#BoundingBox(double*)"><b>BoundingBox</b></a>(double*)
<dd>  Builds the marginless bounding box.
 <dt> o 
    <a href="#ComputeTangents(double*,double*)"><b>ComputeTangents</b></a>(double*,double*)
<dd>  Computes the tangent in each point of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#ConvexContour(CATLONG32,double,CATMathSetOfPointsND&amp;)"><b>ConvexContour</b></a>(CATLONG32,double,CATMathSetOfPointsND&amp;)
<dd>  Builds the convex contour of a given two-dimensional set.
 <dt> o 
    <a href="#DistanceMin(double*,CATLONG32&amp;,CATTolerance&amp;)"><b>DistanceMin</b></a>(double*,CATLONG32&amp;,CATTolerance&amp;)
<dd>   Retrieves the closest point of the polyline in RN defined by <tt>this</tt> CATMathSetOfPointsND
 to a given point.
 <dt> o 
    <a href="#FindCircle(CATLONG32*,double&amp;,double*,double*,double*,double,double,CATTolerance&amp;)"><b>FindCircle</b></a>(CATLONG32*,double&amp;,double*,double*,double*,double,double,CATTolerance&amp;)
<dd>  Searches for a 3D circle defined by the set of points on 3 specific coordinates.
 <dt> o 
    <a href="#FindConic(CATLONG32,CATLONG32,double[6],double,CATTolerance&amp;)"><b>FindConic</b></a>(CATLONG32,CATLONG32,double[6],double,CATTolerance&amp;)
<dd>  Searches for a conics defined by the set of points on 2 specific coordinates.
 <dt> o 
    <a href="#FindConic(CATLONG32,CATLONG32,ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)"><b>FindConic</b></a>(CATLONG32,CATLONG32,ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)
<dd>  From V5R17, searches for a conics defined by the set of points on 2 specific coordinates.
 <dt> o 
    <a href="#FindConicParameters(double[6],ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)"><b>FindConicParameters</b></a>(double[6],ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)
<dd>  From V5R17 onwards, retrieves the conics parameters from its equation parameters.
 <dt> o 
    <a href="#GetClosestPoints(double*,double*,double*,CATTolerance&amp;)"><b>GetClosestPoints</b></a>(double*,double*,double*,CATTolerance&amp;)
<dd>  Retrieves the two points of the polyline in RN defined by <tt>this</tt> CATMathSetOfPointsND which are the
 closest to a given point.
 <dt> o 
    <a href="#GetCurrentIndex()"><b>GetCurrentIndex</b></a>()
<dd>  Returns the index of the iterator inside <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#GetDimension()"><b>GetDimension</b></a>()
<dd>  <dt> o 
    <a href="#GetDimension()"><b>GetDimension</b></a>()
<dd>  Returns the dimension of the space in which the points are defined.
 <dt> o 
    <a href="#GetFirstPointOnSegment(CATLONG32&amp;,double*,double*,double,CATTolerance&amp;)"><b>GetFirstPointOnSegment</b></a>(CATLONG32&amp;,double*,double*,double,CATTolerance&amp;)
<dd>  Intersects <tt>this</tt> CATMathSetOfPointsND and a segment in RN.
 <dt> o 
    <a href="#GetMaxNumberOfPoints()"><b>GetMaxNumberOfPoints</b></a>()
<dd>  Returns the maximum number of points of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  <dt> o 
    <a href="#GetNumberOfPoints()"><b>GetNumberOfPoints</b></a>()
<dd>  Returns the number of points of <tt>this</tt> CATMathSetOfPointsND that are already set.
 <dt> o 
    <a href="#GetPoint(double*)"><b>GetPoint</b></a>(double*)
<dd>  Retrieves the array of the coordinates of the current point.
 <dt> o 
    <a href="#GetPoint(CATLONG32,double*)"><b>GetPoint</b></a>(CATLONG32,double*)
<dd>  Retrieves the coordinates of a specific point of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#GetPoints()"><b>GetPoints</b></a>()
<dd>  <dt> o 
    <a href="#GetPoints()"><b>GetPoints</b></a>()
<dd>  Returns the array of the coordinates of the all the points.
 <dt> o 
    <a href="#InitializeParameters(double*)"><b>InitializeParameters</b></a>(double*)
<dd>  Computes the distance between two successive points of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#InsertPoint(double*,CATLONG32)"><b>InsertPoint</b></a>(double*,CATLONG32)
<dd>  Inserts a  point at a specific position.
 <dt> o 
    <a href="#Invert(CATMathSetOfPointsND&amp;)"><b>Invert</b></a>(CATMathSetOfPointsND&amp;)
<dd>  Inverts the content of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#IsAKindOf(CATMathClassId)"><b>IsAKindOf</b></a>(CATMathClassId)
<dd>  Tests the class of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#IsContaining(double*,double,CATLONG32*)"><b>IsContaining</b></a>(double*,double,CATLONG32*)
<dd>  Tests if a point is on the polyline defined by <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#IsIncludedIn(double*,double,CATLONG32&amp;,CATTolerance&amp;)"><b>IsIncludedIn</b></a>(double*,double,CATLONG32&amp;,CATTolerance&amp;)
<dd>  Tests if a point is equal to a point of  <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#IsLinear(CATLONG32,CATLONG32*,double,CATTolerance&amp;)"><b>IsLinear</b></a>(CATLONG32,CATLONG32*,double,CATTolerance&amp;)
<dd>  Searches for a line defined by the set of points on specific coordinates.
 <dt> o 
    <a href="#IsMonotonousAlong(CATLONG32)"><b>IsMonotonousAlong</b></a>(CATLONG32)
<dd>  Tests whether <tt>this</tt> CATMathSetOfPointsND is monotonous with regards to one of its
 coordinates.
 <dt> o 
    <a href="#IsPeriodic()"><b>IsPeriodic</b></a>()
<dd>  <dt> o 
    <a href="#IsPeriodic()"><b>IsPeriodic</b></a>()
<dd>  Tests whether <tt>this</tt> CATMathSetOfPointsND is periodic.
 <dt> o 
    <a href="#Length()"><b>Length</b></a>()
<dd>  Returns the length of the polyline in RN defined by the set of points.
 <dt> o 
    <a href="#Next()"><b>Next</b></a>()
<dd>  Skips to the next point of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#Pack()"><b>Pack</b></a>()
<dd>  Packs <tt>this</tt> CATMathSetOfPoints.
 <dt> o 
    <a href="#RemoveMultiplePoints(double,CATBoolean)"><b>RemoveMultiplePoints</b></a>(double,CATBoolean)
<dd>   Removes the duplicated points of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#RemovePoint(CATLONG32)"><b>RemovePoint</b></a>(CATLONG32)
<dd>  Removes one point of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#RemovePoints(CATMathSetOfLongs&amp;)"><b>RemovePoints</b></a>(CATMathSetOfLongs&amp;)
<dd>  Removes points of <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#ReplacePoint(double*)"><b>ReplacePoint</b></a>(double*)
<dd>  Replaces the coordinates of the current point.
 <dt> o 
    <a href="#ReplacePoint(CATLONG32,double*)"><b>ReplacePoint</b></a>(CATLONG32,double*)
<dd>  Replaces the coordinates of a specific point.
 <dt> o 
    <a href="#ReplacePoints(CATLONG32,double*)"><b>ReplacePoints</b></a>(CATLONG32,double*)
<dd>  Sets the coordinates of all the points.
 <dt> o 
    <a href="#Reset()"><b>Reset</b></a>()
<dd>  Resets <tt>this</tt> CATMathSetOfPoints.
 <dt> o 
    <a href="#Resize(CATLONG32)"><b>Resize</b></a>(CATLONG32)
<dd>  Resizes <tt>this</tt> CATMathSetOfPoints.
 <dt> o 
    <a href="#SetCoordAtPoint(double,CATLONG32,CATLONG32)"><b>SetCoordAtPoint</b></a>(double,CATLONG32,CATLONG32)
<dd>  Sets the value of a coordinate of a point.
 <dt> o 
    <a href="#SetPeriodic(CATBoolean)"><b>SetPeriodic</b></a>(CATBoolean)
<dd>  Sets the periodicity of <tt>this</tt >  CATMathSetOfPointsND.
 <dt> o 
    <a href="#Simplify(double,CATMathSetOfLongs*)"><b>Simplify</b></a>(double,CATMathSetOfLongs*)
<dd>    Simpifies <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#Sort(CATLONG32)"><b>Sort</b></a>(CATLONG32)
<dd>   Sorts <tt>this</tt> CATMathSetOfPointsND along coordinate index, from the smallest to 
 the highest coordinate.
 <dt> o 
    <a href="#Split(CATLONG32,CATMathSetOfPointsND&amp;,CATBoolean,CATTolerance&amp;)"><b>Split</b></a>(CATLONG32,CATMathSetOfPointsND&amp;,CATBoolean,CATTolerance&amp;)
<dd>  Splits a CATMathSetOfPointsND just after the point corresponding to the iIndex.
 <dt> o 
    <a href="#SwapPoints(CATLONG32,CATLONG32)"><b>SwapPoints</b></a>(CATLONG32,CATLONG32)
<dd>  Swaps two points inside <tt>this</tt> CATMathSetOfPointsND.
 <dt> o 
    <a href="#operator =(CATMathSetOfPointsND&amp;)"><b>operator =</b></a>(CATMathSetOfPointsND&amp;)
<dd>  Assignment operator.
</dl>
<dl>
 <h2>Enumerated Type Index</h2> <br>
 <dt> o 
    <a href="#ConicType"><b>ConicType</b></a>
<dd>  The type of mathematical configurations of a set of points.
 <dt> o 
    <a href="#MonotonyDiagnostic"><b>MonotonyDiagnostic</b></a>
<dd>  The monotony of a function.
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathSetOfPointsND"></a><a name="CATMathSetOfPointsND(CATLONG32,CATLONG32)"></a> <dt> o <b>CATMathSetOfPointsND</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathSetOfPointsND</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iN</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iNumberOfPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructs a CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iN</tt>
   <dd> The dimension of the points of the set.
 </dd>
    <dt><tt> iNumberOfPoints</tt>
   <dd> The size of the set.</dd>
</dl>
</dl>
</dl>
<a name="CATMathSetOfPointsND"></a><a name="CATMathSetOfPointsND(CATMathSetOfPointsND&amp;)"></a> <dt> o <b>CATMathSetOfPointsND</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathSetOfPointsND</b>(<td> const <script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>iToCopy</tt>)<script type="text/javascript"> activateLink('',' ')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="~CATMathSetOfPointsND"></a><a name="~CATMathSetOfPointsND()"></a> <dt> o <b>~CATMathSetOfPointsND</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATMathSetOfPointsND</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
 <h2>Methods</h2> <br>
<a name="AddNewPoint"></a><a name="AddNewPoint(double*,double)"></a> <dt> o <b>AddNewPoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>AddNewPoint</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Appends a point at the end of the set if it is different from the last point.
 If needed, <tt>this</tt> CATMathSetOfPointsND is reallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of the coordinates.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance of confusion.</dd>
</dl>
</dl>
</dl>
<a name="AddPoint"></a><a name="AddPoint(double*)"></a> <dt> o <b>AddPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddPoint</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Appends a  point at the end of the set.
 If needed, <tt>this</tt> CATMathSetOfPointsND is reallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of the coordinates.</dd>
</dl>
</dl>
</dl>
<a name="AddSet"></a><a name="AddSet(CATMathSetOfPointsND&amp;,CATBoolean)"></a> <dt> o <b>AddSet</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AddSet</b>(<td> const <script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>iSetToConcatenate</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMerge</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Concatenates a CATMathSetOfPointsND just after the last point of <tt>this</tt> CATMathSetOfPointsND.
 If needed, <tt>this</tt> CATMathSetOfPointsND is reallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetToConcatenate</tt>
   <dd> The set to concatenate.
 </dd>
    <dt><tt> iMerge</tt>
   <dd> The way to concatenate.
 <br><b>Legal values</b>: <tt>TRUE</tt> if the last point of <tt>this</tt> CATMathSetOfPointsND 
 and the first point of <tt>iSetToConcatenate</tt> must be merged, <tt>FALSE</tt> otherwise.</dd>
</dl>
</dl>
</dl>
<a name="AutoInvert"></a><a name="AutoInvert()"></a> <dt> o <b>AutoInvert</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>AutoInvert</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Inverts the content of <tt>this</tt> CATMathSetOfPointsND inside itself.
</dl>
<a name="Beginning"></a><a name="Beginning()"></a> <dt> o <b>Beginning</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Beginning</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="Beginning"></a><a name="Beginning()"></a> <dt> o <b>Beginning</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>Beginning</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets the iterator to read the points again.
 <br>Call <tt>Next</tt> after this method to make the first point as current.
</dl>
<a name="BoundingBox"></a><a name="BoundingBox(double*)"></a> <dt> o <b>BoundingBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>BoundingBox</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioBox</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Builds the marginless bounding box.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioBox</tt>
   <dd> The bounding box. Must be previously allocated <tt>ioBox[2][GetDimension ()]</tt>.</dd>
</dl>
</dl>
</dl>
<a name="ComputeTangents"></a><a name="ComputeTangents(double*,double*)"></a> <dt> o <b>ComputeTangents</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ComputeTangents</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iParameters</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioTangents</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Computes the tangent in each point of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iParameters</tt>
   <dd> The distance of each successive interval. To be filled by the <tt>InitializeParameters</tt> method.
 </dd>
    <dt><tt> ioTangents</tt>
   <dd> The array of the tangents. Must be previously allocated to <tt>NumberOfPoints*N</tt>.</dd>
</dl>
</dl>
</dl>
<a name="ConvexContour"></a><a name="ConvexContour(CATLONG32,double,CATMathSetOfPointsND&amp;)"></a> <dt> o <b>ConvexContour</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ConvexContour</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iChoice</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>ioConvex</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Builds the convex contour of a given two-dimensional set.
 <br>The created contour is ordered, but its orientation is undefined.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iChoice</tt>
   <dd>  A way to tune the result.
 <b>Legal values</b>:
 <dl><dt>0</dt><dd> for the convex contour stricto sensu
      <dt>1</dt><dd>  for a more convenient size of the result
              ( less points for a bit bigger area )
 </dl>
 </dd>
</dl>
    <dt><tt> ioConvex</tt>
   <dd>   The convex contour.
 <br>It must be previously allocated,
              by using the CATMathSetOfPointsND constructor, such as:
  <pre>oConvex ( this.GetDimension (), this.GetNumberOfPoints () + 1 )</pre>
   ( +1 is necessary for algorithm efficiency ).
           If the method failed, <tt>oConvex.GetNumberOfPoints</tt> reurns 0.</dd>
</dl>
</dl>
<a name="DistanceMin"></a><a name="DistanceMin(double*,CATLONG32&amp;,CATTolerance&amp;)"></a> <dt> o <b>DistanceMin</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>DistanceMin</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32&amp;')</script> <td><tt>ioIndexPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
  Retrieves the closest point of the polyline in RN defined by <tt>this</tt> CATMathSetOfPointsND
 to a given point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of N coordinates.
 </dd>
    <dt><tt> ioIndexPoint</tt>
   <dd> The index of the closest point in <tt>this</tt> CATMathSetOfPointsND.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The distance between <tt>iPoint</tt> and <tt>this</tt> CATMathSetOfPointsND.
</dl>
</dl>
<a name="FindCircle"></a><a name="FindCircle(CATLONG32*,double&amp;,double*,double*,double*,double,double,CATTolerance&amp;)"></a> <dt> o <b>FindCircle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>FindCircle</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32*')</script> <td><tt>iCoordIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioRadius</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioCenter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioU</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioV</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iPlanarityTol</tt><td><tt>= 0.</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Searches for a 3D circle defined by the set of points on 3 specific coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The array of 3 coodinates indexes to be taken into account, such that <tt>0 <= iCoord[i] < N, i=0,1,2</tt>.
 </dd>
    <dt><tt> ioRadius</tt>
   <dd> The value of the radius of the circle.
 </dd>
    <dt><tt> ioCenter</tt>
   <dd> The 3D center point.
 </dd>
    <dt><tt> ioU</tt>
   <dd> The first normed vector of the circle plane.
 </dd>
    <dt><tt> ioV</tt>
   <dd> The second orthonormed vector of the circle plane.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the circle. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iPlanarityTol</tt>
   <dd> The tolerance to match the circle plane. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if a circle has been found, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="FindConic"></a><a name="FindConic(CATLONG32,CATLONG32,double[6],double,CATTolerance&amp;)"></a> <dt> o <b>FindConic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>FindConic</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[6','double[6]')</script> <td><tt>ioEquationParameters</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Searches for a conics defined by the set of points on 2 specific coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex1</tt>
   <dd> The index (beginning at 0) of the first coordinate to take into account.
 </dd>
    <dt><tt> iCoordIndex2</tt>
   <dd> The index (beginning at 0) of the second coordinate to take into account.
 </dd>
    <dt><tt> ioEquationParameters[6]</tt>
   <dd> The array of the parameters (<tt>A, B, C, D, E, F</tt>) of the conics, given as follows:
<pre> AX**2+2BXY+CY**2+2DX+2EY+F=0</pre>.
 The array must be previously allocated.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the conics. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if a conics has been found, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="FindConic"></a><a name="FindConic(CATLONG32,CATLONG32,ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)"></a> <dt> o <b>FindConic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>FindConic</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ConicType','ConicType*')</script> <td><tt>ioConicType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>ioCenter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPhi</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 From V5R17, searches for a conics defined by the set of points on 2 specific coordinates.
 <br>All the pointer must be previously allocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex1</tt>
   <dd> The index (beginning at 0) of the first coordinate to take into account.
 </dd>
    <dt><tt> iCoordIndex2</tt>
   <dd> The index (beginning at 0) of the second coordinate to take into account.
 </dd>
    <dt><tt> ioConicType</tt>
   <dd> A pointer to the found conic type.
 The pointer must be previously allocated.
 </dd>
    <dt><tt> ioCenter</tt>
   <dd> The 2D center point. Must be previously allocated.
 </dd>
    <dt><tt> ioE</tt>
   <dd> A pointer to the excentricity
 </dd>
    <dt><tt> ioA</tt>
   <dd> A pointer to the major axis.
 </dd>
    <dt><tt> ioB</tt>
   <dd> A pointer to the minor axis.
 </dd>
    <dt><tt> ioPhi</tt>
   <dd> A pointer to the angle between the major axis and the first coordinate axis.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the conics. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if a conics has been found, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="FindConicParameters"></a><a name="FindConicParameters(double[6],ConicType*,double[2],double*,double*,double*,double*,double,CATTolerance&amp;)"></a> <dt> o <b>FindConicParameters</b>

<dt>  <table><tr><td>  public static <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>FindConicParameters</b>(<td><script type="text/javascript"> activateLink('double[6','double[6]')</script> <td><tt>iEquationParameters</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('ConicType','ConicType*')</script> <td><tt>oConicType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double[2','double[2]')</script> <td><tt>ioCenter</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioE</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPhi</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 From V5R17 onwards, retrieves the conics parameters from its equation parameters.
 <p>All the pointer must be previously allocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iEquationParameters[6]</tt>
   <dd> The array of the parameters (<tt>A, B, C, D, E, F</tt>) of the conics, given as follows:
<pre> AX**2+2BXY+CY**2+2DX+2EY+F=0</pre>.
 </dd>
    <dt><tt> ioCenter</tt>
   <dd> The 2D center point. Must be previously allocated.
 </dd>
    <dt><tt> ioE</tt>
   <dd> A pointer to the excentricity
 </dd>
    <dt><tt> ioA</tt>
   <dd> A pointer to the major axis.
 </dd>
    <dt><tt> ioB</tt>
   <dd> A pointer to the minor axis.
 </dd>
    <dt><tt> ioPhi</tt>
   <dd> A pointer to the angle between the major axis and the first coordinate axis.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the conics. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if a conics has been found, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="GetClosestPoints"></a><a name="GetClosestPoints(double*,double*,double*,CATTolerance&amp;)"></a> <dt> o <b>GetClosestPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetClosestPoints</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPoint1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPoint2</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the two points of the polyline in RN defined by <tt>this</tt> CATMathSetOfPointsND which are the
 closest to a given point.
 To be used from V5R17.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of N coordinates.
 </dd>
    <dt><tt> ioPoint1</tt>
   <dd> A pointer to the coordinates of one of the two first closest points.
 </dd>
    <dt><tt> ioPoint2</tt>
   <dd> A pointer to the coordinates of the other one.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.</dd>
</dl>
</dl>
</dl>
<a name="GetCurrentIndex"></a><a name="GetCurrentIndex()"></a> <dt> o <b>GetCurrentIndex</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetCurrentIndex</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the index of the iterator inside <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The index of the current point. This method should be called 
 after the 
<a href="#" onClick="openLink('CATMathSetOfPointsND','Next');return false">CATMathSetOfPointsND.Next</a> method.
</dl>
</dl>
<a name="GetDimension"></a><a name="GetDimension()"></a> <dt> o <b>GetDimension</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetDimension</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="GetDimension"></a><a name="GetDimension()"></a> <dt> o <b>GetDimension</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','INLINE CATLONG32')</script>  <b>GetDimension</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the dimension of the space in which the points are defined.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The dimension.
</dl>
</dl>
<a name="GetFirstPointOnSegment"></a><a name="GetFirstPointOnSegment(CATLONG32&amp;,double*,double*,double,CATTolerance&amp;)"></a> <dt> o <b>GetFirstPointOnSegment</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetFirstPointOnSegment</b>(<td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32&amp;')</script> <td><tt>ioIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>Point2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Intersects <tt>this</tt> CATMathSetOfPointsND and a segment in RN.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioIndex</tt>
   <dd> The intersection diagnosis.
 <tt>1</tt> if there is an intersection point, <tt>0</tt> otherwise. 
 </dd>
    <dt><tt> iPoint1</tt>
   <dd> The array of N coordinates of the first point of the segment.
 </dd>
    <dt><tt> iPoint2</tt>
   <dd> The array of N coordinates of the second point of the segment.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to compute the intersection. By default, the numerical tolerance is used.</dd>
</dl>
</dl>
</dl>
<a name="GetMaxNumberOfPoints"></a><a name="GetMaxNumberOfPoints()"></a> <dt> o <b>GetMaxNumberOfPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetMaxNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the maximum number of points of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The maximum number of points (size of the allocation).
</dl>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>GetNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="GetNumberOfPoints"></a><a name="GetNumberOfPoints()"></a> <dt> o <b>GetNumberOfPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','INLINE CATLONG32')</script>  <b>GetNumberOfPoints</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of points of <tt>this</tt> CATMathSetOfPointsND that are already set.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The number of points that are already set.
</dl>
</dl>
<a name="GetPoint"></a><a name="GetPoint(double*)"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPoint</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the array of the coordinates of the current point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioPoint</tt>
   <dd> The pointer to the coordinates, previously allocated to iN doubles (iN is the dimension of the points of the set).</dd>
</dl>
</dl>
</dl>
<a name="GetPoint"></a><a name="GetPoint(CATLONG32,double*)"></a> <dt> o <b>GetPoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetPoint</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the coordinates of a specific point of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointIndex</tt>
   <dd>  The index of the point (<tt>0<= iPointIndex < NumberOfPoints</tt>). 
 </dd>
    <dt><tt> ioPoint</tt>
   <dd> The pointer to the coordinates, previously allocated to iN doubles (iN is the dimension of the points of the set).</dd>
</dl>
</dl>
</dl>
<a name="GetPoints"></a><a name="GetPoints()"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','const double *')</script>  <b>GetPoints</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="GetPoints"></a><a name="GetPoints()"></a> <dt> o <b>GetPoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','INLINE const double *')</script>  <b>GetPoints</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the array of the coordinates of the all the points.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The array of point coordinates. Must not be deleted as part of CATMathSetOfPointsND.
</dl>
</dl>
<a name="InitializeParameters"></a><a name="InitializeParameters(double*)"></a> <dt> o <b>InitializeParameters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>InitializeParameters</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioParameters</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Computes the distance between two successive points of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioParameters</tt>
   <dd> The array of distance of each successive interval. Must be previously allocated to <tt>NumberOfPoints</tt>.</dd>
</dl>
</dl>
</dl>
<a name="InsertPoint"></a><a name="InsertPoint(double*,CATLONG32)"></a> <dt> o <b>InsertPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>InsertPoint</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Inserts a  point at a specific position.
 If needed, <tt>this</tt> CATMathSetOfPointsND is reallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of the new coordinates.
 </dd>
    <dt><tt> iPointIndex</tt>
   <dd>  The index of the point (<tt>0<= iPointIndex < NumberOfPoints</tt>).</dd>
</dl>
</dl>
</dl>
<a name="Invert"></a><a name="Invert(CATMathSetOfPointsND&amp;)"></a> <dt> o <b>Invert</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Invert</b>(<td><script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>ioResultingSet</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Inverts the content of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioResultingSet</tt>
   <dd> The result of the inversion (must be previously allocated).</dd>
</dl>
</dl>
</dl>
<a name="IsAKindOf"></a><a name="IsAKindOf(CATMathClassId)"></a> <dt> o <b>IsAKindOf</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsAKindOf</b>(<td> const <script type="text/javascript"> activateLink('CATMathClassId','CATMathClassId')</script> <td><tt>iClassId</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests the class of <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClassId</tt>
   <dd> The name of the class.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if <tt>this</tt> CATMathSetOfPointsND is a kind of <tt>iClassId</tt>,
 <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsContaining"></a><a name="IsContaining(double*,double,CATLONG32*)"></a> <dt> o <b>IsContaining</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsContaining</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32*')</script> <td><tt>ioPointIndex</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests if a point is on the polyline defined by <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of N coordinates.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the test. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> ioPointIndex</tt>
   <dd> The index of the closest arc of <tt>this</tt> CATMathSetOfPointsND, if not <tt>NULL</tt>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if the point belongs to the polyline, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="IsIncludedIn"></a><a name="IsIncludedIn(double*,double,CATLONG32&amp;,CATTolerance&amp;)"></a> <dt> o <b>IsIncludedIn</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsIncludedIn</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATLONG32','CATLONG32&amp;')</script> <td><tt>ioPointIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests if a point is equal to a point of  <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of N coordinates.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the test. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> ioPointIndex</tt>
   <dd> The index of the equal point of <tt>this</tt> CATMathSetOfPointsND, if not <tt>NULL</tt>.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if the point belongs to the polyline, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="IsLinear"></a><a name="IsLinear(CATLONG32,CATLONG32*,double,CATTolerance&amp;)"></a> <dt> o <b>IsLinear</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsLinear</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iNumCoord</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32*')</script> <td><tt>iCoordIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Searches for a line defined by the set of points on specific coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumCoord</tt>
   <dd> The number of coordinates to take into account.
 </dd>
    <dt><tt> iCoordIndex</tt>
   <dd> The array of <tt>iNumCoord</tt> coodinates indexes to be taken into account, 
 such that <tt>0 <= iCoord[i] < N, i=0,..,iNumCoord-1</tt>.
 </dd>
    <dt><tt> iTol</tt>
   <dd> The tolerance to match the line. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The result diagnosis.
 <tt>1</tt> if a line has been found, <tt>0</tt> otherwise.
</dl>
</dl>
<a name="IsMonotonousAlong"></a><a name="IsMonotonousAlong(CATLONG32)"></a> <dt> o <b>IsMonotonousAlong</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathSetOfPointsND::MonotonyDiagnostic','CATMathSetOfPointsND::MonotonyDiagnostic')</script>  <b>IsMonotonousAlong</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordNum</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATMathSetOfPointsND is monotonous with regards to one of its
 coordinates.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordNum</tt>
   <dd> The point coordinate number(beginning at 1).
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The type of monotony.
</dl>
</dl>
<a name="IsPeriodic"></a><a name="IsPeriodic()"></a> <dt> o <b>IsPeriodic</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>IsPeriodic</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
</dl>
<a name="IsPeriodic"></a><a name="IsPeriodic()"></a> <dt> o <b>IsPeriodic</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','INLINE CATLONG32')</script>  <b>IsPeriodic</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> CATMathSetOfPointsND is periodic.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: <tt>TRUE</tt> if <tt>this</tt> CATMathSetOfPointsND periodic,
 <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="Length"></a><a name="Length()"></a> <dt> o <b>Length</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>Length</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the length of the polyline in RN defined by the set of points.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The length.
</dl>
</dl>
<a name="Next"></a><a name="Next()"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script>  <b>Next</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Skips to the next point of <tt>this</tt> CATMathSetOfPointsND.
 <br>This next point becomes the current one. To read the first point, first call the <tt>Beginning</tt>
 method, then call <tt>Next</tt>.
</dl>
<a name="Pack"></a><a name="Pack()"></a> <dt> o <b>Pack</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Pack</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Packs <tt>this</tt> CATMathSetOfPoints.
<br> In this case, <tt>_MaxNumberOfPoint = _NumberOfPoint</tt>.
</dl>
<a name="RemoveMultiplePoints"></a><a name="RemoveMultiplePoints(double,CATBoolean)"></a> <dt> o <b>RemoveMultiplePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemoveMultiplePoints</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAll</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Removes the duplicated points of <tt>this</tt> CATMathSetOfPointsND.
  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTol</tt>
   <dd> The tolerance of confusion. By default, the numerical tolerance is used.
 </dd>
    <dt><tt> iAll</tt>
   <dd> <b>Legal values</b>: 
 <dl><dt>0</dt><dd>The first twin point is kept.
 <dt>0</dt><dd>All the twin points are removed
</dl></dd>
</dl>
</dl>
</dl>
<a name="RemovePoint"></a><a name="RemovePoint(CATLONG32)"></a> <dt> o <b>RemovePoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemovePoint</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iIndexToRemove</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes one point of <tt>this</tt> CATMathSetOfPointsND.
 <br> The points after the removed point are shift, but the memory is not deleted 
 (<tt>_MaxNumberOfPoint</tt> still remains the same).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndexToRemove</tt>
   <dd> The index of the point to remove <tt> 0<= iIndexToRemove < NumberOfPoints </tt>.</dd>
</dl>
</dl>
</dl>
<a name="RemovePoints"></a><a name="RemovePoints(CATMathSetOfLongs&amp;)"></a> <dt> o <b>RemovePoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>RemovePoints</b>(<td> const <script type="text/javascript"> activateLink('CATMathSetOfLongs','CATMathSetOfLongs&amp;')</script> <td><tt>iPointIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Removes points of <tt>this</tt> CATMathSetOfPointsND.
 <br> The remaining points are shift, but the memory is not deleted 
 (<tt>_MaxNumberOfPoint</tt> still remains the same).
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointsIndex</tt>
   <dd> The list of the indexes of the points to remove.</dd>
</dl>
</dl>
</dl>
<a name="ReplacePoint"></a><a name="ReplacePoint(double*)"></a> <dt> o <b>ReplacePoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplacePoint</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces the coordinates of the current point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPoint</tt>
   <dd> The array of the new coordinates.</dd>
</dl>
</dl>
</dl>
<a name="ReplacePoint"></a><a name="ReplacePoint(CATLONG32,double*)"></a> <dt> o <b>ReplacePoint</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplacePoint</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces the coordinates of a specific point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointIndex</tt>
   <dd>  The index of the point (<tt>0<= iPointIndex < NumberOfPoints</tt>). 
 </dd>
    <dt><tt> iPoint</tt>
   <dd> The array of the new coordinates.</dd>
</dl>
</dl>
</dl>
<a name="ReplacePoints"></a><a name="ReplacePoints(CATLONG32,double*)"></a> <dt> o <b>ReplacePoints</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>ReplacePoints</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iSize</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPoints</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the coordinates of all the points.
 If needed, <tt>this</tt> CATMathSetOfPointsND is reallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSize</tt>
   <dd> The number of points that are set. 
 </dd>
    <dt><tt> iPoints</tt>
   <dd> The coordinates of all the points.</dd>
</dl>
</dl>
</dl>
<a name="Reset"></a><a name="Reset()"></a> <dt> o <b>Reset</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Reset</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets <tt>this</tt> CATMathSetOfPoints.
 <br> The memory is not deleted and the class can be used again.
</dl>
<a name="Resize"></a><a name="Resize(CATLONG32)"></a> <dt> o <b>Resize</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Resize</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iSize</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resizes <tt>this</tt> CATMathSetOfPoints.
 <br> The memory is adjusted, the content is lost.
</dl>
<a name="SetCoordAtPoint"></a><a name="SetCoordAtPoint(double,CATLONG32,CATLONG32)"></a> <dt> o <b>SetCoordAtPoint</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCoordAtPoint</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iVal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the value of a coordinate of a point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVal</tt>
   <dd> The value to be set.
 </dd>
    <dt><tt> iCoordIndex</tt>
   <dd> The index of the point coordinate (beginning at 0).
 </dd>
    <dt><tt> iPointIndex</tt>
   <dd> The index of the point inside the set (beginning at 0).</dd>
</dl>
</dl>
</dl>
<a name="SetPeriodic"></a><a name="SetPeriodic(CATBoolean)"></a> <dt> o <b>SetPeriodic</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetPeriodic</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPeriodic</tt><td><tt>= 1</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the periodicity of <tt>this</tt >  CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPeriodic</tt>
   <dd> <br><b>Legal values </b>:
 <dl><dt>1</dt><dd> Sets to periodic: in this case, the first and the last points must be the same.
 <dt>0</dt><dd> unsets the periodicity.
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Simplify"></a><a name="Simplify(double,CATMathSetOfLongs*)"></a> <dt> o <b>Simplify</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Simplify</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSag</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathSetOfLongs','CATMathSetOfLongs*')</script> <td><tt>ioRemovedPoints</tt><td><tt>= 0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
   Simpifies <tt>this</tt> CATMathSetOfPointsND.
 This method removes the points of the set when they lie within <tt>iSag</tt>
 of the chord between the previous and the next point.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSag</tt>
   <dd> The distance of simplification.
 </dd>
    <dt><tt> ioRemovedPoints</tt>
   <dd> The CATMathSetOfPointsND containing the removed points. 
 if </tt> NULL</tt>, this argument is not filled.</dd>
</dl>
</dl>
</dl>
<a name="Sort"></a><a name="Sort(CATLONG32)"></a> <dt> o <b>Sort</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Sort</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iCoordIndex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Sorts <tt>this</tt> CATMathSetOfPointsND along coordinate index, from the smallest to 
 the highest coordinate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordIndex</tt>
   <dd> The index (beginning at 0) of the coordinate for the sort.</dd>
</dl>
</dl>
</dl>
<a name="Split"></a><a name="Split(CATLONG32,CATMathSetOfPointsND&amp;,CATBoolean,CATTolerance&amp;)"></a> <dt> o <b>Split</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Split</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>ioSetbis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iMerge</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATTolerance','CATTolerance&amp;')</script> <td><tt>iTolObject</tt><td><tt>=CATGetDefaultTolerance()</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Splits a CATMathSetOfPointsND just after the point corresponding to the iIndex. 
 The part of <tt>this</tt> CATMathSetOfPointsND before iIndex will stay in 
 <tt>this</tt> CATMathSetOfPointsND, and the part after will go in  ioSetbis.
 If needed, ioSetbis is reallocated,and <tt>this</tt> CATMathSetOfPointsND is disallocated.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd> The index of the point where to split(0<=iIndex<NumberOfPoints). 
 </dd>
    <dt><tt> iSetbis</tt>
   <dd> The new set after the split(must be previously allocated).
 </dd>
    <dt><tt> iMerge</tt>
   <dd> The way to split.
 <br><b>Legal values</b>: <tt>TRUE</tt> if the last point of new <tt>this</tt> CATMathSetOfPointsND. 
 and the first point of <tt>iSetbis</tt> will be the same equal to iIndex point, <tt>FALSE</tt> if the last .
 point of new <tt>this</tt> CATMathSetOfPointsND will be equal to iIndex point and the first point.
 of <tt>iSetbis</tt> will be the iIndex+1  point.
 </dd>
    <dt><tt> iTolObject</tt>
   <dd> The default tolerance.</dd>
</dl>
</dl>
</dl>
<a name="SwapPoints"></a><a name="SwapPoints(CATLONG32,CATLONG32)"></a> <dt> o <b>SwapPoints</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SwapPoints</b>(<td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATLONG32','CATLONG32')</script> <td><tt>iPointIndex2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Swaps two points inside <tt>this</tt> CATMathSetOfPointsND.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPointIndex1</tt>
   <dd> The index of the first point to swap.
 </dd>
    <dt><tt> iPointIndex2</tt>
   <dd> The index of the second point to swap.</dd>
</dl>
</dl>
</dl>
<a name="operator ="></a><a name="operator =(CATMathSetOfPointsND&amp;)"></a> <dt> o <b>operator =</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND &')</script>  <b>operator =</b>(<td> const <script type="text/javascript"> activateLink('CATMathSetOfPointsND','CATMathSetOfPointsND&amp;')</script> <td><tt>iS</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Assignment operator.
</dl>
 <h2>Enumerated Types</h2> <br>
<a name="ConicType"> <dt> o <b>ConicType</b>
<dl>
  <dd>
<pre>
enum <b>ConicType</b> {
  Ellipse,
  Parabole,
  Hyperbole,
  DegenerateEmpty,
  DegenerateOnePoint,
  DegenerateOneLine,
  DegenerateTwoParallelLines,
  DegenerateTwoCrossingLines,
  Undefined
}
</pre>
 The type of mathematical configurations of a set of points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Ellipse</tt>
   <dd> Ellipse.
 </dd>
    <dt><tt> Parabole</tt>
   <dd> Parabola.
 </dd>
    <dt><tt> Hyperbole</tt>
   <dd> Hyperbola.
 </dd>
    <dt><tt> DegenerateEmpty</tt>
   <dd> The set of points is empty.
 </dd>
    <dt><tt> DegenerateOnePoint</tt>
   <dd> The set of points is degenerated in only one point.
 </dd>
    <dt><tt> DegenerateOneLine</tt>
   <dd> The set of points is corresponds to a line.
 </dd>
    <dt><tt> DegenerateTwoParallelLine</tt>
   <dd> The set of points is corresponds to two parallel lines.
 </dd>
    <dt><tt> DegenerateTwoCrossingLine</tt>
   <dd> The set of points is corresponds to two crossing lines.
 </dd>
    <dt><tt> Unedfined</tt>
   <dd> No particular configuration is found.</dd>
</dl>
</dl>
</dl>
<a name="MonotonyDiagnostic"> <dt> o <b>MonotonyDiagnostic</b>
<dl>
  <dd>
<pre>
enum <b>MonotonyDiagnostic</b> {
  Constant,
  Increasing,
  Decreasing,
  NoMonotonous
}
</pre>
 The monotony of a function.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Constant</tt>
   <dd> The function is constant.
 </dd>
    <dt><tt> Increasing</tt>
   <dd> The function is increasing.
 </dd>
    <dt><tt> Decreasing</tt>
   <dd> The function is decreasing.
 </dd>
    <dt><tt> NoMonotonous</tt>
   <dd> Otherwise.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATMathSetOfPointsND.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAdvancedMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
