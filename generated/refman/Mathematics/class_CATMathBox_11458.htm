<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathBox</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMathBox','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathBox','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMathBox','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathBox','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Mathematics Class CATMathBox</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathBox_11458','CATMathBox','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathBox</b>
</p>
<p>
<b><i> Class representing a 3D box, parallel to the canonical axis.</i></b><br>

 <b>Role</b>:
 <br> The box is defined by two CATMathPoint, the first 
 <tt>(XMin, YMin, ZMin)</tt> called the low
 extremity, and the other one (<tt>(XMax, YMax, ZMax)</tt>) the high extremity.
<br> A box can be seen as a set. If one of the cooordinates of the low 
 extremity is greater
 than the corresponding coordinate of the high  extremity, the box is empty.
 In other words, a box is not empty if <tt> XMin < XMax </tt> and 
 <tt> YMin < YMax </tt> and <tt> ZMin < ZMax</tt>.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathBox()"><b>CATMathBox</b></a>()
<dd>  Constructs an empty CATMathBox.
 <dt> o 
    <a href="#CATMathBox(CATMathBox&amp;)"><b>CATMathBox</b></a>(CATMathBox&amp;)
<dd>  Copy Constructor.
 <dt> o 
    <a href="#CATMathBox(double,double,double,double,double,double)"><b>CATMathBox</b></a>(double,double,double,double,double,double)
<dd>  Constructs a CATMathBox from its extremities.
 <dt> o 
    <a href="#CATMathBox(CATMathPoint&amp;,CATMathPoint&amp;,CATBoolean)"><b>CATMathBox</b></a>(CATMathPoint&amp;,CATMathPoint&amp;,CATBoolean)
<dd>  Constructs a CATMathBox from two CATMathPoint.
 <dt> o 
    <a href="#~CATMathBox()"><b>~CATMathBox</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddInside(CATMathBox&amp;)"><b>AddInside</b></a>(CATMathBox&amp;)
<dd>  Replaces <tt>this</tt> CATMathBox by its union with another CATMathBox.
 <dt> o 
    <a href="#AddInside(CATMathPoint&amp;)"><b>AddInside</b></a>(CATMathPoint&amp;)
<dd>  Modifies <tt>this</tt> CATMathBox by forcing a CATMathPoint to belong to it.
 <dt> o 
    <a href="#DistanceTo(CATMathPoint&amp;)"><b>DistanceTo</b></a>(CATMathPoint&amp;)
<dd>  Returns the distance between <tt>this</tt> CATMathBox and a CATMathPoint.
 <dt> o 
    <a href="#GetBoxCenter(CATMathPoint&amp;)"><b>GetBoxCenter</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the center of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#GetExtremities(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"><b>GetExtremities</b></a>(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)
<dd>  
 <dt> o 
    <a href="#GetHigh(CATMathPoint&amp;)"><b>GetHigh</b></a>(CATMathPoint&amp;)
<dd>  
 <dt> o 
    <a href="#GetHighLimit(CATMathPoint&amp;)"><b>GetHighLimit</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the high extremity of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#GetLimits(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"><b>GetLimits</b></a>(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)
<dd>  Retrieves the extremities of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#GetLow(CATMathPoint&amp;)"><b>GetLow</b></a>(CATMathPoint&amp;)
<dd>  
 <dt> o 
    <a href="#GetLowLimit(CATMathPoint&amp;)"><b>GetLowLimit</b></a>(CATMathPoint&amp;)
<dd>  Retrieves the low extremity of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#Inflate(double)"><b>Inflate</b></a>(double)
<dd>  Modifies <tt>this</tt> CATMathBox by adding a given thickness on each direction.
 <dt> o 
    <a href="#IsContaining(CATMathBox&amp;)"><b>IsContaining</b></a>(CATMathBox&amp;)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is completely containing an other
 CATMathBox.
 <dt> o 
    <a href="#IsContaining(CATMathPoint&amp;,double)"><b>IsContaining</b></a>(CATMathPoint&amp;,double)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox defined at a given tolerance
 is containing a CATMathPoint.
 <dt> o 
    <a href="#IsEmpty()"><b>IsEmpty</b></a>()
<dd>  Tests if <tt>this</tt> CATMathBox is empty.
 <dt> o 
    <a href="#IsIntersecting(CATMathLine&amp;)"><b>IsIntersecting</b></a>(CATMathLine&amp;)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting a CATMathLine.
 <dt> o 
    <a href="#IsIntersecting(CATMathPlane&amp;)"><b>IsIntersecting</b></a>(CATMathPlane&amp;)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting a CATMathPlane.
 <dt> o 
    <a href="#IsIntersecting(CATMathBox&amp;,double)"><b>IsIntersecting</b></a>(CATMathBox&amp;,double)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting an another one.
 <dt> o 
    <a href="#IsIntersecting(CATMathPoint&amp;,CATMathPoint&amp;)"><b>IsIntersecting</b></a>(CATMathPoint&amp;,CATMathPoint&amp;)
<dd>  Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting the segment [iP1,iP2].
 <dt> o 
    <a href="#IsIntersectingAlongDir(CATMathBox&amp;,CATMathDirection&amp;,double)"><b>IsIntersectingAlongDir</b></a>(CATMathBox&amp;,CATMathDirection&amp;,double)
<dd>  Returns <tt>TRUE</tt> if the projection of <tt>this</tt> CATMathBox onto the plane perpendicular to the direction
 The test takes into account a given tolerance  (the result is equivalent
 to inflating one of the box of iTol and to compute IsIntersectingAlongDir with
 no tolerance.
 <dt> o 
    <a href="#LocalScale(double)"><b>LocalScale</b></a>(double)
<dd>  Modifies <tt>this</tt> CATMathBox by having it larger at the same place.
 <dt> o 
    <a href="#SetExtremities(double,double,double,double,double,double)"><b>SetExtremities</b></a>(double,double,double,double,double,double)
<dd>  Sets the extremities of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#SetHigh(CATMathPoint&amp;)"><b>SetHigh</b></a>(CATMathPoint&amp;)
<dd>  Modifies the high extremity of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#SetLow(CATMathPoint&amp;)"><b>SetLow</b></a>(CATMathPoint&amp;)
<dd>  Modifies the low extremity of <tt>this</tt> CATMathBox.
 <dt> o 
    <a href="#SetToEmpty()"><b>SetToEmpty</b></a>()
<dd>  Resets <tt>this</tt> CATMathBox to an empty one.
 <dt> o 
    <a href="#SetToIntersection(CATMathBox&amp;,CATMathBox&amp;)"><b>SetToIntersection</b></a>(CATMathBox&amp;,CATMathBox&amp;)
<dd>  Replaces <tt>this</tt> CATMathBox with the intersection of two other
 CATMathBox.
 <dt> o 
    <a href="#SetToUnion(CATMathBox&amp;,CATMathBox&amp;)"><b>SetToUnion</b></a>(CATMathBox&amp;,CATMathBox&amp;)
<dd>  Replaces <tt>this</tt> CATMathBox with the union of two
 other CATMathBox.
 <dt> o 
    <a href="#SquareDistanceTo(CATMathPoint&amp;)"><b>SquareDistanceTo</b></a>(CATMathPoint&amp;)
<dd>  Returns the square distance between <tt>this</tt> CATMathBox and a CATMathPoint.
 <dt> o 
    <a href="#SquareMaxDistanceTo(CATMathPoint&amp;)"><b>SquareMaxDistanceTo</b></a>(CATMathPoint&amp;)
<dd>  Returns the square of the maximal distance between <tt>this</tt> CATMathBox and a CATMathPoint.
 <dt> o 
    <a href="#Volume()"><b>Volume</b></a>()
<dd>  Returns the geometric volume included in <tt>this</tt> CATMathBox.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathBox"></a><a name="CATMathBox()"></a> <dt> o <b>CATMathBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathBox</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an empty CATMathBox.
</dl>
<a name="CATMathBox"></a><a name="CATMathBox(CATMathBox&amp;)"></a> <dt> o <b>CATMathBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathBox</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBoxToCopy</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy Constructor.
</dl>
<a name="CATMathBox"></a><a name="CATMathBox(double,double,double,double,double,double)"></a> <dt> o <b>CATMathBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathBox</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXMax</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYMax</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZMax</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathBox from its extremities.
<br>No verification is performed.
</dl>
<a name="CATMathBox"></a><a name="CATMathBox(CATMathPoint&amp;,CATMathPoint&amp;,CATBoolean)"></a> <dt> o <b>CATMathBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathBox</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iLowExtremity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iHighExtremity</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iCheck</tt><td><tt>=TRUE</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a CATMathBox from two CATMathPoint.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCheck</tt>
   <dd> <dl>
 <dt><tt>FALSE</tt><dd>The two CATMathPoint are assumed to be the
 lowest one and the highest one. This can create an empty box if it is not
 the case.
 <dt><tt>TRUE</tt> <dd>It creates the smallest box that contains
 the two CATMathPoint (default mode).
 </dl>
</dd>
</dl>
</dl>
</dl>
<a name="~CATMathBox"></a><a name="~CATMathBox()"></a> <dt> o <b>~CATMathBox</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>~CATMathBox</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="AddInside"></a><a name="AddInside(CATMathBox&amp;)"></a> <dt> o <b>AddInside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddInside</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBoxToAdd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces <tt>this</tt> CATMathBox by its union with another CATMathBox.
</dl>
<a name="AddInside"></a><a name="AddInside(CATMathPoint&amp;)"></a> <dt> o <b>AddInside</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddInside</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPointToAdd</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies <tt>this</tt> CATMathBox by forcing a CATMathPoint to belong to it.
</dl>
<a name="DistanceTo"></a><a name="DistanceTo(CATMathPoint&amp;)"></a> <dt> o <b>DistanceTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>DistanceTo</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the distance between <tt>this</tt> CATMathBox and a CATMathPoint.
</dl>
<a name="GetBoxCenter"></a><a name="GetBoxCenter(CATMathPoint&amp;)"></a> <dt> o <b>GetBoxCenter</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetBoxCenter</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioCenterPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the center of <tt>this</tt> CATMathBox.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the box is empty, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="GetExtremities"></a><a name="GetExtremities(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>GetExtremities</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetExtremities</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioXMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioXMax</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioYMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioYMax</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioZMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioZMax</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 GetLimits
 Retrieves the extremities of <tt>this</tt> CATMathBox.
 <br>Throws an error if the box is empty.
</dl>
</dl>
<a name="GetHigh"></a><a name="GetHigh(CATMathPoint&amp;)"></a> <dt> o <b>GetHigh</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetHigh</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioHighPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 GetHighLimit
 Retrieves the high extremity of <tt>this</tt> CATMathBox.
 <br>Throws an error if the box is empty.
</dl>
</dl>
<a name="GetHighLimit"></a><a name="GetHighLimit(CATMathPoint&amp;)"></a> <dt> o <b>GetHighLimit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetHighLimit</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioHighPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the high extremity of <tt>this</tt> CATMathBox.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the box is empty, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="GetLimits"></a><a name="GetLimits(double&amp;,double&amp;,double&amp;,double&amp;,double&amp;,double&amp;)"></a> <dt> o <b>GetLimits</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLimits</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioXMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioXMax</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioYMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioYMax</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioZMin</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>ioZMax</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the extremities of <tt>this</tt> CATMathBox.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the box is empty, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="GetLow"></a><a name="GetLow(CATMathPoint&amp;)"></a> <dt> o <b>GetLow</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>GetLow</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioLowPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R15 GetLowLimit
 Retrieves the low extremity of <tt>this</tt> CATMathBox.
 <br>Throws an error if the box is empty.
</dl>
</dl>
<a name="GetLowLimit"></a><a name="GetLowLimit(CATMathPoint&amp;)"></a> <dt> o <b>GetLowLimit</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetLowLimit</b>(<td><script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>ioLowPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the low extremity of <tt>this</tt> CATMathBox.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>   <tt>E_FAIL</tt> if the box is empty, <tt>S_OK</tt> otherwise.
</dl>
</dl>
<a name="Inflate"></a><a name="Inflate(double)"></a> <dt> o <b>Inflate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Inflate</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThickness</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies <tt>this</tt> CATMathBox by adding a given thickness on each direction.
<br>Hence,  the low extremity of the box becomes 
(<tt>XMin-iThickness, YMin-iThickness, ZMin-iThickness</tt>) and the high
 extremity becomes
(<tt>XMax+iThickness, YMax+iThickness, ZMax+iThickness</tt>).
<br>This method does not apply on an empty box, but no error is thrown in this case.
</dl>
<a name="IsContaining"></a><a name="IsContaining(CATMathBox&amp;)"></a> <dt> o <b>IsContaining</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsContaining</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iOtherBox</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is completely containing an other
 CATMathBox.
<br>Note that the empty CATMathBox is contained by all CATMathBox and does
 not contain any CATMathBox, even an empty one.
</dl>
<a name="IsContaining"></a><a name="IsContaining(CATMathPoint&amp;,double)"></a> <dt> o <b>IsContaining</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsContaining</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox defined at a given tolerance
 is containing a CATMathPoint.
<br>The CATMathBox used is defined by:
<tt>[_XMin-iTol, _XMax+iTol] x [_YMin-iTol, _YMax+iTol] x
 [_ZMin-iTol, _ZMax+iTol] </tt>
</dl>
<a name="IsEmpty"></a><a name="IsEmpty()"></a> <dt> o <b>IsEmpty</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','INLINE CATBoolean')</script>  <b>IsEmpty</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests if <tt>this</tt> CATMathBox is empty.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>TRUE</tt> if the CATMathBox is empty, <tt>FALSE</tt> otherwise.
</dl>
</dl>
<a name="IsIntersecting"></a><a name="IsIntersecting(CATMathLine&amp;)"></a> <dt> o <b>IsIntersecting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsIntersecting</b>(<td> const <script type="text/javascript"> activateLink('CATMathLine','CATMathLine&amp;')</script> <td><tt>iLine</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting a CATMathLine.
<br> Note that if the intersection is a point or a line, the
 result is true.
</dl>
<a name="IsIntersecting"></a><a name="IsIntersecting(CATMathPlane&amp;)"></a> <dt> o <b>IsIntersecting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsIntersecting</b>(<td> const <script type="text/javascript"> activateLink('CATMathPlane','CATMathPlane&amp;')</script> <td><tt>iPlane</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting a CATMathPlane.
<br> Note that if the intersection is a point or a line, the
 result is true.
</dl>
<a name="IsIntersecting"></a><a name="IsIntersecting(CATMathBox&amp;,double)"></a> <dt> o <b>IsIntersecting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsIntersecting</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting an another one.
 The test takes a given tolerance into account (the result is equivalent
 to inflating one of the box of iTol and to compute IsIntersecting with
 no tolerance.
<br> Note that if the intersection is a point or a line, the
 result is true.
</dl>
<a name="IsIntersecting"></a><a name="IsIntersecting(CATMathPoint&amp;,CATMathPoint&amp;)"></a> <dt> o <b>IsIntersecting</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsIntersecting</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iP1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iP2</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if <tt>this</tt> CATMathBox is intersecting the segment [iP1,iP2].
<br> Note that if the intersection is a point or a line, the
 result is true.
</dl>
<a name="IsIntersectingAlongDir"></a><a name="IsIntersectingAlongDir(CATMathBox&amp;,CATMathDirection&amp;,double)"></a> <dt> o <b>IsIntersectingAlongDir</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>IsIntersectingAlongDir</b>(<td><script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathDirection','CATMathDirection&amp;')</script> <td><tt>iDir</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTol</tt><td><tt>=0.</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns <tt>TRUE</tt> if the projection of <tt>this</tt> CATMathBox onto the plane perpendicular to the direction
 The test takes into account a given tolerance  (the result is equivalent
 to inflating one of the box of iTol and to compute IsIntersectingAlongDir with
 no tolerance.
</dl>
<a name="LocalScale"></a><a name="LocalScale(double)"></a> <dt> o <b>LocalScale</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>LocalScale</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScaleRatio</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies <tt>this</tt> CATMathBox by having it larger at the same place.
 <br>The CATMathBox increases as follows: 
 Let <tt>f=(iScaleRatio-1)/2 </tt> be the multiplicative ratio on each
 direction and 
 <tt>dX=XMax-XMin, dY=YMax-YMin, dZ=ZMax-ZMin</tt> be the lengths of the box in
 each direction.
 The low extremity of the box becomes 
(<tt>XMin-dX*f, YMin-dY*f, ZMin-dZ*f</tt>) and the high
 extremity becomes
(<tt>XMax+dX*f, YMax+dY*f, ZMax+dZ*f</tt>). In particular, if
 the length of the box is null in one direction, it still
 remains null after a local scale.
<br>This method does not apply on an empty box, but no error is thrown in this case.
</dl>
<a name="SetExtremities"></a><a name="SetExtremities(double,double,double,double,double,double)"></a> <dt> o <b>SetExtremities</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetExtremities</b>(<td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iXMax</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iYMax</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZMin</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZMax</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the extremities of <tt>this</tt> CATMathBox.
<br>No verification is done.
</dl>
<a name="SetHigh"></a><a name="SetHigh(CATMathPoint&amp;)"></a> <dt> o <b>SetHigh</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetHigh</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iHighPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the high extremity of <tt>this</tt> CATMathBox.
<br>No verification is performed.
</dl>
<a name="SetLow"></a><a name="SetLow(CATMathPoint&amp;)"></a> <dt> o <b>SetLow</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetLow</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iLowPoint</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Modifies the low extremity of <tt>this</tt> CATMathBox.
<br>No verification is performed.
</dl>
<a name="SetToEmpty"></a><a name="SetToEmpty()"></a> <dt> o <b>SetToEmpty</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetToEmpty</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Resets <tt>this</tt> CATMathBox to an empty one.
</dl>
<a name="SetToIntersection"></a><a name="SetToIntersection(CATMathBox&amp;,CATMathBox&amp;)"></a> <dt> o <b>SetToIntersection</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetToIntersection</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces <tt>this</tt> CATMathBox with the intersection of two other
 CATMathBox.
<br>It can lead to  an empty CATMathBox.
</dl>
<a name="SetToUnion"></a><a name="SetToUnion(CATMathBox&amp;,CATMathBox&amp;)"></a> <dt> o <b>SetToUnion</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>SetToUnion</b>(<td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox1</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMathBox','CATMathBox&amp;')</script> <td><tt>iBox2</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Replaces <tt>this</tt> CATMathBox with the union of two
 other CATMathBox.
</dl>
<a name="SquareDistanceTo"></a><a name="SquareDistanceTo(CATMathPoint&amp;)"></a> <dt> o <b>SquareDistanceTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>SquareDistanceTo</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the square distance between <tt>this</tt> CATMathBox and a CATMathPoint.
</dl>
<a name="SquareMaxDistanceTo"></a><a name="SquareMaxDistanceTo(CATMathPoint&amp;)"></a> <dt> o <b>SquareMaxDistanceTo</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>SquareMaxDistanceTo</b>(<td> const <script type="text/javascript"> activateLink('CATMathPoint','CATMathPoint&amp;')</script> <td><tt>iPoint</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the square of the maximal distance between <tt>this</tt> CATMathBox and a CATMathPoint.
 For a point inside the box, the maximal distance is the distance between it and the furthest point of the box from  it.
</dl>
<a name="Volume"></a><a name="Volume()"></a> <dt> o <b>Volume</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('double','double')</script>  <b>Volume</b>(<td>)<script type="text/javascript"> activateLink('const','const ')</script>  </table></dt>
<dl>
  <dd>
 Returns the geometric volume included in <tt>this</tt> CATMathBox.
</dl>
<hr>
 This object is included in the file: <b>CATMathBox.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
