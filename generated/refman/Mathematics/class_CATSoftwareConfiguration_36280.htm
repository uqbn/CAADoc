<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATSoftwareConfiguration</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATSoftwareConfiguration','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSoftwareConfiguration','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATSoftwareConfiguration','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATSoftwareConfiguration','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Mathematics Class CATSoftwareConfiguration</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATSoftwareConfiguration_36280','CATSoftwareConfiguration','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATSoftwareConfiguration</b>
</p>
<p>
<b><i> Class defining the software configuration to be used to run a topological operator.</i></b><br>

 <br>
 A configuration is a set of code modifications and a level on which the code must be run. 
 The protocol offered by the configuration management allows the code of an operator to be enhanced or
 modified with guaranteing the upwards compatibility of the customer data. 
 <br>The configuration can be stored with the customer data, and the stored configuration can be used
 to specify the code to run.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATSoftwareConfiguration()"><b>CATSoftwareConfiguration</b></a>()
<dd>  Constructs an open configuration.
 <dt> o 
    <a href="#CATSoftwareConfiguration(char*,int,int)"><b>CATSoftwareConfiguration</b></a>(char*,int,int)
<dd>  Constructs a closed configuration.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddModification(CATSoftwareModification&amp;)"><b>AddModification</b></a>(CATSoftwareModification&amp;)
<dd>  Adds a modification to a configuration.
 <dt> o 
    <a href="#AddRef()"><b>AddRef</b></a>()
<dd>  Increments the reference count for the given interface.
 <dt> o 
    <a href="#Dump(ostream&amp;)"><b>Dump</b></a>(ostream&amp;)
<dd>  Dumps the content of the config.
 <dt> o 
    <a href="#GetLevelFromIID(IID&amp;,short&amp;)"><b>GetLevelFromIID</b></a>(IID&amp;,short&amp;)
<dd>  Returns the level of a modification of <tt>this</tt> configuration.
 <dt> o 
    <a href="#GetModificationLevel(CATSoftwareModification&amp;)"><b>GetModificationLevel</b></a>(CATSoftwareModification&amp;)
<dd>  Returns the level of a modification of <tt>this</tt> configuration.
 <dt> o 
    <a href="#IsSupported()"><b>IsSupported</b></a>()
<dd>  Tests whether <tt>this</tt> configuration is supported for the current software.
 <dt> o 
    <a href="#Release()"><b>Release</b></a>()
<dd>  Decrements the reference count for the given interface.
 <dt> o 
    <a href="#Stream(char*&amp;,int&amp;,int)"><b>Stream</b></a>(char*&amp;,int&amp;,int)
<dd>  Creates the stream representing <tt>this</tt> configuration.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATSoftwareConfiguration"></a><a name="CATSoftwareConfiguration()"></a> <dt> o <b>CATSoftwareConfiguration</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATSoftwareConfiguration</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs an open configuration.
 <br>To use for running with the current configuration.
</dl>
<a name="CATSoftwareConfiguration"></a><a name="CATSoftwareConfiguration(char*,int,int)"></a> <dt> o <b>CATSoftwareConfiguration</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATSoftwareConfiguration</b>(<td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iStreamBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iConvert</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a closed configuration.
 <br>To use if the input of the algorithm has been previously stored. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStreamBuffer</tt>
   <dd> The pointer to the stream.
 </dd>
    <dt><tt> iLength</tt>
   <dd> The length of the stream.
 </dd>
    <dt><tt> iConvert</tt>
   <dd> Internal use. Use the <tt>0</tt> default value.</dd>
</dl>
</dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddModification"></a><a name="AddModification(CATSoftwareModification&amp;)"></a> <dt> o <b>AddModification</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>AddModification</b>(<td> const <script type="text/javascript"> activateLink('CATSoftwareModification','CATSoftwareModification&amp;')</script> <td><tt>iModification</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Adds a modification to a configuration. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModification</tt>
   <dd> The  given (code) modification identified by its IID and its code level.</dd>
</dl>
</dl>
</dl>
<a name="AddRef"></a><a name="AddRef()"></a> <dt> o <b>AddRef</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>AddRef</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Increments the reference count for the given interface. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The reference count value. <br>This information is meant to be used for diagnostic/testing purposes only, because, in certain situations, the value may be unstable.
</dl>
</dl>
<a name="Dump"></a><a name="Dump(ostream&amp;)"></a> <dt> o <b>Dump</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Dump</b>(<td><script type="text/javascript"> activateLink('ostream','ostream&amp;')</script> <td><tt>os</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Dumps the content of the config. ONLY FOR INTERNAL USE
</dl>
<a name="GetLevelFromIID"></a><a name="GetLevelFromIID(IID&amp;,short&amp;)"></a> <dt> o <b>GetLevelFromIID</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script>  <b>GetLevelFromIID</b>(<td> const <script type="text/javascript"> activateLink('IID','IID&amp;')</script> <td><tt>iModifIID</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short&amp;')</script> <td><tt>ioLevel</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the level of a modification of <tt>this</tt> configuration.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModifIID</tt>
   <dd> The  given (code) modification identified by IID.
 </dd>
    <dt><tt> ioLevel</tt>
   <dd> The level of a modification.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  Determines if the modification has been found.
 <br><b>Legal values</b>:
 <tt>1</tt> if <tt>iModifIID</tt> found on <tt>this</tt>, <tt>0</tt> otherwise.<br>
</dl>
</dl>
<a name="GetModificationLevel"></a><a name="GetModificationLevel(CATSoftwareModification&amp;)"></a> <dt> o <b>GetModificationLevel</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('short','short')</script>  <b>GetModificationLevel</b>(<td> const <script type="text/javascript"> activateLink('CATSoftwareModification','CATSoftwareModification&amp;')</script> <td><tt>iModification</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Returns the level of a modification of <tt>this</tt> configuration.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iModification</tt>
   <dd> The given (code) modification 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The version (or level) of the modification. If the configuration is "open", the version is the
 current level of the software. If the configuration is "closed" and not known, the version is <tt>0</tt>.
</dl>
</dl>
<a name="IsSupported"></a><a name="IsSupported()"></a> <dt> o <b>IsSupported</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>IsSupported</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Tests whether <tt>this</tt> configuration is supported for the current software.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The result of the test.
 <br><b>Legal values</b>: 
 <dl><dt><tt>1</tt></dt><dd> The configuration is valid 
 <dt><tt>0</tt></dt><dd> The configuration is not valid:
 <ul>
 <li>The modification is known, but the level is not supported
 <li>The modification is unknown
</ul>
 </dl>
</dl>
</dl>
<a name="Release"></a><a name="Release()"></a> <dt> o <b>Release</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>Release</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Decrements the reference count for the given interface. 
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The reference count value. <br>This information is meant to be used for diagnostic/testing purposes only, because, in certain situations, the value may be unstable.
</dl>
</dl>
<a name="Stream"></a><a name="Stream(char*&amp;,int&amp;,int)"></a> <dt> o <b>Stream</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Stream</b>(<td><script type="text/javascript"> activateLink('char','char*&amp;')</script> <td><tt>oStreamBuffer</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iConvert</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Creates the stream representing <tt>this</tt> configuration.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStreamBuffer</tt>
   <dd> The pointer to the created stream.
 </dd>
    <dt><tt> oLength</tt>
   <dd> The length to the created stream.
 </dd>
    <dt><tt> iConvert</tt>
   <dd> Internal use. Use the <tt>0</tt> default value.</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATSoftwareConfiguration.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathStream</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
