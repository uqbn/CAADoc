<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Mathematics Class CATMathComplexf</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../Mathematics.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMathComplexf','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathComplexf','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMathComplexf','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMathComplexf','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Mathematics Class CATMathComplexf</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMathComplexf_17874','CATMathComplexf','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 public class <b>CATMathComplexf</b>
</p>
<p>
<b><i> Class representing a complex number in float.</i></b><br>

 <br><tt>z = iReal+j*iImag</tt> with <tt>j*j =  -1</tt>.</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMathComplexf()"><b>CATMathComplexf</b></a>()
<dd>  Construct the <tt>z = 0+j*0</tt> complex number.
 <dt> o 
    <a href="#CATMathComplexf(float)"><b>CATMathComplexf</b></a>(float)
<dd>  Constructs a complex number from <tt>iReal</tt> and <tt>Imag=0</tt>.
 <dt> o 
    <a href="#CATMathComplexf(float[2])"><b>CATMathComplexf</b></a>(float[2])
<dd>  Constructs a complex number from an array of two coordinates.
 <dt> o 
    <a href="#CATMathComplexf(CATMathComplexf&amp;)"><b>CATMathComplexf</b></a>(CATMathComplexf&amp;)
<dd>  Copy constructor.
 <dt> o 
    <a href="#CATMathComplexf(float&amp;,float&amp;)"><b>CATMathComplexf</b></a>(float&amp;,float&amp;)
<dd>  Constructs a complex number from <tt>iReal</tt> and <tt>iImag</tt>.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Conjugate()"><b>Conjugate</b></a>()
<dd>  Computes the conjugate of <tt>this</tt> complex number.
 <dt> o 
    <a href="#GetCoord(float&amp;,float&amp;)"><b>GetCoord</b></a>(float&amp;,float&amp;)
<dd>  Retrieves the real and imaginary parts of <tt>this</tt> complex number.
 <dt> o 
    <a href="#GetImag()"><b>GetImag</b></a>()
<dd>  Returns the imaginary part of <tt>this</tt> complex number.
 <dt> o 
    <a href="#GetReal()"><b>GetReal</b></a>()
<dd>  Returns the real part of <tt>this</tt> complex number.
 <dt> o 
    <a href="#Inverse()"><b>Inverse</b></a>()
<dd>  Computes the inverse of <tt>this</tt> complex number.
 <dt> o 
    <a href="#Modulus()"><b>Modulus</b></a>()
<dd>  Returns the modulus of <tt>this</tt> complex number.
 <dt> o 
    <a href="#Normalize()"><b>Normalize</b></a>()
<dd>  Normalizes <tt>this</tt> complex number.
 <dt> o 
    <a href="#SetCoord(float&amp;,float&amp;)"><b>SetCoord</b></a>(float&amp;,float&amp;)
<dd>  Sets the real and imaginary parts of <tt>this</tt> complex number.
 <dt> o 
    <a href="#SetImag(float&amp;)"><b>SetImag</b></a>(float&amp;)
<dd>  Sets the imaginary part of <tt>this</tt> complex number.
 <dt> o 
    <a href="#SetReal(float&amp;)"><b>SetReal</b></a>(float&amp;)
<dd>  Sets the real part of <tt>this</tt> complex number.
 <dt> o 
    <a href="#SquareModulus()"><b>SquareModulus</b></a>()
<dd>  Returns the square modulus of <tt>this</tt> complex number.
 <dt> o 
    <a href="#operator *(CATMathComplexf&amp;)"><b>operator *</b></a>(CATMathComplexf&amp;)
<dd>  Multiplication operator.
 <dt> o 
    <a href="#operator *=(CATMathComplexf&amp;)"><b>operator *=</b></a>(CATMathComplexf&amp;)
<dd>  Multiplication assignment operator.
 <dt> o 
    <a href="#operator +(CATMathComplexf&amp;)"><b>operator +</b></a>(CATMathComplexf&amp;)
<dd>  Addition operator.
 <dt> o 
    <a href="#operator +=(CATMathComplexf&amp;)"><b>operator +=</b></a>(CATMathComplexf&amp;)
<dd>  Addition assignment operator.
 <dt> o 
    <a href="#operator -(CATMathComplexf&amp;)"><b>operator -</b></a>(CATMathComplexf&amp;)
<dd>  Subtraction operator.
 <dt> o 
    <a href="#operator -=(CATMathComplexf&amp;)"><b>operator -=</b></a>(CATMathComplexf&amp;)
<dd>  Subtraction assignment operator.
 <dt> o 
    <a href="#operator /(CATMathComplexf&amp;)"><b>operator /</b></a>(CATMathComplexf&amp;)
<dd>  Division operator.
 <dt> o 
    <a href="#operator /=(CATMathComplexf&amp;)"><b>operator /=</b></a>(CATMathComplexf&amp;)
<dd>  Division assignment operator.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMathComplexf"></a><a name="CATMathComplexf()"></a> <dt> o <b>CATMathComplexf</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathComplexf</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Construct the <tt>z = 0+j*0</tt> complex number.
</dl>
<a name="CATMathComplexf"></a><a name="CATMathComplexf(float)"></a> <dt> o <b>CATMathComplexf</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathComplexf</b>(<td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iReal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a complex number from <tt>iReal</tt> and <tt>Imag=0</tt>.
 <br> <tt>z = iReal</tt>.
</dl>
<a name="CATMathComplexf"></a><a name="CATMathComplexf(float[2])"></a> <dt> o <b>CATMathComplexf</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathComplexf</b>(<td> const <script type="text/javascript"> activateLink('float[2','float[2]')</script> <td><tt>iCoord</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a complex number from an array of two coordinates.
 <br><tt>z = iCoord[0]+j*iCoord[1]</tt>.
</dl>
<a name="CATMathComplexf"></a><a name="CATMathComplexf(CATMathComplexf&amp;)"></a> <dt> o <b>CATMathComplexf</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMathComplexf</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComplex</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Copy constructor.
</dl>
<a name="CATMathComplexf"></a><a name="CATMathComplexf(float&amp;,float&amp;)"></a> <dt> o <b>CATMathComplexf</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('INLINE','INLINE')</script>  <b>CATMathComplexf</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iReal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iImag</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Constructs a complex number from <tt>iReal</tt> and <tt>iImag</tt>.
 <br> <tt>z = iReal+j*iImag</tt>.
</dl>
 <h2>Methods</h2> <br>
<a name="Conjugate"></a><a name="Conjugate()"></a> <dt> o <b>Conjugate</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>Conjugate</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the conjugate of <tt>this</tt> complex number.
</dl>
<a name="GetCoord"></a><a name="GetCoord(float&amp;,float&amp;)"></a> <dt> o <b>GetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>GetCoord</b>(<td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>ioReal</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>ioImag</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the real and imaginary parts of <tt>this</tt> complex number.
 <br><tt>z = ioReal+j*ioImag</tt>.
</dl>
<a name="GetImag"></a><a name="GetImag()"></a> <dt> o <b>GetImag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','INLINE float')</script>  <b>GetImag</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the imaginary part of <tt>this</tt> complex number.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The imaginary part.
</dl>
</dl>
<a name="GetReal"></a><a name="GetReal()"></a> <dt> o <b>GetReal</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','INLINE float')</script>  <b>GetReal</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the real part of <tt>this</tt> complex number.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  The real part.
</dl>
</dl>
<a name="Inverse"></a><a name="Inverse()"></a> <dt> o <b>Inverse</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Inverse</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Computes the inverse of <tt>this</tt> complex number.
 <br>If the norm is null, <tt>this</tt> is set to null.
</dl>
<a name="Modulus"></a><a name="Modulus()"></a> <dt> o <b>Modulus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>Modulus</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the modulus of <tt>this</tt> complex number.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>sqrt(iReal^2 + iImag^2)</tt>.
</dl>
</dl>
<a name="Normalize"></a><a name="Normalize()"></a> <dt> o <b>Normalize</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','void')</script>  <b>Normalize</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Normalizes <tt>this</tt> complex number.
</dl>
<a name="SetCoord"></a><a name="SetCoord(float&amp;,float&amp;)"></a> <dt> o <b>SetCoord</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetCoord</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iReal</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iImag</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the real and imaginary parts of <tt>this</tt> complex number.
</dl>
<a name="SetImag"></a><a name="SetImag(float&amp;)"></a> <dt> o <b>SetImag</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetImag</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iImag</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the imaginary part of <tt>this</tt> complex number.
</dl>
<a name="SetReal"></a><a name="SetReal(float&amp;)"></a> <dt> o <b>SetReal</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('void','INLINE void')</script>  <b>SetReal</b>(<td> const <script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>iReal</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Sets the real part of <tt>this</tt> complex number.
</dl>
<a name="SquareModulus"></a><a name="SquareModulus()"></a> <dt> o <b>SquareModulus</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('float','float')</script>  <b>SquareModulus</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the square modulus of <tt>this</tt> complex number.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  <tt>iReal^2 + iImag^2</tt>.
</dl>
</dl>
<a name="operator *"></a><a name="operator *(CATMathComplexf&amp;)"></a> <dt> o <b>operator *</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf')</script>  <b>operator *</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp2</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Multiplication operator.
</dl>
<a name="operator *="></a><a name="operator *=(CATMathComplexf&amp;)"></a> <dt> o <b>operator *=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&')</script>  <b>operator *=</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Multiplication assignment operator.
 <br>The operator modifies <tt>this</tt> complex number.
</dl>
<a name="operator +"></a><a name="operator +(CATMathComplexf&amp;)"></a> <dt> o <b>operator +</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf')</script>  <b>operator +</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp2</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Addition operator.
</dl>
<a name="operator +="></a><a name="operator +=(CATMathComplexf&amp;)"></a> <dt> o <b>operator +=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf &')</script>  <b>operator +=</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Addition assignment operator.
 <br>The operator modifies <tt>this</tt> complex number.
</dl>
<a name="operator -"></a><a name="operator -(CATMathComplexf&amp;)"></a> <dt> o <b>operator -</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf')</script>  <b>operator -</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp2</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Subtraction operator.
</dl>
<a name="operator -="></a><a name="operator -=(CATMathComplexf&amp;)"></a> <dt> o <b>operator -=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf &')</script>  <b>operator -=</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Subtraction assignment operator.
 <br>The operator modifies <tt>this</tt> complex number.
</dl>
<a name="operator /"></a><a name="operator /(CATMathComplexf&amp;)"></a> <dt> o <b>operator /</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf')</script>  <b>operator /</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp2</tt>)<script type="text/javascript"> activateLink('const',' const')</script>  </table></dt>
<dl>
  <dd>
 Division operator.
</dl>
<a name="operator /="></a><a name="operator /=(CATMathComplexf&amp;)"></a> <dt> o <b>operator /=</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf &')</script>  <b>operator /=</b>(<td> const <script type="text/javascript"> activateLink('CATMathComplexf','CATMathComplexf&amp;')</script> <td><tt>iComp</tt>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Division assignment operator.
 <br>The operator modifies <tt>this</tt> complex number.
</dl>
<hr>
 This object is included in the file: <b>CATMathComplexf.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATMathematics</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
