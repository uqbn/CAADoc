<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Interface CATIShot</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../FittingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIShot','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIShot','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIShot','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIShot','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>FittingInterfaces Interface CATIShot</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIShot_20674','CATIShot','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATIShot</b>
</p>
<p>
<b><i> The interface to access a CATIShot.</i></b><br>

 <b>Role:</b> A CATIShot (or shot) is the base element that <a href="#" onClick="openLink('CATISampled','');return false">CATISampled</a> objects are composed of.  For example, when considering a 
 
<a href="#" onClick="openLink('CATITrack','');return false">CATITrack</a>, each recorded position is a shot.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetApplicativeDatas(int&amp;,double*&amp;)"><b>GetApplicativeDatas</b></a>(int&amp;,double*&amp;)
<dd>  Retrieves data to the related objects in the previous API.
 <dt> o 
    <a href="#GetApplicativeId(unsigned int&amp;)"><b>GetApplicativeId</b></a>(unsigned int&amp;)
<dd>  Retrieves how special characteristics for different objects when creating a
 shot.
 <dt> o 
    <a href="#GetDirectionalDatas(void*&amp;)"><b>GetDirectionalDatas</b></a>(void*&amp;)
<dd>  Retrieves the compass position related to the shot
 
 <dt> o 
    <a href="#GetDuration(double&amp;)"><b>GetDuration</b></a>(double&amp;)
<dd>  Retrieves the duration (in terms of distance) associated to a shot.
 <dt> o 
    <a href="#GetPositionData(double*,int&amp;)"><b>GetPositionData</b></a>(double*,int&amp;)
<dd>  Retrieves the positional/directional information related to the shot.
 <dt> o 
    <a href="#ResetDuration()"><b>ResetDuration</b></a>()
<dd>  Resets the duration (time) associated to a shot.
 <dt> o 
    <a href="#SetApplicativeDatas(int,double*)"><b>SetApplicativeDatas</b></a>(int,double*)
<dd>  Sets data to the related objects in the previous API.
 <dt> o 
    <a href="#SetApplicativeId(unsigned int)"><b>SetApplicativeId</b></a>(unsigned int)
<dd>  Sets special characteristics for different objects when creating a
 shot.
 <dt> o 
    <a href="#SetDirectionalDatas(void*)"><b>SetDirectionalDatas</b></a>(void*)
<dd>  Sets the compass position for the shot
 
 <dt> o 
    <a href="#SetDuration(double)"><b>SetDuration</b></a>(double)
<dd>  Sets the duration (in terms of distance) associated to a shot.
 <dt> o 
    <a href="#SetPositionData(double*,int)"><b>SetPositionData</b></a>(double*,int)
<dd>  Sets the positional/directional information related to the shot.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetApplicativeDatas"></a><a name="GetApplicativeDatas(int&amp;,double*&amp;)"></a> <dt> o <b>GetApplicativeDatas</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplicativeDatas</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oSize</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>oDatas</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves data to the related objects in the previous API.  For example: the zoom
 for a camera.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oSize</tt>
   <dd>    The size/number of elements contained in oDatas
 </dd>
    <dt><tt> iDatas</tt>
   <dd>    A set of data values (stored as doubles) retrieved.</dd>
</dl>
</dl>
</dl>
<a name="GetApplicativeId"></a><a name="GetApplicativeId(unsigned int&amp;)"></a> <dt> o <b>GetApplicativeId</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetApplicativeId</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oId</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves how special characteristics for different objects when creating a
 shot.  Again this is for different objects such as a camera.  It is 
 recommended for it to be set so that the correct interpolation can be 
 determined between shots.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oId</tt>
   <dd>    The value of the id</dd>
</dl>
</dl>
</dl>
<a name="GetDirectionalDatas"></a><a name="GetDirectionalDatas(void*&amp;)"></a> <dt> o <b>GetDirectionalDatas</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDirectionalDatas</b>(<td><script type="text/javascript"> activateLink('void','void*&amp;')</script> <td><tt>oDatas</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the compass position related to the shot
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDatas</tt>
   <dd>         <ul>
        <li> Compass (or Manipulator) Position; it is relative to the object
              position
    </ul></dd>
</dl>
</dl>
</dl>
<a name="GetDuration"></a><a name="GetDuration(double&amp;)"></a> <dt> o <b>GetDuration</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDuration</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oTime</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the duration (in terms of distance) associated to a shot.  
 The duration of a shot is the amount of time needed to travel from 
 the previous shot to the current shot. 
 However, this method retrieves the distance of the current shot
 from that of the previous shot. It is left for the user to calculate
 the Time using distance/speed Formula.

 
 Some key things to note are:
 <ul>
     <li> The first shot should have a duration of zero.
     <li> The value of the duration is a positive real number.  Hence,
          0.454 & 1345 are legal while -18 is not.
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTime</tt>
   <dd>    The duration (distance) of a shot.</dd>
</dl>
</dl>
</dl>
<a name="GetPositionData"></a><a name="GetPositionData(double*,int&amp;)"></a> <dt> o <b>GetPositionData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPositionData</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>oPosDatas</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the positional/directional information related to the shot.
 This method doesnt return information for Generic Shots because the Generic shots 
 do not cantain positional data. For ShotDouble we get 24 values for Shot Simple we get 12 values
 and for Shot Points we get 9 values.
 The caller should create an array of sufficient size
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPosDatas</tt>
   <dd>    If the shot is for a Track then it returns the shot information.     
    <ul>
        <li> Compass (or Manipulator) Position which is relative to the object
              position and the Object Position that is relative to the start 
              of the track. 
    </ul>
 </dd>
    <dt><tt> oSize</tt>
   <dd>    The size of the list of double that is returned</dd>
</dl>
</dl>
</dl>
<a name="ResetDuration"></a><a name="ResetDuration()"></a> <dt> o <b>ResetDuration</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ResetDuration</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Resets the duration (time) associated to a shot.
 <b>Role:</b> When reseting a shot's time, data values are unset (or deleted).
 Then the next time GetDuration is called, the duration will be recalculated.

</dl>
<a name="SetApplicativeDatas"></a><a name="SetApplicativeDatas(int,double*)"></a> <dt> o <b>SetApplicativeDatas</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetApplicativeDatas</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSize</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iDatas</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets data to the related objects in the previous API.  For example: the zoom
 for a camera.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSize</tt>
   <dd>    The size/number of elements contained in iDatas
 </dd>
    <dt><tt> iDatas</tt>
   <dd>    A set of data values (stored as doubles) to be stored.</dd>
</dl>
</dl>
</dl>
<a name="SetApplicativeId"></a><a name="SetApplicativeId(unsigned int)"></a> <dt> o <b>SetApplicativeId</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetApplicativeId</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iId</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets special characteristics for different objects when creating a
 shot.  Again this is for different object types such as a camera.  It is 
 recommended for it to be set so that the correct interpolation can be 
 determined between shots.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iId</tt>
   <dd>    The number of the id to set.</dd>
</dl>
</dl>
</dl>
<a name="SetDirectionalDatas"></a><a name="SetDirectionalDatas(void*)"></a> <dt> o <b>SetDirectionalDatas</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDirectionalDatas</b>(<td><script type="text/javascript"> activateLink('void','void*')</script> <td><tt>iDatas</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the compass position for the shot
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDatas</tt>
   <dd>    <ul>
        <li> Compass Position is set, it is relative to the object position
    </ul></dd>
</dl>
</dl>
</dl>
<a name="SetDuration"></a><a name="SetDuration(double)"></a> <dt> o <b>SetDuration</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDuration</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTime</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the duration (in terms of distance) associated to a shot.  
 The duration of a shot is the amount of time needed to travel from 
 the previous shot to the current shot. 
 However, this method sets the distance of the current shot
 from that of the previous shot. It is left for the user to calculate
 the distance that needs to be set for the shot using the Time*Speed Formula.

 
 Some key things to note are:
 <ul>
     <li> The first shot should have a duration of zero.
     <li> The value of the duration is a positive real number.  Hence,
          0.454 & 1345 are legal while -18 is not.
 </ul>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTime</tt>
   <dd>    The duration (distance) of a shot.</dd>
</dl>
</dl>
</dl>
<a name="SetPositionData"></a><a name="SetPositionData(double*,int)"></a> <dt> o <b>SetPositionData</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPositionData</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iPosDatas</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iSize</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Sets the positional/directional information related to the shot.
 This method doesnt set information for Generic Shots because the Generic shots 
 do not cantain positional data. For ShotDouble we get 24 values for Shot Simple 
 we get 12 values and for Shot Points we get 9 values.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosDatas</tt>
   <dd>    If the shot is for a Track then it sets the shot information.  
    <ul>
        <li> iPosDatas contains Compass Position which is relative to the object
              position and the Object Position that is relative to the start 
              of the track. 
    </ul>
 </dd>
    <dt><tt> iSize</tt>
   <dd>   This is the size of double</dd>
</dl>
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATIShot.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFittingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
