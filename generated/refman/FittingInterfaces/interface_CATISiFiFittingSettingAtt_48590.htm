<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Interface CATISiFiFittingSettingAtt</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../FittingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISiFiFittingSettingAtt','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISiFiFittingSettingAtt','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISiFiFittingSettingAtt','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISiFiFittingSettingAtt','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>FittingInterfaces Interface CATISiFiFittingSettingAtt</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISiFiFittingSettingAtt_48590','CATISiFiFittingSettingAtt','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATISiFiFittingSettingAtt</b>
</p>
<p>
<b><i>   Interface to handle parameters of DMU Fitting Tools Options Tab page.</i></b><br>

 <b>Role</b>: This interface is implemented by a component which 
 represents the controller of DMU Fitting Tools Options parameter settings.
 <ul>
 <li>Methods to set value of each parameter</li>
 <li>Methods to get value of each parameter</li>
 <li>Methods to get information on each parameter</li>
 <li>Methods to lock/unlock value of each parameter</li>
 </ul></p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#GetAngleLimit(CATBoolean&amp;)"><b>GetAngleLimit</b></a>(CATBoolean&amp;)
<dd>  Returns the Shuttle Angle Limit parameter.
 <dt> o 
    <a href="#GetAngleLimitInfo(CATSettingInfo*)"><b>GetAngleLimitInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the AngleLimitInfo parameter.
 <dt> o 
    <a href="#GetClashWhileMoving(CATBoolean&amp;)"><b>GetClashWhileMoving</b></a>(CATBoolean&amp;)
<dd>  Returns the Clash While Moving parameter.
 <dt> o 
    <a href="#GetClashWhileMovingInfo(CATSettingInfo*)"><b>GetClashWhileMovingInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the ClashWhileMovingInfo parameter.
 <dt> o 
    <a href="#GetDefaultSpeed(double&amp;)"><b>GetDefaultSpeed</b></a>(double&amp;)
<dd>  Returns the Default Speed parameter.
 <dt> o 
    <a href="#GetDefaultSpeedInfo(CATSettingInfo*)"><b>GetDefaultSpeedInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the DefaultSpeedInfo parameter.
 <dt> o 
    <a href="#GetDefaultTime(double&amp;)"><b>GetDefaultTime</b></a>(double&amp;)
<dd>  Returns the Default Time parameter
 <br><b>Role</b>: Returns the Default Time parameter for a track
 
 <dt> o 
    <a href="#GetDefaultTimeInfo(CATSettingInfo*)"><b>GetDefaultTimeInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the DefaultTimeInfo parameter.
 <dt> o 
    <a href="#GetMaxAngle(float&amp;)"><b>GetMaxAngle</b></a>(float&amp;)
<dd>  Returns the Maximum Angle if angle limitation is being used.
 <dt> o 
    <a href="#GetMaxAngleInfo(CATSettingInfo*)"><b>GetMaxAngleInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the MaxAngleInfo parameter.
 <dt> o 
    <a href="#GetPathFinderSmooth(CATBoolean&amp;)"><b>GetPathFinderSmooth</b></a>(CATBoolean&amp;)
<dd>  Returns the Path Finder Automatic Smooth parameter.
 <dt> o 
    <a href="#GetPathFinderSmoothInfo(CATSettingInfo*)"><b>GetPathFinderSmoothInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the PathFinderSmoothInfo parameter.
 <dt> o 
    <a href="#GetTrackAutoUpdate(CATBoolean&amp;)"><b>GetTrackAutoUpdate</b></a>(CATBoolean&amp;)
<dd>  Returns the Automatic Track Update parameter.
 <dt> o 
    <a href="#GetTrackAutoUpdateInfo(CATSettingInfo*)"><b>GetTrackAutoUpdateInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the TrackAutoUpdateInfo parameter.
 <dt> o 
    <a href="#GetVector(CATFittingShuttleVector&amp;)"><b>GetVector</b></a>(CATFittingShuttleVector&amp;)
<dd>  Returns the Vector if angle limitation is being used.
 <dt> o 
    <a href="#GetVectorInfo(CATSettingInfo*)"><b>GetVectorInfo</b></a>(CATSettingInfo*)
<dd>  Retrieves the state of the VectorInfo parameter.
 <dt> o 
    <a href="#SetAngleLimit(CATBoolean)"><b>SetAngleLimit</b></a>(CATBoolean)
<dd>  Sets the Shuttle Angle Limit parameter.
 <dt> o 
    <a href="#SetAngleLimitLock(unsigned char)"><b>SetAngleLimitLock</b></a>(unsigned char)
<dd>  Locks or unlocks the Shuttle Angle Limit parameter.
 <dt> o 
    <a href="#SetClashWhileMoving(CATBoolean)"><b>SetClashWhileMoving</b></a>(CATBoolean)
<dd>  Sets the Clash While Moving parameter.
 <dt> o 
    <a href="#SetClashWhileMovingLock(unsigned char)"><b>SetClashWhileMovingLock</b></a>(unsigned char)
<dd>  Locks or unlocks the ClashWhileMoving parameter.
 <dt> o 
    <a href="#SetDefaultSpeed(double)"><b>SetDefaultSpeed</b></a>(double)
<dd>  Sets the Default Speed parameter.
 <dt> o 
    <a href="#SetDefaultSpeedLock(unsigned char)"><b>SetDefaultSpeedLock</b></a>(unsigned char)
<dd>  Locks or unlocks the DefaultSpeed parameter.
 <dt> o 
    <a href="#SetDefaultTime(double)"><b>SetDefaultTime</b></a>(double)
<dd>  Sets the Default Time parameter.
 <dt> o 
    <a href="#SetDefaultTimeLock(unsigned char)"><b>SetDefaultTimeLock</b></a>(unsigned char)
<dd>  Locks or unlocks the DefaultTime parameter.
 <dt> o 
    <a href="#SetMaxAngle(float)"><b>SetMaxAngle</b></a>(float)
<dd>  Sets the Maximum Angle if angle limitation is being used.
 <dt> o 
    <a href="#SetMaxAngleLock(unsigned char)"><b>SetMaxAngleLock</b></a>(unsigned char)
<dd>  Locks or unlocks the Shuttle Angle Limit value parameter.
 <dt> o 
    <a href="#SetPathFinderSmooth(CATBoolean)"><b>SetPathFinderSmooth</b></a>(CATBoolean)
<dd>  Sets the Path Finder Automatic Smooth parameter.
 <dt> o 
    <a href="#SetPathFinderSmoothLock(unsigned char)"><b>SetPathFinderSmoothLock</b></a>(unsigned char)
<dd>  Locks or unlocks the PathFinderSmooth parameter.
 <dt> o 
    <a href="#SetTrackAutoUpdate(CATBoolean)"><b>SetTrackAutoUpdate</b></a>(CATBoolean)
<dd>  Sets the Automatic Track Update parameter.
 <dt> o 
    <a href="#SetTrackAutoUpdateLock(unsigned char)"><b>SetTrackAutoUpdateLock</b></a>(unsigned char)
<dd>  Locks or unlocks the TrackAutoUpdate parameter.
 <dt> o 
    <a href="#SetVector(CATFittingShuttleVector)"><b>SetVector</b></a>(CATFittingShuttleVector)
<dd>  Sets the Vector if angle limitation is being used.
 <dt> o 
    <a href="#SetVectorLock(unsigned char)"><b>SetVectorLock</b></a>(unsigned char)
<dd>  Locks or unlocks the Shuttle Vector parameter.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="GetAngleLimit"></a><a name="GetAngleLimit(CATBoolean&amp;)"></a> <dt> o <b>GetAngleLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLimit</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oAngleLimit</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Shuttle Angle Limit parameter.
 <br><b>Role</b>: Returns the Shuttle Angle Limit parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oAngleLimit</tt>
   <dd>     If shuttle angle limitation is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Angle Limitation is enabled
     <br><tt>FALSE</tt> Angle Limitation is disabled
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the AngleLimit value was correctly obtained
     E_FAIL : if the AngleLimit value was not correctly obtained
</dl>
</dl>
<a name="GetAngleLimitInfo"></a><a name="GetAngleLimitInfo(CATSettingInfo*)"></a> <dt> o <b>GetAngleLimitInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAngleLimitInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the AngleLimitInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetClashWhileMoving"></a><a name="GetClashWhileMoving(CATBoolean&amp;)"></a> <dt> o <b>GetClashWhileMoving</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClashWhileMoving</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oClashWhileMoving</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Clash While Moving parameter.
 <br><b>Role</b>: Returns the Clash Detection While Moving parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oClashWhileMoving</tt>
   <dd>     If Clash Detection While Moving is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Clash Detection While Moving is enabled
     <br><tt>FALSE</tt> Clash Detection While Moving is disabled
     used
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Clash While Moving value was correctly obtained
     E_FAIL : if the Clash While Moving value was not correctly obtained
</dl>
</dl>
<a name="GetClashWhileMovingInfo"></a><a name="GetClashWhileMovingInfo(CATSettingInfo*)"></a> <dt> o <b>GetClashWhileMovingInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetClashWhileMovingInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the ClashWhileMovingInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDefaultSpeed"></a><a name="GetDefaultSpeed(double&amp;)"></a> <dt> o <b>GetDefaultSpeed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultSpeed</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oDefaultSpeed</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Default Speed parameter.
 <br><b>Role</b>: Returns the Default Speed parameter for a track
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultSpeed</tt>
   <dd>     <br>Will be set to the current value of the Default Speed for a track
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Default Speed value was correctly obtained
     E_FAIL : if the Default Speed value was not correctly obtained
</dl>
</dl>
<a name="GetDefaultSpeedInfo"></a><a name="GetDefaultSpeedInfo(CATSettingInfo*)"></a> <dt> o <b>GetDefaultSpeedInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultSpeedInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the DefaultSpeedInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetDefaultTime"></a><a name="GetDefaultTime(double&amp;)"></a> <dt> o <b>GetDefaultTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultTime</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oDefaultTime</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Default Time parameter
 <br><b>Role</b>: Returns the Default Time parameter for a track
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDefaultTime</tt>
   <dd>     <br>Will be set to the current value of the Default Time for a track
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Default Time value was correctly obtained
     E_FAIL : if the Default Time value was not correctly obtained
</dl>
</dl>
<a name="GetDefaultTimeInfo"></a><a name="GetDefaultTimeInfo(CATSettingInfo*)"></a> <dt> o <b>GetDefaultTimeInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetDefaultTimeInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the DefaultTimeInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetMaxAngle"></a><a name="GetMaxAngle(float&amp;)"></a> <dt> o <b>GetMaxAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaxAngle</b>(<td><script type="text/javascript"> activateLink('float','float&amp;')</script> <td><tt>oMaxAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Maximum Angle if angle limitation is being used.
 <br><b>Role</b>: Returns the Maximum Angle if angle limitation is being used
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oMaxAngle</tt>
   <dd>     <br>Will be set to the current value of the Maximum Angle for shuttle
     angle limitation validation.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Max Validation value was correctly obtained
     E_FAIL : if the Max Validation value was not correctly obtained
</dl>
</dl>
<a name="GetMaxAngleInfo"></a><a name="GetMaxAngleInfo(CATSettingInfo*)"></a> <dt> o <b>GetMaxAngleInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetMaxAngleInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the MaxAngleInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetPathFinderSmooth"></a><a name="GetPathFinderSmooth(CATBoolean&amp;)"></a> <dt> o <b>GetPathFinderSmooth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPathFinderSmooth</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oPathFinderSmooth</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Path Finder Automatic Smooth parameter.
 <br><b>Role</b>: Returns the Path Finder Automatic Smooth parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPathFinderSmooth</tt>
   <dd>     If Path Finder Automatic Smooth is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Path Finder Automatic Smooth is enabled
     <br><tt>FALSE</tt> Path Finder Automatic Smooth is disabled
     used
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Path Finder Automatic Smooth value was correctly obtained
     E_FAIL : if the Path Finder Automatic Smooth value was not correctly obtained
</dl>
</dl>
<a name="GetPathFinderSmoothInfo"></a><a name="GetPathFinderSmoothInfo(CATSettingInfo*)"></a> <dt> o <b>GetPathFinderSmoothInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetPathFinderSmoothInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the PathFinderSmoothInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>    Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <b>Legal values</b>:
    <br><tt>S_OK :</tt>   on Success
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetTrackAutoUpdate"></a><a name="GetTrackAutoUpdate(CATBoolean&amp;)"></a> <dt> o <b>GetTrackAutoUpdate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrackAutoUpdate</b>(<td><script type="text/javascript"> activateLink('CATBoolean','CATBoolean&amp;')</script> <td><tt>oTrackAutoUpdate</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Automatic Track Update parameter.
 <br><b>Role</b>: Returns the Automatic Track Update parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTrackAutoUpdate</tt>
   <dd>     If Automatic Track Update is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE</tt>  Automatic Track Update is enabled
     <br><tt>FALSE</tt> Automatic Track Update is disabled
     used
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Automatic Track Update value was correctly obtained
     E_FAIL : if the Automatic Track Update value was not correctly obtained
</dl>
</dl>
<a name="GetTrackAutoUpdateInfo"></a><a name="GetTrackAutoUpdateInfo(CATSettingInfo*)"></a> <dt> o <b>GetTrackAutoUpdateInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTrackAutoUpdateInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the TrackAutoUpdateInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetVector"></a><a name="GetVector(CATFittingShuttleVector&amp;)"></a> <dt> o <b>GetVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVector</b>(<td><script type="text/javascript"> activateLink('CATFittingShuttleVector','CATFittingShuttleVector&amp;')</script> <td><tt>oVector</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Returns the Vector if angle limitation is being used.
 <br><b>Role</b>: Returns the Vector if angle limitation is being used
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oVector</tt>
   <dd>     The axis that will be used for shuttle angle validation
     <b>Legal values</b>:
     <br><tt>CATFittingShuttleVectorX</tt>   Along the vector X axis
     <br><tt>CATFittingShuttleVectorY</tt>   Along the vector Y axis
     <br><tt>CATFittingShuttleVectorZ</tt>   Along the vector Z axis
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Vector value was correctly obtained
     E_FAIL : if the Vector value was not correctly obtained
</dl>
</dl>
<a name="GetVectorInfo"></a><a name="GetVectorInfo(CATSettingInfo*)"></a> <dt> o <b>GetVectorInfo</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetVectorInfo</b>(<td><script type="text/javascript"> activateLink('CATSettingInfo','CATSettingInfo*')</script> <td><tt>oInfo</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the state of the VectorInfo parameter.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInfo</tt>
   <dd>     Address of an object CATSettingInfo.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetAngleLimit"></a><a name="SetAngleLimit(CATBoolean)"></a> <dt> o <b>SetAngleLimit</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLimit</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iAngleLimit</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Shuttle Angle Limit parameter.
 <br><b>Role</b>: Sets the Shuttle Angle Limit parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngleLimit</tt>
   <dd>     If shuttle angle limitation is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Angle Limitation 
     <br><tt>FALSE:</tt>   to disable Angle Limitation 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Angle Limitation value was set correctly
     E_FAIL : if the Angle Limitation value was not set correctly
</dl>
</dl>
<a name="SetAngleLimitLock"></a><a name="SetAngleLimitLock(unsigned char)"></a> <dt> o <b>SetAngleLimitLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAngleLimitLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the Shuttle Angle Limit parameter.
 <br><b>Role</b>:Locks or unlocks the Shuttle Angle Limit parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetClashWhileMoving"></a><a name="SetClashWhileMoving(CATBoolean)"></a> <dt> o <b>SetClashWhileMoving</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClashWhileMoving</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iClashWhileMoving</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Clash While Moving parameter.
 <br><b>Role</b>: Sets the Clash Detection While Moving parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngleLimit</tt>
   <dd>     If Clash Detection While Moving is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Clash Detection While Moving 
     <br><tt>FALSE:</tt>   to disable Clash Detection While Moving 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Clash While Moving value was set correctly
     E_FAIL : if the Clash While Moving value was not set correctly
</dl>
</dl>
<a name="SetClashWhileMovingLock"></a><a name="SetClashWhileMovingLock(unsigned char)"></a> <dt> o <b>SetClashWhileMovingLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetClashWhileMovingLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the ClashWhileMoving parameter.
 <br><b>Role</b>:Locks or unlocks the ClashWhileMoving parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetDefaultSpeed"></a><a name="SetDefaultSpeed(double)"></a> <dt> o <b>SetDefaultSpeed</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultSpeed</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDefaultSpeed</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Default Speed parameter.
 <br><b>Role</b>: Returns the Default Speed parameter for a track
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDefaultSpeed</tt>
   <dd>     <br>Used to set the Default Track Speed for a track
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Default Track Speed value was correctly obtained
     E_FAIL : if the Default Track Speed value was not correctly obtained
</dl>
</dl>
<a name="SetDefaultSpeedLock"></a><a name="SetDefaultSpeedLock(unsigned char)"></a> <dt> o <b>SetDefaultSpeedLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultSpeedLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the DefaultSpeed parameter.
 <br><b>Role</b>:Locks or unlocks the DefaultSpeed parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetDefaultTime"></a><a name="SetDefaultTime(double)"></a> <dt> o <b>SetDefaultTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultTime</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDefaultTime</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Default Time parameter.
 <br><b>Role</b>: Returns the Default Time parameter for a track
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDefaultTime</tt>
   <dd>     <br>Used to set the Default Track Time for a track
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Default Track Time value was correctly obtained
     E_FAIL : if the Default Track Time value was not correctly obtained
</dl>
</dl>
<a name="SetDefaultTimeLock"></a><a name="SetDefaultTimeLock(unsigned char)"></a> <dt> o <b>SetDefaultTimeLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetDefaultTimeLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the DefaultTime parameter.
 <br><b>Role</b>:Locks or unlocks the DefaultTime parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetMaxAngle"></a><a name="SetMaxAngle(float)"></a> <dt> o <b>SetMaxAngle</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaxAngle</b>(<td><script type="text/javascript"> activateLink('float','float')</script> <td><tt>iMaxAngle</tt>)<script type="text/javascript"> activateLink('0',' = 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Maximum Angle if angle limitation is being used.
 <br><b>Role</b>: Sets the Maximum Angle if angle limitation is being used
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMaxAngle</tt>
   <dd>     <br>Will be used to set the Maximum Angle for shuttle angle limitation
     validation.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Max Validation value was set correctly
     E_FAIL : if the Max Validation value was not set correctly
</dl>
</dl>
<a name="SetMaxAngleLock"></a><a name="SetMaxAngleLock(unsigned char)"></a> <dt> o <b>SetMaxAngleLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetMaxAngleLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the Shuttle Angle Limit value parameter.
 <br><b>Role</b>:Locks or unlocks the MaxAngle parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetPathFinderSmooth"></a><a name="SetPathFinderSmooth(CATBoolean)"></a> <dt> o <b>SetPathFinderSmooth</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPathFinderSmooth</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iPathFinderSmooth</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Path Finder Automatic Smooth parameter.
 <br><b>Role</b>: Sets the Path Finder Automatic Smooth parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPathFinderSmooth</tt>
   <dd>     If Path Finder Automatic Smooth is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Path Finder Automatic Smooth
     <br><tt>FALSE:</tt>   to disable Path Finder Automatic Smooth
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Angle Limitation value was set correctly
     E_FAIL : if the Angle Limitation value was not set correctly
</dl>
</dl>
<a name="SetPathFinderSmoothLock"></a><a name="SetPathFinderSmoothLock(unsigned char)"></a> <dt> o <b>SetPathFinderSmoothLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetPathFinderSmoothLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the PathFinderSmooth parameter.
 <br><b>Role</b>:Locks or unlocks the PathFinderSmooth parameter if it is 
 possible in the current administrative context. In user mode this method 
 will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetTrackAutoUpdate"></a><a name="SetTrackAutoUpdate(CATBoolean)"></a> <dt> o <b>SetTrackAutoUpdate</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrackAutoUpdate</b>(<td> const <script type="text/javascript"> activateLink('CATBoolean','CATBoolean')</script> <td><tt>iTrackAutoUpdate</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Automatic Track Update parameter.
 <br><b>Role</b>: Sets the Automatic Track Update parameter
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTrackAutoUpdate</tt>
   <dd>     If Automatic Track Update is to be used.
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to enable Automatic Track Update
     <br><tt>FALSE:</tt>   to disable Automatic Track Update
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Automatic Track Update value was set correctly
     E_FAIL : if the Automatic Track Update was not set correctly
</dl>
</dl>
<a name="SetTrackAutoUpdateLock"></a><a name="SetTrackAutoUpdateLock(unsigned char)"></a> <dt> o <b>SetTrackAutoUpdateLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTrackAutoUpdateLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the TrackAutoUpdate parameter.
 <br><b>Role</b>:Locks or unlocks the TrackAutoUpdate parameter if it is 
 possible in the current administrative context. In user mode this method 
 will always return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetVector"></a><a name="SetVector(CATFittingShuttleVector)"></a> <dt> o <b>SetVector</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVector</b>(<td> const <script type="text/javascript"> activateLink('CATFittingShuttleVector','CATFittingShuttleVector')</script> <td><tt>iVector</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Vector if angle limitation is being used.
 <br><b>Role</b>: Sets the Vector if angle limitation is being used
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iVector</tt>
   <dd>     The axis that will be used for shuttle angle validation
     <b>Legal values</b>:
     <br><tt>CATFittingShuttleVectorX</tt>   Along the vector X axis
     <br><tt>CATFittingShuttleVectorY</tt>   Along the vector Y axis
     <br><tt>CATFittingShuttleVectorZ</tt>   Along the vector Z axis
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      S_OK   : if the Vector value was set correctly
     E_FAIL : if the Vector value was not set correctly
</dl>
</dl>
<a name="SetVectorLock"></a><a name="SetVectorLock(unsigned char)"></a> <dt> o <b>SetVectorLock</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetVectorLock</b>(<td><script type="text/javascript"> activateLink('unsigned char','unsigned char')</script> <td><tt>iLocked</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Locks or unlocks the Shuttle Vector parameter.
 <br><b>Role</b>:Locks or unlocks the Shuttle Vector parameter if it is possible
 in the current administrative context. In user mode this method will always
 return E_FAIL.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLocked</tt>
   <dd>     the locking operation to be performed
     <b>Legal values</b>:
     <br><tt>TRUE :</tt>   to lock the parameter.
     <br><tt>FALSE:</tt>   to unlock the parameter.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISiFiFittingSettingAtt.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFittingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
