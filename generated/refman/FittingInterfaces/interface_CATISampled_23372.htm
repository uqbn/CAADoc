<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>FittingInterfaces Interface CATISampled</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../FittingInterfaces.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATISampled','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISampled','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATISampled','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATISampled','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>FittingInterfaces Interface CATISampled</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATISampled_23372','CATISampled','0');</script>
<p><b>Usage: you must use this class as is. You should never derive it.</b></p>
<hr>
<p>
 interface <b>CATISampled</b>
</p>
<p>
<b><i> Definition of the CATISampled object.</i></b><br>

 <b>Role:</b> The Sampled class defines characteristics for simulatable
 tasks within DMU Fitting.  CATISampled is the parent class for tracks and
 color actions.  Key samples are recorded (as shots or CATIShots) for an object
 and then during simulation the object is interpolated with these samples.</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#AddAnalysis(CATBaseUnknown*,int,int)"><b>AddAnalysis</b></a>(CATBaseUnknown*,int,int)
<dd>  Add (bind) an analysis object to the current sampled.
 <dt> o 
    <a href="#AddShot(CATIShot*,CatFitSampledRecordMode,int)"><b>AddShot</b></a>(CATIShot*,CatFitSampledRecordMode,int)
<dd>  Adds a shot to the sampled.
 <dt> o 
    <a href="#AppendSampled(CATISampled*)"><b>AppendSampled</b></a>(CATISampled*)
<dd>  Appends the shots of a sampled to the current sampled.
 <dt> o 
    <a href="#CreateShot(CATIShot*&amp;,char*)"><b>CreateShot</b></a>(CATIShot*&amp;,char*)
<dd>  Create a new shot in the sampled.
 <dt> o 
    <a href="#GetAnalysis(int&amp;,CATBaseUnknown**&amp;,int*&amp;,int*&amp;)"><b>GetAnalysis</b></a>(int&amp;,CATBaseUnknown**&amp;,int*&amp;,int*&amp;)
<dd>  Returns the analyses objects bound to a Track.
 <dt> o 
    <a href="#GetAnalysisStatus(unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"><b>GetAnalysisStatus</b></a>(unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)
<dd>  Returns the analyses settings for a Track.
 <dt> o 
    <a href="#GetExistingInterpolaters(CATListOfCATString&amp;)"><b>GetExistingInterpolaters</b></a>(CATListOfCATString&amp;)
<dd>  Retrieves a list of the existing interpolators.
 <dt> o 
    <a href="#GetIndice(CATIShot*,int&amp;)"><b>GetIndice</b></a>(CATIShot*,int&amp;)
<dd>  Retrieves the index of a shot.
 <dt> o 
    <a href="#GetInterpolater(CATString&amp;)"><b>GetInterpolater</b></a>(CATString&amp;)
<dd>  Retrieves the Sampled's interpolater.
 <dt> o 
    <a href="#GetInterpolater(CATIInterpolater*&amp;)"><b>GetInterpolater</b></a>(CATIInterpolater*&amp;)
<dd>  Retrieves the Sampled's interpolater.
 <dt> o 
    <a href="#GetName(CATUnicodeString&amp;)"><b>GetName</b></a>(CATUnicodeString&amp;)
<dd>  Retrieves the name of the sampled.
 <dt> o 
    <a href="#GetNbShots(int&amp;)"><b>GetNbShots</b></a>(int&amp;)
<dd>  Retrieves the number of shots.
 <dt> o 
    <a href="#GetObject(CATBaseUnknown*&amp;)"><b>GetObject</b></a>(CATBaseUnknown*&amp;)
<dd>  Retrieves the object for a sampled.
 <dt> o 
    <a href="#GetScaling(double&amp;)"><b>GetScaling</b></a>(double&amp;)
<dd>  Retrieves the scaling value associated to the sampled.
 <dt> o 
    <a href="#GetShot(int,CATIShot*&amp;)"><b>GetShot</b></a>(int,CATIShot*&amp;)
<dd>  Retrieves a specific shot.
 <dt> o 
    <a href="#GetTime(double&amp;)"><b>GetTime</b></a>(double&amp;)
<dd>  Retrieves internal time of the sampled.
 <dt> o 
    <a href="#GetType(CATString&amp;)"><b>GetType</b></a>(CATString&amp;)
<dd>  Retrieve the type of the sampled.
 <dt> o 
    <a href="#IsAuthorized(CATBaseUnknown*)"><b>IsAuthorized</b></a>(CATBaseUnknown*)
<dd>  Check to see if it is possible to simulate an object.
 <dt> o 
    <a href="#PlayTime(double)"><b>PlayTime</b></a>(double)
<dd>  Set the internal time of the sampled.
 <dt> o 
    <a href="#RemoveAllAnalysis()"><b>RemoveAllAnalysis</b></a>()
<dd>  Removes all the analysis objects from the sampled.
 <dt> o 
    <a href="#RemoveAllShots()"><b>RemoveAllShots</b></a>()
<dd>  Removes all shots.
 <dt> o 
    <a href="#RemoveAnalysis(int)"><b>RemoveAnalysis</b></a>(int)
<dd>  Removes a specified analysis object from the sampled.
 <dt> o 
    <a href="#RemoveAnalysis(CATBaseUnknown*)"><b>RemoveAnalysis</b></a>(CATBaseUnknown*)
<dd>  Removes a specified analysis object from the sampled.
 <dt> o 
    <a href="#RemoveShot(int)"><b>RemoveShot</b></a>(int)
<dd>  Removes a shot.
 <dt> o 
    <a href="#RemoveShot(CATIShot*)"><b>RemoveShot</b></a>(CATIShot*)
<dd>  Removes a shot.
 <dt> o 
    <a href="#ReorderShot(int,int)"><b>ReorderShot</b></a>(int,int)
<dd>  Changes the order of two shots.
 <dt> o 
    <a href="#Reverse()"><b>Reverse</b></a>()
<dd>  Reverse shots contained in the sampled.
 <dt> o 
    <a href="#SetAnalysisStatus(unsigned int,unsigned int,unsigned int,unsigned int)"><b>SetAnalysisStatus</b></a>(unsigned int,unsigned int,unsigned int,unsigned int)
<dd>  Set the analyses settings for a sampled based object.
 <dt> o 
    <a href="#SetInterpolater(CATString&amp;)"><b>SetInterpolater</b></a>(CATString&amp;)
<dd>  Sets the Sampled's interpolater.
 <dt> o 
    <a href="#SetName(CATUnicodeString)"><b>SetName</b></a>(CATUnicodeString)
<dd>  Sets the name of the sampled.
 <dt> o 
    <a href="#SetObject(CATBaseUnknown*,boolean)"><b>SetObject</b></a>(CATBaseUnknown*,boolean)
<dd>  Assign an Object for the sampled.
 <dt> o 
    <a href="#SetScaling(double)"><b>SetScaling</b></a>(double)
<dd>  Stores the scaling value associated to the sampled.
 <dt> o 
    <a href="#SetTime(double)"><b>SetTime</b></a>(double)
<dd>  Set the internal time of the sampled.
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="AddAnalysis"></a><a name="AddAnalysis(CATBaseUnknown*,int,int)"></a> <dt> o <b>AddAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddAnalysis</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iAnalysis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iAnalysisMode</tt><td><tt>=2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iMonitorMode</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Add (bind) an analysis object to the current sampled.
 <b>Role:</b> Adds an analysis object (such as clash, distance) to the current sampled
 object.  During simulation this analysis object is then evaluated at each step.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAnalysis</tt>
   <dd>   The analysis to add (bind) to a Track
 </dd>
    <dt><tt> iAnalysisMode</tt>
   <dd>   Indicates the analysis status for iAnalysis
   <ul>
       <li> 0 for Off
       <li> 1 for On
       <li> 2 for Stop
       <li> 3 for Verbose
   </ul>
 </dd>
    <dt><tt> iMonitorMode</tt>
   <dd>   Indicates the monitor status for iAnalysis
   <ul>
       <li> 0 for Off
       <li> 1 for On
   </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="AddShot"></a><a name="AddShot(CATIShot*,CatFitSampledRecordMode,int)"></a> <dt> o <b>AddShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AddShot</b>(<td><script type="text/javascript"> activateLink('CATIShot','CATIShot*')</script> <td><tt>iShot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatFitSampledRecordMode','CatFitSampledRecordMode')</script> <td><tt>iMode</tt><td><tt>=CatFitSampledAppend</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndice</tt><td><tt>=0</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Adds a shot to the sampled.
 <b>Role</b> Adds an already existing shot to the sampled.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShot</tt>
   <dd>    A valid pointer to an already existing shot.
 </dd>
    <dt><tt> iMode</tt>
   <dd>    Recommended values
    <ul>
         <li> CatFitSampledAppend <br>
              Used to add the shot at the end of the list of shots
         <li> CatFitSampledInsertAfter <br>
              Used to add the shot after the supplied index
    </ul>
 </dd>
    <dt><tt> iIndice</tt>
   <dd>    Index of where to add the shot 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success, iShot has been added correctly
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="AppendSampled"></a><a name="AppendSampled(CATISampled*)"></a> <dt> o <b>AppendSampled</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>AppendSampled</b>(<td><script type="text/javascript"> activateLink('CATISampled','CATISampled*')</script> <td><tt>iSampled</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Appends the shots of a sampled to the current sampled.
 <b>Role:</b> Appends the shots of a specified sampled to the current
 sampled.  Note that both the current sampled object and the specified 
 sampled object (iSampled) need to be simulating the same item, otherwise
 E_FAIL is returned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSampled</tt>
   <dd>    A valid pointer to a sampled based object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success, the shots have been appended.
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="CreateShot"></a><a name="CreateShot(CATIShot*&amp;,char*)"></a> <dt> o <b>CreateShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateShot</b>(<td><script type="text/javascript"> activateLink('CATIShot','CATIShot*&amp;')</script> <td><tt>oNewShot</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('char','char*')</script> <td><tt>iType</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Create a new shot in the sampled.
 <b>Role:</b> Creates a new shot within the sampled object.  The created shot will
 be empty, that is it has no data assigned to it (numerical data needs to be 
 assigned once the shot is created).  Also, if other shots exist, then this shot will
 be added to the end of the set of shots.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNewShot</tt>
   <dd>     The newly created shot.
 </dd>
    <dt><tt> iType</tt>
   <dd>     the type of shot to create
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success, oNewShot has been created correctly
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetAnalysis"></a><a name="GetAnalysis(int&amp;,CATBaseUnknown**&amp;,int*&amp;,int*&amp;)"></a> <dt> o <b>GetAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnalysis</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNb</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown**&amp;')</script> <td><tt>oAnalysis</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oState</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oMonitor</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the analyses objects bound to a Track.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNb</tt>
   <dd>   The number of analyses bound to a Track
 </dd>
    <dt><tt> oAnalysis</tt>
   <dd>   A list of analyses bound to a Track
 </dd>
    <dt><tt> oState</tt>
   <dd>   A list of the analysis status for each analysis object - Off (0), On (1), Stop (2), Verbose (3)
 </dd>
    <dt><tt> oMonitor</tt>
   <dd>   A list of the monitor status for each analysis object - Off (0) or On (1)
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetAnalysisStatus"></a><a name="GetAnalysisStatus(unsigned int&amp;,unsigned int&amp;,unsigned int&amp;,unsigned int&amp;)"></a> <dt> o <b>GetAnalysisStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetAnalysisStatus</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oActivated</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oState</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oVerbose</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int&amp;')</script> <td><tt>oMonitor</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Returns the analyses settings for a Track.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oActivated</tt>
   <dd>   Indicates whether the analyses are On or Off
 </dd>
    <dt><tt> oState</tt>
   <dd>   With oVerbose, indicates the state (On, Off, Stop, Verbose)
 </dd>
    <dt><tt> oVerbose</tt>
   <dd>   With oState, indicates the state (On, Off, Stop, Verbose)
 </dd>
    <dt><tt> oMonitor</tt>
   <dd>   Indicates whether the monitor is On or Off
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetExistingInterpolaters"></a><a name="GetExistingInterpolaters(CATListOfCATString&amp;)"></a> <dt> o <b>GetExistingInterpolaters</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetExistingInterpolaters</b>(<td><script type="text/javascript"> activateLink('CATListOfCATString','CATListOfCATString&amp;')</script> <td><tt>oList</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a list of the existing interpolators.
 <b>Role:</b> Get the list of interpolators that are available to
 the sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oList</tt>
   <dd>     A list containing strings of all available interpolators
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetIndice"></a><a name="GetIndice(CATIShot*,int&amp;)"></a> <dt> o <b>GetIndice</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetIndice</b>(<td><script type="text/javascript"> activateLink('CATIShot','CATIShot*')</script> <td><tt>iShot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oIndice</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the index of a shot.
 <b>Role:</b> Retrieves the index associated to a specifed shot, 
 that is contained within the current sampled object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShot</tt>
   <dd>    A shot that is contained within the current sampled.
 </dd>
    <dt><tt> oIndice</tt>
   <dd>    The returned index of the shot
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, a valid index is returned
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetInterpolater"></a><a name="GetInterpolater(CATString&amp;)"></a> <dt> o <b>GetInterpolater</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInterpolater</b>(<td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Sampled's interpolater.
 <b>Role:</b> Retrieves the interpolator used by the sampled during 
 simulation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>     A string containing the name of the interpolater used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetInterpolater"></a><a name="GetInterpolater(CATIInterpolater*&amp;)"></a> <dt> o <b>GetInterpolater</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetInterpolater</b>(<td><script type="text/javascript"> activateLink('CATIInterpolater','CATIInterpolater*&amp;')</script> <td><tt>oInterpolater</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the Sampled's interpolater.
 <b>Role:</b> Retrieves the interpolator used by the sampled during 
 simulation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oInterpolater</tt>
   <dd>     A pointer to the interpolater used
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetName"></a><a name="GetName(CATUnicodeString&amp;)"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString&amp;')</script> <td><tt>oName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the name of the sampled.
 <b>Role:</b> Retrieves the name of the sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>     The returned name of the sampled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetNbShots"></a><a name="GetNbShots(int&amp;)"></a> <dt> o <b>GetNbShots</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetNbShots</b>(<td><script type="text/javascript"> activateLink('int','int&amp;')</script> <td><tt>oNb</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the number of shots.
 <b>Role:</b> Retrieves the number of shots contained within the
 current sampled object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNb</tt>
   <dd>    An integer containing the number of shots.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetObject"></a><a name="GetObject(CATBaseUnknown*&amp;)"></a> <dt> o <b>GetObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*&amp;')</script> <td><tt>oObject</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the object for a sampled.
 <b>Role:</b> Retrieves the object that is associated to a sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oObject</tt>
   <dd>     A pointer to the object that is used by the sampled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetScaling"></a><a name="GetScaling(double&amp;)"></a> <dt> o <b>GetScaling</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetScaling</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oScaling</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the scaling value associated to the sampled.
 <b>Role:</b> Used to alter the duration of a sampled based
 simulation.  Initially the scaling is set to one, however
 if the scaling is changed to 0.5 the sampled take one half
 of its initial time.  Likewise, a scaling of two will cause
 the duration to double.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oScaling</tt>
   <dd>    The currently set value of the sampled's scaling value.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, 
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetShot"></a><a name="GetShot(int,CATIShot*&amp;)"></a> <dt> o <b>GetShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetShot</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iShot</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATIShot','CATIShot*&amp;')</script> <td><tt>oShot</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves a specific shot.
 <b>Role:</b> Retrieves a specific shot from the current sampled
 object.  The shot returned is based on the specified index, iShot.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShot</tt>
   <dd>    An integer specifing the index of the shot to return
 </dd>
    <dt><tt> oShot</tt>
   <dd>    A pointer to a shot 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, a shot is returned
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetTime"></a><a name="GetTime(double&amp;)"></a> <dt> o <b>GetTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetTime</b>(<td><script type="text/javascript"> activateLink('double','double&amp;')</script> <td><tt>oTime</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieves internal time of the sampled.
 <b>Role:</b> Retrieves the internal time associated to the current 
 sampled object.  A sampled object is used for time based simulations,
 and oTime is the time that the current sampled object is at.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oTime</tt>
   <dd>    The current time of the sampled object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, a valid time is returned
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="GetType"></a><a name="GetType(CATString&amp;)"></a> <dt> o <b>GetType</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>GetType</b>(<td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>oType</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Retrieve the type of the sampled.
 <b>Role:</b> A Sampled is used on various types; this method returns the 
 type of the sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oType</tt>
   <dd>     The type of the string.  For example 'Track' will be returned for track objects
     and 'Color' for Color Action objects
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="IsAuthorized"></a><a name="IsAuthorized(CATBaseUnknown*)"></a> <dt> o <b>IsAuthorized</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>IsAuthorized</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt><td><tt>=NULL</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Check to see if it is possible to simulate an object.
 <b>Role:</b> Used to check if it is possible to create a sampled
 based simulation with the specified object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>    The time to set the sampled to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, 
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="PlayTime"></a><a name="PlayTime(double)"></a> <dt> o <b>PlayTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>PlayTime</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTime</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Set the internal time of the sampled.
 <b>Role:</b> Set the internal time associated to the current 
 sampled object.  Unlike 
<a href="#" onClick="openLink('','SetTime');return false">SetTime</a>, this method will also   change the state of the model to the specified time.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd>    The time to set the sampled to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, the time has been changed.
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveAllAnalysis"></a><a name="RemoveAllAnalysis()"></a> <dt> o <b>RemoveAllAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllAnalysis</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes all the analysis objects from the sampled.
 <b>Role:</b> Removes all the assigned objects from the sampled.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success; all analysis objects have been removed.
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveAllShots"></a><a name="RemoveAllShots()"></a> <dt> o <b>RemoveAllShots</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAllShots</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Removes all shots.
 <b>Role:</b> Removes all shot contained in the current sampled.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK  :</tt>  on Success, all the shots have been removed
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveAnalysis"></a><a name="RemoveAnalysis(int)"></a> <dt> o <b>RemoveAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAnalysis</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndice</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes a specified analysis object from the sampled.
 <b>Role:</b> Removes a specified analysis object that has been 
 assigned to the current sampled object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndice</tt>
   <dd>     An index to the associated analysis object.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success; the analysis object has been removed.
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveAnalysis"></a><a name="RemoveAnalysis(CATBaseUnknown*)"></a> <dt> o <b>RemoveAnalysis</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveAnalysis</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iAnalysis</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes a specified analysis object from the sampled.
 <b>Role:</b> Removes a specified analysis object that has been 
 assigned to the current sampled object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAnalysis</tt>
   <dd>     A valid pointer to an analysis object that is assigned to the
     current sampled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success; the analysis object has been removed.
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveShot"></a><a name="RemoveShot(int)"></a> <dt> o <b>RemoveShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveShot</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndice</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes a shot.
 <b>Role:</b>  Removes a shot contained in the current sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndice</tt>
   <dd>    A valid index to a shot to be removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success, the shot at iIndice has been removed
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="RemoveShot"></a><a name="RemoveShot(CATIShot*)"></a> <dt> o <b>RemoveShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>RemoveShot</b>(<td><script type="text/javascript"> activateLink('CATIShot','CATIShot*')</script> <td><tt>iShot</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Removes a shot.
 <b>Role:</b>  Removes a shot contained in the current sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShot</tt>
   <dd>    A valid pointer to a shot to be removed.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success, iShot has removed
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="ReorderShot"></a><a name="ReorderShot(int,int)"></a> <dt> o <b>ReorderShot</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>ReorderShot</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iIndex2</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Changes the order of two shots.
 <b>Role:</b> Changes the order of two shots specified by the values
 of iIndex1 and iIndex2.  The two shots are swapped at those positions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex1</tt>
   <dd>    The first shot used to change positions.
 </dd>
    <dt><tt> iIndex2</tt>
   <dd>    The second shot used to change positions.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, the shots have been reordered.
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="Reverse"></a><a name="Reverse()"></a> <dt> o <b>Reverse</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>Reverse</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Reverse shots contained in the sampled.
 <b>Role:</b> The order of the shots associated to the current sampled 
 object is reversed, and thus the resulting simulation is effectively
 backwards.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, the shots have been reversed.
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetAnalysisStatus"></a><a name="SetAnalysisStatus(unsigned int,unsigned int,unsigned int,unsigned int)"></a> <dt> o <b>SetAnalysisStatus</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetAnalysisStatus</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iActivated</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iState</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iVerbose</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iMonitor</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Set the analyses settings for a sampled based object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iActivated</tt>
   <dd>   Indicates whether the analyses are On or Off
 </dd>
    <dt><tt> iState</tt>
   <dd>   With iVerbose, indicates the state (On, Off, Stop, Verbose)
 </dd>
    <dt><tt> iVerbose</tt>
   <dd>   With iState, indicates the state (On, Off, Stop, Verbose)
 </dd>
    <dt><tt> iMonitor</tt>
   <dd>   Indicates whether the monitor is On or Off
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <br><tt>S_OK :</tt>   on Success
   <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetInterpolater"></a><a name="SetInterpolater(CATString&amp;)"></a> <dt> o <b>SetInterpolater</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetInterpolater</b>(<td><script type="text/javascript"> activateLink('CATString','CATString&amp;')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Sets the Sampled's interpolater.
 <b>Role:</b> Sets the interpolator used by the sampled during 
 simulation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oName</tt>
   <dd>     A string containing the name of the interpolater used.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetName"></a><a name="SetName(CATUnicodeString)"></a> <dt> o <b>SetName</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetName</b>(<td><script type="text/javascript"> activateLink('CATUnicodeString','CATUnicodeString')</script> <td><tt>iName</tt>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Sets the name of the sampled.
 <b>Role:</b> Sets the name of the sampled.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>     The new name to sets the sampled to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      <br><b>Legal values</b>:
     <br><tt>S_OK :</tt>   on Success
     <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetObject"></a><a name="SetObject(CATBaseUnknown*,boolean)"></a> <dt> o <b>SetObject</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetObject</b>(<td><script type="text/javascript"> activateLink('CATBaseUnknown','CATBaseUnknown*')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iKeepAbsoluteDefinition</tt><td><tt>=FALSE</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Assign an Object for the sampled.
 <b>Role:</b> Sets the object that will be used in the sampled based simulation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd>     Pointer to object to be assigned
 </dd>
    <dt><tt> iKeepAbsoluteDefinition</tt>
   <dd>     Currently set to FALSE.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>   <br><b>Legal values</b>:
  <br><tt>S_OK :</tt>   on Success
  <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetScaling"></a><a name="SetScaling(double)"></a> <dt> o <b>SetScaling</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetScaling</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iScaling</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Stores the scaling value associated to the sampled.
 <b>Role:</b> Used to alter the duration of a sampled based
 simulation.  Initially the scaling is set to one, however
 if the scaling is changed to 0.5 the sampled take one half
 of its initial time.  Likewise, a scaling of two will cause
 the duration to double.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iScaling</tt>
   <dd>    The new scaling value to set the current sampled.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, 
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<a name="SetTime"></a><a name="SetTime(double)"></a> <dt> o <b>SetTime</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>SetTime</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iTime</tt>)<script type="text/javascript"> activateLink('=0',' =0')</script>  </table></dt>
<dl>
  <dd>
 Set the internal time of the sampled.
 <b>Role:</b> Set the internal time associated to the current 
 sampled object.  A sampled object is used for time based simulations,
 and the internal time can be set by 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTime</tt>
   <dd>    The time to set the sampled to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     <br><b>Legal values</b>:
    <br><tt>S_OK  :</tt>  on Success, the time has been set
    <br><tt>E_FAIL:</tt>  on failure
</dl>
</dl>
<hr>
 This object is included in the file: <b>CATISampled.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATFittingInterfaces</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
