<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AnalysisMeshingModel Class CATMSHExtIConnectivity</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../AnalysisMeshingModel.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATMSHExtIConnectivity','class','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMSHExtIConnectivity','class','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATMSHExtIConnectivity','class','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATMSHExtIConnectivity','class','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>AnalysisMeshingModel Class CATMSHExtIConnectivity</h1>
<script type="text/javascript" > 
 generatedFatherClass('class_CATMSHExtIConnectivity_44837','CATMSHExtIConnectivity','0');</script>
<p><b>Usage: you can derive this class.</b></p>
<hr>
<p>
 public class <b>CATMSHExtIConnectivity</b>
</p>
<p>
<b><i> Adapter for CATIMSHConnectivity interface.</i></b><br>


 <b>Role</b>: This class provides a default implementation for any extension of 
 <a href="#" onClick="openLink('CATIMSHConnectivity','');return false">CATIMSHConnectivity</a>. That means one should derive from this class to implement the connectivity definition of
 a new finite element.
 <br>One should re-implement only the 
<a href="#" onClick="openLink('','CreateGeometricalEngine');return false">CreateGeometricalEngine</a> and 
<a href="#" onClick="openLink('','Build');return false">Build</a> methods.
</p>
<hr>
 <h2>Constructor and Destructor Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CATMSHExtIConnectivity()"><b>CATMSHExtIConnectivity</b></a>()
<dd>   Constructor.
 <dt> o 
    <a href="#~CATMSHExtIConnectivity()"><b>~CATMSHExtIConnectivity</b></a>()
<dd>  Destructor.
</dl>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#Build()"><b>Build</b></a>()
<dd>  Builds internal informations.
 <dt> o 
    <a href="#CreateGeometricalEngine()"><b>CreateGeometricalEngine</b></a>()
<dd>  Creates an returns an new geometrical engine compatible with the connectivity.
 <dt> o 
    <a href="#GetEdgeConnectivity(int)"><b>GetEdgeConnectivity</b></a>(int)
<dd>  Returns the connectivity corresponding to a face.
 <dt> o 
    <a href="#GetEdgesOfFaces(int*&amp;,int*&amp;,int*&amp;)"><b>GetEdgesOfFaces</b></a>(int*&amp;,int*&amp;,int*&amp;)
<dd>  Retrieves the faces definition in term of edges.
 <dt> o 
    <a href="#GetEdgesOfNodes(int*&amp;,int*&amp;)"><b>GetEdgesOfNodes</b></a>(int*&amp;,int*&amp;)
<dd>  Retrieves the edges connected to edges.
 <dt> o 
    <a href="#GetEdgesPermutation()"><b>GetEdgesPermutation</b></a>()
<dd>  Returns the edges permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#GetFaceConnectivity(int)"><b>GetFaceConnectivity</b></a>(int)
<dd>  Returns the connectivity corresponding to a face.
 <dt> o 
    <a href="#GetFacesOfEdges(int*&amp;,int*&amp;)"><b>GetFacesOfEdges</b></a>(int*&amp;,int*&amp;)
<dd>  Retrieves the faces connected to edges.
 <dt> o 
    <a href="#GetFacesOfNodes(int*&amp;,int*&amp;)"><b>GetFacesOfNodes</b></a>(int*&amp;,int*&amp;)
<dd>  Retrieves the faces connected to edges.
 <dt> o 
    <a href="#GetFacesPermutation()"><b>GetFacesPermutation</b></a>()
<dd>  Returns the faces permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#GetGeometricalEngine()"><b>GetGeometricalEngine</b></a>()
<dd>  Returns the geometrical engine associated with the connectivity.
 <dt> o 
    <a href="#GetInfos()"><b>GetInfos</b></a>()
<dd>  Returns general informations on the finite element connectivity (dimension and sizes).
 <dt> o 
    <a href="#GetInteriorAngleOfEdges(double*&amp;)"><b>GetInteriorAngleOfEdges</b></a>(double*&amp;)
<dd>  Returns the ideal interior angle for each edge.
 <dt> o 
    <a href="#GetMainConnectivity()"><b>GetMainConnectivity</b></a>()
<dd>  Returns the connectivity with the same shape and main nodes
 
 <dt> o 
    <a href="#GetName()"><b>GetName</b></a>()
<dd>  Returns the name of the connectivity.
 <dt> o 
    <a href="#GetNodesOfEdges(int*&amp;,int*&amp;)"><b>GetNodesOfEdges</b></a>(int*&amp;,int*&amp;)
<dd>  Retrieves the edges definition in terms of nodes.
 <dt> o 
    <a href="#GetNodesOfFaces(int*&amp;,int*&amp;)"><b>GetNodesOfFaces</b></a>(int*&amp;,int*&amp;)
<dd>  Retrieves the faces definition in term of nodes.
 <dt> o 
    <a href="#GetNodesPermutation()"><b>GetNodesPermutation</b></a>()
<dd>  Returns the nodes permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#GetNumber()"><b>GetNumber</b></a>()
<dd>  Returns the finite element connectivity number.
 <dt> o 
    <a href="#GetTypeOfNodes(int*&amp;)"><b>GetTypeOfNodes</b></a>(int*&amp;)
<dd>  Returns the type of each nodes.
 <dt> o 
    <a href="#Next()"><b>Next</b></a>()
<dd>  Returns the next finite element connectivity.
</dl>
<dl>
</dl>
<dl>
 <h2>Data Member Index</h2> <br>
 <dt> o 
    <a href="#_EdgeConnectivity"><b>_EdgeConnectivity</b></a>
<dd>  Array containing in sequence the connectivity of the edges.
 <dt> o 
    <a href="#_EdgesOfFaces"><b>_EdgesOfFaces</b></a>
<dd>  Array containing in sequence the edges number of the faces.
 <dt> o 
    <a href="#_EdgesOfNodes"><b>_EdgesOfNodes</b></a>
<dd>  Array containing in sequence the edges number connected to nodes.
 <dt> o 
    <a href="#_EdgesPermutation"><b>_EdgesPermutation</b></a>
<dd>  Array containing the edges permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#_FaceConnectivity"><b>_FaceConnectivity</b></a>
<dd>  Array containing in sequence the connectivity of the faces.
 <dt> o 
    <a href="#_FacesOfEdges"><b>_FacesOfEdges</b></a>
<dd>  Array containing in sequence the faces number connected to edges.
 <dt> o 
    <a href="#_FacesOfNodes"><b>_FacesOfNodes</b></a>
<dd>  Array containing in sequence the faces number connected to nodes.
 <dt> o 
    <a href="#_FacesPermutation"><b>_FacesPermutation</b></a>
<dd>  Array containing the faces permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#_Infos"><b>_Infos</b></a>
<dd>  General informations on the finite element connectivity.
 <dt> o 
    <a href="#_IntAngleOfEdges"><b>_IntAngleOfEdges</b></a>
<dd>  Array of backward pointer to _IntAngleOfEdges array.
 <dt> o 
    <a href="#_MainConnectivity"><b>_MainConnectivity</b></a>
<dd>  Pointer containing main connectivity
 <dt> o 
    <a href="#_NodesOfEdges"><b>_NodesOfEdges</b></a>
<dd>  Array containing in sequence the nodes number of edges.
 <dt> o 
    <a href="#_NodesOfFaces"><b>_NodesOfFaces</b></a>
<dd>  Array containing in sequence the nodes number of the faces.
 <dt> o 
    <a href="#_NodesPermutation"><b>_NodesPermutation</b></a>
<dd>  Array containing the nodes permutation that should be applied in order to reverse the element.
 <dt> o 
    <a href="#_OrientOfEdges"><b>_OrientOfEdges</b></a>
<dd>  Array containing the edges orientation of the faces.
 <dt> o 
    <a href="#_PtEdgesOfFaces"><b>_PtEdgesOfFaces</b></a>
<dd>  Array of backward pointer to _EdgesOfFaces array.
 <dt> o 
    <a href="#_PtEdgesOfNodes"><b>_PtEdgesOfNodes</b></a>
<dd>  Array of backward pointer to _EdgesOfNodes array.
 <dt> o 
    <a href="#_PtFacesOfEdges"><b>_PtFacesOfEdges</b></a>
<dd>  Array of backward pointer to _FacesOfEdges array.
 <dt> o 
    <a href="#_PtFacesOfNodes"><b>_PtFacesOfNodes</b></a>
<dd>  Array of backward pointer to _FacesOfNodes array.
 <dt> o 
    <a href="#_PtNodesOfEdges"><b>_PtNodesOfEdges</b></a>
<dd>  Array of backward pointer to _NodesOfEdges array.
 <dt> o 
    <a href="#_PtNodesOfFaces"><b>_PtNodesOfFaces</b></a>
<dd>  Array of backward pointer to _NodesOfFaces array.
 <dt> o 
    <a href="#_TypeOfNodes"><b>_TypeOfNodes</b></a>
<dd>  Array of backward pointer to _TypeOfNodes array.
</dl>
 <h2>Constructor and Destructor</h2> <br>
<a name="CATMSHExtIConnectivity"></a><a name="CATMSHExtIConnectivity()"></a> <dt> o <b>CATMSHExtIConnectivity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('','')</script>  <b>CATMSHExtIConnectivity</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
  Constructor.
</dl>
<a name="~CATMSHExtIConnectivity"></a><a name="~CATMSHExtIConnectivity()"></a> <dt> o <b>~CATMSHExtIConnectivity</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('','')</script>  <b>~CATMSHExtIConnectivity</b>(<td>)<script type="text/javascript"> activateLink('','')</script>  </table></dt>
<dl>
  <dd>
 Destructor.
</dl>
 <h2>Methods</h2> <br>
<a name="Build"></a><a name="Build()"></a> <dt> o <b>Build</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>Build</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Builds internal informations.
 <br>
 This method should initialize <b>all</b> data members.
</dl>
<a name="CreateGeometricalEngine"></a><a name="CreateGeometricalEngine()"></a> <dt> o <b>CreateGeometricalEngine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHGeometricalEngine','CATMSHGeometricalEngine *')</script>  <b>CreateGeometricalEngine</b>(<td>)<script type="text/javascript"> activateLink('0','= 0')</script>  </table></dt>
<dl>
  <dd>
 Creates an returns an new geometrical engine compatible with the connectivity.
</dl>
<a name="GetEdgeConnectivity"></a><a name="GetEdgeConnectivity(int)"></a> <dt> o <b>GetEdgeConnectivity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIMSHConnectivity','inline CATIMSHConnectivity *')</script>  <b>GetEdgeConnectivity</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumEdge</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the connectivity corresponding to a face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumEdge</tt>
   <dd>   Edge number.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The connectivity of the edge.
</dl>
</dl>
<a name="GetEdgesOfFaces"></a><a name="GetEdgesOfFaces(int*&amp;,int*&amp;,int*&amp;)"></a> <dt> o <b>GetEdgesOfFaces</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetEdgesOfFaces</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtEdgesOfFaces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oEdgesOfFaces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oOrientOfEdges</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the faces definition in term of edges.
 <br>
 The edges of faces should be ordered in sequence in order to define the positive
 orientation for faces. For a 3D connectivity all the faces should be outward oriented.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtEdgesOfFaces</tt>
   <dd>   Array containing for each face a backward pointer in oEdgesOfFaces and oOrientOfEdges arrays.
 </dd>
    <dt><tt> oEdgesOfFaces</tt>
   <dd>   Array containing the edges number of the faces.
 </dd>
    <dt><tt> oOrientOfEdges</tt>
   <dd>   Array containing the edges orientation of the faces.
   <br><b>Legal values</b>:
   <dl><dt>0</dt><dd>The edge is used with its default orientation.
   <dt>1</dt><dd>The edge is used with its reverse orientation.
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of faces in the connectivity.
</dl>
</dl>
<a name="GetEdgesOfNodes"></a><a name="GetEdgesOfNodes(int*&amp;,int*&amp;)"></a> <dt> o <b>GetEdgesOfNodes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetEdgesOfNodes</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtEdgesOfNodes</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oEdgesOfNodes</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the edges connected to edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtEdgesOfNodes</tt>
   <dd>   Array containing for each node a backward pointer in oEdgesOfNodes array.
 </dd>
    <dt><tt> oEdgesOfNodes</tt>
   <dd>   Array containing the edges number connected to nodes.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of nodes in the connectivity.
</dl>
</dl>
<a name="GetEdgesPermutation"></a><a name="GetEdgesPermutation()"></a> <dt> o <b>GetEdgesPermutation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline const int *')</script>  <b>GetEdgesPermutation</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the edges permutation that should be applied in order to reverse the element.
</dl>
<a name="GetFaceConnectivity"></a><a name="GetFaceConnectivity(int)"></a> <dt> o <b>GetFaceConnectivity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIMSHConnectivity','inline CATIMSHConnectivity *')</script>  <b>GetFaceConnectivity</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNumFace</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the connectivity corresponding to a face.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNumEdge</tt>
   <dd>   Edge number.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The connectivity of the edge.
</dl>
</dl>
<a name="GetFacesOfEdges"></a><a name="GetFacesOfEdges(int*&amp;,int*&amp;)"></a> <dt> o <b>GetFacesOfEdges</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetFacesOfEdges</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtFacesOfEdges</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oFacesOfEdges</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the faces connected to edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtFacesOfEdges</tt>
   <dd>   Array containing for each edge a backward pointer in FacesOfEdges array.
 </dd>
    <dt><tt> FacesOfEdges</tt>
   <dd>   Array containing the faces number connected to edges.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of edges in the connectivity.
</dl>
</dl>
<a name="GetFacesOfNodes"></a><a name="GetFacesOfNodes(int*&amp;,int*&amp;)"></a> <dt> o <b>GetFacesOfNodes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetFacesOfNodes</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtFacesOfNodes</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oFacesOfNodes</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the faces connected to edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtFacesOfNodes</tt>
   <dd>   Array containing for each node a backward pointer in oFacesOfNodes array.
 </dd>
    <dt><tt> oFacesOfNodes</tt>
   <dd>   Array containing the faces number connected to nodes.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of nodes in the connectivity.
</dl>
</dl>
<a name="GetFacesPermutation"></a><a name="GetFacesPermutation()"></a> <dt> o <b>GetFacesPermutation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline const int *')</script>  <b>GetFacesPermutation</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the faces permutation that should be applied in order to reverse the element.
</dl>
<a name="GetGeometricalEngine"></a><a name="GetGeometricalEngine()"></a> <dt> o <b>GetGeometricalEngine</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHGeometricalEngine','CATMSHGeometricalEngine *')</script>  <b>GetGeometricalEngine</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the geometrical engine associated with the connectivity.
</dl>
<a name="GetInfos"></a><a name="GetInfos()"></a> <dt> o <b>GetInfos</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATMSHConnecInfos','inline const CATMSHConnecInfos *')</script>  <b>GetInfos</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns general informations on the finite element connectivity (dimension and sizes).
</dl>
<a name="GetInteriorAngleOfEdges"></a><a name="GetInteriorAngleOfEdges(double*&amp;)"></a> <dt> o <b>GetInteriorAngleOfEdges</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetInteriorAngleOfEdges</b>(<td> const <script type="text/javascript"> activateLink('double','double*&amp;')</script> <td><tt>oIntAngleOfEdges</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the ideal interior angle for each edge.
</dl>
<a name="GetMainConnectivity"></a><a name="GetMainConnectivity()"></a> <dt> o <b>GetMainConnectivity</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIMSHConnectivity','inline const CATIMSHConnectivity *')</script>  <b>GetMainConnectivity</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the connectivity with the same shape and main nodes
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>    The main the connectivity.
</dl>
</dl>
<a name="GetName"></a><a name="GetName()"></a> <dt> o <b>GetName</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('char','inline const char *')</script>  <b>GetName</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the name of the connectivity.
</dl>
<a name="GetNodesOfEdges"></a><a name="GetNodesOfEdges(int*&amp;,int*&amp;)"></a> <dt> o <b>GetNodesOfEdges</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetNodesOfEdges</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtNodesOfEdges</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oNodesOfEdges</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the edges definition in terms of nodes.
 <br>
 The nodes of edges should be ordered in sequence in order to define the positive
 orientation for edges.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtNodesOfEdges</tt>
   <dd>   Array containing for each edge a backward pointer in oNodesOfEdges array.
 </dd>
    <dt><tt> oNodesOfEdges</tt>
   <dd>   Array containing the nodes number of edges.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of edges in the connectivity.
</dl>
</dl>
<a name="GetNodesOfFaces"></a><a name="GetNodesOfFaces(int*&amp;,int*&amp;)"></a> <dt> o <b>GetNodesOfFaces</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetNodesOfFaces</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oPtNodesOfFaces</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oNodesOfFaces</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Retrieves the faces definition in term of nodes.
 <br>
 Nodes of a face should be ordered in a compatible way with the face connectivity (see 
<a href="#" onClick="openLink('','GetFaceConnectivity');return false">GetFaceConnectivity</a> method). 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPtNodesOfFaces</tt>
   <dd>   Array containing for each face a backward pointer in the oNodesOfFaces array.
 </dd>
    <dt><tt> oNodesOfFaces</tt>
   <dd>   Array containing the nodes number of the faces.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of faces in the connectivity.
</dl>
</dl>
<a name="GetNodesPermutation"></a><a name="GetNodesPermutation()"></a> <dt> o <b>GetNodesPermutation</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline const int *')</script>  <b>GetNodesPermutation</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the nodes permutation that should be applied in order to reverse the element.
</dl>
<a name="GetNumber"></a><a name="GetNumber()"></a> <dt> o <b>GetNumber</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumber</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the finite element connectivity number.
 Connectivities are numbered between 0 and the total number of elements minus one.
</dl>
<a name="GetTypeOfNodes"></a><a name="GetTypeOfNodes(int*&amp;)"></a> <dt> o <b>GetTypeOfNodes</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('int','inline int')</script>  <b>GetTypeOfNodes</b>(<td> const <script type="text/javascript"> activateLink('int','int*&amp;')</script> <td><tt>oTypeOfNodes</tt>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the type of each nodes.
</dl>
<a name="Next"></a><a name="Next()"></a> <dt> o <b>Next</b>

<dt>  <table><tr><td>  public <script type="text/javascript"> activateLink('CATIMSHConnectivity','inline const CATIMSHConnectivity *')</script>  <b>Next</b>(<td>)<script type="text/javascript"> activateLink('const','const')</script>  </table></dt>
<dl>
  <dd>
 Returns the next finite element connectivity.
</dl>
 <h2>Data Members</h2> <br>
<a name="_EdgeConnectivity"></a> <dt> o <b>_EdgeConnectivity</b>
<pre>
  protected CATIMSHConnectivity ** _EdgeConnectivity</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the connectivity of the edges.
</dl>
<a name="_EdgesOfFaces"></a> <dt> o <b>_EdgesOfFaces</b>
<pre>
  protected const int * _EdgesOfFaces</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the edges number of the faces.
 The edges of a face should be ordered in order to define the positive
 orientation. For a 3D connectivity all the faces should be outward oriented.
</dl>
<a name="_EdgesOfNodes"></a> <dt> o <b>_EdgesOfNodes</b>
<pre>
  protected const int * _EdgesOfNodes</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the edges number connected to nodes.
</dl>
<a name="_EdgesPermutation"></a> <dt> o <b>_EdgesPermutation</b>
<pre>
  protected const int * _EdgesPermutation</dt>
</pre>
<dl>
  <dd>
 Array containing the edges permutation that should be applied in order to reverse the element.
</dl>
<a name="_FaceConnectivity"></a> <dt> o <b>_FaceConnectivity</b>
<pre>
  protected CATIMSHConnectivity ** _FaceConnectivity</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the connectivity of the faces.
</dl>
<a name="_FacesOfEdges"></a> <dt> o <b>_FacesOfEdges</b>
<pre>
  protected const int * _FacesOfEdges</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the faces number connected to edges.
</dl>
<a name="_FacesOfNodes"></a> <dt> o <b>_FacesOfNodes</b>
<pre>
  protected const int * _FacesOfNodes</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the faces number connected to nodes.
</dl>
<a name="_FacesPermutation"></a> <dt> o <b>_FacesPermutation</b>
<pre>
  protected const int * _FacesPermutation</dt>
</pre>
<dl>
  <dd>
 Array containing the faces permutation that should be applied in order to reverse the element.
</dl>
<a name="_Infos"></a> <dt> o <b>_Infos</b>
<pre>
  protected CATMSHConnecInfos _Infos</dt>
</pre>
<dl>
  <dd>
 General informations on the finite element connectivity.
</dl>
<a name="_IntAngleOfEdges"></a> <dt> o <b>_IntAngleOfEdges</b>
<pre>
  protected const double * _IntAngleOfEdges</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _IntAngleOfEdges array.
</dl>
<a name="_MainConnectivity"></a> <dt> o <b>_MainConnectivity</b>
<pre>
  protected CATIMSHConnectivity * _MainConnectivity</dt>
</pre>
<dl>
  <dd>
 Pointer containing main connectivity
</dl>
<a name="_NodesOfEdges"></a> <dt> o <b>_NodesOfEdges</b>
<pre>
  protected const int * _NodesOfEdges</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the nodes number of edges.
 The nodes of an edge should be ordered in order to define the positive
 orientation.
</dl>
<a name="_NodesOfFaces"></a> <dt> o <b>_NodesOfFaces</b>
<pre>
  protected const int * _NodesOfFaces</dt>
</pre>
<dl>
  <dd>
 Array containing in sequence the nodes number of the faces.
 Nodes of a face should be ordered in a compatible way with the face connectivity (see 
<a href="#" onClick="openLink('','GetFaceConnectivity');return false">GetFaceConnectivity</a> method).
</dl>
<a name="_NodesPermutation"></a> <dt> o <b>_NodesPermutation</b>
<pre>
  protected const int * _NodesPermutation</dt>
</pre>
<dl>
  <dd>
 Array containing the nodes permutation that should be applied in order to reverse the element.
</dl>
<a name="_OrientOfEdges"></a> <dt> o <b>_OrientOfEdges</b>
<pre>
  protected const int * _OrientOfEdges</dt>
</pre>
<dl>
  <dd>
 Array containing the edges orientation of the faces.
</dl>
<a name="_PtEdgesOfFaces"></a> <dt> o <b>_PtEdgesOfFaces</b>
<pre>
  protected const int * _PtEdgesOfFaces</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _EdgesOfFaces array.
</dl>
<a name="_PtEdgesOfNodes"></a> <dt> o <b>_PtEdgesOfNodes</b>
<pre>
  protected const int * _PtEdgesOfNodes</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _EdgesOfNodes array.
</dl>
<a name="_PtFacesOfEdges"></a> <dt> o <b>_PtFacesOfEdges</b>
<pre>
  protected const int * _PtFacesOfEdges</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _FacesOfEdges array.
</dl>
<a name="_PtFacesOfNodes"></a> <dt> o <b>_PtFacesOfNodes</b>
<pre>
  protected const int * _PtFacesOfNodes</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _FacesOfNodes array.
</dl>
<a name="_PtNodesOfEdges"></a> <dt> o <b>_PtNodesOfEdges</b>
<pre>
  protected const int * _PtNodesOfEdges</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _NodesOfEdges array.
</dl>
<a name="_PtNodesOfFaces"></a> <dt> o <b>_PtNodesOfFaces</b>
<pre>
  protected const int * _PtNodesOfFaces</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _NodesOfFaces array.
</dl>
<a name="_TypeOfNodes"></a> <dt> o <b>_TypeOfNodes</b>
<pre>
  protected const int * _TypeOfNodes</dt>
</pre>
<dl>
  <dd>
 Array of backward pointer to _TypeOfNodes array.
</dl>
<hr>
 This object is included in the file: <b>CATMSHExtIConnectivity.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAmtModel</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
