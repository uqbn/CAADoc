<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
 <meta http-equiv="Content-Language" content="en-us"> 
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
 <meta name="Generator" content="CppGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>AnalysisMeshingModel Interface CATIMSHMesh</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Class Hierarchy</a>  <a href="../AnalysisMeshingModel.htm">This Framework</a>  <a href="../_index/HomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('CATIMSHMesh','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMSHMesh','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('CATIMSHMesh','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('CATIMSHMesh','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>AnalysisMeshingModel Interface CATIMSHMesh</h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_CATIMSHMesh_28297','CATIMSHMesh','0');</script>
<p><b>Usage: an implementation of this interface is supplied and you must use it as is. You should not reimplement it.</b></p>
<hr>
<p>
 interface <b>CATIMSHMesh</b>
</p>
<p>
<b><i> Interface representing the <b>Mesh</b> (nodes and elements).</i></b><br>

 <b>Role</b>: The <b>Mesh</b> is the object which manage nodes and elements,
 see <a href="#" onClick="openLink('CATMSHNode','');return false">CATMSHNode</a> and 
<a href="#" onClick="openLink('CATMSHElement','');return false">CATMSHElement</a>.
</p>
<hr>
 <h2>Method Index</h2> <br>
<dl>
 <dt> o 
    <a href="#CreateElements(CATIMSHConnectivity*,int,CATMSHNode* const*,int,CATMSHElement**)"><b>CreateElements</b></a>(CATIMSHConnectivity*,int,CATMSHNode* const*,int,CATMSHElement**)
<dd>  Creates finite elements.
 <dt> o 
    <a href="#CreateGroup(int,CATMSHNode**)"><b>CreateGroup</b></a>(int,CATMSHNode**)
<dd>  Creates a group of finite elements nodes.
 <dt> o 
    <a href="#CreateGroup(int,CATMSHElement**)"><b>CreateGroup</b></a>(int,CATMSHElement**)
<dd>  Creates a group of finite elements.
 <dt> o 
    <a href="#CreateMeshDomain(CATIMSHMeshPart*)"><b>CreateMeshDomain</b></a>(CATIMSHMeshPart*)
<dd>  Create a new <b>Mesh Domain</b>.
 <dt> o 
    <a href="#CreateNodes(double*,int,CATMSHNode**)"><b>CreateNodes</b></a>(double*,int,CATMSHNode**)
<dd>  Creates nodes.
 <dt> o 
    <a href="#CreateNodesCondensedOn(int,CATMSHNode* [],CATMSHNode* [])"><b>CreateNodesCondensedOn</b></a>(int,CATMSHNode* [],CATMSHNode* [])
<dd>  Create nodes condensed on nodes from another <b>Mesh</b>.
 <dt> o 
    <a href="#DeleteElements(int,CATMSHElement**,int)"><b>DeleteElements</b></a>(int,CATMSHElement**,int)
<dd>  Delete elements.
 <dt> o 
    <a href="#DeleteNodes(int,CATMSHNode**)"><b>DeleteNodes</b></a>(int,CATMSHNode**)
<dd>  Delete nodes.
 <dt> o 
    <a href="#GetAllCoordinates(double*)"><b>GetAllCoordinates</b></a>(double*)
<dd>  Retreive coordinates of all finite element nodes contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetAllElements(CATMSHElement**)"><b>GetAllElements</b></a>(CATMSHElement**)
<dd>  Retreive all finite elements contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetAllLinkedNodes(int*,CATINTPTR*)"><b>GetAllLinkedNodes</b></a>(int*,CATINTPTR*)
<dd>  Retreives the linked nodes of all finite elements contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetAllNodes(CATMSHNode**)"><b>GetAllNodes</b></a>(CATMSHNode**)
<dd>  Retreive all finite element nodes contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetElementFromTag(unsigned int)"><b>GetElementFromTag</b></a>(unsigned int)
<dd>  Retreives a finite element from its integer tag.
 <dt> o 
    <a href="#GetElementsConnectivities(CATIMSHConnectivity**)"><b>GetElementsConnectivities</b></a>(CATIMSHConnectivity**)
<dd>  Retreives the connectivity of all finite elements contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetFirstElement()"><b>GetFirstElement</b></a>()
<dd>  Returns the first finite element of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetFirstMeshDomain()"><b>GetFirstMeshDomain</b></a>()
<dd>  Returns the first <b>Mesh Domain</b> of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetFirstMeshPart()"><b>GetFirstMeshPart</b></a>()
<dd>  Returns the first <b>Mesh Part</b> of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetFirstNode()"><b>GetFirstNode</b></a>()
<dd>  Returns the first finite element node of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetLastNode()"><b>GetLastNode</b></a>()
<dd>  Returns the last finite element node of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetMeshDomainFromTag(unsigned int)"><b>GetMeshDomainFromTag</b></a>(unsigned int)
<dd>  Retreives a <b>Mesh Domain</b> from its integer tag.
 <dt> o 
    <a href="#GetMeshManager()"><b>GetMeshManager</b></a>()
<dd>  Returns the <b>Mesh Manager</b> corresponding to the <b>Mesh</b>.
 <dt> o 
    <a href="#GetNodeFromTag(unsigned int)"><b>GetNodeFromTag</b></a>(unsigned int)
<dd>  Retreives a finite element node from its integer tag.
 <dt> o 
    <a href="#GetNumberOfElements()"><b>GetNumberOfElements</b></a>()
<dd>  Returns the number of finite elements contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#GetNumberOfLinkedNodes()"><b>GetNumberOfLinkedNodes</b></a>()
<dd>  Computes the total number of linked nodes i.
 <dt> o 
    <a href="#GetNumberOfMeshDomains()"><b>GetNumberOfMeshDomains</b></a>()
<dd>  Returns the total number of <b>Mesh Domain</b> of the <b>Mesh</b>.
 <dt> o 
    <a href="#GetNumberOfNodes()"><b>GetNumberOfNodes</b></a>()
<dd>  Returns the number of finite element nodes contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#IsContaining(CATMSHNode*)"><b>IsContaining</b></a>(CATMSHNode*)
<dd>  Check if a node is contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#IsContaining(CATMSHElement*)"><b>IsContaining</b></a>(CATMSHElement*)
<dd>  Check if a finite element is contained in the <b>Mesh</b>.
 <dt> o 
    <a href="#ModifyElement(CATMSHElement*,CATMSHElementVisuAttribute*)"><b>ModifyElement</b></a>(CATMSHElement*,CATMSHElementVisuAttribute*)
<dd>  Modify a finite element.
 <dt> o 
    <a href="#ModifyNode(CATMSHNode*,double[3],CATMSHNodeVisuAttribute*)"><b>ModifyNode</b></a>(CATMSHNode*,double[3],CATMSHNodeVisuAttribute*)
<dd>  Modify a finite element node.
 <dt> o 
    <a href="#SetCurrentMeshDomain(CATMSHMeshDomain*)"><b>SetCurrentMeshDomain</b></a>(CATMSHMeshDomain*)
<dd>  Set a new current <b>Mesh Domain</b>.
 <dt> o 
    <a href="#UpdateVisualization()"><b>UpdateVisualization</b></a>()
<dd>  Update visualization after <b>Mesh</b> modifications ( nodes/elements creation, modification or deletion).
</dl>
<dl>
</dl>
<dl>
</dl>
 <h2>Methods</h2> <br>
<a name="CreateElements"></a><a name="CreateElements(CATIMSHConnectivity*,int,CATMSHNode* const*,int,CATMSHElement**)"></a> <dt> o <b>CreateElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateElements</b>(<td><script type="text/javascript"> activateLink('CATIMSHConnectivity','CATIMSHConnectivity*')</script> <td><tt>iConnectivity</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbOfNodesPerElement</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode* const','CATMSHNode* const*')</script> <td><tt>iNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbOfElements</tt><td><tt>= 1 </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>ioElements</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates finite elements.
 <br><b>Role</b>: This method creates a set of new finite elements in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConnectivity</tt>
   <dd>   Connectivity of the finite elements to create.
 </dd>
    <dt><tt> iNbOfNodesPerElement</tt>
   <dd>   Number of finite elements nodes per finite element to create. 
 </dd>
    <dt><tt> iNodes</tt>
   <dd>   Array containing pointers to nodes of all finite elements to create.
 </dd>
    <dt><tt> iNbOfElements</tt>
   <dd>   Number of finite elements to create.
 </dd>
    <dt><tt> ioElements</tt>
   <dd>   Array containing pointers to the created elements.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Elements successfully created.
   <dt>E_FAIL</dt><dd>The operation failed.
   </dl>
</dl>
</dl>
<a name="CreateGroup"></a><a name="CreateGroup(int,CATMSHNode**)"></a> <dt> o <b>CreateGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMSHGroup','CATIMSHGroup *')</script>  <b>CreateGroup</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>iNodes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a group of finite elements nodes. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbNodes</tt>
   <dd>   Number of finite elements nodes in group.
 </dd>
    <dt><tt> iNodes</tt>
   <dd>   Array containing the finite elements nodes.
   <br><b>Lifecycle rules deviation</b>: iNodes pointer is kept by the group and should not be desallocated by the callee.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release   The created group of finite elements nodes.
</dl>
</dl>
<a name="CreateGroup"></a><a name="CreateGroup(int,CATMSHElement**)"></a> <dt> o <b>CreateGroup</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMSHGroup','CATIMSHGroup *')</script>  <b>CreateGroup</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbElements</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>iElements</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates a group of finite elements. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbElements</tt>
   <dd>   Number of finite elements in group.
 </dd>
    <dt><tt> iElements</tt>
   <dd>   Array containing the finite elements.
   <br><b>Lifecycle rules deviation</b>: iElements pointer is kept by the group and should not be desallocated by the callee.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release   The created group of finite elements.
</dl>
</dl>
<a name="CreateMeshDomain"></a><a name="CreateMeshDomain(CATIMSHMeshPart*)"></a> <dt> o <b>CreateMeshDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHMeshDomain','CATMSHMeshDomain *')</script>  <b>CreateMeshDomain</b>(<td><script type="text/javascript"> activateLink('CATIMSHMeshPart','CATIMSHMeshPart*')</script> <td><tt>MeshPart</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create a new <b>Mesh Domain</b>.
 <br><b>Role</b>: The finite elements which are created (using 
<a href="#" onClick="openLink('','CreateElements');return false">CreateElements</a> method) are associated to the  current <b>Mesh Domain</b>. This method close the previous <b>Mesh Domain</b> and creates a new one.
 Further calls to 
<a href="#" onClick="openLink('','CreateElements');return false">CreateElements</a> method will create elements associated to this <b>Mesh Domain</b>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> MeshPart</tt>
   <dd>    <b>Mesh Part</b> to which this <b>Mesh Domain</b> will be associated (see </dd>
<a href="#" onClick="openLink('CATIMSHMeshPart','');return false">CATIMSHMeshPart</a> ). 
  <dt> <b>Returns:</b> 
  <dd>    A pointer on the created <b>Mesh Domain</b>.
   <br><b>Lifecycle rules deviation</b>: the method does not AddRef the returned value..
</dl>
</dl>
</dl>
<a name="CreateNodes"></a><a name="CreateNodes(double*,int,CATMSHNode**)"></a> <dt> o <b>CreateNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateNodes</b>(<td> const <script type="text/javascript"> activateLink('double','double*')</script> <td><tt>iCoordinates</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbOfNodes</tt><td><tt>= 1 </tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>ioNodes</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Creates nodes.
 <br><b>Role</b>: This method creates a set of new finite elements nodes in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoordinates</tt>
   <dd>   Array containing the XYZ coordinates of the nodes to create in the following order: X1, Y1, Z1, X2, Y2, Z2, ...
 </dd>
    <dt><tt> iNbOfNodes</tt>
   <dd>   Number of finite elements nodes to create.
 </dd>
    <dt><tt> ioNodes</tt>
   <dd>   Array containing pointers to the created nodes.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Nodes successfully created.
   <dt>E_FAIL</dt><dd>The operation failed.
   </dl>
</dl>
</dl>
<a name="CreateNodesCondensedOn"></a><a name="CreateNodesCondensedOn(int,CATMSHNode* [],CATMSHNode* [])"></a> <dt> o <b>CreateNodesCondensedOn</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>CreateNodesCondensedOn</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode* []')</script> <td><tt>iImageNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode* []')</script> <td><tt>ioCondensedNodes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Create nodes condensed on nodes from another <b>Mesh</b>.
 <br><b>Role</b>: This method createss a set of finite elements nodes (named condensed nodes) in the <b>Mesh</b> condensed
 <on nodes (named image nodes) from another <b>Mesh</b>. This is the way to "connect" two different finite element models.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbNodes</tt>
   <dd>   Number of finite elements nodes to create.
 </dd>
    <dt><tt> iImageNodes</tt>
   <dd>   Array containing pointers to the image nodes on which the created nodes will be condensed.
 </dd>
    <dt><tt> ioCondensedNodes</tt>
   <dd>   Array that will contain pointer to condensed nodes created by the method.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Nodes successfully created.
   <dt>E_FAIL</dt><dd>The operation failed.
   </dl>
</dl>
</dl>
<a name="DeleteElements"></a><a name="DeleteElements(int,CATMSHElement**,int)"></a> <dt> o <b>DeleteElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('HRESULT','HRESULT')</script>  <b>DeleteElements</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbOfElements</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>iElements</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iDeleteFreedNodes</tt><td><tt>= 1 </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Delete elements.
 <br><b>Role</b>: This method deletes a set of finite elements in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbOfElements</tt>
   <dd>   Number of finite elements to delete.
 </dd>
    <dt><tt> iNodes</tt>
   <dd>   Array containing pointers to the elements to be deleted.
 </dd>
    <dt><tt> iDeleteFreedNodes</tt>
   <dd>   <br><b>Legal values</b>:
   <dt>1</dt><dd>After elements deletion, if a node becomes free (i.e. without any linked element), it will be deleted also.
   <dl><dt>0</dt><dd>No impact on finite elements nodes.
   </dl>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    An HRESULT.
   <br><b>Legal values</b>:
   <dl><dt>S_OK</dt><dd>Elements successfully deleted.
   <dt>E_FAIL</dt><dd>The operation failed.
   </dl>
</dl>
</dl>
<a name="DeleteNodes"></a><a name="DeleteNodes(int,CATMSHNode**)"></a> <dt> o <b>DeleteNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>DeleteNodes</b>(<td><script type="text/javascript"> activateLink('int','int')</script> <td><tt>iNbOfNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>iNodes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Delete nodes.
 <br><b>Role</b>: This method deletes a set of finite elements nodes in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNbOfNodes</tt>
   <dd>   Number of finite elements nodes to delete.
 </dd>
    <dt><tt> iNodes</tt>
   <dd>   Array containing pointers to the nodes to be deleted.</dd>
</dl>
</dl>
</dl>
<a name="GetAllCoordinates"></a><a name="GetAllCoordinates(double*)"></a> <dt> o <b>GetAllCoordinates</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetAllCoordinates</b>(<td><script type="text/javascript"> activateLink('double','double*')</script> <td><tt>ioXYZ</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreive coordinates of all finite element nodes contained in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioXYZ</tt>
   <dd>   Array containing nodes coordinates in the following order: X1, Y1, Z1, X2, Y2, Z2, ...
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of finite element nodes contained in the <b>Mesh</b>.
</dl>
</dl>
<a name="GetAllElements"></a><a name="GetAllElements(CATMSHElement**)"></a> <dt> o <b>GetAllElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetAllElements</b>(<td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement**')</script> <td><tt>ioElements</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreive all finite elements contained in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioElements</tt>
   <dd>   Array containing pointers on all elements of the <b>Mesh</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of finite elements contained in the <b>Mesh</b>.
</dl>
</dl>
<a name="GetAllLinkedNodes"></a><a name="GetAllLinkedNodes(int*,CATINTPTR*)"></a> <dt> o <b>GetAllLinkedNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetAllLinkedNodes</b>(<td><script type="text/javascript"> activateLink('int','int*')</script> <td><tt>ioLastLinkedNodes</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATINTPTR','CATINTPTR*')</script> <td><tt>ioLinkedNodes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the linked nodes of all finite elements contained in the <b>Mesh</b>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioLastLinkedNodes</tt>
   <dd>   Array containing for each finite element a backward position in <b>ioLinkedNodes</b> array 
   i.e. the position of the last linked node of each finite element in <b>ioLinkedNodes</b> array.
   <br>The elements are listed in same order as in </dd>
<a href="#" onClick="openLink('','GetAllElements');return false">GetAllElements</a> method. 
    <dt><tt> ioLinkedNodes</tt>
   <dd>   Array containing the linked nodes of each finite elements.
   <br>Nodes are identified by an integer representing their position in the <b>ioNodes</b> array of the </dd>
<a href="#" onClick="openLink('','GetAllNodes');return false">GetAllNodes</a> method. 
  <dt> <b>Returns:</b> 
  <dd>    The number of finite elements contained in the <b>Mesh</b>.
</dl>
</dl>
</dl>
<a name="GetAllNodes"></a><a name="GetAllNodes(CATMSHNode**)"></a> <dt> o <b>GetAllNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetAllNodes</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode**')</script> <td><tt>ioNodes</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreive all finite element nodes contained in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioNodes</tt>
   <dd>   Array containing pointers on all nodes of the <b>Mesh</b>.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The number of finite element nodes contained in the <b>Mesh</b>.
</dl>
</dl>
<a name="GetElementFromTag"></a><a name="GetElementFromTag(unsigned int)"></a> <dt> o <b>GetElementFromTag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement *')</script>  <b>GetElementFromTag</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iTag</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreives a finite element from its integer tag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTag</tt>
   <dd>   Integer tag. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The pointer on the finite element if any or NULL if no element correpond to this tag.
</dl>
</dl>
<a name="GetElementsConnectivities"></a><a name="GetElementsConnectivities(CATIMSHConnectivity**)"></a> <dt> o <b>GetElementsConnectivities</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetElementsConnectivities</b>(<td><script type="text/javascript"> activateLink('CATIMSHConnectivity','CATIMSHConnectivity**')</script> <td><tt>ioConnectivities</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreives the connectivity of all finite elements contained in the <b>Mesh</b>. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ioConnectivities</tt>
   <dd>   Array containing for each finite element a pointer to its connectivity. 
   <br>The elements are listed in same order as in </dd>
<a href="#" onClick="openLink('','GetAllElements');return false">GetAllElements</a> method. 
  <dt> <b>Returns:</b> 
  <dd>    The number of finite elements contained in the <b>Mesh</b>.
</dl>
</dl>
</dl>
<a name="GetFirstElement"></a><a name="GetFirstElement()"></a> <dt> o <b>GetFirstElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement *')</script>  <b>GetFirstElement</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first finite element of the <b>Mesh</b>.
 <br>See 
<a href="#" onClick="openLink('CATMSHElement','Next');return false">CATMSHElement.Next</a> method to scan the other elements.
</dl>
<a name="GetFirstMeshDomain"></a><a name="GetFirstMeshDomain()"></a> <dt> o <b>GetFirstMeshDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHMeshDomain','CATMSHMeshDomain *')</script>  <b>GetFirstMeshDomain</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first <b>Mesh Domain</b> of the <b>Mesh</b>.
 <br>See 
<a href="#" onClick="openLink('CATMSHMeshDomain','Next');return false">CATMSHMeshDomain.Next</a> method to scan the other <b>Mesh Domains</b>. <br><b>Lifecycle rules deviation</b>: the method does not AddRef the returned value..
</dl>
<a name="GetFirstMeshPart"></a><a name="GetFirstMeshPart()"></a> <dt> o <b>GetFirstMeshPart</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMSHMeshPart','CATIMSHMeshPart *')</script>  <b>GetFirstMeshPart</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first <b>Mesh Part</b> of the <b>Mesh</b>.
 <br>See 
<a href="#" onClick="openLink('CATIMSHMeshPart','Next');return false">CATIMSHMeshPart.Next</a> method to scan the other <b>Mesh Parts</b>. Take care of the fact that the order in which <b>Mesh Parts</b> are returned is arbitrary qnd
 that only <b>Mesh Parts</b> containing elements are returned.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release
</dl>
</dl>
<a name="GetFirstNode"></a><a name="GetFirstNode()"></a> <dt> o <b>GetFirstNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode *')</script>  <b>GetFirstNode</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the first finite element node of the <b>Mesh</b>.
 <br>See 
<a href="#" onClick="openLink('CATMSHNode','Next');return false">CATMSHNode.Next</a> method to scan the other nodes.
</dl>
<a name="GetLastNode"></a><a name="GetLastNode()"></a> <dt> o <b>GetLastNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode *')</script>  <b>GetLastNode</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the last finite element node of the <b>Mesh</b>.
 <br>See 
<a href="#" onClick="openLink('CATMSHNode','Previous');return false">CATMSHNode.Previous</a> method to scan the other nodes.
</dl>
<a name="GetMeshDomainFromTag"></a><a name="GetMeshDomainFromTag(unsigned int)"></a> <dt> o <b>GetMeshDomainFromTag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHMeshDomain','CATMSHMeshDomain *')</script>  <b>GetMeshDomainFromTag</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>Tag</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreives a <b>Mesh Domain</b> from its integer tag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTag</tt>
   <dd>   Integer tag. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The pointer on the <b>Mesh Domain</b> if any or NULL if no <b>Mesh Domain</b> correpond to this tag.
</dl>
</dl>
<a name="GetMeshManager"></a><a name="GetMeshManager()"></a> <dt> o <b>GetMeshManager</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATIMSHMeshManager','CATIMSHMeshManager *')</script>  <b>GetMeshManager</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the <b>Mesh Manager</b> corresponding to the <b>Mesh</b>.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  CATBaseUnknown#Release
</dl>
</dl>
<a name="GetNodeFromTag"></a><a name="GetNodeFromTag(unsigned int)"></a> <dt> o <b>GetNodeFromTag</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode *')</script>  <b>GetNodeFromTag</b>(<td><script type="text/javascript"> activateLink('unsigned int','unsigned int')</script> <td><tt>iTag</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Retreives a finite element node from its integer tag.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTag</tt>
   <dd>   Integer tag. 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    The pointer on the finite element node if any or NULL if no node correpond to this tag.
</dl>
</dl>
<a name="GetNumberOfElements"></a><a name="GetNumberOfElements()"></a> <dt> o <b>GetNumberOfElements</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfElements</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of finite elements contained in the <b>Mesh</b>.
</dl>
<a name="GetNumberOfLinkedNodes"></a><a name="GetNumberOfLinkedNodes()"></a> <dt> o <b>GetNumberOfLinkedNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfLinkedNodes</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Computes the total number of linked nodes i.e. the sum
 of all linked nodes for all finite elements.
 <br>This size should be used to allocate <b>ioLinkedNodes</b> argument in 
<a href="#" onClick="openLink('','GetAllLinkedNodes');return false">GetAllLinkedNodes</a> method.
</dl>
<a name="GetNumberOfMeshDomains"></a><a name="GetNumberOfMeshDomains()"></a> <dt> o <b>GetNumberOfMeshDomains</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfMeshDomains</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the total number of <b>Mesh Domain</b> of the <b>Mesh</b>.
</dl>
<a name="GetNumberOfNodes"></a><a name="GetNumberOfNodes()"></a> <dt> o <b>GetNumberOfNodes</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>GetNumberOfNodes</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Returns the number of finite element nodes contained in the <b>Mesh</b>.
</dl>
<a name="IsContaining"></a><a name="IsContaining(CATMSHNode*)"></a> <dt> o <b>IsContaining</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsContaining</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iNode</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Check if a node is contained in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   Node to check.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl><dt>1</dt><dd>The node is part of the <b>Mesh</b>.
   <dt>0</dt><dd>The node is not part of the <b>Mesh</b>.
   </dl>
</dl>
</dl>
<a name="IsContaining"></a><a name="IsContaining(CATMSHElement*)"></a> <dt> o <b>IsContaining</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('int','int')</script>  <b>IsContaining</b>(<td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement*')</script> <td><tt>iElement</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Check if a finite element is contained in the <b>Mesh</b>.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   Finite element to check.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>    <br><b>Legal values</b>:
   <dl><dt>1</dt><dd>The finite element is part of the <b>Mesh</b>.
   <dt>0</dt><dd>The finite element is not part of the <b>Mesh</b>.
   </dl>
</dl>
</dl>
<a name="ModifyElement"></a><a name="ModifyElement(CATMSHElement*,CATMSHElementVisuAttribute*)"></a> <dt> o <b>ModifyElement</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyElement</b>(<td><script type="text/javascript"> activateLink('CATMSHElement','CATMSHElement*')</script> <td><tt>iElement</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMSHElementVisuAttribute','CATMSHElementVisuAttribute*')</script> <td><tt>iNewAttribute</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Modify a finite element.
 <br><b>Role</b>: This method is used to modify a finite element (geometry and/or graphic attributes). This
 method should be called for each element for any geometrical or graphical modifications. A geometrical modification is a coordinates modification
 of its linked nodes. Note that a graphical modification of finite element is not persistent. The programmer needs to use the interface 
 
<a href="#" onClick="openLink('CATIVisProperties','');return false">CATIVisProperties.</a> to store the attributes into the graphic properties. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   Finite element to modify.
 </dd>
    <dt><tt> iNewAttribute</tt>
   <dd>   New graphic attributes. Can be set to NULL if only coordinates are changed.</dd>
</dl>
</dl>
</dl>
<a name="ModifyNode"></a><a name="ModifyNode(CATMSHNode*,double[3],CATMSHNodeVisuAttribute*)"></a> <dt> o <b>ModifyNode</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>ModifyNode</b>(<td><script type="text/javascript"> activateLink('CATMSHNode','CATMSHNode*')</script> <td><tt>iNode</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('double[3','double[3]')</script> <td><tt>iNewCoordinates</tt>,<tr><td></td><td> const <script type="text/javascript"> activateLink('CATMSHNodeVisuAttribute','CATMSHNodeVisuAttribute*')</script> <td><tt>iNewAttribute</tt><td><tt>= NULL </tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Modify a finite element node.
 <br><b>Role</b>: This method is used to modify a finite element node (coordinates and/or graphic attributes).This
 method should be called for each Node for any geometrical or graphical modifications. Note that a graphical modification of node is not persistent. The programmer needs to use the interface 
 
<a href="#" onClick="openLink('CATIVisProperties','');return false">CATIVisProperties.</a> to store the attributes into the graphic properties.  
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iNode</tt>
   <dd>   Finite element node to modify.
 </dd>
    <dt><tt> iNewCoordinates</tt>
   <dd>   New coordinates for the finite element node. Should be initialized with the current ones if only graphic attributes are modified.
 </dd>
    <dt><tt> iNewAttribute</tt>
   <dd>   New graphic attributes. Can be set to NULL if only coordinates are changed.</dd>
</dl>
</dl>
</dl>
<a name="SetCurrentMeshDomain"></a><a name="SetCurrentMeshDomain(CATMSHMeshDomain*)"></a> <dt> o <b>SetCurrentMeshDomain</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>SetCurrentMeshDomain</b>(<td><script type="text/javascript"> activateLink('CATMSHMeshDomain','CATMSHMeshDomain*')</script> <td><tt>Domain</tt>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Set a new current <b>Mesh Domain</b>.
 Further calls to 
<a href="#" onClick="openLink('','CreateElements');return false">CreateElements</a> method will create elements associated to this <b>Mesh Domain</b>. 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> Domain</tt>
   <dd>   New current <b>Mesh Domain</b>.</dd>
</dl>
</dl>
</dl>
<a name="UpdateVisualization"></a><a name="UpdateVisualization()"></a> <dt> o <b>UpdateVisualization</b>

<dt>  <table><tr><td>  public virtual <script type="text/javascript"> activateLink('void','void')</script>  <b>UpdateVisualization</b>(<td>)<script type="text/javascript"> activateLink('=0','=0')</script>  </table></dt>
<dl>
  <dd>
 Update visualization after <b>Mesh</b> modifications ( nodes/elements creation, modification or deletion).
 <br><b>Role</b>: This method has to be called to update visualisation if and only if the modifications
 have occured outside from the standard Build/Update process, i.e. outside from the implementation of a mesher
 (see 
<a href="#" onClick="openLink('CATIMSHMesher','Mesh');return false">CATIMSHMesher.Mesh</a> method). <br>This method should be called once at the end of a transaction, when all modifications have been performed.
</dl>
<hr>
 This object is included in the file: <b>CATIMSHMesh.h</b><br>
If needed, your Imakefile.mk should include the module: <b>CATAmtModel</b>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
