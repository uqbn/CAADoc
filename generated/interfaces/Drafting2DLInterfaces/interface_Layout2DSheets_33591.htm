<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Drafting2DLInterfaces Layout2DSheets (Collection)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../Drafting2DLInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Layout2DSheets','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Layout2DSheets','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Layout2DSheets','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Layout2DSheets','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Layout2DSheets<font size=-1> (Collection)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Layout2DSheets_33591','Layout2DSheets','0');</script>
<b><i> A collection of all the Layout sheets 2DL currently managed by the LayoutRoot.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#ActiveSheet"><b>ActiveSheet</b></a>
<dd>  Returns the active Layout sheet of the Layout document.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a Layout sheet and adds it to the Layout2DSheets collection.
 <dt>
    <a href="#AddDetail"><b>AddDetail</b></a>
<dd>  Creates a detail Layout sheet 2DL and adds it to the LayoutSheets2DL collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a Layout sheet using its index or its name from the Layout2DSheets collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a Layout2Dsheet from the Layout2DSheets collection.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="ActiveSheet"><dt>

<table><tr><td>o Property <b>ActiveSheet</b>(<td>) As <script type="text/javascript"> activateLink('Layout2DSheet','Layout2DSheet')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the active Layout sheet of the Layout document.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 The following example shows how to get the active sheet
 and retrieved in <tt>MySheet</tt> in the Layout sheet collection of the layout root of <tt>Part</tt>
 supposed to be in the active document
 <pre>
 Dim MyLayoutRoot As Layout2DRoot
 Set MyLayoutRoot = CATIA.Documents.Part.GetItem("CATLayoutRoot")
 Dim MySheet As Layout2DSheet
 Set MySheet =  MyLayoutRoot.Sheets.<font color="red">ActiveSheet</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iLayoutSheetName</tt>) As <script type="text/javascript"> activateLink('Layout2DSheet','Layout2DSheet')</script> </table></dt>
<dl>
  <dd>
 Creates a Layout sheet and adds it to the Layout2DSheets collection.
 This Layout sheet becomes the active one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLayoutSheetName</tt>
   <dd>   The name to assign to the created Layout2DSheet object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created Layout sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example creates a Layout sheet named <tt>FirstSheet</tt>
 and retrieved in <tt>MySheet</tt> in the Layout sheet collection of the layout root of <tt>Part</tt>
 supposed to be in the active document
 <pre>
 Dim MyLayoutRoot As Layout2DRoot
 Set MyLayoutRoot = CATIA.Documents.Part.GetItem("CATLayoutRoot")
 Dim MySheet As Layout2DSheet
 Set MySheet = MyLayoutRoot.Sheets.<font color="red">Add</font>("FirstSheet").
 </pre>
 </dl>
</dl>
</dl>
<a name="AddDetail"><dt>

<table><tr><td>o Func <b>AddDetail</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iLayoutSheetName</tt>) As <script type="text/javascript"> activateLink('Layout2DSheet','Layout2DSheet')</script> </table></dt>
<dl>
  <dd>
 Creates a detail Layout sheet 2DL and adds it to the LayoutSheets2DL collection.
 This detail Layout sheet becomes the active one.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLayoutSheetName</tt>
   <dd>   The name to assign to the created detail LayoutSheet object
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created layout sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example creates a detail Layout sheet named <tt>FirstSheet</tt>
 and retrieved in <tt>MySheet</tt> in the Layout sheet collection of the layout root of <tt>Part</tt>
 supposed to be in the active document
 <pre>
 Dim MyLayoutRoot As Layout2DRoot
 Set MyLayoutRoot = CATIA.Documents.Part.GetItem("CATLayoutRoot")
 Dim MySheet As Layout2DSheet
 Set MySheet = MyLayoutRoot.Sheets.<font color="red">Add</font>("FirstSheet")
 </pre>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('Layout2DSheet','Layout2DSheet')</script> </table></dt>
<dl>
  <dd>
 Returns a Layout sheet using its index or its name from the Layout2DSheets collection. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Layout sheet to retrieve from
   the collection of Layout sheets.
   As a numerics, this index is the rank of the Layout sheet
   in the collection.
   The index of the first Layout sheet in the collection is 1, and
   the index of the last Layout sheet is Count.
   As a string, it is the name you assigned to the Layout sheet using
   the </dd>
</dl>
<a href="#" onClick="openLink('AnyObject','Name');return false">AnyObject.Name</a> property or when creating it using   the 
<a href="#" onClick="openLink('','Add');return false">Add</a> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved Layout sheet <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThisLayoutSheet</tt> the third Layout sheet,
 and in <tt>ThatLayoutSheet</tt> the Layout sheet named
 <tt>MySheet</tt> in the Layout sheet collection of the layout root of <tt>Part</tt>
 supposed to be in the active document.
 <pre>
 Dim ThisLayoutRoot As Layout2DRoot
 Set ThisLayoutRoot = CATIA.ActiveDocument.Part.GetItem("CATlayoutRoot")
 Dim ThisLayoutSheet As Layout2DSheet
 Set ThisLayoutSheet = ThisLayoutRoot.Sheets.<font color="red">Item</font>(3)
 Dim ThatLayoutSheet As Layout2DSheet
 Set ThatLayoutSheet = ThisLayoutRoot.Sheets.<font color="red">Item</font>("MySheet")
 </pre>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a Layout2Dsheet from the Layout2DSheets collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the Layout sheet to remove from
   the collection of Layout sheets.
   As a numerics, this index is the rank of the Layout sheet
   in the collection.
   The index of the first Layout sheet in the collection is 1, and
   the index of the last Layout sheet is Count.
   As a string, it is the name you assigned to the Layout sheet using
   the </dd>
</dl>
<a href="#" onClick="openLink('AnyObject','Name');return false">AnyObject.Name</a> property or when creating it using   the 
<a href="#" onClick="openLink('','Add');return false">Add</a> method. <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 The following example removes the second Layout sheet and the Layout sheet named
 <tt>SheetToBeRemoved</tt> in the Layout sheet collection of the layout root of <tt>Part</tt>
 supposed to be in the active document.
 <pre>
 Dim ThisLayoutRoot As Layout2DRoot
 Set ThisLayoutRoot = CATIA.ActiveDocument.Part.GetItem("CATlayoutRoot")
 ThisLayoutRoot.Layout2DSheets.<font color="red">Remove</font>("SheetToBeRemoved")
 </pre>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
