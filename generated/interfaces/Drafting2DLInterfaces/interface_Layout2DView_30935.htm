<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>Drafting2DLInterfaces Layout2DView (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../Drafting2DLInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Layout2DView','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Layout2DView','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Layout2DView','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Layout2DView','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Layout2DView<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Layout2DView_30935','Layout2DView','0');</script>
<b><i>   The interface to access a Layout2D View.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Angle"><b>Angle</b></a>
<dd>  Returns or sets the angle of the Layout2D view.
 <dt>
    <a href="#Arrows"><b>Arrows</b></a>
<dd>  Returns the drawing arrow collection of the Layout2D view.
 <dt>
    <a href="#Components"><b>Components</b></a>
<dd>  Returns the Layout2D component instances collection (i.
 <dt>
    <a href="#Dimensions"><b>Dimensions</b></a>
<dd>  Returns the drawing dimension collection of the Layout2D view.
 <dt>
    <a href="#Factory2D"><b>Factory2D</b></a>
<dd>  Returns the 2D factory of the Layout2D view.
 <dt>
    <a href="#FrameVisualization"><b>FrameVisualization</b></a>
<dd>  Returns or sets the Layout2D view frame visualization state.
 <dt>
    <a href="#GeometricElements"><b>GeometricElements</b></a>
<dd>  Returns the collection of geometric elements included in the Layout2D view sketch.
 <dt>
    <a href="#LockStatus"><b>LockStatus</b></a>
<dd>  Returns or sets the lock status of a Layout2D view.
 <dt>
    <a href="#Pictures"><b>Pictures</b></a>
<dd>  Returns the drawing picture collection of the Layout2D view.
 <dt>
    <a href="#ReferenceView"><b>ReferenceView</b></a>
<dd>  Returns or sets the reference view.
 <dt>
    <a href="#Tables"><b>Tables</b></a>
<dd>  Returns the drawing table collection of the drawing view.
 <dt>
    <a href="#Texts"><b>Texts</b></a>
<dd>  Returns the drawing text collection of the Layout2D view.
 <dt>
    <a href="#Threads"><b>Threads</b></a>
<dd>  Returns the drawing thread collection of the Layout2D view.
 <dt>
    <a href="#ViewScale"><b>ViewScale</b></a>
<dd>  Returns or sets the scale of the Layout2D view.
 <dt>
    <a href="#Visu2DMode"><b>Visu2DMode</b></a>
<dd>  Sets/Gets the 2D mode for background visualization of the view.
 <dt>
    <a href="#VisuBackground"><b>VisuBackground</b></a>
<dd>  Sets/Gets the 2D-3D background visu mode of the view
 ie in the 3D windows and in the background of each view in every 2D context.
 <dt>
    <a href="#VisuIn3D"><b>VisuIn3D</b></a>
<dd>  Sets/Gets the 3D visualization mode of the view in the 3D Viewer
 ie in the 3D windows and in the background of each view in every 2D context.
 <dt>
    <a href="#Weldings"><b>Weldings</b></a>
<dd>  Returns the drawing welding collection of the Layout2D view.
 <dt>
    <a href="#x"><b>x</b></a>
<dd>  Returns or sets the x coordinate of the Layout2D view coordinate system origin.
 <dt>
    <a href="#y"><b>y</b></a>
<dd>  Returns or sets the y coordinate of the Layout2D view coordinate system origin.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates the Layout2D view.
 <dt>
    <a href="#AlignedWithReferenceView"><b>AlignedWithReferenceView</b></a>
<dd>  Activates the alignment with the reference view.
 <dt>
    <a href="#GetViewName"><b>GetViewName</b></a>
<dd>  Returns the prefix, the ident and the suffix of the name of 
 the Layout2D view.
 <dt>
    <a href="#SaveEdition"><b>SaveEdition</b></a>
<dd>  Saves the Sketch Edition.
 <dt>
    <a href="#SetViewName"><b>SetViewName</b></a>
<dd>  Sets the prefix, the ident and the suffix of the name of 
 the Layout2D view.
 <dt>
    <a href="#Size"><b>Size</b></a>
<dd>  Returns the bounding box of the Layout2D view.
 <dt>
    <a href="#UnAlignedWithReferenceView"><b>UnAlignedWithReferenceView</b></a>
<dd>  Deactivates the alignment with the reference view.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Angle"><dt>

<table><tr><td>o Property <b>Angle</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the angle of the Layout2D view.
 The angle is measured between the axis system of the Layout2D view and the
 axis system of the Layout2D sheet where the Layout2D view lies.
 The angle is measured in radians and is counted counterclockwise.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the angle of the <tt>MyView</tt> Layout2D view to 90
 degrees clockwise.
 You first need to compute the angle in radians and set the
 minus sign to indicate the rotation is clockwise.
 <pre>
 PI = 3.1415926535
 Angle90Clockwise = -PI/2
 MyView.<font color="red">Angle</font> = Angle90Clockwise
 </pre>
 </dl>
</dl>
<a name="Arrows"><dt>

<table><tr><td>o Property <b>Arrows</b>(<td>) As <script type="text/javascript"> activateLink('DrawingArrows','DrawingArrows')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing arrow collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ArrowCollection</tt> the collection of
 arrows of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim ArrowCollection As DrawingArrows
 Set ArrowCollection = MyView.<font color="red">Arrows</font>
 </pre>
 </dl>
</dl>
<a name="Components"><dt>

<table><tr><td>o Property <b>Components</b>(<td>) As <script type="text/javascript"> activateLink('DrawingComponents','DrawingComponents')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the Layout2D component instances collection (i.e. ditto collection) of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ComponentCollection</tt> the collection of
 component instances of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim ComponentCollection As DrawingComponents
 Set ComponentCollection = MyView.<font color="red">Components</font>
 </pre>
 </dl>
</dl>
<a name="Dimensions"><dt>

<table><tr><td>o Property <b>Dimensions</b>(<td>) As <script type="text/javascript"> activateLink('DrawingDimensions','DrawingDimensions')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing dimension collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>DimensionCollection</tt> the collection of
 dimensions of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim DimensionCollection As DrawingDimensions
 Set DimensionCollection = MyView.<font color="red">Dimensions</font>
 </pre>
 </dl>
</dl>
<a name="Factory2D"><dt>

<table><tr><td>o Property <b>Factory2D</b>(<td>) As <script type="text/javascript"> activateLink('Factory2D','Factory2D')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the 2D factory of the Layout2D view.
 Take care that you must open edition
 on a sketch before adding or modifying elements in it.
 Take care that you must close edition on a sketch to keep all modifications before saving document.
 To get Sketch from factory2D:
 <pre>
  Set mySketch = my2DFactory.<b>GetParent</b>
 </pre>
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>my2DFactory</tt> the 2D factory<br>
 of the view <tt>myView</tt>:
 <pre>
 Set my2DFactory = myView.<b>Factory2D</b>
 </pre>
 </dl>
</dl>
<a name="FrameVisualization"><dt>

<table><tr><td>o Property <b>FrameVisualization</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the Layout2D view frame visualization state.
 <br>
 <b>True</b> if the Layout2D view frame is visible.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example shows the frame of the <tt>MyView</tt> Layout2D view.
 <pre>
 MyView.<font color="red">FrameVisualization</font> = True
 </pre>
 </dl>
</dl>
<a name="GeometricElements"><dt>

<table><tr><td>o Property <b>GeometricElements</b>(<td>) As <script type="text/javascript"> activateLink('GeometricElements','GeometricElements')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of geometric elements included in the Layout2D view sketch.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>colGeometry</tt> the list of geometric
 elements in the view <tt>myView</tt>:
 <pre>
 Dim colGeometry As GeometricElements
 Set colGeometry = MyView.<font color="red">GeometricElements</font>
 </pre>
 </dl>
</dl>
<a name="LockStatus"><dt>

<table><tr><td>o Property <b>LockStatus</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the lock status of a Layout2D view.
 <br><b>precondition</b>: This property does not exist for the detail view. In this case, the method returns failed.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example locks the <tt>ViewToWorkOn</tt> Layout2D view.
 <pre>
 ViewToWorkOn.<font color="red">LockStatus</font> = True
 </pre>
 </dl>
</dl>
<a name="Pictures"><dt>

<table><tr><td>o Property <b>Pictures</b>(<td>) As <script type="text/javascript"> activateLink('DrawingPictures','DrawingPictures')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing picture collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>PictureCollection</tt> the collection of
 pictures of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim PictureCollection As DrawingPictures
 Set PictureCollection = MyView.<font color="red">Pictures</font>
 </pre>
 </dl>
</dl>
<a name="ReferenceView"><dt>

<table><tr><td>o Property <b>ReferenceView</b>(<td>) As <script type="text/javascript"> activateLink('Layout2DView','Layout2DView')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the reference view.
 The reference view is also the parent view to which the current Layout2D view
 is linked and which is used as reference for alignment.
 Generally, the reference view is the front view, and the other views,
 such as the top, bottom, left, and right views, are linked to it.
 This reference Layout2D view is used:
 <ul>
 <li>When moving the current Layout2D view. Its location remains constrained
 to the reference view, depending on its type. For example,
 a left view can move horizontally and a top view can move vertically.</li>
 <li>To update the scale of the current Layout2D view according to the
 modification performed to the one of the reference Layout2D view.</li>
 </ul>
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ReferenceView</tt> the view used as reference
 by the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim ReferenceView As Layout2DView
 Set ReferenceView = MyView.<font color="red">RefView</font>
 </pre>
 </dl>
</dl>
<a name="Tables"><dt>

<table><tr><td>o Property <b>Tables</b>(<td>) As <script type="text/javascript"> activateLink('DrawingTables','DrawingTables')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing table collection of the drawing view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>TextCollection</tt> the collection of
 texts of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim TableCollection As DrawingTables
 Set TableCollection = MyView.<font color="red">Tables</font>
 </pre>
 </dl>
</dl>
<a name="Texts"><dt>

<table><tr><td>o Property <b>Texts</b>(<td>) As <script type="text/javascript"> activateLink('DrawingTexts','DrawingTexts')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing text collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>TextCollection</tt> the collection of
 texts of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim TextCollection As DrawingTexts
 Set TextCollection = MyView.<font color="red">Texts</font>
 </pre>
 </dl>
</dl>
<a name="Threads"><dt>

<table><tr><td>o Property <b>Threads</b>(<td>) As <script type="text/javascript"> activateLink('DrawingThreads','DrawingThreads')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing thread collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThreadCollection</tt> the collection of
 threads of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim ThreadCollection As DrawingThreads
 Set ThreadCollection = MyView.<font color="red">Threads</font>
 </pre>
 </dl>
</dl>
<a name="ViewScale"><dt>

<table><tr><td>o Property <b>ViewScale</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MyView</tt> Layout2D view to 0.5.
 <pre>
 MyView.<font color="red">Scale</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Visu2DMode"><dt>

<table><tr><td>o Property <b>Visu2DMode</b>(<td>) As <script type="text/javascript"> activateLink('CatView2DModeVisu','CatView2DModeVisu')</script> </table></dt>
<dl>
  <dd>
 Sets/Gets the 2D mode for background visualization of the view.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CatView2DModeVisu','');return false">CatView2DModeVisu</a>
  <dt> <b>Example:</b> 
  <dd>  <dd>
 This example shows how to switch on the background 2D mode
 <pre>
 View1.<font color="red">Visu2DMode</font> = catView2DModeNoShow
 </pre>
</dl>
</dl>
<a name="VisuBackground"><dt>

<table><tr><td>o Property <b>VisuBackground</b>(<td>) As <script type="text/javascript"> activateLink('CatVisuBackgroundMode','CatVisuBackgroundMode')</script> </table></dt>
<dl>
  <dd>
 Sets/Gets the 2D-3D background visu mode of the view
 ie in the 3D windows and in the background of each view in every 2D context.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CatVisuBackgroundMode','');return false">CatVisuBackgroundMode</a>
  <dt> <b>Example:</b> 
  <dd>  <dd>
 This example shows how to set the background to LowInt
 <pre>
 View1.<font color="red">VisuBackground</font> = catLowIntPick
 </pre>
</dl>
</dl>
<a name="VisuIn3D"><dt>

<table><tr><td>o Property <b>VisuIn3D</b>(<td>) As <script type="text/javascript"> activateLink('CatVisuIn3DMode','CatVisuIn3DMode')</script> </table></dt>
<dl>
  <dd>
 Sets/Gets the 3D visualization mode of the view in the 3D Viewer
 ie in the 3D windows and in the background of each view in every 2D context.
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('CatVisuIn3DMode','');return false">CatVisuIn3DMode</a>
  <dt> <b>Example:</b> 
  <dd>  <dd>
 This example shows how to make the <tt>View1</tt> Layout2D view visible in 3D
 <pre>
 View1.<font color="red">HideIn3DSize</font> = catShowAll
 </pre>
</dl>
</dl>
<a name="Weldings"><dt>

<table><tr><td>o Property <b>Weldings</b>(<td>) As <script type="text/javascript"> activateLink('DrawingWeldings','DrawingWeldings')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing welding collection of the Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>weldingCollection</tt> the collection of
 weldings of the <tt>MyView</tt> Layout2D view.
 <pre>
 Dim weldingCollection As DrawingWeldings
 Set weldingCollection = MyView.<font color="red">Weldings</font>
 </pre>
 </dl>
</dl>
<a name="x"><dt>

<table><tr><td>o Property <b>x</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the x coordinate of the Layout2D view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the x coordinate of the coordinate system origin of the
 <tt>MyView</tt>.
 <pre>
 X = MyView.<font color="red">x</font>
 </pre>
 </dl>
</dl>
<a name="y"><dt>

<table><tr><td>o Property <b>y</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the y coordinate of the Layout2D view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the y coordinate of the coordinate system origin of the
 <tt>MyView</tt> to 5 inches.
 You need first to convert the 5 inches into millimeters.
 <pre>
 NewYCoordinate = 5*25.4
 MyView.<font color="red">y</font> = NewYCoordinate
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the Layout2D view.
 Activating a Layout2D view means that this Layout2D view is the one on which
 the end-user is now working. 
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>ViewToWorkOn</tt> Layout2D view.
 <pre>
 ViewToWorkOn.<font color="red">Activate</font>()
 </pre>
 </dl>
</dl>
<a name="AlignedWithReferenceView"><dt>

<table><tr><td>o Sub <b>AlignedWithReferenceView</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the alignment with the reference view.
 Activating the alignment with the reference view restores the constraints
 that the reference view imposes to the current Layout2D view.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the alignment from the <tt>MyView</tt>
 Layout2D view to its reference view.
 <pre>
 MyView.<font color="red">AlignedWithReferenceView</font>()
 </pre>
 </dl>
</dl>
<a name="GetViewName"><dt>

<table><tr><td>o Sub <b>GetViewName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNamePrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameIdent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameSuffix</tt>)</table></dt>
<dl>
  <dd>
 Returns the prefix, the ident and the suffix of the name of 
 the Layout2D view. The method returns an error in case of 2D component reference.
 Do not confuse with the method Name which can be different.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example gets the prefix, the ident, and the suffix of the name 
 of the <tt>MyView</tt> Layout2D view
 <pre>
 Dim MyPrefix, MyIdent, MySuffix As CATBSTR
 MyView.<font color="red">GetViewName</font> (MyPrefix, MyIdent, MySuffix)
 </pre>
</dl>
</dl>
<a name="SaveEdition"><dt>

<table><tr><td>o Sub <b>SaveEdition</b>(<td>)</table></dt>
<dl>
  <dd>
 Saves the Sketch Edition. Once you have finished working with the Layout2D view, you
 must save its edition in order to register modification for UNDO/REDO.
 Indeed when activating a view, this view is open in edition while the previous active
 view is closed in edition. So calling SaveEdition() before exiting a macro without
 changing active view will allow a correct UNDO/REDO behavior.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves the edition of the Layout2D view <tt>MyView</tt>:
 <pre>
 MyView.<b>SaveEdition</b>
 </pre>
 </dl>
</dl>
<a name="SetViewName"><dt>

<table><tr><td>o Sub <b>SetViewName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNamePrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameIdent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameSuffix</tt>)</table></dt>
<dl>
  <dd>
 Sets the prefix, the ident and the suffix of the name of 
 the Layout2D view. The method returns an error in case of 2D component reference.
 Do not confuse with the method Name which can be different.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the prefix, the ident, and the suffix of the name 
 of the <tt>MyView</tt> Layout2D view respectively to "MyPrefix", "MyIdent",
 and "MySuffix".
 <pre>
 MyView.<font color="red">SetViewName</font> ("MyPrefix", "MyIdent", "MySuffix")
 </pre>
</dl>
</dl>
<a name="Size"><dt>

<table><tr><td>o Sub <b>Size</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oValues</tt>)</table></dt>
<dl>
  <dd>
 Returns the bounding box of the Layout2D view.
 <br><b>Warning</b>: This method is not implemented.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oValues</tt>
   <dd>   The values of the view bounding box: Xmin, Xmax, Ymin, Ymax
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <dd>
 This example gets the bounding box of the <tt>ViewToWorkOn</tt> Layout2D view.
 <pre>
 Dim oXY(4) As Double
 ViewToWorkOn.<font color="red">Size</font> oXY
 Xmin = oXY(0)
 Xmax = oXY(1)
 Ymin = oXY(2)
 Ymax = oXY(3)
 </pre>
 </dl>
</dl>
</dl>
<a name="UnAlignedWithReferenceView"><dt>

<table><tr><td>o Sub <b>UnAlignedWithReferenceView</b>(<td>)</table></dt>
<dl>
  <dd>
 Deactivates the alignment with the reference view.
 Deactivating the alignment to the reference view removes the constraints
 that the reference view imposes to the current Layout2D view.
 You can then, for example, move and position it freely.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example deactivates the alignment from the <tt>MyView</tt>
 Layout2D view to its reference view.
 <pre>
 MyView.<font color="red">UnAlignedWithReferenceView</font>()
 </pre>
 </dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
