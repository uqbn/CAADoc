<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>GenKnowledgeInterfaces ExpertRuleSet (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../GenKnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ExpertRuleSet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ExpertRuleSet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ExpertRuleSet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ExpertRuleSet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ExpertRuleSet<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ExpertRuleSet_35719','ExpertRuleSet','0');</script>
<b><i> Represents the ExpertRuleSet object which is the editable part of a RuleSet or a RuleBase.</i></b><br>


 The following example shows how to access the RuleSet of the rule Base RB1
 <pre>
 Dim CATDocs As Documents 
 Set CATDocs   = CATIA.Documents
 Dim partdoc As Document
 Set partdoc   = CATDocs.Add("CATPart")
 Dim part as Part
 Set part      = partdoc.Part
 Dim relations as Relations
 Set relations = part.Relations
 Dim RuleBase as ExpertRuleBaseRuntime
 Set RuleBase  = relations.Item("RB1")
 Dim RuleSet as ExpertRuleSet
 Set RuleSet	 = RuleBase.RuleSet
 </pre><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateCheck"><b>CreateCheck</b></a>
<dd>  Creates a check and adds it to the RuleSet.
 <dt>
    <a href="#CreateRule"><b>CreateRule</b></a>
<dd>  Creates a rule and adds it to the RuleSet.
 <dt>
    <a href="#CreateRuleSet"><b>CreateRuleSet</b></a>
<dd>  Creates a RuleSet and adds it to the RuleSet.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateCheck"><dt>

<table><tr><td>o Func <b>CreateCheck</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCheckVariables</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCheckBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iRuleSet</tt>) As <script type="text/javascript"> activateLink('ExpertCheck','ExpertCheck')</script> </table></dt>
<dl>
  <dd>
 Creates a check and adds it to the RuleSet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The check name
 </dd>
    <dt><tt> iCheckVariables</tt>
   <dd>    define variables of the check.
 </dd>
    <dt><tt> iCheckBody</tt>
   <dd>    The check definition
 </dd>
    <dt><tt> iRuleSet</tt>
   <dd>    The ruleset name where the check is to be aggregated.
    If this macro is used from the RuleSet where we want to create the check, the param
    must be equal to value : "".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created check

 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>SolidActivity</tt> check
 and adds it to the newly created <tt>RuleSet.1</tt> RuleSet then
 creates the <tt>HoleActivity</tt> check
 and adds it to the newly created <tt>RuleSet.2</tt> RuleSet
 <pre>
  Dim CATDocs As Documents 
  Set CATDocs   = CATIA.Documents
  Dim partdoc As Document
  Dim part as Part
  Dim CheckSolid as ExpertCheck
  Dim ruleset as ExpertRuleSet
  Dim CheckHole as ExpertCheck

  Set partdoc      = CATDocs.Add("CATPart")
  Set part         = partdoc.Part 
  Set CheckSolid   = part.Relations.Item("RuleBase").RuleSet.<font color="red">CreateCheck</font>
                     ("SolidActivity",
                      "Sol : Solid",
                      "Sol.Activity == True",
                      "RuleSet.1")
  Set ruleset      = part.Relations.Item("RuleBase").RuleSet.CreateRuleSet
                     ("RuleSet.2",
                      "")
  Set CheckHole    = ruleset.<font color="red">CreateCheck</font>
                     ("HoleActivity",
                      "H : Hole",
                      "H.Activity == True",
                      "")

 </pre>
 </dl>
</dl>
</dl>
<a name="CreateRule"><dt>

<table><tr><td>o Func <b>CreateRule</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iRuleVariables</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iRuleBody</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iRuleSet</tt>) As <script type="text/javascript"> activateLink('ExpertRule','ExpertRule')</script> </table></dt>
<dl>
  <dd>
 Creates a rule and adds it to the RuleSet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The rule name
 </dd>
    <dt><tt> iRuleVariables</tt>
   <dd>    define variables of the rule.
 </dd>
    <dt><tt> iRuleBody</tt>
   <dd>    The check definition
 </dd>
    <dt><tt> iRuleSet</tt>
   <dd>    The RuleSet name where this rule aggregated.
    If this macro is used from the ruleset where we want to aggregate the rule, the param
    must be equal to value : "".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created rule
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>DesactivateIfActivatedOnSolid</tt> rule
 and adds it to the newly created <tt>RuleSet.1</tt> RuleSet then creates the 
 <tt>DesactivateIfActivatedOnHole</tt> rule and adds it to the newly created <tt>RuleSet.2</tt>
 RuleSet

 <pre>
  Dim CATDocs As Documents 
  Set CATDocs   = CATIA.Documents

  Dim partdoc As Document
  Set partdoc   = CATDocs.Add("CATPart")

  Dim part as Part
  Set part         = partdoc.Part

  Dim rulesolid as ExpertRule
  Set rulesolid    = part.Relations.Item("RuleBase").RuleSet.<font color="red">CreateRule</font>
                     ("DesactivateIfActivatedOnSolid",
                      "Sol : Solid",
                      "Sol.Activity == True then Sol.Activity = False",
						"RuleSet.1")
  Dim ruleset as ExpertRuleSet
  Set ruleset      = part.Relations.Item("RuleBase").RuleSet.CreateRuleSet
                     ("RuleSet.2",
                      "")
  Dim rulehole as ExpertRule
  Set rulehole     = ruleset.<font color="red">CreateRule</font>
                     ("DesactivateIfActivatedOnHole",
                      "H : Hole",
                      "H.Activity == True then H.Activity = False",
                      "")

 </pre>
 </dl>
</dl>
</dl>
<a name="CreateRuleSet"><dt>

<table><tr><td>o Func <b>CreateRuleSet</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iRuleSet</tt>) As <script type="text/javascript"> activateLink('ExpertRuleSet','ExpertRuleSet')</script> </table></dt>
<dl>
  <dd>
 Creates a RuleSet and adds it to the RuleSet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The ruleset name
 </dd>
    <dt><tt> iRuleSet</tt>
   <dd>    The ruleset name where this ruleset is to be aggregated.
    If this macro is used from the ruleset or the rulebase where we want to aggregate
    the ruleset, the param must be equal to value : "".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created ruleset
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example, firstly, creates the <tt>RuleSet.1</tt> RuleSet
 and adds it to the newly created RuleBase. Secondly, it creates <tt>RuleSet.2</tt> RuleSet 
 and adds it to the ruleset <tt>RuleSet.1</tt>
 <pre>
  Dim CATDocs As Documents 
  Set CATDocs   = CATIA.Documents
  Dim partdoc As Document
  Set partdoc   = CATDocs.Add("CATPart")
  Dim part as Part
  Set part         = partdoc.Part
  Dim RS1 as ExpertRuleSet
  RS1 = part.Relations.Item("RuleBase").RuleSet.<font color="red">CreateRuleSet</font>
                     ("RuleSet.1",
                      "")
  Dim RS2 as ExpertRuleSet
  RS2 = part.Relations.Item("RuleBase").RuleSet.<font color="red">CreateRuleSet</font>
                     ("RuleSet.2",
                      "RuleSet.1")
  
 </pre>
 </dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
