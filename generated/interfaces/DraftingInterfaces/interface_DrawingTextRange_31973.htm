<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces DrawingTextRange (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('DrawingTextRange','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingTextRange','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('DrawingTextRange','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingTextRange','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DrawingTextRange<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingTextRange_31973','DrawingTextRange','0');</script>
<b><i>  Represents a drawing text range, or contiguous area, in a drawing text.</i></b><br>

 <p>
 A range is a contiguous area in a drawing text defined by the position of 
 a starting and ending character, or by the position of a starting character
 and a length expressed in number of characters.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Length"><b>Length</b></a>
<dd>  Returns the number of characters of the drawing text range.
 <dt>
    <a href="#Start"><b>Start</b></a>
<dd>  Returns the starting character position of the drawing text range.
 <dt>
    <a href="#Text"><b>Text</b></a>
<dd>  Returns or sets the character string making up the drawing text range.
 <dt>
    <a href="#TextProperties"><b>TextProperties</b></a>
<dd>  
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetTextRange"><b>GetTextRange</b></a>
<dd>  Returns a drawing text range within another drawing text range.
 <dt>
    <a href="#InsertAfter"><b>InsertAfter</b></a>
<dd>  Inserts a character string at the end of the drawing text range.
 <dt>
    <a href="#InsertBefore"><b>InsertBefore</b></a>
<dd>  Inserts a character string at the beginning of the drawing text range.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Length"><dt>

<table><tr><td>o Property <b>Length</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the number of characters of the drawing text range.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>NbChar</tt> the number of characters of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 NbChar = MyTextRange.<font color="red">Length</font>
 </pre>
 </dl>
</dl>
<a name="Start"><dt>

<table><tr><td>o Property <b>Start</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the starting character position of the drawing text range.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in  <tt>StartCharPos</tt>the starting character position of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 StartCharPos = MyTextRange.<font color="red">Start</font>
 </pre>
 </dl>
</dl>
<a name="Text"><dt>

<table><tr><td>o Property <b>Text</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the character string making up the drawing text range.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets in <tt>text</tt> the character string that makes up
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 MyTextRange.<font color="red">Text</font> = text
 Set MyTextProperties = MyTextRange.<font color="red">TextProperties</font>
 MyTextProperties.<font color="red">Update</font>
 </pre>
 </dl>
 
<dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('DrawingTextProperties','Update');return false">DrawingTextProperties.Update</a>
</dl>
</dl>
<a name="TextProperties"><dt>

<table><tr><td>o Property <b>TextProperties</b>(<td>) As <script type="text/javascript"> activateLink('DrawingTextProperties','DrawingTextProperties')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R18 
 use 
<a href="#" onClick="openLink('DrawingWelding','TextProperties');return false">DrawingWelding.TextProperties</a> This method has not to be used to manage the text range properties.
 Text properties is only applied on the whole text, not on a sub text identified 
 by a text range.
 Returns the drawing text range properties.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns in <tt>Prop</tt> the text properties of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 Dim Prop As CATIADrawingTextProperties
 Set Prop = MyTextRange.<font color="red">TextProperties</font>(String)
 </pre>
 </dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetTextRange"><dt>

<table><tr><td>o Func <b>GetTextRange</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iStart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iEnd</tt>) As <script type="text/javascript"> activateLink('DrawingTextRange','DrawingTextRange')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing text range within another drawing text range.
 The text range is retrieved using its starting and ending character positions.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iStart</tt>
   <dd>   The position of the drawing text range starting character
 </dd>
    <dt><tt> iEnd</tt>
   <dd>     The position of the drawing text range ending character   
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>extractedTextRange</tt> the drawing text range that begins at
 the eighth character and end at the fifteenth character of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 Dim extractedTextRange As DrawingTextRange
 start = 8
 end = 15
 extractedTextRange = MyTextRange.<font color="red">GetTextRange</font>(start, end)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="InsertAfter"><dt>

<table><tr><td>o Sub <b>InsertAfter</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
 Inserts a character string at the end of the drawing text range.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The character string to be added
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example inserts the <tt>String</tt> character string at the end of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 String = "String to insert after"
 MyTextRange.<font color="red">InsertAfter</font>(String)
 Set MyTextProperties = MyTextRange.<font color="red">TextProperties</font>
 MyTextProperties.<font color="red">Update</font>
 </pre>
 </dl>
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('DrawingTextProperties','Update');return false">DrawingTextProperties.Update</a>
</dl>
</dl>
<a name="InsertBefore"><dt>

<table><tr><td>o Sub <b>InsertBefore</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iString</tt>)</table></dt>
<dl>
  <dd>
 Inserts a character string at the beginning of the drawing text range.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iString</tt>
   <dd>   The character string to be added
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example inserts the <tt>String</tt> character string at the beginning of
 the <tt>MyTextRange</tt> drawing text range.
 <pre>
 String = "String to insert before"
 MyTextRange.<font color="red">InsertBefore</font>(String)
 Set MyTextProperties = MyTextRange.<font color="red">TextProperties</font>
 MyTextProperties.<font color="red">Update</font>
 </pre>
 </dl>
 </dd>
</dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('DrawingTextProperties','Update');return false">DrawingTextProperties.Update</a>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
