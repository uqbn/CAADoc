<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces DrawingDimensions (Collection)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('DrawingDimensions','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingDimensions','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('DrawingDimensions','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingDimensions','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DrawingDimensions<font size=-1> (Collection)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingDimensions_34190','DrawingDimensions','0');</script>
<b><i>   A collection of all the drawing dimensions currently managed by a
 drawing view of drawing sheet in a drawing document.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add"><b>Add</b></a>
<dd>  Creates a drawing dimension and adds it to the DrawingDimensions collection.
 <dt>
    <a href="#Add2"><b>Add2</b></a>
<dd>  Creates a drawing dimension along a direction and adds it to the DrawingDimensions collection.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Returns a drawing dimension using its index or its name from the DrawingDimensions collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a drawing dimension from the DrawingDimensions collection.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add"><dt>

<table><tr><td>o Func <b>Add</b>(<td><script type="text/javascript"> activateLink('CatDimType','CatDimType')</script> <td><tt>iTypeDim</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iGeomElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPtCoordElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatDimLineRep','CatDimLineRep')</script> <td><tt>iLineRep</tt>) As <script type="text/javascript"> activateLink('DrawingDimension','DrawingDimension')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing dimension and adds it to the DrawingDimensions collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeDim</tt>
   <dd>   Dimension type
 </dd>
    <dt><tt> iGeomElem</tt>
   <dd>   Parent geometrical element(s) of dimension
 </dd>
    <dt><tt> iPtCoordElem</tt>
   <dd>   Array of pointers on the selection points of each element of iGeomElem
 </dd>
    <dt><tt> iLineRep</tt>
   <dd>   Basic representation mode 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing dimension <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing angle dimension between two lines
 and a partial curvilinear length dimension on an ellipse
 and retrieved in <tt>MyDimension1</tt> and <tt>MyDimension2</tt> in the 
 drawing view collection of the <tt>MyView</tt> drawing view.
 This view belongs to the drawing view collection of the drawing sheet
 <pre>
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.ActiveView
 Dim Fact2D  As Factory2D
 Set Fact2D = MyView.Factory2D
 Dim Line1 As Line2D
 Dim Line2 As Line2D
 Set Line1 = Fact2D.CreateLine(50, 10, 150, 10)
 Set Line2 = Fact2D.CreateLine(50, 10, 120, 100)
 Dim Ellipse1 As Ellipse2D
 Set Ellipse1 = Fact2D.CreateEllipse(-40, 100, 120, 180,120,90,0, 3)
 Dim Point1 As Point2D
 Dim Point2 As Point2D
 Set Point1 = Fact2D.CreatePoint(-10,190)
 Set Point2 = Fact2D.CreatePoint(-120,90)
 Dim iType As catDimType
 iType = catDimAngle
 Dim myElements1(1)
 myElements1(1) = Array(Line1,Line2)
 Dim selpoints(3)
 selpoints(3) = Array(150, 10, 120, 100)
 Dim MyDimension1 As DrawingDimension
 Set MyDimension1 = MyView.Dimensions.<font color="red">Add</font>(iType, myElements1(1), selpoints(3),catDimAuto)
 iType = catDimLengthCurvilinear
 Dim myElements2(2)
 myElements2(2) = Array(Point1,Point2,Ellipse1)
 selpoints(3) = Array(0, 0, 0, 0)
 Dim MyDimension2 As DrawingDimension
 Set MyDimension2 = MyView.Dimensions.<font color="red">Add</font>(iType, myElements2(1), selpoints(3),catDimOffset)
 </pre>
 </dl>
</dl>
</dl>
<a name="Add2"><dt>

<table><tr><td>o Func <b>Add2</b>(<td><script type="text/javascript"> activateLink('CatDimType','CatDimType')</script> <td><tt>iTypeDim</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iGeomElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPtCoordElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iLDCRefElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iLDCRefAngle</tt>) As <script type="text/javascript"> activateLink('DrawingDimension','DrawingDimension')</script> </table></dt>
<dl>
  <dd>
 Creates a drawing dimension along a direction and adds it to the DrawingDimensions collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iTypeDim</tt>
   <dd>   Dimension type (available types : catDimDistance, catDimLength, catDimRadiusTangent and catDimDiameterTangent)
 </dd>
    <dt><tt> iGeomElem</tt>
   <dd>   Parent geometorical element(s) of dimension
 </dd>
    <dt><tt> iPtCoordElem</tt>
   <dd>   Array of pointers on the selection points of each element of iGeomElem
 </dd>
    <dt><tt> iLDCRefElem</tt>
   <dd> 	  Reference geometrical element for the direction of the dimension line
   .iLDCRefElem can be null: in this case, the view is the reference element
 </dd>
    <dt><tt> iLDCRefAngle</tt>
   <dd>	  Angle between the reference element and the direction of the dimension line 
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created drawing dimension (The property CATDimLineRep of the dimension line of the created dimension is set to catDimUserDefined) <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example creates a drawing distance dimension between two points along the direction of a line
 and retrieved in <tt>MyDimension</tt> in the drawing view collection
 of the <tt>MyView</tt> drawing view.
 This view belongs to the drawing view collection of the drawing sheet
 <pre>
 Dim MyView As DrawingView
 Set MyView = MySheet.Views.ActiveView
 Dim Fact2D  As Factory2D
 Set Fact2D = MyView.Factory2D
 Dim Point1 As Point2D
 Dim Point2 As Point2D
 Set Point1 = Fact2D.CreatePoint(40, 230)
 Set Point2 = Fact2D.CreatePoint(80, 210)
 Dim Line1 As Line2D
 Set Line1 = Fact2D.CreateLine(50, 10, 150, 10)
 Dim iType As catDimType
 iType = catDimDistance
 Dim myElements(1)
 myElements(1) = Array(Point1,Point2)
 Dim selpoints(3)
 selpoints(3) = Array(0, 0, 0, 0)
 Dim MyDimension As DrawingDimension
 Set MyDimension = MyView.Dimensions.<font color="red">Add2</font>(iType, myElements(1), selpoints(3), Line1, 0)
 </pre>
 </dl>
</dl>
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('DrawingDimension','DrawingDimension')</script> </table></dt>
<dl>
  <dd>
 Returns a drawing dimension using its index or its name from the DrawingDimensions collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the drawing dimension to retrieve from
   the collection of drawing dimensions.
   As a numerics, this index is the rank of the drawing dimension
   in the collection.
   The index of the first drawing dimension in the collection is 1, and
   the index of the last drawing dimension is Count.
   As a string, it is the name you assigned to the drawing dimension using
   the </dd>
</dl>
<a href="#" onClick="openLink('AnyObject','Name');return false">AnyObject.Name</a> property or when creating it using   the 
<a href="#" onClick="openLink('','Add');return false">Add</a> method. 
  <dt> <b>Returns:</b> 
  <dd>  The retrieved drawing dimension 
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>ThisDrawingDimension</tt> the second drawing dimension,
 and in <tt>ThatDrawingDimension</tt> the drawing dimension named
 <tt>MyDimension</tt> in the drawing dimension collection of the active view.
 <pre>
 Dim MyView As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 Dim ThisDrawingDimension As DrawingDimension
 Set ThisDrawingDimension = MyView.Dimensions.<font color="red">Item</font>(2)
 Dim ThatDrawingDimension As DrawingDimension
 Set ThatDrawingDimension = MyView.Dimensions.<font color="red">Item</font>("MyDimension")
 </pre>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a drawing dimension from the DrawingDimensions collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index of the drawing dimension to remove from
   the collection of drawing dimensions.
   As a numerics, this index is the rank of the drawing dimension
   in the collection.
   The index of the first drawing dimension in the collection is 1, and
   the index of the last drawing dimension is Count.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 The following example removes the third drawing dimension 
 in the drawing dimension collection of the active view
 of the active document, supposed to be a drawing document.
 <pre>
 Dim MyView As DrawingView
 Set MyView  = MySheet.Views.ActiveView
 MyView.Dimensions.<font color="red">Remove</font>(3)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
