<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces DrawingSheet (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('DrawingSheet','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingSheet','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('DrawingSheet','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingSheet','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DrawingSheet<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingSheet_26492','DrawingSheet','0');</script>
<b><i>  Represents a drawing sheet of the drawing document.</i></b><br>

 <p>
 The drawing sheet is included in a drawing document and contains
 drawing views.
 <br><b>Warning</b>: This interface is not available with 2D Layout for 3D Design.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#GenViewsPosMode"><b>GenViewsPosMode</b></a>
<dd>  Returns or sets the generative views position stability mode.
 <dt>
    <a href="#Orientation"><b>Orientation</b></a>
<dd>  Returns or sets the paper orientation.
 <dt>
    <a href="#PageSetup"><b>PageSetup</b></a>
<dd>  Returns the page setup.
 <dt>
    <a href="#PaperSize"><b>PaperSize</b></a>
<dd>  Returns or sets the paper size.
 <dt>
    <a href="#PrintArea"><b>PrintArea</b></a>
<dd>  Returns the print area definition object.
 <dt>
    <a href="#ProjectionMethod"><b>ProjectionMethod</b></a>
<dd>  Returns or sets the sheet projection mode .
 <dt>
    <a href="#Scale"><b>Scale</b></a>
<dd>  Returns or sets the scale of the drawing sheet.
 <dt>
    <a href="#Scale2"><b>Scale2</b></a>
<dd>  Returns or sets the scale of the drawing sheet (Workaround for VBA keyword).
 <dt>
    <a href="#Views"><b>Views</b></a>
<dd>  Returns the drawing view collection of the drawing sheet.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates the drawing sheet.
 <dt>
    <a href="#ForceUpdate"><b>ForceUpdate</b></a>
<dd>  Forces the update of all the drawing views of the drawing sheet.
 <dt>
    <a href="#GenerateDimensions"><b>GenerateDimensions</b></a>
<dd>  Generates dimensions in all the drawing views of the drawing sheet.
 <dt>
    <a href="#GetPaperHeight"><b>GetPaperHeight</b></a>
<dd>  Gets the paper width of the drawing sheet.
 <dt>
    <a href="#GetPaperWidth"><b>GetPaperWidth</b></a>
<dd>  Gets the paper width of the drawing sheet.
 <dt>
    <a href="#IsDetail"><b>IsDetail</b></a>
<dd>  Checks whether the sheet is a detail sheet.
 <dt>
    <a href="#Isolate"><b>Isolate</b></a>
<dd>  Isolates the drawing sheet.
 <dt>
    <a href="#PrintOut"><b>PrintOut</b></a>
<dd>  Prints the drawing sheet according to its page setup on the default printer.
 <dt>
    <a href="#PrintToFile"><b>PrintToFile</b></a>
<dd>  Prints the drawing sheet according its page setup 
 in a file instead of being sent to a printer.
 <dt>
    <a href="#SetAsDetail"><b>SetAsDetail</b></a>
<dd>  Sets the sheet as a detail sheet.
 <dt>
    <a href="#SetPaperHeight"><b>SetPaperHeight</b></a>
<dd>  Sets the paper width of the drawing sheet, avalaible on user format.
 <dt>
    <a href="#SetPaperWidth"><b>SetPaperWidth</b></a>
<dd>  Sets the paper width of the drawing sheet, avalaible on user format.
 <dt>
    <a href="#Update"><b>Update</b></a>
<dd>  Updates the  drawing views of the drawing sheet.
 <dt>
    <a href="#reorder_Views"><b>reorder_Views</b></a>
<dd>  Changes the positions of the views in this sheet according to the given 
 ordered list.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="GenViewsPosMode"><dt>

<table><tr><td>o Property <b>GenViewsPosMode</b>(<td>) As <script type="text/javascript"> activateLink('CatSheetGenViewsPosMode','CatSheetGenViewsPosMode')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the generative views position stability mode.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the stability mode of the <tt>MySheet</tt> drawing sheet so that after an update,
 existing and unmodified geometries don't move globally.
 <pre>
 MySheet.<font color="red">GenViewsPosMode</font> = catFixedAxis
 </pre>
 </dl>
</dl>
<a name="Orientation"><dt>

<table><tr><td>o Property <b>Orientation</b>(<td>) As <script type="text/javascript"> activateLink('CatPaperOrientation','CatPaperOrientation')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the paper orientation.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the paper orientation for the <tt>MySheet</tt>
 drawing sheet to <tt>catPaperLandscape</tt>.
 <pre>
 MySheet.<font color="red">Orientation</font> = catPaperLandscape
 </pre>
 </dl>
</dl>
<a name="PageSetup"><dt>

<table><tr><td>o Property <b>PageSetup</b>(<td>) As <script type="text/javascript"> activateLink('DrawingPageSetup','DrawingPageSetup')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the page setup.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the page setup for the <tt>MySheet</tt>
 drawing sheet.
 <pre>
 Dim MySheetPageSetup As DrawingPageSetup
 Set MySheetPageSetup = MySheet.<font color="red">PageSetup</font>
 </pre>
 </dl>
</dl>
<a name="PaperSize"><dt>

<table><tr><td>o Property <b>PaperSize</b>(<td>) As <script type="text/javascript"> activateLink('CatPaperSize','CatPaperSize')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the paper size.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the page size for the <tt>MySheet</tt>
 drawing sheet to <tt>catPaperA4</tt>.
 <pre>
 MySheet.<font color="red">PaperSize</font> = catPaperA4
 </pre>
 </dl>
</dl>
<a name="PrintArea"><dt>

<table><tr><td>o Property <b>PrintArea</b>(<td>) As <script type="text/javascript"> activateLink('PrintArea','PrintArea')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the print area definition object.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the print area for the <tt>MySheet</tt>
 drawing sheet.
 <pre>
 Dim MyPrintArea As PrintArea
 Set MyPrintArea = MySheet.<font color="red">PrintArea</font>
 </pre>
 </dl>
</dl>
<a name="ProjectionMethod"><dt>

<table><tr><td>o Property <b>ProjectionMethod</b>(<td>) As <script type="text/javascript"> activateLink('CatSheetProjectionMethod','CatSheetProjectionMethod')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the sheet projection mode .
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the projection mode of the <tt>MySheet</tt> drawing sheet to catFirstAngle.
 <pre>
 MySheet.<font color="red">ProjectionMethod</font> = catFirstAngle
 </pre>
 </dl>
</dl>
<a name="Scale"><dt>

<table><tr><td>o Property <b>Scale</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the drawing sheet.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MySheet</tt> drawing sheet to 0.5.
 <pre>
 MySheet.<font color="red">Scale</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Scale2"><dt>

<table><tr><td>o Property <b>Scale2</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the drawing sheet (Workaround for VBA keyword).
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MySheet</tt> drawing sheet to 0.5.
 <pre>
 MySheet.<font color="red">Scale2</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Views"><dt>

<table><tr><td>o Property <b>Views</b>(<td>) As <script type="text/javascript"> activateLink('DrawingViews','DrawingViews')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing view collection of the drawing sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ViewCollection</tt> the collection of
 views of the <tt>MySheet</tt> drawing sheet.
 <pre>
 Dim ViewCollection As DrawingViews
 Set ViewCollection = MySheet.<font color="red">Views</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the drawing sheet.
 Activating a drawing sheet means that this drawing sheet is the one on which
 the end user is now working.
 The window in the application's window collection which contains this
 drawing sheet becomes the active one.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>MySheet</tt> drawing sheet.
 <pre>
 MySheet.<font color="red">Activate</font>
 </pre>
 </dl>
</dl>
<a name="ForceUpdate"><dt>

<table><tr><td>o Sub <b>ForceUpdate</b>(<td>)</table></dt>
<dl>
  <dd>
 Forces the update of all the drawing views of the drawing sheet.
 This update redraws all the views, whether their pointed objects have been
 modified since the drawing sheet creation or last update or not.
 These pointed objects can be CATIA Version 4 models, or
 CATIA Version 5 parts or assemblies.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example forces the update of all the dawing views in the <tt>MySheet</tt>
 drawing sheet.
 <pre>
 MySheet.<font color="red">ForceUpdate</font>
 </pre>
 </dl>
</dl>
<a name="GenerateDimensions"><dt>

<table><tr><td>o Sub <b>GenerateDimensions</b>(<td>)</table></dt>
<dl>
  <dd>
 Generates dimensions in all the drawing views of the drawing sheet.
 These dimensions are generated from the constraints of the pointed 3D part(s).
 One dimension only is generated for a given constraint.
 Only dimensions for the following constraints are generated: distance,
 length, angle, radius, and diameter.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example generates the dimensions for all the views in the <tt>MySheet</tt>
 drawing sheet.
 <pre>
 MySheet.<font color="red">GenerateDimensions</font>
 </pre>
 </dl>
</dl>
<a name="GetPaperHeight"><dt>

<table><tr><td>o Func <b>GetPaperHeight</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets the paper width of the drawing sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPaperHeight</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example get the height of the <tt>DrawingSheet1</tt>.
 <pre>
 DrawingSheet1.<font color="red">GetPaperHeight</font> oPaperHeight
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetPaperWidth"><dt>

<table><tr><td>o Func <b>GetPaperWidth</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Gets the paper width of the drawing sheet.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPaperWidth</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example get the width of the <tt>DrawingSheet1</tt>.
 <pre>
 DrawingSheet1.<font color="red">GetPaperWidth</font> oPaperWidth
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="IsDetail"><dt>

<table><tr><td>o Func <b>IsDetail</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Checks whether the sheet is a detail sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <br>TRUE if the sheet is a detail sheet.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example checks whether <tt>MySheet</tt> is a detail sheet.
 <pre>
 IsDetail = MySheet.<font color="red">IsDetail</font>
 </pre>
 </dl>
</dl>
<a name="Isolate"><dt>

<table><tr><td>o Sub <b>Isolate</b>(<td>)</table></dt>
<dl>
  <dd>
 Isolates the drawing sheet.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example isolates the <tt>MySheet</tt> drawing sheet.
 <pre>
 MySheet.<font color="red">Isolate</font>
 </pre>
 </dl>
</dl>
<a name="PrintOut"><dt>

<table><tr><td>o Sub <b>PrintOut</b>(<td>)</table></dt>
<dl>
  <dd>
 Prints the drawing sheet according to its page setup on the default printer.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>DrawingSheet1</tt> 
 on the default printer.
 <pre>
 DrawingSheet1.<font color="red">PrintOut</font>
 </pre>
 </dl>
</dl>
<a name="PrintToFile"><dt>

<table><tr><td>o Sub <b>PrintToFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>fileName</tt>)</table></dt>
<dl>
  <dd>
 Prints the drawing sheet according its page setup 
 in a file instead of being sent to a printer.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> fileName</tt>
   <dd>   The full pathname of the file receiving the data.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example prints the <tt>DrawingSheet1</tt> 
 in a file.
 <pre>
 DrawingSheet1.<font color="red">PrintToFile</font> "e:\temp\sheet1.prn"
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetAsDetail"><dt>

<table><tr><td>o Sub <b>SetAsDetail</b>(<td>)</table></dt>
<dl>
  <dd>
 Sets the sheet as a detail sheet.
 You can now create views into this sheet that will be taken as details.
 A detail is made to be reuse as dittos in views.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example changes the <tt>MySheet</tt> into a detail sheet.
 <pre>
 MySheet.<font color="red">SetAsDetail</font>
 </pre>
 </dl>
</dl>
<a name="SetPaperHeight"><dt>

<table><tr><td>o Sub <b>SetPaperHeight</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oPaperHeight</tt>)</table></dt>
<dl>
  <dd>
 Sets the paper width of the drawing sheet, avalaible on user format.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaperHeight</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example set the height of the <tt>DrawingSheet1</tt>.
 <pre>
 DrawingSheet1.<font color="red">PaperSize</font> = catPaperUser
 DrawingSheet1.<font color="red">SetPaperHeight</font> iPaperHeight
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetPaperWidth"><dt>

<table><tr><td>o Sub <b>SetPaperWidth</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oPaperWidth</tt>)</table></dt>
<dl>
  <dd>
 Sets the paper width of the drawing sheet, avalaible on user format.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPaperWidth</tt>
   <dd> <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example set the width of the <tt>DrawingSheet1</tt>.
 <pre>
 DrawingSheet1.<font color="red">PaperSize</font> = catPaperUser
 DrawingSheet1.<font color="red">SetPaperWidth</font> iPaperWidth
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Update"><dt>

<table><tr><td>o Sub <b>Update</b>(<td>)</table></dt>
<dl>
  <dd>
 Updates the  drawing views of the drawing sheet.
 This update redraws all the views whose pointed objects have been modified
 since the drawing sheet creation or last update, but do not redraw the views
 whose pointed have not been modifed.
 These pointed objects can be CATIA Version 4 models, or 
 CATIA Version 5 parts or assemblies.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example updates the drawing views in the <tt>MySheet</tt>
 drawing sheet.
 <pre>
 MySheet.<font color="red">Update</font>
 </pre>
 </dl>
</dl>
<a name="reorder_Views"><dt>

<table><tr><td>o Sub <b>reorder_Views</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iOrderedViews</tt>)</table></dt>
<dl>
  <dd>
 Changes the positions of the views in this sheet according to the given 
 ordered list.
 iOrderedViews is the result of a permutation applied to 
 the list of <b>all</b> the views of this sheet with the following
 constraint: the two first elements of the list must be 
 respectively the sheet's mainview and background view. 

 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd> 
 This example modifies the  views order of a sheet made of 
 a mainview, a backgroundview and two user-created views.
 (user-created views are inverted).
 <pre>
 Set drwviewsorder = CATIA.ActiveDocument.Sheets.ActiveSheet
 Set drwviews = drwviewsorder.Views
 Set mainview = drwviews.item(1)
 Set backview = drwviews.item(2)
 Set view1 = drwviews.item(3)
 Set view2 = drwviews.item(4)
 newvieworder = Array(mainview, backview, view2, view1)
 drwviewsorder.<font color="red">reorder_Views</font>(newvieworder)
 </pre>
 </dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
