<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DraftingInterfaces DrawingView (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../DraftingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('DrawingView','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingView','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('DrawingView','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DrawingView','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DrawingView<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DrawingView_25425','DrawingView','0');</script>
<b><i>  Represents a drawing view in a drawing sheet.</i></b><br>

 <p>
 The drawing view is included in a drawing sheet and contains
   texts,leaders, dimensions, arrows, pictures, tables, 2D Geometry and 2D component.
 <br><b>Warning</b>: This interface is not available with 2D Layout for 3D Design.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Angle"><b>Angle</b></a>
<dd>  Returns or sets the angle of the drawing view.
 <dt>
    <a href="#Arrows"><b>Arrows</b></a>
<dd>  Returns the drawing arrow collection of the drawing view.
 <dt>
    <a href="#Components"><b>Components</b></a>
<dd>  Returns the drawing component instances collection (i.
 <dt>
    <a href="#Dimensions"><b>Dimensions</b></a>
<dd>  Returns the drawing dimension collection of the drawing view.
 <dt>
    <a href="#Factory2D"><b>Factory2D</b></a>
<dd>  Returns the 2D factory of the drawing view.
 <dt>
    <a href="#FrameVisualization"><b>FrameVisualization</b></a>
<dd>  Returns or sets the drawing view frame visualization state.
 <dt>
    <a href="#GenerativeBehavior"><b>GenerativeBehavior</b></a>
<dd>  Returns the generative behavior of the drawing view.
 <dt>
    <a href="#GenerativeLinks"><b>GenerativeLinks</b></a>
<dd>  Returns the generative links of the drawing view.
 <dt>
    <a href="#GeometricElements"><b>GeometricElements</b></a>
<dd>  Returns the collection of geometric elements included in the drawing view sketch.
 <dt>
    <a href="#LockStatus"><b>LockStatus</b></a>
<dd>  Returns or sets the lock status of a drawing view.
 <dt>
    <a href="#Pictures"><b>Pictures</b></a>
<dd>  Returns the drawing picture collection of the drawing view.
 <dt>
    <a href="#ReferenceView"><b>ReferenceView</b></a>
<dd>  Returns or sets the reference view.
 <dt>
    <a href="#Scale"><b>Scale</b></a>
<dd>  Returns or sets the scale of the drawing view.
 <dt>
    <a href="#Scale2"><b>Scale2</b></a>
<dd>  Returns or sets the scale of the drawing view (Workaround for VBA keyword).
 <dt>
    <a href="#Tables"><b>Tables</b></a>
<dd>  Returns the drawing table collection of the drawing view.
 <dt>
    <a href="#Texts"><b>Texts</b></a>
<dd>  Returns the drawing text collection of the drawing view.
 <dt>
    <a href="#Threads"><b>Threads</b></a>
<dd>  Returns the drawing thread collection of the drawing view.
 <dt>
    <a href="#ViewType"><b>ViewType</b></a>
<dd>  Returns the drawing view type.
 <dt>
    <a href="#Weldings"><b>Weldings</b></a>
<dd>  Returns the drawing welding collection of the drawing view.
 <dt>
    <a href="#x"><b>x</b></a>
<dd>  For an interactive view, get_x and put_x methods are equivalents to get_xAxisData, put_xAxisData 
 In a generative case, get_x.
 <dt>
    <a href="#xAxisData"><b>xAxisData</b></a>
<dd>  Returns or sets the x coordinate of the drawing view coordinate system origin.
 <dt>
    <a href="#y"><b>y</b></a>
<dd>  For an interactive view, get_y and put_y methods are equivalents to get_yAxisData, put_yAxisData 
 In a generative case, get_y.
 <dt>
    <a href="#yAxisData"><b>yAxisData</b></a>
<dd>  Returns or sets the y coordinate of the drawing view coordinate system origin.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Activate"><b>Activate</b></a>
<dd>  Activates the drawing view.
 <dt>
    <a href="#AlignedWithReferenceView"><b>AlignedWithReferenceView</b></a>
<dd>  Activates the alignment with the reference view.
 <dt>
    <a href="#GetViewName"><b>GetViewName</b></a>
<dd>  Returns the prefix, the ident and the suffix of the name of 
 the drawing view.
 <dt>
    <a href="#InsertViewAngle"><b>InsertViewAngle</b></a>
<dd>  Insert the Angle parameter in the text of the drawing text.
 <dt>
    <a href="#InsertViewScale"><b>InsertViewScale</b></a>
<dd>  Insert the scale parameter in the text of the drawing text.
 <dt>
    <a href="#IsGenerative"><b>IsGenerative</b></a>
<dd>  Returns whether the drawing view has a generative behavior.
 <dt>
    <a href="#Isolate"><b>Isolate</b></a>
<dd>  Isolates the drawing view.
 <dt>
    <a href="#SaveEdition"><b>SaveEdition</b></a>
<dd>  Saves the Sketch Edition.
 <dt>
    <a href="#SetViewName"><b>SetViewName</b></a>
<dd>  Sets the prefix, the ident and the suffix of the name of 
 the drawing view.
 <dt>
    <a href="#Size"><b>Size</b></a>
<dd>  Returns the bounding box of the drawing view.
 <dt>
    <a href="#UnAlignedWithReferenceView"><b>UnAlignedWithReferenceView</b></a>
<dd>  Deactivates the alignment with the reference view.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Angle"><dt>

<table><tr><td>o Property <b>Angle</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the angle of the drawing view.
 The angle is measured between the axis system of the drawing view and the
 axis system of the drawing sheet where the drawing view lies.
 The angle is measured in radians and is counted counterclockwise.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the angle of the <tt>MyView</tt> drawing view to 90
 degrees clockwise.
 You first need to compute the angle in radians and set the
 minus sign to indicate the rotation is clockwise.
 <pre>
 PI = 3.1415926535
 Angle90Clockwise = -PI/2
 MyView.<font color="red">Angle</font> = Angle90Clockwise
 </pre>
 </dl>
</dl>
<a name="Arrows"><dt>

<table><tr><td>o Property <b>Arrows</b>(<td>) As <script type="text/javascript"> activateLink('DrawingArrows','DrawingArrows')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing arrow collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ArrowCollection</tt> the collection of
 arrows of the <tt>MyView</tt> drawing view.
 <pre>
 Dim ArrowCollection As DrawingArrows
 Set ArrowCollection = MyView.<font color="red">Arrows</font>
 </pre>
 </dl>
</dl>
<a name="Components"><dt>

<table><tr><td>o Property <b>Components</b>(<td>) As <script type="text/javascript"> activateLink('DrawingComponents','DrawingComponents')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing component instances collection (i.e. ditto collection) of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ComponentCollection</tt> the collection of
 component instances of the <tt>MyView</tt> drawing view.
 <pre>
 Dim ComponentCollection As DrawingComponents
 Set ComponentCollection = MyView.<font color="red">Components</font>
 </pre>
 </dl>
</dl>
<a name="Dimensions"><dt>

<table><tr><td>o Property <b>Dimensions</b>(<td>) As <script type="text/javascript"> activateLink('DrawingDimensions','DrawingDimensions')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing dimension collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>DimensionCollection</tt> the collection of
 dimensions of the <tt>MyView</tt> drawing view.
 <pre>
 Dim DimensionCollection As DrawingDimensions
 Set DimensionCollection = MyView.<font color="red">Dimensions</font>
 </pre>
 </dl>
</dl>
<a name="Factory2D"><dt>

<table><tr><td>o Property <b>Factory2D</b>(<td>) As <script type="text/javascript"> activateLink('Factory2D','Factory2D')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the 2D factory of the drawing view.
 Take care that you must open edition
 on a sketch before adding or modifying elements in it.
 Take care that you must close edition on a sketch to keep all modifications before saving document.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 To get Sketch from factory2D:
 <pre>
  Set mySketch = my2DFactory.<b>GetParent</b>
 </pre>
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>my2DFactory</tt> the 2D factory<br>
 of the view <tt>myView</tt>:
 <pre>
 Set my2DFactory = myView.<b>Factory2D</b>
 </pre>
 </dl>
</dl>
<a name="FrameVisualization"><dt>

<table><tr><td>o Property <b>FrameVisualization</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the drawing view frame visualization state.
 <br>
 <b>True</b> if the drawing view frame is visible.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example shows the frame of the <tt>MyView</tt> drawing view.
 <pre>
 MyView.<font color="red">FrameVisualization</font> = True
 </pre>
 </dl>
</dl>
<a name="GenerativeBehavior"><dt>

<table><tr><td>o Property <b>GenerativeBehavior</b>(<td>) As <script type="text/javascript"> activateLink('DrawingViewGenerativeBehavior','DrawingViewGenerativeBehavior')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the generative behavior of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>MyViewGenBehavior</tt> the generative behavior
 of the <tt>MyView</tt> drawing view.
 <pre>
 Dim MyViewGenBehavior As DrawingViewGenerativeBehavior
 Set MyViewGenBehavior = MyView.<font color="red">GenerativeBehavior</font>
 </pre>
 </dl>
</dl>
<a name="GenerativeLinks"><dt>

<table><tr><td>o Property <b>GenerativeLinks</b>(<td>) As <script type="text/javascript"> activateLink('DrawingViewGenerativeLinks','DrawingViewGenerativeLinks')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the generative links of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>MyViewGenLinks</tt> the generative links
 of the <tt>MyView</tt> drawing view.
 <pre>
 Dim MyViewGenLinks As DrawingViewGenerativeLinks
 Set MyViewGenLinks = MyView.<font color="red">GenerativeLinks</font>
 </pre>
 </dl>
</dl>
<a name="GeometricElements"><dt>

<table><tr><td>o Property <b>GeometricElements</b>(<td>) As <script type="text/javascript"> activateLink('GeometricElements','GeometricElements')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of geometric elements included in the drawing view sketch.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>colGeometry</tt> the list of geometric
 elements in the view <tt>myView</tt>:
 <pre>
 Dim colGeometry As GeometricElements
 Set colGeometry = myView.<font color="red">GeometricElements</font>
 </pre>
 </dl>
</dl>
<a name="LockStatus"><dt>

<table><tr><td>o Property <b>LockStatus</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the lock status of a drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <br><b>precondition</b>: This property does not exist for the detail view. In this case, the method returns failed.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example locks the <tt>ViewToWorkOn</tt> drawing view.
 <pre>
 ViewToWorkOn.<font color="red">LockStatus</font> = True
 </pre>
 </dl>
</dl>
<a name="Pictures"><dt>

<table><tr><td>o Property <b>Pictures</b>(<td>) As <script type="text/javascript"> activateLink('DrawingPictures','DrawingPictures')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing picture collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>PictureCollection</tt> the collection of
 pictures of the <tt>MyView</tt> drawing view.
 <pre>
 Dim PictureCollection As DrawingPictures
 Set PictureCollection = MyView.<font color="red">Pictures</font>
 </pre>
 </dl>
</dl>
<a name="ReferenceView"><dt>

<table><tr><td>o Property <b>ReferenceView</b>(<td>) As <script type="text/javascript"> activateLink('DrawingView','DrawingView')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the reference view.
 The reference view is also the parent view to which the current drawing view
 is linked and which is used as reference for alignment.
 Generally, the reference view is the front view, and the other views,
 such as the top, bottom, left, and right views, are linked to it.
 This reference drawing view is used:
 <ul>
 <li>When moving the current drawing view. Its location remains constrained
 to the reference view, depending on its type. For example,
 a left view can move horizontally and a top view can move vertically.</li>
 <li>To update the scale of the current drawing view according to the
 modification performed to the one of the reference drawing view.</li>
 </ul>
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ReferenceView</tt> the view used as reference
 by the <tt>MyView</tt> drawing view.
 <pre>
 Dim ReferenceView As DrawingView
 Set ReferenceView = MyView.<font color="red">RefView</font>
 </pre>
 </dl>
</dl>
<a name="Scale"><dt>

<table><tr><td>o Property <b>Scale</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MyView</tt> drawing view to 0.5.
 <pre>
 MyView.<font color="red">Scale</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Scale2"><dt>

<table><tr><td>o Property <b>Scale2</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the scale of the drawing view (Workaround for VBA keyword).
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the scale of the <tt>MyView</tt> drawing view to 0.5.
 <pre>
 MyView.<font color="red">Scale2</font> = 0.5
 </pre>
 </dl>
</dl>
<a name="Tables"><dt>

<table><tr><td>o Property <b>Tables</b>(<td>) As <script type="text/javascript"> activateLink('DrawingTables','DrawingTables')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing table collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>TextCollection</tt> the collection of
 texts of the <tt>MyView</tt> drawing view.
 <pre>
 Dim TableCollection As DrawingTables
 Set TableCollection = MyView.<font color="red">Tables</font>
 </pre>
 </dl>
</dl>
<a name="Texts"><dt>

<table><tr><td>o Property <b>Texts</b>(<td>) As <script type="text/javascript"> activateLink('DrawingTexts','DrawingTexts')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing text collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>TextCollection</tt> the collection of
 texts of the <tt>MyView</tt> drawing view.
 <pre>
 Dim TextCollection As DrawingTexts
 Set TextCollection = MyView.<font color="red">Texts</font>
 </pre>
 </dl>
</dl>
<a name="Threads"><dt>

<table><tr><td>o Property <b>Threads</b>(<td>) As <script type="text/javascript"> activateLink('DrawingThreads','DrawingThreads')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing thread collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>ThreadCollection</tt> the collection of
 threads of the <tt>MyView</tt> drawing view.
 <pre>
 Dim ThreadCollection As DrawingThreads
 Set ThreadCollection = MyView.<font color="red">Threads</font>
 </pre>
 </dl>
</dl>
<a name="ViewType"><dt>

<table><tr><td>o Property <b>ViewType</b>(<td>) As <script type="text/javascript"> activateLink('CatDrawingViewType','CatDrawingViewType')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing view type.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
</dl>
<a name="Weldings"><dt>

<table><tr><td>o Property <b>Weldings</b>(<td>) As <script type="text/javascript"> activateLink('DrawingWeldings','DrawingWeldings')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the drawing welding collection of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>weldingCollection</tt> the collection of
 weldings of the <tt>MyView</tt> drawing view.
 <pre>
 Dim weldingCollection As DrawingWeldings
 Set weldingCollection = MyView.<font color="red">Weldings</font>
 </pre>
 </dl>
</dl>
<a name="x"><dt>

<table><tr><td>o Property <b>x</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 For an interactive view, get_x and put_x methods are equivalents to get_xAxisData, put_xAxisData 
 In a generative case, get_x. put_x returns or sets the x coordinate of 
 the projection of the 3D centre of gravity.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the x coordinate of the view relative position
 <tt>MyView</tt>.
 <pre>
 X = MyView.<font color="red">x</font>
 </pre>
 </dl>
</dl>
<a name="xAxisData"><dt>

<table><tr><td>o Property <b>xAxisData</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the x coordinate of the drawing view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves the x coordinate of the coordinate system origin of the
 <tt>MyView</tt> drawing view.
 <pre>
 X = MyView.<font color="red">xAxisData</font>
 </pre>
 </dl>
</dl>
<a name="y"><dt>

<table><tr><td>o Property <b>y</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 For an interactive view, get_y and put_y methods are equivalents to get_yAxisData, put_yAxisData 
 In a generative case, get_y. put_y returns or sets the y coordinate of 
 the projection of the 3D centre of gravity.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the y coordinate of the view relative position
 <tt>MyView</tt> to 5 inches.
 You need first to convert the 5 inches into millimeters.
 <pre>
 NewYCoordinate = 5*25.4
 MyView.<font color="red">y</font> = NewYCoordinate
 </pre>
 </dl>
</dl>
<a name="yAxisData"><dt>

<table><tr><td>o Property <b>yAxisData</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the y coordinate of the drawing view coordinate system origin.
 It is expressed with respect to the sheet coordinate system.
 This coordinate, like any length, is measured in millimeters.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example sets the y coordinate of the coordinate system origin of the
 <tt>MyView</tt> drawing view to 5 inches.
 You need first to convert the 5 inches into millimeters.
 <pre>
 NewYCoordinate = 5*25.4
 MyView.<font color="red">yAxisData</font> = NewYCoordinate
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Activate"><dt>

<table><tr><td>o Sub <b>Activate</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the drawing view.
 Activating a drawing view means that this drawing view is the one on which
 the end-user is now working. 
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the <tt>ViewToWorkOn</tt> drawing view.
 <pre>
 ViewToWorkOn.<font color="red">Activate</font>()
 </pre>
 </dl>
</dl>
<a name="AlignedWithReferenceView"><dt>

<table><tr><td>o Sub <b>AlignedWithReferenceView</b>(<td>)</table></dt>
<dl>
  <dd>
 Activates the alignment with the reference view.
 Activating the alignment with the reference view restores the constraints
 that the reference view imposes to the current drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example activates the alignment from the <tt>MyView</tt>
 drawing view to its reference view.
 <pre>
 MyView.<font color="red">AlignedWithReferenceView</font>()
 </pre>
 </dl>
</dl>
<a name="GetViewName"><dt>

<table><tr><td>o Sub <b>GetViewName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNamePrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameIdent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameSuffix</tt>)</table></dt>
<dl>
  <dd>
 Returns the prefix, the ident and the suffix of the name of 
 the drawing view. The method returns an error in case of 2D component reference.
 <br><b>Note</b>: Prefix of drawing view can be also retrieved across name property defined in CATIABase
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example gets the prefix, the ident, and the suffix of the name 
 of the <tt>MyView</tt> drawing view
 <pre>
 Dim MyPrefix, MyIdent, MySuffix As CATBSTR
 MyView.<font color="red">GetViewName</font> (MyPrefix, MyIdent, MySuffix)
 </pre>
</dl>
</dl>
<a name="InsertViewAngle"><dt>

<table><tr><td>o Sub <b>InsertViewAngle</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iFirst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DrawingText','DrawingText')</script> <td><tt>ioText</tt>)</table></dt>
<dl>
  <dd>
 Insert the Angle parameter in the text of the drawing text.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirst</tt>
   <dd>   The first character from which the parameter is inserted 
 </dd>
    <dt><tt> ioText</tt>
   <dd>   The text on wich the scale parameter will be inserted
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example insert the Angle parameter of <tt>MyView</tt> drawing view
 at the end of <tt>MyText</tt> drawing text.
 <pre>

 index = Len(MyText.Text)+1
 MyView.<font color="red">InsertViewScale</font> index, MyText
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="InsertViewScale"><dt>

<table><tr><td>o Sub <b>InsertViewScale</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iFirst</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('DrawingText','DrawingText')</script> <td><tt>ioText</tt>)</table></dt>
<dl>
  <dd>
 Insert the scale parameter in the text of the drawing text.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFirst</tt>
   <dd>   The first character from which the parameter is inserted 
 </dd>
    <dt><tt> ioText</tt>
   <dd>   The text on wich the scale parameter will be inserted
 <!-- @sample -->
 <dt><b>Example:</b>
 <dd>
 This example insert the Scale parameter of <tt>MyView</tt> drawing view
 at the first character of <tt>MyText</tt> drawing text.
 <pre>

 MyView.<font color="red">InsertViewScale</font> 1, MyText
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="IsGenerative"><dt>

<table><tr><td>o Func <b>IsGenerative</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether the drawing view has a generative behavior.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <br>
 <b>True</b> if the drawing view has a generative behavior.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example retrieves in <tt>GenView</tt> if the
 <tt>MyView</tt> drawing view has a generative behavior property set.
 <pre>
 GenView = MyView.<font color="red">IsGenerative</font>()
 </pre>
 </dl>
</dl>
<a name="Isolate"><dt>

<table><tr><td>o Sub <b>Isolate</b>(<td>)</table></dt>
<dl>
  <dd>
 Isolates the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example isolates the <tt>MyView</tt> drawing view.
 <pre>
 MyView.<font color="red">Isolate</font>
 </pre>
 </dl>
</dl>
<a name="SaveEdition"><dt>

<table><tr><td>o Sub <b>SaveEdition</b>(<td>)</table></dt>
<dl>
  <dd>
 Saves the Sketch Edition. Once you have finished working with the drawing view, you
 must save its edition in order to register modification for UNDO/REDO.
 Indeed when activating a view, this view is open in edition while the previous active
 view is closed in edition. So calling SaveEdition() before exiting a macro without
 changing active view will allow a correct UNDO/REDO behavior.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves the edition of the drawing view <tt>MyView</tt>:
 <pre>
 MyView.<b>SaveEdition</b>
 </pre>
 </dl>
</dl>
<a name="SetViewName"><dt>

<table><tr><td>o Sub <b>SetViewName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNamePrefix</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameIdent</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iViewNameSuffix</tt>)</table></dt>
<dl>
  <dd>
 Sets the prefix, the ident and the suffix of the name of 
 the drawing view. The method returns an error in case of 2D component reference.
 <br><b>Note</b>: Prefix of drawing view can be also modified across name property defined in CATIABase
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the prefix, the ident, and the suffix of the name 
 of the <tt>MyView</tt> drawing view respectively to "MyPrefix", "MyIdent",
 and "MySuffix".
 <pre>
 MyView.<font color="red">SetViewName</font> ("MyPrefix", "MyIdent", "MySuffix")
 </pre>
</dl>
</dl>
<a name="Size"><dt>

<table><tr><td>o Sub <b>Size</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oValues</tt>)</table></dt>
<dl>
  <dd>
 Returns the bounding box of the drawing view.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oValues</tt>
   <dd>   The values of the view bounding box: Xmin, Xmax, Ymin, Ymax
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <dd>
 This example gets the bounding box of the <tt>ViewToWorkOn</tt> drawing view.
 <pre>
 Dim oXY(4) As Double
 ViewToWorkOn.<font color="red">Size</font> oXY
 Xmin = oXY(0)
 Xmax = oXY(1)
 Ymin = oXY(2)
 Ymax = oXY(3)
 </pre>
 </dl>
</dl>
</dl>
<a name="UnAlignedWithReferenceView"><dt>

<table><tr><td>o Sub <b>UnAlignedWithReferenceView</b>(<td>)</table></dt>
<dl>
  <dd>
 Deactivates the alignment with the reference view.
 Deactivating the alignment to the reference view removes the constraints
 that the reference view imposes to the current drawing view.
 You can then, for example, move and position it freely.
 <br><b>Warning</b>: This method is not available with 2D Layout for 3D Design.
 <!-- @sample -->
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example deactivates the alignment from the <tt>MyView</tt>
 drawing view to its reference view.
 <pre>
 MyView.<font color="red">UnAlignedWithReferenceView</font>()
 </pre>
 </dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
