<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>PartInterfaces Revolution (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../PartInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Revolution','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Revolution','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Revolution','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Revolution','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Revolution<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Revolution_18204','Revolution','0');</script>
<b><i> Represents the revolution-based shapes.</i></b><br>

 It is the base objects for shaft and grooves.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('Shaft','');return false">Shaft</a>, <a href="#" onClick="openLink('Groove','');return false">Groove</a>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#FirstAngle"><b>FirstAngle</b></a>
<dd>  Returns the revolution first angle.
 <dt>
    <a href="#IsThin"><b>IsThin</b></a>
<dd>  Returns the Revol thin flag.
 <dt>
    <a href="#MergeEnd"><b>MergeEnd</b></a>
<dd>  Returns the Revol merge end flag (for thin Revol only).
 <dt>
    <a href="#NeutralFiber"><b>NeutralFiber</b></a>
<dd>  Returns the Revol neutral fiber flag (for thin Revol only).
 <dt>
    <a href="#RevoluteAxis"><b>RevoluteAxis</b></a>
<dd>  Returns or sets the rotation axis for Revol.
 <dt>
    <a href="#SecondAngle"><b>SecondAngle</b></a>
<dd>  Returns the revolution second angle.
</dl>
<dl>
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="FirstAngle"><dt>

<table><tr><td>o Property <b>FirstAngle</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the revolution first angle.
 This angle is computed around the revolution axis, starting from
 the sketch plane trace on the plane perpendicular to the revolution
 axis, and is counted positive clockwise when looking at this
 plane in the revolution axis direction.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>firstAngle</tt>
 the first angle of the <tt>MyRevolution</tt> revolution object:
 <pre>
 Set firstAngle = MyRevolution.<font color="red">FirstAngle</font>
</pre>
 </dl>
</dl>
<a name="IsThin"><dt>

<table><tr><td>o Property <b>IsThin</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Revol thin flag.<br>
 It returns TRUE if the Revol is a thin Revol , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsThin   The thin flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>thinFlag</tt> the thin flag of
 Revol <tt>firstRevol</tt>, and then sets it so that it will be now thin :
 <pre>
 Set thinFlag = firstRevol.<font color="red">IsThin</font>
 firstRevol.<font color="red">IsThin</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="MergeEnd"><dt>

<table><tr><td>o Property <b>MergeEnd</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Revol merge end flag (for thin Revol only).<br>
 It returns TRUE if merge ends is required , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsMergeEnd   The merge end flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>MergeEndFlag</tt> the merge end flag of
 Revol <tt>firstRevol</tt>, and then sets it so that merge end will be required :
 <pre>
 Set MergeEndFlag = firstRevol.<font color="red">IsMergeEnd</font>
 firstRevol.<font color="red">IsMergeEnd</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="NeutralFiber"><dt>

<table><tr><td>o Property <b>NeutralFiber</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Revol neutral fiber flag (for thin Revol only).<br>
 It returns TRUE if the Revol is a neutral fiber Revol , FALSE if not.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oIsNeutralFiber   The neutral fiber flag as a boolean 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example saves in <tt>NeutralFiberFlag</tt> the neutral fiber flag of
 Revol <tt>firstRevol</tt>, and then sets it so that it will be now neutral fiber :
 <pre>
 Set NeutralFiberFlag = firstRevol.<font color="red">IsNeutralFiber</font>
 firstRevol.<font color="red">IsNeutralFiber</font> = TRUE
</pre>
 </dl>
</dl>
</dl>
<a name="RevoluteAxis"><dt>

<table><tr><td>o Property <b>RevoluteAxis</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the rotation axis for Revol.<br>
 To set the property, you can use one of the following 
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> objects:  
<a href="#" onClick="openLink('RectilinearTriDimFeatEdge','');return false">RectilinearTriDimFeatEdge</a>, 
<a href="#" onClick="openLink('RectilinearBiDimFeatEdge','');return false">RectilinearBiDimFeatEdge</a> or 
<a href="#" onClick="openLink('RectilinearMonoDimFeatEdge','');return false">RectilinearMonoDimFeatEdge</a>.  <dl>
 <dt><b>Example</b>:
 This example retrieves in <code>RevoluteAxis</code> the rotation axis for the <code>Rotate axis</code> of the Revol feature
 Dim RevoluteAxis As Reference
 Set RevoluteAxis = Rotate.<font color="red">Axis</font>
</pre>
</dl>
</dl>
<a name="SecondAngle"><dt>

<table><tr><td>o Property <b>SecondAngle</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the revolution second angle.
 This angle is computed around the revolution axis, starting from
 the sketch plane trace on the plane perpendicular to the revolution
 axis, and is counted positive counterclockwise when looking at this
 plane in the revolution axis direction.
 Its default value is 0.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>secondAngle</tt>
 the second angle of the <tt>MyRevolution</tt> revolution object:
 <pre>
 Set secondAngle = MyRevolution.<font color="red">SecondAngle</font>
 </pre>
 </dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
