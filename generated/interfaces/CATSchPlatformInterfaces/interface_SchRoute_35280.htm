<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATSchPlatformInterfaces SchRoute (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../CATSchPlatformInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('SchRoute','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SchRoute','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('SchRoute','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SchRoute','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SchRoute<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SchRoute_35280','SchRoute','0');</script>
<b><i>  Manage a schematic route data.</i></b><br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddPoints"><b>AddPoints</b></a>
<dd>  Add a list of point to a route.
 <dt>
    <a href="#Branch"><b>Branch</b></a>
<dd>  Create a branch from this route.
 <dt>
    <a href="#Break"><b>Break</b></a>
<dd>  Break a route into 2 pieces.
 <dt>
    <a href="#Compress"><b>Compress</b></a>
<dd>  Compress a the defining points of a route, removing coincident points.
 <dt>
    <a href="#Concatenate"><b>Concatenate</b></a>
<dd>  Concatenate 2 routes into one.
 <dt>
    <a href="#ConcatenateKeepRoute2"><b>ConcatenateKeepRoute2</b></a>
<dd>  Concatenate 2 routes into one.
 <dt>
    <a href="#GetExtremityCntrs"><b>GetExtremityCntrs</b></a>
<dd>  Get extremity connectors of the route.
 <dt>
    <a href="#GetPath"><b>GetPath</b></a>
<dd>  Get the defining points of a route.
 <dt>
    <a href="#OKToBranch"><b>OKToBranch</b></a>
<dd>  Query whether it is OK to create a branch.
 <dt>
    <a href="#OKToBreak"><b>OKToBreak</b></a>
<dd>  Query whether it is OK to break.
 <dt>
    <a href="#OKToConcatenate"><b>OKToConcatenate</b></a>
<dd>  Query whether it is OK to concatenate.
 <dt>
    <a href="#OKToModifyPoints"><b>OKToModifyPoints</b></a>
<dd>  Query whether it is OK to modify (add or remove) the points.
 <dt>
    <a href="#RemovePoints"><b>RemovePoints</b></a>
<dd>  Remove points from route.
 <dt>
    <a href="#ReshapeExtremity"><b>ReshapeExtremity</b></a>
<dd>  Change the position of the extremity of the route.
 <dt>
    <a href="#ReshapeExtremity2"><b>ReshapeExtremity2</b></a>
<dd>  Change the position of the extremity of the route.
 <dt>
    <a href="#SetPath"><b>SetPath</b></a>
<dd>  Set the defining points of a route.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddPoints"><dt>

<table><tr><td>o Sub <b>AddPoints</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPathToAdd</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iAfterWhichPtNum</tt>)</table></dt>
<dl>
  <dd>
 Add a list of point to a route. 
 Modify the route according to the route mode
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to add points to
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iLDbPtPathToAdd</tt>
   <dd>   A list of X-Y coordinates of points to be added. 2 doubles per point.
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number to add the points after. Use 0 to indicate adding
   before the first point.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim dbVar2(x) As CATSafeArrayVariant
 Dim intVar4 As Integer
  ...
 objThisIntf.<font color="red">AddPoints</font>objArg1,dbVar2,intVar4
 </pre>

</dl>
</dl>
<a name="Branch"><dt>

<table><tr><td>o Sub <b>Branch</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRRMain</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iSchBranchRoute</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iSchBranchRouteCntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnection','SchAppConnection')</script> <td><tt>oBranchCntn</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>oNewBranchCntr</tt>)</table></dt>
<dl>
  <dd>
 Create a branch from this route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRRMain</tt>
   <dd>   graphical primitive of the "this" route to branch from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iSchBranchRoute</tt>
   <dd>   The route to create a branch connection to (from this route)
 </dd>
    <dt><tt> iSchBranchRouteCntr</tt>
   <dd>   The extremity connector of the branch
 </dd>
    <dt><tt> oBranchCntn</tt>
   <dd>   The branch connection created
 </dd>
    <dt><tt> oNewBranchCntr</tt>
   <dd>   The new branch connector created on "this" route
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim objArg2 As SchRoute
 Dim objArg3 As SchAppConnector
 Dim objArg4 As SchAppConnection
 Dim objArg5 As SchAppConnector
  ...
 objThisIntf.<font color="red">Branch</font>objArg1,objArg2,objArg3,objArg4,objArg5
 </pre>

</dl>
</dl>
<a name="Break"><dt>

<table><tr><td>o Sub <b>Break</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2Pt1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2Pt2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>oNewSchRoute</tt>)</table></dt>
<dl>
  <dd>
 Break a route into 2 pieces. The old route is shortened and a new
 route is created.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to be broken
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iDb2Pt1</tt>
   <dd>   X-Y coordinates of point 1 to break the route at (this point is
   <b>mandatory</b>).
 </dd>
    <dt><tt> iDb2Pt2</tt>
   <dd>   X-Y coordinates of point 2 to break the route at (this point is
   <b>optional</b>). If provided the points in between point 1 and this
   point will be eliminated. Point 1 is the last point of the shortened
   old route and point 2 is the first point of the new route. If this point
   is not provided (sends in a NULL). point 1 and point 2 are the same.
 </dd>
    <dt><tt> oNewSchRoute</tt>
   <dd>   The new Schematic route object
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim dbVar2(2) As CATSafeArrayVariant
 Dim dbVar3(2) As CATSafeArrayVariant
 Dim objArg4 As SchRoute
  ...
 objThisIntf.<font color="red">Break</font>objArg1,dbVar2,dbVar3,objArg4
 </pre>

</dl>
</dl>
<a name="Compress"><dt>

<table><tr><td>o Sub <b>Compress</b>(<td>)</table></dt>
<dl>
  <dd>
 Compress a the defining points of a route, removing coincident points.
    
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
  ...
 objThisIntf.<font color="red">Compress</font>
 </pre>

</dl>
</dl>
<a name="Concatenate"><dt>

<table><tr><td>o Sub <b>Concatenate</b>(<td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iSchRoute1Cntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iSchRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iSchRoute2Cntr</tt>)</table></dt>
<dl>
  <dd>
 Concatenate 2 routes into one. Only works for those that have only one
 line graphic object. The first route is elongated and is modified.
 The second route is deleted.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSchRoute1Cntr</tt>
   <dd>   Connector of this route
   to concatenate with the second route.
 </dd>
    <dt><tt> iSchRoute2</tt>
   <dd>   Second route to be concatenate to the first. iSchRoute2 will be deleted.
 </dd>
    <dt><tt> iSchRoute2Cntr</tt>
   <dd>   Connector of second route to concatenate with the first route.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchAppConnector
 Dim objArg2 As SchRoute
 Dim objArg3 As SchAppConnector
  ...
 objThisIntf.<font color="red">Concatenate</font>objArg1,objArg2,objArg3
 </pre>

</dl>
</dl>
<a name="ConcatenateKeepRoute2"><dt>

<table><tr><td>o Sub <b>ConcatenateKeepRoute2</b>(<td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iSchRoute1Cntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchRoute','SchRoute')</script> <td><tt>iSchRoute2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iSchRoute2Cntr</tt>)</table></dt>
<dl>
  <dd>
 Concatenate 2 routes into one. Only works for those that have only one
 line graphic object. The first route is elongated and is modified.
 The second route is unchanged.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSchRoute1Cntr</tt>
   <dd>   Connector of this route
   to concatenate with the second route.
 </dd>
    <dt><tt> iSchRoute2</tt>
   <dd>   Second route to be concatenate to the first. iSchRoute2 will be unchanged.
 </dd>
    <dt><tt> iSchRoute2Cntr</tt>
   <dd>   Connector of second route to concatenate with the first route.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchAppConnector
 Dim objArg2 As SchRoute
 Dim objArg3 As SchAppConnector
  ...
 objThisIntf.<font color="red">ConcatenateKeepRoute2</font>objArg1,objArg2,objArg3
 </pre>

</dl>
</dl>
<a name="GetExtremityCntrs"><dt>

<table><tr><td>o Sub <b>GetExtremityCntrs</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>oRouteCntr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>oRouteCntr2</tt>)</table></dt>
<dl>
  <dd>
 Get extremity connectors of the route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oRouteCntr1</tt>
   <dd>   Route connector at first extremity
 </dd>
    <dt><tt> oRouteCntr2</tt>
   <dd>   Route connector at second extremity
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim objArg2 As SchAppConnector
 Dim objArg3 As SchAppConnector
  ...
 objThisIntf.<font color="red">GetExtremityCntrs</font>objArg1,objArg2,objArg3
 </pre>

</dl>
</dl>
<a name="GetPath"><dt>

<table><tr><td>o Sub <b>GetPath</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchListOfDoubles','SchListOfDoubles')</script> <td><tt>oLDb2PtPath</tt>)</table></dt>
<dl>
  <dd>
 Get the defining points of a route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route get the path from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of points. 2 doubles per point.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim objArg2 As SchListOfDoubles
  ...
 objThisIntf.<font color="red">GetPath</font>objArg1,objArg2
 </pre>

</dl>
</dl>
<a name="OKToBranch"><dt>

<table><tr><td>o Sub <b>OKToBranch</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iBranchClassType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to create a branch.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iBranchClassType</tt>
   <dd>   Class type of the branch to create.
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to create a branch from a route
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim strVar2 As String
 Dim bVar3 As boolean
  ...
 objThisIntf.<font color="red">OKToBranch</font>objArg1,strVar2,bVar3
 </pre>

</dl>
</dl>
<a name="OKToBreak"><dt>

<table><tr><td>o Sub <b>OKToBreak</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to break.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to break the route
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim bVar2 As boolean
  ...
 objThisIntf.<font color="red">OKToBreak</font>objArg1,bVar2
 </pre>

</dl>
</dl>
<a name="OKToConcatenate"><dt>

<table><tr><td>o Sub <b>OKToConcatenate</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to concatenate.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to concatenate the route with another
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim bVar2 As boolean
  ...
 objThisIntf.<font color="red">OKToConcatenate</font>objArg1,bVar2
 </pre>

</dl>
</dl>
<a name="OKToModifyPoints"><dt>

<table><tr><td>o Sub <b>OKToModifyPoints</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>oBYes</tt>)</table></dt>
<dl>
  <dd>
 Query whether it is OK to modify (add or remove) the points.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to query.
   (if NULL, assume there is only one graphical primitive).
 </dd>
    <dt><tt> oBYes</tt>
   <dd>   If TRUE, then it is OK to add or remove the points from the route
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim bVar2 As boolean
  ...
 objThisIntf.<font color="red">OKToModifyPoints</font>objArg1,bVar2
 </pre>

</dl>
</dl>
<a name="RemovePoints"><dt>

<table><tr><td>o Sub <b>RemovePoints</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iNumOfPtsToRemove</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iAfterWhichPtNum</tt>)</table></dt>
<dl>
  <dd>
 Remove points from route. 
 Modify the route according to the route mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to remove the points from
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iNumOfPtsToRemove</tt>
   <dd>   The number of points to be removed
 </dd>
    <dt><tt> iAfterWhichPtNum</tt>
   <dd>   The point number at which to start removing the point.  
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim intVar2 As Integer
 Dim intVar3 As Integer
  ...
 objThisIntf.<font color="red">RemovePoints</font>objArg1,intVar2,intVar3
 </pre>

</dl>
</dl>
<a name="ReshapeExtremity"><dt>

<table><tr><td>o Sub <b>ReshapeExtremity</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iRouteCntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2DeltaXY</tt>)</table></dt>
<dl>
  <dd>
 Change the position of the extremity of the route. 
 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to reshape
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iRouteCntr</tt>
   <dd>   Route connector whose position is to be modified (CATISchAppConnector
   interface pointer).
 </dd>
    <dt><tt> iDb2DeltaXY</tt>
   <dd>   Delta X-Y coordinates of the extremity move
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim objArg2 As SchAppConnector
 Dim dbVar3(2) As CATSafeArrayVariant
  ...
 objThisIntf.<font color="red">ReshapeExtremity</font>objArg1,objArg2,dbVar3
 </pre>

</dl>
</dl>
<a name="ReshapeExtremity2"><dt>

<table><tr><td>o Sub <b>ReshapeExtremity2</b>(<td><script type="text/javascript"> activateLink('CatSchIDLRouteMode','CatSchIDLRouteMode')</script> <td><tt>iERouteMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('SchAppConnector','SchAppConnector')</script> <td><tt>iRouteCntr</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDb2PtToMoveCntrTo</tt>)</table></dt>
<dl>
  <dd>
 Change the position of the extremity of the route. 
 Modify the route according to the route mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iERouteMode</tt>
   <dd>   Routing mode.
 </dd>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to reshape
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iRouteCntr</tt>
   <dd>   Route connector whose position is to be modified (CATISchConnector
   interface pointer).
 </dd>
    <dt><tt> iDb2PtToMoveCntrTo</tt>
   <dd>   X-Y coordinates of the point to move the connector to.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute

 Dim objArg2 As SchGRRRoute
 Dim objArg3 As SchAppConnector
 Dim dbVar4(2) As CATSafeArrayVariant
  ...
 objThisIntf.<font color="red">ReshapeExtremity2</font>CatSchIDLRouteMode_Enum,objArg2,objArg3,dbVar4
 </pre>

</dl>
</dl>
<a name="SetPath"><dt>

<table><tr><td>o Sub <b>SetPath</b>(<td><script type="text/javascript"> activateLink('SchGRRRoute','SchGRRRoute')</script> <td><tt>iGRR</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iLDb2PtPath</tt>)</table></dt>
<dl>
  <dd>
 Set the defining points of a route.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGRR</tt>
   <dd>   graphical primitive of the route to set the path on
   (if NULL, assume there is only one graphical primitive)
 </dd>
    <dt><tt> iLDbPtPath</tt>
   <dd>   A list of X-Y coordinates of points to be set. 2 doubles per point.
    
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  <pre>
 Dim objThisIntf As SchRoute
 Dim objArg1 As SchGRRRoute
 Dim dbVar2(x) As CATSafeArrayVariant
  ...
 objThisIntf.<font color="red">SetPath</font>objArg1,dbVar2
 </pre>

</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
