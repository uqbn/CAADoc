<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KinematicsInterfaces Dressup (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../KinematicsInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Dressup','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Dressup','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Dressup','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Dressup','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Dressup<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Dressup_25888','Dressup','0');</script>
<b><i>  Interface to access the Dressup object.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Context"><b>Context</b></a>
<dd>   Returns the context product on which the mechanism is defined.
 <dt>
    <a href="#Mechanism"><b>Mechanism</b></a>
<dd>   Returns the mechanism on which a dressup is applied.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Attach"><b>Attach</b></a>
<dd>   Attaches a given product to a link of the mechanism pointed by the dressup.
 <dt>
    <a href="#Detach"><b>Detach</b></a>
<dd>   Detaches an attached product from its link.
 <dt>
    <a href="#ListAttached"><b>ListAttached</b></a>
<dd>   Returns the list of products attached to a given link.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Context"><dt>

<table><tr><td>o Property <b>Context</b>(<td>) As <script type="text/javascript"> activateLink('Product','Product')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the context product on which the mechanism is defined.
 This property is read only.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The dressup mechanism's context
 <! @sample >
    <dt><b>Example:</b>
    <dd>
    This example sets in <tt>MecaContext</tt> the context product of <tt>MyDressup</tt>.
    <pre>
    Dim MecaContext As Product
    Set MecaContext = MyDressup.<font color="red">Context</font>
    </pre>
</dl>
</dl>
<a name="Mechanism"><dt>

<table><tr><td>o Property <b>Mechanism</b>(<td>) As <script type="text/javascript"> activateLink('Mechanism','Mechanism')</script>  (Read Only)</table></dt>
<dl>
  <dd>
  Returns the mechanism on which a dressup is applied.
 This property is read only.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>     The dressup's mechanism
 <! @sample >
  <dt><b>Example:</b>
  <dd>
  This example sets in <tt>Meca</tt> the mechanism of <tt>MyDressup</tt>.
  <pre>
  Dim Meca As Mechanism
  Set Meca = MyDressup.<font color="red">Mechanism</font>
  </pre>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Attach"><dt>

<table><tr><td>o Sub <b>Attach</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iLink</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iAttachedProd</tt>)</table></dt>
<dl>
  <dd>
  Attaches a given product to a link of the mechanism pointed by the dressup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLink</tt>
   <dd>    The link (Product) on which the attachment should be done. 
    It should be a product that belongs to the mechanism pointed by the dressup, 
    otherwise the method will fail.
 </dd>
    <dt><tt> iAttachedProd</tt>
   <dd>    The Product that will be attached to the link. This product should not be a product  
    that is already attached by another link, otherwise the method will fail.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     Nothing
 <! @sample >
    <dt><b>Example:</b>
    <dd>
    This example attaches inside <tt>MyDressup</tt>, <tt>Link1</tt> as mechanism's part to <tt>Product1</tt>.
    <pre>
    Dim Link1 As Product
    Dim Product1 As Product
    ...
    MyDressup.<font color="red">Attach</font>(Link1,Product1)
    </pre>
</dl>
</dl>
<a name="Detach"><dt>

<table><tr><td>o Sub <b>Detach</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iAttachedProd</tt>)</table></dt>
<dl>
  <dd>
  Detaches an attached product from its link.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAttachedProd</tt>
   <dd>    The Product that will be detached. It should be a product that is currently 
    attached in the dressup, otherwise the method will fail.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     Nothing
 <! @sample >
    <dt><b>Example:</b> 
    <dd>
    This example detaches <tt>Product1</tt> previously attached to a mechanism's part
    inside <tt>MyDressup</tt>.  
    <pre>
    Dim Product1 As Product
    ...
    MyDressup.<font color="red">Detach</font>(Product1)
    </pre>
</dl>
</dl>
<a name="ListAttached"><dt>

<table><tr><td>o Func <b>ListAttached</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iLink</tt>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
  Returns the list of products attached to a given link.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLink</tt>
   <dd> The Product on which the returned product list is attached to.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>     The Product list that is attached to iLink.
 <! @sample >
    <dt><b>Example:</b>
    <dd>
    The following example loops for all the products attached to <tt>Link1</tt>. 
    <pre>
    Dim ListAttached1 as Product
    ListAttached1 = MyDressup.<font color="red">ListAttached</font>(Link1)
    Dim Maxi as Integer
    Set Maxi = ubound(ListAttached1)
    Dim Prod_i as Product
    For i = 0  To  Maxi
       Set Prod_i = ListAttached1(i)
       ..
    Next
    </pre>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
