<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ProductStructureInterfaces Product (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../ProductStructureInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Product','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Product','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Product','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Product','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Product<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Product_40279','Product','0');</script>
<b><i> Represents the product.</i></b><br>

 The product is the object that helps you model your real products
 by building a tree structure whose nodes are product objects. Each
 of them may contain other product objects gathered in a product
 collection. The terminal product objects in the tree structure have
 no aggregated product collection.
 Even if all products are located somewhere in the product tree
 structure, some of them can be used as reference products to create
 other products named components, which are instances of the
 reference product. For example, the left front wheel
 in a car can be used as reference to create the other wheels.
 Be careful: some properties and methods are dedicated to reference
 objects only, and some others are for components only.
 This is clearly stated for each property or method concerned.<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Analyze"><b>Analyze</b></a>
<dd>  Returns the Analyze object associated to the current product.
 <dt>
    <a href="#Definition"><b>Definition</b></a>
<dd>  Returns or sets the product's definition.
 <dt>
    <a href="#DescriptionInst"><b>DescriptionInst</b></a>
<dd>  Returns or sets the product's description for a component product.
 <dt>
    <a href="#DescriptionRef"><b>DescriptionRef</b></a>
<dd>  Returns or sets the product's description for a reference product.
 <dt>
    <a href="#Move"><b>Move</b></a>
<dd>  Returns the product's move object.
 <dt>
    <a href="#Nomenclature"><b>Nomenclature</b></a>
<dd>  Returns or sets the product's nomenclature.
 <dt>
    <a href="#Parameters"><b>Parameters</b></a>
<dd>  Returns the collection object containing the product parameters.
 <dt>
    <a href="#PartNumber"><b>PartNumber</b></a>
<dd>  Returns or sets the product's part number.
 <dt>
    <a href="#Position"><b>Position</b></a>
<dd>  Returns the product's position object.
 <dt>
    <a href="#Products"><b>Products</b></a>
<dd>  Returns the collection of products contained in the current product.
 <dt>
    <a href="#Publications"><b>Publications</b></a>
<dd>  Returns the collection of publications managed by the product.
 <dt>
    <a href="#ReferenceProduct"><b>ReferenceProduct</b></a>
<dd>  Returns the Reference Product of this instance.
 <dt>
    <a href="#Relations"><b>Relations</b></a>
<dd>  Returns the collection object containing the product relations.
 <dt>
    <a href="#Revision"><b>Revision</b></a>
<dd>  Returns or sets the product's revision number.
 <dt>
    <a href="#Source"><b>Source</b></a>
<dd>  Returns or sets the product's source.
 <dt>
    <a href="#UserRefProperties"><b>UserRefProperties</b></a>
<dd>  Returns the collection object containing the product properties.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#ActivateDefaultShape"><b>ActivateDefaultShape</b></a>
<dd>  Activate default shape.
 <dt>
    <a href="#ActivateShape"><b>ActivateShape</b></a>
<dd>  Activate one shape.
 <dt>
    <a href="#AddMasterShapeRepresentation"><b>AddMasterShapeRepresentation</b></a>
<dd>  Adds the master shape representation to the product.
 <dt>
    <a href="#AddShapeRepresentation"><b>AddShapeRepresentation</b></a>
<dd>  Adds a representation to the product with a specific behavior.
 <dt>
    <a href="#ApplyWorkMode"><b>ApplyWorkMode</b></a>
<dd>   Applies a new working mode.
 <dt>
    <a href="#Connections"><b>Connections</b></a>
<dd>  Returns the product's constraints.
 <dt>
    <a href="#CreateReferenceFromName"><b>CreateReferenceFromName</b></a>
<dd>  Creates a reference from a name.
 <dt>
    <a href="#DesactivateDefaultShape"><b>DesactivateDefaultShape</b></a>
<dd>  Deactivate default shape.
 <dt>
    <a href="#DesactivateShape"><b>DesactivateShape</b></a>
<dd>  Deactivate one shape.
 <dt>
    <a href="#ExtractBOM"><b>ExtractBOM</b></a>
<dd>  Extracts the product's contents as a bill of materials (BOM).
 <dt>
    <a href="#GetActiveShapeName"><b>GetActiveShapeName</b></a>
<dd>  Returns the name of the active shape.
 <dt>
    <a href="#GetAllShapesNames"><b>GetAllShapesNames</b></a>
<dd>   List the name of all shapes.
 <dt>
    <a href="#GetDefaultShapeName"><b>GetDefaultShapeName</b></a>
<dd>  Returns the default shape.
 <dt>
    <a href="#GetMasterShapeRepresentation"><b>GetMasterShapeRepresentation</b></a>
<dd>  Retrieves the product's master shape representation.
 <dt>
    <a href="#GetMasterShapeRepresentationPathName"><b>GetMasterShapeRepresentationPathName</b></a>
<dd>  Retrieves the product's master shape representation pathname.
 <dt>
    <a href="#GetNumberOfShapes"><b>GetNumberOfShapes</b></a>
<dd>   Returns the number of Shapes
 
 <dt>
    <a href="#GetShapePathName"><b>GetShapePathName</b></a>
<dd>  Returns the path name of a shape for a given shape name.
 <dt>
    <a href="#GetShapeRepresentation"><b>GetShapeRepresentation</b></a>
<dd>  Retrieves the product's  representation with the given parameters.
 <dt>
    <a href="#GetTechnologicalObject"><b>GetTechnologicalObject</b></a>
<dd>  Returns the product's applicative data which type is the given parameter.
 <dt>
    <a href="#HasAMasterShapeRepresentation"><b>HasAMasterShapeRepresentation</b></a>
<dd>  Returns whether the product has a master shape representation.
 <dt>
    <a href="#HasShapeRepresentation"><b>HasShapeRepresentation</b></a>
<dd>  Returns whether the product has a representation of the given name with a given behavior.
 <dt>
    <a href="#RemoveMasterShapeRepresentation"><b>RemoveMasterShapeRepresentation</b></a>
<dd>  Removes the master shape representation from the product.
 <dt>
    <a href="#RemoveShapeRepresentation"><b>RemoveShapeRepresentation</b></a>
<dd>  Removes a specific representation from the product.
 <dt>
    <a href="#Update"><b>Update</b></a>
<dd>  Updates the product.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Analyze"><dt>

<table><tr><td>o Property <b>Analyze</b>(<td>) As <script type="text/javascript"> activateLink('Analyze','Analyze')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the Analyze object associated to the current product.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>EngineAnalysis</tt> the Analyze object of
 the <tt>Engine</tt> product.
 <pre>
 Dim EngineAnalysis As Analyze
 Set EngineAnalysis = Engine.<font color="red">Analyze</font>
 </pre>
</dl>
</dl>
<a name="Definition"><dt>

<table><tr><td>o Property <b>Definition</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's definition.
 <br>
 <tt>Definition</tt> is valid for reference products only.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the definition of the
 <tt>Engine</tt> product in <tt>EngineDef</tt>.
 <pre>
 EngineDef = Engine.<font color="red">Definition</font>
 </pre>
</dl>
</dl>
<a name="DescriptionInst"><dt>

<table><tr><td>o Property <b>DescriptionInst</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's description for a component product.
 <br>
 <tt>DescriptionInst</tt> is valid for component products only.
 <br>
 The description is a comment assigned to the component product to help
 describe  or qualify it.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the description for the
 <tt>EngineComp</tt> product.
 <pre>
 Desc = "This is the Engine component product description"
 EngineComp.<font color="red">DescriptionInst</font>(Desc)
 </pre>
</dl>
</dl>
<a name="DescriptionRef"><dt>

<table><tr><td>o Property <b>DescriptionRef</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's description for a reference product.
 <br>
 <tt>DescriptionRef</tt> is valid for reference products only.
 <br>
 The description is a comment assigned to the reference product to help
 describe  or qualify it.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the description for the
 <tt>Engine</tt> product.
 <pre>
 Desc = "This is the Engine reference product description"
 Engine.<font color="red">DescriptionRef</font>(Desc)
 </pre>
</dl>
</dl>
<a name="Move"><dt>

<table><tr><td>o Property <b>Move</b>(<td>) As <script type="text/javascript"> activateLink('Move','Move')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the product's move object.
 The move object is aggregated by the product object
 and itself aggregates a movable object
 to which you can apply a move transformation
 by means of an isometry matrix. It moves your product
 master shape representation according to this isometry.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the move object for the
 <tt>Engine</tt> product.
 <pre>
 Dim EngineMoveObject As Move
 Set EngineMoveObject = Engine.<font color="red">Move</font>
 </pre>
</dl>
</dl>
<a name="Nomenclature"><dt>

<table><tr><td>o Property <b>Nomenclature</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's nomenclature.
 <br>
 <tt>Nomenclature</tt> is valid for reference products only.
 <br>
 According to the STEP AP203, the nomenclature is "a name by which
 the part is commonly known within an organization".
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the nomenclature the
 <tt>Engine</tt> product in <tt>EngineNom</tt>.
 <pre>
 EngineNom = Engine.<font color="red">Nomenclature</font>
 </pre>
</dl>
</dl>
<a name="Parameters"><dt>

<table><tr><td>o Property <b>Parameters</b>(<td>) As <script type="text/javascript"> activateLink('Parameters','Parameters')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection object containing the product parameters.
 All the parameters that are aggregated in the different
 objects of the product might be accessed through that collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>params</tt> the parameters
 of the <tt>productRoot</tt> product from the <tt>productDoc</tt> product document:
 <pre>
 Set productRoot = productDoc.Product
 Set params = productRoot.<font color="red">Parameters</font>
 </pre>
 </dl>
</dl>
<a name="PartNumber"><dt>

<table><tr><td>o Property <b>PartNumber</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's part number.
 <br>
 <tt>PartNumber</tt> is valid for reference products only.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the
 <tt>Engine</tt> product's part number to <tt>A120-253X-7</tt>.
 <pre>
 Engine.<font color="red">PartNumber</font>("A120-253X-7")
 </pre>
</dl>
</dl>
<a name="Position"><dt>

<table><tr><td>o Property <b>Position</b>(<td>) As <script type="text/javascript"> activateLink('Position','Position')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the product's position object.
 The position object is the object aggregated by the product object that
 holds the position of the master shape representation in the space.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the position object for the
 <tt>Engine</tt> product.
 <pre>
 Dim EnginePositionObject As Position
 Set EnginePositionObject = Engine.<font color="red">Position</font>
 </pre>
</dl>
</dl>
<a name="Products"><dt>

<table><tr><td>o Property <b>Products</b>(<td>) As <script type="text/javascript"> activateLink('Products','Products')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of products contained in the current product.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>EngineChildren</tt> the collection of
 products contained in the <tt>Engine</tt> product.
 <pre>
 Dim EngineChildren As Products
 Set EngineChildren = Engine.<font color="red">Products</font>
 </pre>
</dl>
</dl>
<a name="Publications"><dt>

<table><tr><td>o Property <b>Publications</b>(<td>) As <script type="text/javascript"> activateLink('Publications','Publications')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of publications managed by the product.
</dl>
<a name="ReferenceProduct"><dt>

<table><tr><td>o Property <b>ReferenceProduct</b>(<td>) As <script type="text/javascript"> activateLink('Product','Product')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the Reference Product of this instance.
</dl>
<a name="Relations"><dt>

<table><tr><td>o Property <b>Relations</b>(<td>) As <script type="text/javascript"> activateLink('Relations','Relations')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection object containing the product relations.
 All the relations that are used to valuate
 the parameters of the product might be accessed thru that collection.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>rels</tt> the relations
 of the <tt>productRoot</tt> product from the <tt>productDoc</tt> product document:
 <pre>
 Set productRoot = productDoc.Product
 Set rels = productRoot.<font color="red">Relations</font>
 </pre>
 </dl>
</dl>
<a name="Revision"><dt>

<table><tr><td>o Property <b>Revision</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's revision number.
 <br>
 <tt>Revision</tt> is valid for reference products only.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the
 <tt>Engine</tt> product's revision number to <tt>3A</tt>.
 <pre>
 Engine.<font color="red">Revision</font>("3A")
 </pre>
</dl>
</dl>
<a name="Source"><dt>

<table><tr><td>o Property <b>Source</b>(<td>) As <script type="text/javascript"> activateLink('CatProductSource','CatProductSource')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the product's source.
 <br>
 <tt>Source</tt> is valid for reference products only.
 <br>
 According to the STEP AP203, the source is the "design organization's
 plan for obtaining the product".
 The source can take the values catProductMade if the product is made
 internally, catProductBought if it is purchased from a vendor,
 or catProductUnknown if its origin is not determined.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example sets the source for the
 <tt>Engine</tt> product to <tt>catProductMade</tt>.
 <pre>
 Engine.<font color="red">Source</font>(catProductMade)
 </pre>
</dl>
</dl>
<a name="UserRefProperties"><dt>

<table><tr><td>o Property <b>UserRefProperties</b>(<td>) As <script type="text/javascript"> activateLink('Parameters','Parameters')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection object containing the product properties.
 All the user defined properties that are created in the reference product
 might be accessed through that collection.
 <br>
 Only available on reference products.
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>UserProps</tt> the properties
 of the <tt>productRoot</tt> product from the <tt>productDoc</tt> product document:
 <pre>
 Set productRoot = productDoc.Product
 Set UserProps = productRoot.<font color="red">UserRefProperties</font>
 </pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="ActivateDefaultShape"><dt>

<table><tr><td>o Sub <b>ActivateDefaultShape</b>(<td>)</table></dt>
<dl>
  <dd>
 Activate default shape.
</dl>
<a name="ActivateShape"><dt>

<table><tr><td>o Sub <b>ActivateShape</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>ShapeName</tt>)</table></dt>
<dl>
  <dd>
 Activate one shape.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ShapeName</tt>
   <dd>           The name of the shape.</dd>
</dl>
</dl>
</dl>
<a name="AddMasterShapeRepresentation"><dt>

<table><tr><td>o Sub <b>AddMasterShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapePathName</tt>)</table></dt>
<dl>
  <dd>
 Adds the master shape representation to the product.
 The master shape representation is the object that gives a geometric
 shape and allows
 the visualization of the product. It can be
 a CATIA V4
 model, a VRML file, or any other type of document that can be displayed.
 In a multi representation  context, the master shape representation is the most 
 meaningful representation of the product according to the user.
 This is the default shape for the multi representation.
 <p><b>Note:</b>
 This master shape representation is optional.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShapePathName</tt>
   <dd>   The path name where the master shape representation can be found
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example adds the <tt>e:\Models\Engine.model</tt> as
 the master shape representation to the <tt>Engine</tt> product.
 <pre>
 Engine.<font color="red">AddMasterShapeRepresentation</font>("e:\Models\Engine.model")
 </pre>
</dl>
</dl>
<a name="AddShapeRepresentation"><dt>

<table><tr><td>o Sub <b>AddShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapePathName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatRepType','CatRepType')</script> <td><tt>iRepBehavior</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iContext</tt>)</table></dt>
<dl>
  <dd>
 Adds a representation to the product with a specific behavior.
 A representation is the object that gives a geometric shape and allows
 the visualization of the product. It can be 
 a CATIA V4
 model, a VRML file, or any other type of document that can be displayed.
 <p><b>Note:</b>
 The possible behavior supported are : 3D, 2D and text.
 The representation can also be added within a context or not.
 A representation on a product is optional, but many representation with 
 different behavior (or the same) is supported
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShapePathName</tt>
   <dd>   The path name where the representation can be found
 </dd>
    <dt><tt> iShapeName</tt>
   <dd>   The name that is given to the representation
   This name is a user free choice
 </dd>
    <dt><tt> iRepBehavior</tt>
   <dd>   The behavior of the added representation.
   It can take the values catRep3D if the representation is a 3D one,
   catRep2D if the representation is a 2D one,
   or catRepText if the representation is a text one.
 </dd>
    <dt><tt> iContext</tt>
   <dd>   A condition to specify if the added representation can be
   displayed with the representation of other products.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example adds the <tt>e:\Models\Engine.model</tt> as
 a 3D representation to the <tt>Engine</tt> product within an assembly context.
 <pre>
 Engine.<font color="red">AddShapeRepresentation</font>("e:\Models\Engine.model","MyShape",catRep3D,TRUE)
 </pre>
</dl>
</dl>
<a name="ApplyWorkMode"><dt>

<table><tr><td>o Sub <b>ApplyWorkMode</b>(<td><script type="text/javascript"> activateLink('CatWorkModeType','CatWorkModeType')</script> <td><tt>newMode</tt>)</table></dt>
<dl>
  <dd>
  Applies a new working mode.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> newMode</tt>
   <dd>           The new working mode.</dd>
</dl>
</dl>
</dl>
<a name="Connections"><dt>

<table><tr><td>o Func <b>Connections</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iConnectionsType</tt>) As <script type="text/javascript"> activateLink('Collection','Collection')</script> </table></dt>
<dl>
  <dd>
 Returns the product's constraints.
 The constraint collection of a product gathers the constraints
 this product should respect to be positioned in the space.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the constraint collection for the
 <tt>Engine</tt> product.
 <pre>
 Dim EngineConstraints As Collection
 Set EngineConstraints = Engine.<font color="red">Constraints</font>
 </pre>
</dl>
</dl>
<a name="CreateReferenceFromName"><dt>

<table><tr><td>o Func <b>CreateReferenceFromName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iLabel</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Creates a reference from a name.
 A reference is an object that can stand for any geometrical object.
 Creating references is necessary for adding constraints between two
 components using Brep elements of the representations of these
 components.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLabel</tt>
   <dd>   The path of the Brep element to use in the constraint.
   This path is passed as a character string comprising the component
   path from the root product to the component concerned, concatenated
   to the Brep element path in the product's representation.
   Components are separated using "/", and the product path is separated
   from the Brep using "/!".
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  The created reference 
  <dt> <b>Example:</b> 
  <dd>  This example creates a reference from the path of a Brep element 
 in the <tt>Prod2</tt> product located below the <tt>Root</tt> root 
 product. The face is located in the <tt>Pad.1</tt> pad and limited by the
 <tt>Circle.1</tt> circle.
 <pre>
 Dim Ref As Reference
 Ref = Prod2.<font color="red">CreateReferenceFromName</font>("Root/Prod2/!Face:(Brp:(Pad.1:0(Brp:(Circle.1))):None())")
 </pre>
</dl>
</dl>
<a name="DesactivateDefaultShape"><dt>

<table><tr><td>o Sub <b>DesactivateDefaultShape</b>(<td>)</table></dt>
<dl>
  <dd>
 Deactivate default shape.
</dl>
<a name="DesactivateShape"><dt>

<table><tr><td>o Sub <b>DesactivateShape</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>ShapeName</tt>)</table></dt>
<dl>
  <dd>
 Deactivate one shape. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> ShapeName</tt>
   <dd>           The name of the shape.</dd>
</dl>
</dl>
</dl>
<a name="ExtractBOM"><dt>

<table><tr><td>o Sub <b>ExtractBOM</b>(<td><script type="text/javascript"> activateLink('CatFileType','CatFileType')</script> <td><tt>iFileType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFile</tt>)</table></dt>
<dl>
  <dd>
 Extracts the product's contents as a bill of materials (BOM).
 The bill of material displays, for every sub-assembly in the product,
 the one level depth components and some of their properties.
 <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFileType</tt>
   <dd>   Set this parameter to <tt>catFileTypeHTML</tt> to save to the html format.
 <br>
   Set this parameter to <tt>catFileTypeTXT</tt> to save to the text format.
 <br>
   The <tt>catFileTypeMotif</tt> should not be used.
 </dd>
    <dt><tt> iFile</tt>
   <dd>   File where the bill of material will be saved</dd>
</dl>
</dl>
</dl>
<a name="GetActiveShapeName"><dt>

<table><tr><td>o Func <b>GetActiveShapeName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the name of the active shape.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oShapeName           The name of the active shape.
</dl>
</dl>
<a name="GetAllShapesNames"><dt>

<table><tr><td>o Sub <b>GetAllShapesNames</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>olistshape</tt>)</table></dt>
<dl>
  <dd>
  List the name of all shapes.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  olistshape           The list of the names 
 The tab olistshape has to be allocated with a size given by GetNumberOfShapes.
</dl>
</dl>
<a name="GetDefaultShapeName"><dt>

<table><tr><td>o Func <b>GetDefaultShapeName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the default shape.
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oShapeName           The name of the default shape.
</dl>
</dl>
<a name="GetMasterShapeRepresentation"><dt>

<table><tr><td>o Func <b>GetMasterShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iLoadIfNecessary</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Retrieves the product's master shape representation.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLoadIfNecessary</tt>
   <dd>   Parameter to set to True if the master shape representation
   should be loaded to determine if it exists, or to False otherwise.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>MSRep</tt> the 
 <tt>Engine</tt> product's master shape representation.
 <pre>
 Dim MSRep As Object
 Set MSRep = Engine.<font color="red">GetMasterShapeRepresentation</font>(True)
 </pre>
</dl>
</dl>
<a name="GetMasterShapeRepresentationPathName"><dt>

<table><tr><td>o Func <b>GetMasterShapeRepresentationPathName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Retrieves the product's master shape representation pathname.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>MSRep</tt> the 
 <tt>Engine</tt> product's master shape representation.
 <pre>
 Set MSRepPath = Engine.<font color="red">GetMasterShapeRepresentationPathName</font>
 </pre>
</dl>
</dl>
<a name="GetNumberOfShapes"><dt>

<table><tr><td>o Func <b>GetNumberOfShapes</b>(<td>) As <script type="text/javascript"> activateLink('short','short')</script> </table></dt>
<dl>
  <dd>
  Returns the number of Shapes
 
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oNbShapes           The number of Shapes.
</dl>
</dl>
<a name="GetShapePathName"><dt>

<table><tr><td>o Func <b>GetShapePathName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapeName</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the path name of a shape for a given shape name.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShapeName</tt>
   <dd>   The name of the shape.
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oShapePathName           The path name of the shape.
</dl>
</dl>
<a name="GetShapeRepresentation"><dt>

<table><tr><td>o Func <b>GetShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iLoadIfNecessary</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatRepType','CatRepType')</script> <td><tt>iRepBehavior</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iContext</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Retrieves the product's  representation with the given parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLoadIfNecessary</tt>
   <dd>   Parameter to set to True if the master shape representation
   should be loaded to determine if it exists, or to False otherwise.
 </dd>
    <dt><tt> iShapeName</tt>
   <dd>   The name of the representation of the product.
 </dd>
    <dt><tt> iRepBehavior</tt>
   <dd>   The behavior of the representation.
   It can take the values catRep3D if the representation is a 3D one,
   catRep2D if the representation is a 2D one,
   or catRepText if the representation is a text one.
 </dd>
    <dt><tt> iContext</tt>
   <dd>   A condition to specify if the representation is
   displayed with the representation of other products.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>MSRep</tt> the 
 <tt>Engine</tt> product's  3D representation named "PART".
 <pre>
 Dim MSRep As Object
 Set MSRep = Engine.<font color="red">GetMasterShapeRepresentation</font>(True,"PART",catRep3D,TRUE)
 </pre>
</dl>
</dl>
<a name="GetTechnologicalObject"><dt>

<table><tr><td>o Func <b>GetTechnologicalObject</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iApplicationType</tt>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Returns the product's applicative data which type is the given parameter.
 The data returned can be either a collection or a simple object.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iApplicationType</tt>
   <dd>   The type of applicative data searched.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves the constraints for the
 <tt>Engine</tt> product.
 <pre>
 Dim EngineConstraints As Collection
 Set EngineConstraints = Engine.<font color="red">GetTechnologicalObject</font>("Constraints")
 </pre>
</dl>
</dl>
<a name="HasAMasterShapeRepresentation"><dt>

<table><tr><td>o Func <b>HasAMasterShapeRepresentation</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether the product has a master shape representation.
 <br>
 <b>True</b> if the product has a master shape representation. 
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>HasMSRep</tt> whether the
 <tt>Engine</tt> product has a master shape representation.
 <pre>
 HasMSRep = Engine.<font color="red">HasAMasterShapeRepresentation</font>()
 </pre>
</dl>
</dl>
<a name="HasShapeRepresentation"><dt>

<table><tr><td>o Func <b>HasShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatRepType','CatRepType')</script> <td><tt>iRepBehavior</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iContext</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns whether the product has a representation of the given name with a given behavior.
 <br>
 <b>True</b> if the product has such a representation. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShapeName</tt>
   <dd>   The name of the representation of the product.
 </dd>
    <dt><tt> iRepBehavior</tt>
   <dd>   The behavior of the representation.
   It can take the values catRep3D if the representation is a 3D one,
   catRep2D if the representation is a 2D one,
   or catRepText if the representation is a text one.
 </dd>
    <dt><tt> iContext</tt>
   <dd>   A condition to specify if the representation is
   displayed with the representation of other products.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <tt>HasRep</tt> whether the
 <tt>Engine</tt> product has a master shape representation.
 <pre>
 HasRep = Engine.<font color="red">HasRepresentation</font>("PART",catRep3D,TRUE)
 </pre>
</dl>
</dl>
<a name="RemoveMasterShapeRepresentation"><dt>

<table><tr><td>o Sub <b>RemoveMasterShapeRepresentation</b>(<td>)</table></dt>
<dl>
  <dd>
 Removes the master shape representation from the product.
 The master shape representation is the object that gives a geometric
 shape and allows
 the visualization of the product. It can be
 a CATIA V4
 model, a VRML file, or any other type of document that can be displayed.
 In a multi representation  context, the master shape representation is the most 
 meaningful representation of the product according to the user.
 This is the default shape for the multi representation.
 <p><b>Note:</b>
 This master shape representation is optional.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example removes the master shape representation of the
 <tt>Engine</tt> product.
 <pre>
 Engine.<font color="red">RemoveMasterShapeRepresentation</font>()
 </pre>
</dl>
</dl>
<a name="RemoveShapeRepresentation"><dt>

<table><tr><td>o Sub <b>RemoveShapeRepresentation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iShapeName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatRepType','CatRepType')</script> <td><tt>iRepBehavior</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iContext</tt>)</table></dt>
<dl>
  <dd>
 Removes a specific representation from the product.
 A representation is the object that gives a geometric shape and allows
 the visualization of the product.. It can be
 a CATIA V4
 model, a VRML file, or any other type of document that can be displayed.
 <p><b>Note:</b>
 This representation is optional.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iShapeName</tt>
   <dd>   The name of the representation of the product.
 </dd>
    <dt><tt> iRepBehavior</tt>
   <dd>   The behavior of the representation.
   It can take the values catRep3D if the representation is a 3D one,
   catRep2D if the representation is a 2D one,
   or catRepText if the representation is a text one.
 </dd>
    <dt><tt> iContext</tt>
   <dd>   A condition to specify if the representation is
   displayed with the representation of other products.
 </dd>
</dl>
  <dt> <b>Example:</b> 
  <dd>  This example removes the 3D representation named "PART" of the
 <tt>Engine</tt> product.
 <pre>
 Engine.<font color="red">RemoveMasterShapeRepresentation</font>
("PART",catRep3D,TRUE)
 </pre>
</dl>
</dl>
<a name="Update"><dt>

<table><tr><td>o Sub <b>Update</b>(<td>)</table></dt>
<dl>
  <dd>
 Updates the product.
 This update is performed with respect to the part making the product
 or to the product's representation. It takes into account the 
 components of the product at any level
 
<dl>
  <dt> <b>Example:</b> 
  <dd>   The following example updates the root product:
 <pre>
 Dim RootProduct As Product
 Set Rootproduct = productDoc.Product
 Rootproduct.<font color="red">Update</font>
 </pre>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
