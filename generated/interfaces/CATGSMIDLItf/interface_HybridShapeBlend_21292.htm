<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMIDLItf HybridShapeBlend (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../CATGSMIDLItf.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('HybridShapeBlend','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('HybridShapeBlend','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('HybridShapeBlend','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('HybridShapeBlend','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>HybridShapeBlend<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_HybridShapeBlend_21292','HybridShapeBlend','0');</script>
<b><i> Represents the hybrid shape blended surface object.</i></b><br>

 <b>Role</b>: To access the data of the hybrid shape blended surface object.
 <p>This data includes:
 <ul>
 <li>Two support surfaces, one at each limit of the blended surface</li>
 <li>Two curves, one for each support surface</li>
 <li>The curve closing points</li>
 </ul>
 <p>Use the CATIAHybridShapeFactory to create a HybridShapeBlend object.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('HybridShapeFactory','');return false">HybridShapeFactory</a>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Coupling"><b>Coupling</b></a>
<dd>  Returns or sets the type of coupling between the limits of the blend.
 <dt>
    <a href="#RuledDevelopableSurface"><b>RuledDevelopableSurface</b></a>
<dd>  Returns or sets the ruled developable surface mode.
 <dt>
    <a href="#SmoothAngleThreshold"><b>SmoothAngleThreshold</b></a>
<dd>  Returns the angular threshold.
 <dt>
    <a href="#SmoothAngleThresholdActivity"><b>SmoothAngleThresholdActivity</b></a>
<dd>  Returns or sets information whether a blending operation is smoothed or not.
 <dt>
    <a href="#SmoothDeviation"><b>SmoothDeviation</b></a>
<dd>  Returns the deviation value (length) from guide curves allowed during a sweeping operation in order to smooth it.
 <dt>
    <a href="#SmoothDeviationActivity"><b>SmoothDeviationActivity</b></a>
<dd>  Returns or sets information whether a deviation from guide curves is allowed or not.
 <dt>
    <a href="#Spine"><b>Spine</b></a>
<dd>  Returns or sets a curve used as spine for coupling in Blend computation.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#GetBorderMode"><b>GetBorderMode</b></a>
<dd>  Returns the type of border to a limit of the blend.
 <dt>
    <a href="#GetClosingPoint"><b>GetClosingPoint</b></a>
<dd>  Returns the closing point of a closed curve of the blend.
 <dt>
    <a href="#GetContinuity"><b>GetContinuity</b></a>
<dd>  Retrieves the continuity of a limit of the blend.
 <dt>
    <a href="#GetCurve"><b>GetCurve</b></a>
<dd>  Returns a curve from the blend.
 <dt>
    <a href="#GetOrientation"><b>GetOrientation</b></a>
<dd>  Returns the orientation of a curve of the blend.
 <dt>
    <a href="#GetRuledDevelopableSurfaceConnection"><b>GetRuledDevelopableSurfaceConnection</b></a>
<dd>  Returns or sets the ruled developable surface connection type.
 <dt>
    <a href="#GetSupport"><b>GetSupport</b></a>
<dd>  Returns a support from the blend.
 <dt>
    <a href="#GetTensionInDouble"><b>GetTensionInDouble</b></a>
<dd>  Returns the tension values of a limit of the blend.
 <dt>
    <a href="#GetTensionType"><b>GetTensionType</b></a>
<dd>  Returns the tension type of a limit of the blend.
 <dt>
    <a href="#GetTransition"><b>GetTransition</b></a>
<dd>  Returns the transition orientation from a limit of the blend.
 <dt>
    <a href="#GetTrimSupport"><b>GetTrimSupport</b></a>
<dd>  Returns whether a support of the blend will be trimmed off.
 <dt>
    <a href="#InsertCoupling"><b>InsertCoupling</b></a>
<dd>  Inserts a coupling into the blend.
 <dt>
    <a href="#InsertCouplingPoint"><b>InsertCouplingPoint</b></a>
<dd>  Inserts a coupling point to a coupling of the blend.
 <dt>
    <a href="#SetBorderMode"><b>SetBorderMode</b></a>
<dd>  Sets the type of border to a limit of the blend.
 <dt>
    <a href="#SetClosingPoint"><b>SetClosingPoint</b></a>
<dd>  Sets a new closing point to a closed curve of the blend.
 <dt>
    <a href="#SetContinuity"><b>SetContinuity</b></a>
<dd>  Sets the continuity to a limit of the blend.
 <dt>
    <a href="#SetCurve"><b>SetCurve</b></a>
<dd>  Sets a curve to the blend.
 <dt>
    <a href="#SetOrientation"><b>SetOrientation</b></a>
<dd>  Sets the orientation of a curve of the blend.
 <dt>
    <a href="#SetRuledDevelopableSurfaceConnection"><b>SetRuledDevelopableSurfaceConnection</b></a>
<dd>  <dt>
    <a href="#SetSmoothAngleThreshold"><b>SetSmoothAngleThreshold</b></a>
<dd>  Sets the angular threshold.
 <dt>
    <a href="#SetSmoothDeviation"><b>SetSmoothDeviation</b></a>
<dd>  Sets the deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 <dt>
    <a href="#SetSupport"><b>SetSupport</b></a>
<dd>  Sets a support to the blend.
 <dt>
    <a href="#SetTensionInDouble"><b>SetTensionInDouble</b></a>
<dd>  Sets the tension values to a limit of the blend.
 <dt>
    <a href="#SetTensionType"><b>SetTensionType</b></a>
<dd>  Sets the tension type of a limit of the blend.
 <dt>
    <a href="#SetTransition"><b>SetTransition</b></a>
<dd>  Sets the transition orientation to a limit of the blend.
 <dt>
    <a href="#SetTrimSupport"><b>SetTrimSupport</b></a>
<dd>  Sets whether a support of the blend is to be trimmed off.
 <dt>
    <a href="#UnsetClosingPoint"><b>UnsetClosingPoint</b></a>
<dd>  Unsets the closing point of a closed curve of the blend.
 <dt>
    <a href="#UnsetSupport"><b>UnsetSupport</b></a>
<dd>  Unsets a support from the blend.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Coupling"><dt>

<table><tr><td>o Property <b>Coupling</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the type of coupling between the limits of the blend.
 <br>
 <b>Legal values</b>: The values representing the type of coupling can be:
 <dl>
   <dt>1 <dd>Ratio: the curves are coupled according to the curvilinear abscissa ratio
   <dt>2 <dd>Tangency: the curves are coupled according to their tangency discontinuity points.
             If they do not have the same number of tangency discontinuity points,
             they cannot be coupled and an error message is displayed
   <dt>3 <dd>Tangency then curvature: the curves are coupled according to their tangency
             discontinuity points first, then according to their curvature discontinuity points.
             If they do not have the same number of tangency and curvature discontinuity points,
             they cannot be coupled and an error message is displayed
   <dt>4 <dd>Vertices: the curves are coupled according to their vertices.
             If they do not have the same number of vertices, they cannot be coupled
             and an error message is displayed
   <dt>5 <dd>Spine: coupling is completely driven by a curve (called spine)
 </dl>
 <dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>CouplingVal</code> the coupling value
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 CouplingVal = ShpBlend.<font color="red">Coupling</font>
 </pre>
 </dl>
</dl>
<a name="RuledDevelopableSurface"><dt>

<table><tr><td>o Property <b>RuledDevelopableSurface</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the ruled developable surface mode.
 <br>TRUE means that the mode is enabled and FALSE means that it is disabled.
</dl>
<a name="SmoothAngleThreshold"><dt>

<table><tr><td>o Property <b>SmoothAngleThreshold</b>(<td>) As <script type="text/javascript"> activateLink('Angle','Angle')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the angular threshold.
</dl>
<a name="SmoothAngleThresholdActivity"><dt>

<table><tr><td>o Property <b>SmoothAngleThresholdActivity</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets information whether a blending operation is smoothed or not.
 <br>TRUE if the blending operation is smoothed, or FALSE otherwise (FALSE if not specified).
</dl>
<a name="SmoothDeviation"><dt>

<table><tr><td>o Property <b>SmoothDeviation</b>(<td>) As <script type="text/javascript"> activateLink('Length','Length')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the deviation value (length) from guide curves allowed during a sweeping operation in order to smooth it.
</dl>
<a name="SmoothDeviationActivity"><dt>

<table><tr><td>o Property <b>SmoothDeviationActivity</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets information whether a deviation from guide curves is allowed or not.
 <br>Gives the information on performing smoothing during blending operation.
 <br>TRUE if a deviation from guide curves is allowed, or FALSE otherwise (FALSE if not specified).
</dl>
<a name="Spine"><dt>

<table><tr><td>o Property <b>Spine</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets a curve used as spine for coupling in Blend computation.
 Setting the spine curve also changes coupling mode to CATGSMSpineCoupling.
 In order to remove the spine, set another coupling mode.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSpine</tt>
   <dd>      spine curve</dd>
</dl>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="GetBorderMode"><dt>

<table><tr><td>o Func <b>GetBorderMode</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the type of border to a limit of the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose type of border is to be retrieved.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The type of border
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>The border of the blend will be tangent to the border of the support surface, 
                 or if the curve ends on the border of a face of the support surface, then
                 the border of the blend will be tangent to the border face.
       <dt>2 <dd>The border of the blend is not constrained.
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>BorderType</code> the type of border of the first limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 BorderType = ShpBlend.<font color="red">GetBorderMode</font>(1)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetClosingPoint"><dt>

<table><tr><td>o Func <b>GetClosingPoint</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns the closing point of a closed curve of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose curve closing point is returned.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       The retrieved closing point
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>ClosingPoint</code> the closing point of the curve
 of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Dim ClosingPoint As Reference
 ClosingPoint = ShpBlend.<font color="red">GetClosingPoint</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetContinuity"><dt>

<table><tr><td>o Func <b>GetContinuity</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Retrieves the continuity of a limit of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose continuity is to be retrieved.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The retrieved continuity.
     <br><b>Legal values</b>:
     <dl>
       <dt>0 <dd>Point continuity
       <dt>1 <dd>Tangency continuity
       <dt>2 <dd>Curvature continuity
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>Continuity</code> the continuity of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Continuity = ShpBlend.<font color="red">GetContinuity</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetCurve"><dt>

<table><tr><td>o Func <b>GetCurve</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns a curve from the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend from which the curve will be retrieved.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The retrieved curve
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>BlendCurve</code> the curve of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Dim BlendCurve As Reference
 BlendCurve = ShpBlend.<font color="red">GetCurve</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetOrientation"><dt>

<table><tr><td>o Func <b>GetOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the orientation of a curve of the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose curve orientation is to be retrieved.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       The orientation to set to the curve.
     <br><b>Legal values</b>: 1 for direct and -1 for reverse
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>Orientation</code> the orientation of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Orientation = ShpBlend.<font color="red">GetOrientation</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetRuledDevelopableSurfaceConnection"><dt>

<table><tr><td>o Func <b>GetRuledDevelopableSurfaceConnection</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the ruled developable surface connection type.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend for which the connection type is to be set.
     <br><b>Legal values</b>: 1 for the start limit, and 2 for the end one
   </dd>
    <dt><tt> oBlendConnection</tt>
   <dd>     The value of connection type
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>Connect to both extremities
       <dt>2 <dd>Free first curve
       <dt>3 <dd>Free second curve
     </dl>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetSupport"><dt>

<table><tr><td>o Func <b>GetSupport</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns a support from the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose support is to be retrieved.
     <br><b>Legal values</b>: 1 for the first support, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The retrieved support surface
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>SupportSurf</code> the support surface of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Dim SupportSurf As Reference 
 SupportSurf = ShpBlend.<font color="red">GetSupport</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetTensionInDouble"><dt>

<table><tr><td>o Func <b>GetTensionInDouble</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('RealParam','RealParam')</script> </table></dt>
<dl>
  <dd>
 Returns the tension values of a limit of the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend from which the tension type and values are to be retrieved.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iRank</tt>
   <dd>     The rank of the value to retrieve among those available, depending on the tension type.
     <br><b>Legal values</b>: <tt>iRank</tt> can take the following values:
      <dl>
        <dt>1  <dd>With default tension and constant tension, for the unique available value,
                   and with linear tension for the first value
        <dt>2  <dd>With linear tension for the second value
      </dl>
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       The retrieved tension value
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>TensionVal</code> the tension value
 of the tension, supposed to be a constant tension, of the first limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 Dim ConstTensionVal As RealParam
 Set ConstTensionVal = ShpBlend.<font color="red">GetTensionInDouble</font>(1, 1)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetTensionType"><dt>

<table><tr><td>o Func <b>GetTensionType</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the tension type of a limit of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend from which the tension type is to be retrieved.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The value of tension type
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>Default tension
       <dt>2 <dd>Constant tension
       <dt>3 <dd>Linear tension
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>TensionType</code> the tension type
 of the first limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 TensionType.<font color="red">GetTensionType</font>(1)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetTransition"><dt>

<table><tr><td>o Func <b>GetTransition</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the transition orientation from a limit of the blend. 
 <br>
 Let <tt>T</tt> be the tangent to the wire, 
 and <tt>N</tt> be the normal to the skin body.
 The transition orientation defines how the blend goes from the initial wires: it takes the 
 direction of <tt>iTransition*(T^N)</tt>, where <tt>^</tt> is the cross product.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose transition orientation is to be retrieved.
     <br><b>Legal values</b>: 1 for the first support, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>       The retrieved value of transition orientation. 
     <br><b>Legal values</b>: 1 for direct and -1 for reverse
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves in <code>TransOrientation</code> the transition orientation
 of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 TransOrientation = ShpBlend.<font color="red">GetTransition</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="GetTrimSupport"><dt>

<table><tr><td>o Func <b>GetTrimSupport</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns whether a support of the blend will be trimmed off.
 <br>
 If the support is set to be trimmed, it will be trimmed using
 the curve then joined to the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose support is to be trimmed.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>      The trim support mode
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>No trim
       <dt>2 <dd>The support will be trimmed
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example retrieves whether the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature should be trimmed off.
 <pre>
 IsTrimmed = ShpBlend.<font color="red">GetTrimSupport</font>(2)
 </pre>
 </dl>
</dl>
</dl>
<a name="InsertCoupling"><dt>

<table><tr><td>o Sub <b>InsertCoupling</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iPosition</tt>)</table></dt>
<dl>
  <dd>
 Inserts a coupling into the blend.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosition</tt>
   <dd>    The position of the coupling in the list of couplings.
   Setting <tt>iPosition</tt> to 0 inserts the coupling at the end of the list.
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example inserts a coupling at the end of the coupling list
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">InsertCouplingt</font> 0
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="InsertCouplingPoint"><dt>

<table><tr><td>o Sub <b>InsertCouplingPoint</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCouplingIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iPoint</tt>)</table></dt>
<dl>
  <dd>
 Inserts a coupling point to a coupling of the blend.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCouplingIndex</tt>
   <dd>    The index of the coupling in the list of couplings into which the coupling
   point will be inserted.
 </dd>
    <dt><tt> iPosition</tt>
   <dd>    The position of the coupling point in the list of coupling points.
   Setting <tt>iPosition</tt> to 0 inserts the coupling point at the end of the list.
 </dd>
    <dt><tt> iPoint</tt>
   <dd>   The coupling point to be inserted.
   This point must lay on the section with the same position.
 <br>Sub-element(s) supported (see </dd>
</dl>
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> object):  
<a href="#" onClick="openLink('Vertex','');return false">Vertex</a>. </dl>
 <dt><b>Example</b>:
 <dd>
 This example inserts the <code>Point23</code> point into the third coupling at the end
 of the list of coupling points
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">InsertCouplingPoint</font> 3, 0, Point23
 </pre>
 </dl>
</dl>
</dl>
<a name="SetBorderMode"><dt>

<table><tr><td>o Sub <b>SetBorderMode</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBorder</tt>)</table></dt>
<dl>
  <dd>
 Sets the type of border to a limit of the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose type of border is to be set.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iBorder</tt>
   <dd>     The type of border
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>The border of the blend will be tangent to the border of the support surface, 
                 or if the curve ends on the border of a face of the support surface, then
                 the border of the blend will be tangent to the border face.
       <dt>2 <dd>The border of the blend is not constrained.
       <dt>3 <dd>The border of the blend will be tangent to the border of the support surface
                 at the start extremity of the curve,
                 or if the curve ends on the border of a face of the support surface, then
                 the border of the blend will be tangent to the border face at the start extremity
                 of the curve.
       <dt>4 <dd>The border of the blend will be tangent to the border of the support surface
                 at the end extremity of the curve,
                 or if the curve ends on the border of a face of the support surface, then
                 the border of the blend will be tangent to the border face at the end extremity
                 of the curve.
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the type of border of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature to "no constraint".
 <pre>
 ShpBlend.<font color="red">SetBorderMode</font> 2, 2
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetClosingPoint"><dt>

<table><tr><td>o Sub <b>SetClosingPoint</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iClosingPoint</tt>)</table></dt>
<dl>
  <dd>
 Sets a new closing point to a closed curve of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose curve will be set a new closing point.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
    <dt><tt> iClosingPoint</tt>
   <dd>     The closing point to be set.
     This point must lay on the curve of the blend limit.
 <br>Sub-element(s) supported (see </dd>
</dl>
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> object):  
<a href="#" onClick="openLink('Vertex','');return false">Vertex</a>. </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the <code>Point10</code> point as the closing point to the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">SetClosingPoint</font> 2, Point10
 </pre>
 </dl>
</dl>
</dl>
<a name="SetContinuity"><dt>

<table><tr><td>o Sub <b>SetContinuity</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iContinuity</tt>)</table></dt>
<dl>
  <dd>
 Sets the continuity to a limit of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose continuity is to be set.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iContinuity</tt>
   <dd>     The continuity to set
     <br><b>Legal values</b>:
     <dl>
       <dt>0 <dd>Point continuity
       <dt>1 <dd>Tangency continuity
       <dt>2 <dd>Curvature continuity
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the continuity of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature to tangency continuity.
 <pre>
 ShpBlend.<font color="red">SetContinuity</font> 2, 1
 </pre></dd>
</dl>
</dl>
</dl>
<a name="SetCurve"><dt>

<table><tr><td>o Sub <b>SetCurve</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iCurve</tt>)</table></dt>
<dl>
  <dd>
 Sets a curve to the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend to which the curve will be set.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
    <dt><tt> iCurve</tt>
   <dd>     The curve to be set.
 <br>Sub-element(s) supported (see </dd>
</dl>
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> object):  
<a href="#" onClick="openLink('TriDimFeatEdge','');return false">TriDimFeatEdge</a> and 
<a href="#" onClick="openLink('BiDimFeatEdge','');return false">BiDimFeatEdge</a>. </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the <code>CurveForBlend</code> curve to the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">SetCurve</font> 2, CurveForBlend
 </pre>
 </dl>
</dl>
</dl>
<a name="SetOrientation"><dt>

<table><tr><td>o Sub <b>SetOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iOrientation</tt>)</table></dt>
<dl>
  <dd>
 Sets the orientation of a curve of the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose curve orientation is to be set.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      The orientation to set to the curve.
     <br><b>Legal values</b>: 1 for direct and -1 for reverse
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the orientation of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature to direct.
 <pre>
 ShpBlend.<font color="red">SetOrientation</font> 2, 1
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetRuledDevelopableSurfaceConnection"><dt>

<table><tr><td>o Sub <b>SetRuledDevelopableSurfaceConnection</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendConnection</tt>)</table></dt>
<dl>
  <dd>
</dl>
<a name="SetSmoothAngleThreshold"><dt>

<table><tr><td>o Sub <b>SetSmoothAngleThreshold</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>)</table></dt>
<dl>
  <dd>
 Sets the angular threshold.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iAngle</tt>
   <dd>    The angular threshold</dd>
</dl>
</dl>
</dl>
<a name="SetSmoothDeviation"><dt>

<table><tr><td>o Sub <b>SetSmoothDeviation</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>)</table></dt>
<dl>
  <dd>
 Sets the deviation value (length) from guide curves allowed during sweeping
 operation in order to smooth it.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iLength</tt>
   <dd>    The deviation value</dd>
</dl>
</dl>
</dl>
<a name="SetSupport"><dt>

<table><tr><td>o Sub <b>SetSupport</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSupport</tt>)</table></dt>
<dl>
  <dd>
 Sets a support to the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose support is to be set.
     <br><b>Legal values</b>: 1 for the first support, and 2 for the second one
   </dd>
    <dt><tt> iSupport</tt>
   <dd>     The support surface to be set.
     The curve of the blend limit must lay on the surface.
 <br>Sub-element(s) supported (see </dd>
</dl>
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> object):  
<a href="#" onClick="openLink('Face','');return false">Face</a>. </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the <code>SupportSurf</code> surface as the support of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">SetSupport</font> 2, SupportSurf
 </pre>
 </dl>
</dl>
</dl>
<a name="SetTensionInDouble"><dt>

<table><tr><td>o Sub <b>SetTensionInDouble</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iTensionType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFirstTension</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iSecondTension</tt>)</table></dt>
<dl>
  <dd>
 Sets the tension values to a limit of the blend. 
 The values must be expressed as doubles and must be positive.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend to which the tension values are to be set.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iTensionType</tt>
   <dd>     The tension type
     <br><b>Legal values</b>: 
     <dl>
       <dt>1 <dd>Default tension
       <dt>2 <dd>Constant tension
       <dt>3 <dd>Linear tension
     </dl>
   </dd>
    <dt><tt> iFirstTension</tt>
   <dd>      The value for the first tension. It must be used with any tension type
      <br><b>Legal values</b>: it must be a double and positive.
   </dd>
    <dt><tt> iSecondTension</tt>
   <dd>      The value for the second tension. It can be used with linear tension only
      <br><b>Legal values</b>: it must be a double and positive.
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the tension values
 of the tension, supposed to be a linear tension, of the first limit
 of the <code>ShpBlend</code> hybrid shape blended feature to respectively 1.5 and 0.5.
 <pre>
 ShpBlend.<font color="red">SetTensionInDouble</font> 1, 3, 1.5, 0.5
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetTensionType"><dt>

<table><tr><td>o Sub <b>SetTensionType</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iTensionType</tt>)</table></dt>
<dl>
  <dd>
 Sets the tension type of a limit of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend for which the tension type is to be set.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iBlendLimit</tt>
   <dd>     The value of tension type
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>Default tension
       <dt>2 <dd>Constant tension
       <dt>3 <dd>Linear tension
		  <dt>4 <dd>SType  tension
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the tension type as Default Tension for the first limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">SetTensionType</font> 1, 1
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetTransition"><dt>

<table><tr><td>o Sub <b>SetTransition</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iTransition</tt>)</table></dt>
<dl>
  <dd>
 Sets the transition orientation to a limit of the blend. 
 <br><b>Role</b>:
 Let <tt>T</tt> be the tangent to the wire, 
 and <tt>N</tt> be the normal to the skin body.
 The transition orientation defines how the blend goes from the initial wires: it takes the 
 direction of <tt>iTransition*(T^N)</tt>, where <tt>^</tt> is the cross product.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose transition orientation is to be set.
     <br><b>Legal values</b>: 1 for the first support, and 2 for the second one
   </dd>
    <dt><tt> iTransition</tt>
   <dd>      The value of transition orientation. 
     <br><b>Legal values</b>: 1 for direct and -1 for reverse
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets the transition orientation of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature to reverse.
 <pre>
 ShpBlend.<font color="red">SetTransition</font> 2, -1
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetTrimSupport"><dt>

<table><tr><td>o Sub <b>SetTrimSupport</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iTrimSupport</tt>)</table></dt>
<dl>
  <dd>
 Sets whether a support of the blend is to be trimmed off.
 <br>
 If the support is set to be trimmed, it will be trimmed using
 the curve then joined to the blend.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose support is to be trimmed.
     <br><b>Legal values</b>: 1 for the first limit, and 2 for the second one
   </dd>
    <dt><tt> iTrimSupport</tt>
   <dd>     The trim support mode
     <br><b>Legal values</b>:
     <dl>
       <dt>1 <dd>No trim
       <dt>2 <dd>The support will be trimmed
     </dl>
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example sets that the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature should be trimmed off.
 <pre>
 ShpBlend.<font color="red">SetTrimSupport</font> 2, 2
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="UnsetClosingPoint"><dt>

<table><tr><td>o Sub <b>UnsetClosingPoint</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>)</table></dt>
<dl>
  <dd>
 Unsets the closing point of a closed curve of the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose curve closing point is unset.
     <br><b>Legal values</b>: 1 for the first curve, and 2 for the second one
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example unsets the closing point of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">UnsetClosingPoint</font> 2
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="UnsetSupport"><dt>

<table><tr><td>o Sub <b>UnsetSupport</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iBlendLimit</tt>)</table></dt>
<dl>
  <dd>
 Unsets a support from the blend. 
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iBlendLimit</tt>
   <dd>     The limit of the blend whose support is to be unset.
     <br><b>Legal values</b>: 1 for the first support, and 2 for the second one
 </dl>
 <dt><b>Example</b>:
 <dd>
 This example unsets the support surface of the second limit
 of the <code>ShpBlend</code> hybrid shape blended feature.
 <pre>
 ShpBlend.<font color="red">UnsetSupport</font> 2
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
