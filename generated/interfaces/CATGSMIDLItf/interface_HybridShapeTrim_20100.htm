<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>CATGSMIDLItf HybridShapeTrim (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../CATGSMIDLItf.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('HybridShapeTrim','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('HybridShapeTrim','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('HybridShapeTrim','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('HybridShapeTrim','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>HybridShapeTrim<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_HybridShapeTrim_20100','HybridShapeTrim','0');</script>
<b><i> Represents the hybrid shape trim object.</i></b><br>

 <b>Role</b>: To access the data of the hybrid shape trim object.
 This data includes:
 <ul>
 <li>The first element (surface or curve) to be trimmed</li>
 <li>The second element (surface or curve) to be trimmed</li> 
 <li>The orientation corresponding to the first element</li>
 <li>The orientation corresponding to the second element</li>
 </ul>
 Use the CATIAHybridShapeFactory to create a HybridShapeTrim object.
 <dl>
  <dt> <b>See also:</b> 
  <dd> <a href="#" onClick="openLink('HybridShapeFactory','');return false">HybridShapeFactory</a>
</dl>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#AutomaticExtrapolationMode"><b>AutomaticExtrapolationMode</b></a>
<dd>  Gets or sets the automatic extrapolation mode status.
 <dt>
    <a href="#Connex"><b>Connex</b></a>
<dd>  Gets or sets connected mode.
 <dt>
    <a href="#FirstElem"><b>FirstElem</b></a>
<dd>  
 <dt>
    <a href="#FirstOrientation"><b>FirstOrientation</b></a>
<dd>  
 <dt>
    <a href="#IntersectionComputation"><b>IntersectionComputation</b></a>
<dd>  Gets or sets Intersection computation mode.
 <dt>
    <a href="#Manifold"><b>Manifold</b></a>
<dd>  Gets or sets manifold mode.
 <dt>
    <a href="#Mode"><b>Mode</b></a>
<dd>  Gets or sets Trim mode.
 <dt>
    <a href="#SecondElem"><b>SecondElem</b></a>
<dd>  
 <dt>
    <a href="#SecondOrientation"><b>SecondOrientation</b></a>
<dd>  
 <dt>
    <a href="#Simplify"><b>Simplify</b></a>
<dd>  Returns or sets whether the simplification of the resulting topology is or should be activated.
 <dt>
    <a href="#Support"><b>Support</b></a>
<dd>  Returns or sets the support element.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddElementToKeep"><b>AddElementToKeep</b></a>
<dd>  Adds an element to specifications.
 <dt>
    <a href="#AddElementToRemove"><b>AddElementToRemove</b></a>
<dd>  Adds an element to specifications.
 <dt>
    <a href="#AddPieceCutter"><b>AddPieceCutter</b></a>
<dd>  Add piece Cutting element and its orientation.
 <dt>
    <a href="#GetElem"><b>GetElem</b></a>
<dd>  Gets the trimmed feature at a given index.
 <dt>
    <a href="#GetKeptElem"><b>GetKeptElem</b></a>
<dd>  Gets the kept feature at a given index.
 <dt>
    <a href="#GetNbElem"><b>GetNbElem</b></a>
<dd>  Gets the number of elements: couple(element, index of portion to keep on element).
 <dt>
    <a href="#GetNbElementsToKeep"><b>GetNbElementsToKeep</b></a>
<dd>  Gets the number of elements to keep.
 <dt>
    <a href="#GetNbElementsToRemove"><b>GetNbElementsToRemove</b></a>
<dd>  Gets the number of elements to remove.
 <dt>
    <a href="#GetNextOrientation"><b>GetNextOrientation</b></a>
<dd>  Gets Orientation used to compute the feature, referring to the next trimmed element.
 <dt>
    <a href="#GetPieceCutter"><b>GetPieceCutter</b></a>
<dd>  Gets piece Cutting element and its orientation.
 <dt>
    <a href="#GetPieceNbCutters"><b>GetPieceNbCutters</b></a>
<dd>  Gets the number of cutters of a piece.
 <dt>
    <a href="#GetPortionToKeep"><b>GetPortionToKeep</b></a>
<dd>  Gets a portion to keep number, giving the index of the element.
 <dt>
    <a href="#GetPreviousOrientation"><b>GetPreviousOrientation</b></a>
<dd>  Gets Orientation used to compute the feature, referring to the previous trimmed element.
 <dt>
    <a href="#GetRemovedElem"><b>GetRemovedElem</b></a>
<dd>  Gets the removed feature at a given index.
 <dt>
    <a href="#InvertFirstOrientation"><b>InvertFirstOrientation</b></a>
<dd>  
 <dt>
    <a href="#InvertSecondOrientation"><b>InvertSecondOrientation</b></a>
<dd>  
 <dt>
    <a href="#RemoveElementToKeep"><b>RemoveElementToKeep</b></a>
<dd>  Removes an element from specifications.
 <dt>
    <a href="#RemoveElementToRemove"><b>RemoveElementToRemove</b></a>
<dd>  Removes an element from specifications.
 <dt>
    <a href="#RemovePieceCutter"><b>RemovePieceCutter</b></a>
<dd>  Remove piece Cutting element and its orientation.
 <dt>
    <a href="#SetElem"><b>SetElem</b></a>
<dd>  Modifies the trimmed feature at a given index.
 <dt>
    <a href="#SetNextOrientation"><b>SetNextOrientation</b></a>
<dd>  Sets the orientation used to compute the feature, referring to the next trimmed element.
 <dt>
    <a href="#SetPortionToKeep"><b>SetPortionToKeep</b></a>
<dd>  Sets a portion to keep number in Pieces mode.
 <dt>
    <a href="#SetPreviousOrientation"><b>SetPreviousOrientation</b></a>
<dd>  Sets the orientation used to compute the feature, referring to the previous trimmed element.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="AutomaticExtrapolationMode"><dt>

<table><tr><td>o Property <b>AutomaticExtrapolationMode</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets or sets the automatic extrapolation mode status.
      AutomaticExtrapolationMode = TRUE  : Automatic extrapolation mode is on.
                                 = FALSE : Automatic extrapolation mode is off.
 This example retrieves in <code>AutoExtrapolMode</code> the automatic extrapolation mode status 
 for the <code>Trim</code> hybrid shape feature.
 <pre>
 Dim AutoExtrapolMode As boolean
 AutoExtrapolMode = Trim.<font color="red">AutomaticExtrapolationMode</font>
 </pre>
 </dl>
</dl>
<a name="Connex"><dt>

<table><tr><td>o Property <b>Connex</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets or sets connected mode.
      Connex = TRUE  : the check of connexity is enable.
      Connex = FALSE : the check of connexity is disable.
 This example retrieves in <code>Connex</code> the connected mode 
 for the <code>Trim</code> hybrid shape feature.
 <pre>
 Dim Connex As boolean
 Connex = Trim.<font color="red">Connex</font>
 </pre>
 </dl>
</dl>
<a name="FirstElem"><dt>

<table><tr><td>o Property <b>FirstElem</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#GetElem
 Returns or sets  the first element to be trimmed.
 
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <code>Surface1</code> the first element to be trimmed 
 for the <code>hybTrim</code> hybrid shape feature.
 <pre>
 Dim Surface1 As Reference
 Set Surface1 = hybTrim.<font color="red">FirstElem</font>
 </pre>
</dl>
</dl>
<a name="FirstOrientation"><dt>

<table><tr><td>o Property <b>FirstOrientation</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#GetPreviousOrientation
 Returns or sets the first orientation used to compute the trim.
 <br>
 <b>Role</b>: 
 The orientation specifies the kept parts of the first element to be trimmed. 
 <ul> 
  <li>When trimming surfaces: 
   <ul>
    <li>If orientation value is 1: kept parts are specified by the "natural" normal
        to the second object</li> 
    <li>If orientation value is -1: kept parts are specified by the inverse of
        the "natural" normal to the second object</li>
   </ul>
  </li>
  <li>When trimming curves:
   <ul>  
    <li>If orientation value is 1: kept parts are from the beginning of the curve
        to the first intersection, and, if there is one, from the second to the
        third intersection and so on until the end of the curve</li> 
    <li>If orientation value is -1: kept parts are from the first intersection
        to the second (if there is one), and, if there is one, from the third to
        the fourth and so on until the end of the curve.</li> 
   </ul>
  </li>
 </ul> 
 
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <code>firstOrient</code> the orientation of
 the first element used by the <code>hybTrim</code> hybrid shape feature.
<pre>
 Dim firstOrient As long
 Set firstOrient = hybTrim.<font color="red">FirstOrientation</font>
</pre>
</dl>
</dl>
<a name="IntersectionComputation"><dt>

<table><tr><td>o Property <b>IntersectionComputation</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets or sets Intersection computation mode.
      IntersectionComputation = TRUE  : Intersection is computed.
                              = FALSE : Intersection is not computed.
 This example retrieves in <code>Intersection</code> the Intersection computation mode 
 for the <code>Trim</code> hybrid shape feature.
 <pre>
 Dim Intersection As boolean
 Intersection = Trim.<font color="red">IntersectionComputation</font>
 </pre>
 </dl>
</dl>
<a name="Manifold"><dt>

<table><tr><td>o Property <b>Manifold</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Gets or sets manifold mode.
      Manifold = TRUE  : the check of manifold is enable.
      Manifold = FALSE : the check of manifold is disable.
 This example retrieves in <code>Manifold</code> the manifold mode 
 for the <code>Trim</code> hybrid shape feature.
 <pre>
 Dim Manifold As boolean
 Connex = Trim.<font color="red">Manifold</font>
 </pre>
 </dl>
</dl>
<a name="Mode"><dt>

<table><tr><td>o Property <b>Mode</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets or sets Trim mode.
      Mode = 1 : Standard.
           = 2 : Pieces.
 This example retrieves in <code>Mode</code> the mode
 for the <code>Trim</code> hybrid shape feature.
 <pre>
 Dim Mode As long
 Mode = Trim.<font color="red">Mode</font>
 </pre>
 </dl>
</dl>
<a name="SecondElem"><dt>

<table><tr><td>o Property <b>SecondElem</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#GetElem
 Returns or sets the second element to be trimmed.
 
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <code>Surface2</code> the second element to be trimmed 
 for the <code>hybTrim</code> hybrid shape trim object.
 <pre>
 Dim Surface2 As Reference
 Set Surface2 = hybTrim.<font color="red">SecondElem</font>
 </pre>
</dl>
</dl>
<a name="SecondOrientation"><dt>

<table><tr><td>o Property <b>SecondOrientation</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#GetPreviousOrientation
 Returns or sets the second orientation used to compute the trim.
 <br>
 <b>Role</b>:
 The orientation specifies the kept parts of the second element to be trimmed. 
 <ul> 
  <li>When trimming surfaces: 
   <ul>
    <li>If orientation value is 1: kept parts are specified by the "natural" normal
        to the first object</li> 
    <li>If orientation value is -1: kept parts are specified by the inverse of
        the "natural" normal to the first object</li>
   </ul>
  </li>
  <li>When trimming curves:
   <ul>  
    <li>If orientation value is 1: kept parts are from the beginning of the curve
        to the first intersection, and, if there is one, from the second to the
        third intersection and so on until the end of the curve</li> 
    <li>If orientation value is -1: kept parts are from the first intersection
        to the second (if there is one), and, if there is one, from the third to
        the fourth and so on until the end of the curve.</li> 
   </ul>
  </li>
 </ul> 
 
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <code>secondOrient</code> the orientation of
 the second element used by the <code>hybTrim</code> hybrid shape trim object.
<pre>
 Dim secondOrient As long
 Set secondOrient = hybTrim.<font color="red">SecondOrientation</font>
</pre>
</dl>
</dl>
<a name="Simplify"><dt>

<table><tr><td>o Property <b>Simplify</b>(<td>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns or sets whether the simplification of the resulting topology is or should be activated.
 <br><b>Legal values</b>: True to activate the simplification,
 and False otherwise.
 
<dl>
  <dt> <b>Example:</b> 
  <dd>   This example activates the simplification of the resulting topology of
 the <code>hybTrim</code> hybrid shape trim object.
 <pre>
  hybTrim.Simplify = True
 </pre>
</dl>
</dl>
<a name="Support"><dt>

<table><tr><td>o Property <b>Support</b>(<td>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the support element.
 <br>This support element may not exist.
 <br>Sub-element(s) supported (see 
<a href="#" onClick="openLink('Boundary','');return false">Boundary</a> object):  
<a href="#" onClick="openLink('Face','');return false">Face</a>. 
<dl>
  <dt> <b>Example:</b> 
  <dd>  This example retrieves in <code>supportElement</code> the support element
 of the <code>hybTrim</code> hybrid shape trim object.
 <pre>
 Dim supportElement As Reference
 Set supportElement = hybTrim.<font color="red">Support</font>
 </pre>
</dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddElementToKeep"><dt>

<table><tr><td>o Sub <b>AddElementToKeep</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iElement</tt>)</table></dt>
<dl>
  <dd>
 Adds an element to specifications. This element will be kept.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   Element to keep.</dd>
</dl>
</dl>
</dl>
<a name="AddElementToRemove"><dt>

<table><tr><td>o Sub <b>AddElementToRemove</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iElement</tt>)</table></dt>
<dl>
  <dd>
 Adds an element to specifications. This element will be removed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iElement</tt>
   <dd>   Element to remove.</dd>
</dl>
</dl>
</dl>
<a name="AddPieceCutter"><dt>

<table><tr><td>o Sub <b>AddPieceCutter</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCutterElem</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iOrientation</tt>)</table></dt>
<dl>
  <dd>
 Add piece Cutting element and its orientation.
 Used for trim pieces of shells only
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of the trimmed element (piece)
   </dd>
    <dt><tt> iCutterElemIdx</tt>
   <dd>     index is the index of input shell
     except in case of multiple intersection between shells
     where Index=IndexInputShell+NbInputShells*(1-iw) 
     (whith iw=1... : wire index in case of multiple intersection)
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>      cutter element orientation
</dd>
</dl>
</dl>
</dl>
<a name="GetElem"><dt>

<table><tr><td>o Func <b>GetElem</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Gets the trimmed feature at a given index.  
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of one of the trimmed features  
   </dd>
    <dt><tt> oElem</tt>
   <dd>      trimmed feature</dd>
</dl>
</dl>
</dl>
<a name="GetKeptElem"><dt>

<table><tr><td>o Func <b>GetKeptElem</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Gets the kept feature at a given index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Kept feature 
   </dd>
    <dt><tt> iRank</tt>
   <dd>      Index of one of the kept features</dd>
</dl>
</dl>
</dl>
<a name="GetNbElem"><dt>

<table><tr><td>o Func <b>GetNbElem</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets the number of elements: couple(element, index of portion to keep on element).
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbElem</tt>
   <dd>      Number of elements</dd>
</dl>
</dl>
</dl>
<a name="GetNbElementsToKeep"><dt>

<table><tr><td>o Func <b>GetNbElementsToKeep</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets the number of elements to keep.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbElementsToKeep</tt>
   <dd>      Number of elements to keep</dd>
</dl>
</dl>
</dl>
<a name="GetNbElementsToRemove"><dt>

<table><tr><td>o Func <b>GetNbElementsToRemove</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets the number of elements to remove.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbElementsToRemove</tt>
   <dd>      Number of elements to remove</dd>
</dl>
</dl>
</dl>
<a name="GetNextOrientation"><dt>

<table><tr><td>o Func <b>GetNextOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets Orientation used to compute the feature, referring to the next trimmed element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oOrientation</tt>
   <dd>        Orientation
   </dd>
    <dt><tt> iRank</tt>
   <dd>       index of the trimmed feature</dd>
</dl>
</dl>
</dl>
<a name="GetPieceCutter"><dt>

<table><tr><td>o Sub <b>GetPieceCutter</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCutterIndex</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oCutterElemIdx</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oOrientation</tt>)</table></dt>
<dl>
  <dd>
 Gets piece Cutting element and its orientation.
 Used for trim pieces of shells only
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of the trimmed element (piece)
   </dd>
    <dt><tt> oCutterElemIdx</tt>
   <dd>     index is the index of input shell
     except in case of multiple intersection between shells
     where Index=IndexInputShell+NbInputShells*(1-iw) 
     (whith iw=1... : wire index in case of multiple intersection)
   </dd>
    <dt><tt> oCutterElem</tt>
   <dd>      cutter element
   </dd>
    <dt><tt> oOrientation</tt>
   <dd>      cutter element orientation
</dd>
</dl>
</dl>
</dl>
<a name="GetPieceNbCutters"><dt>

<table><tr><td>o Func <b>GetPieceNbCutters</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets the number of cutters of a piece.
 Used for trim pieces of shells only
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oNbCutters</tt>
   <dd>      Number of cutters (except in case of multiple intersection between shells)</dd>
</dl>
</dl>
</dl>
<a name="GetPortionToKeep"><dt>

<table><tr><td>o Func <b>GetPortionToKeep</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets a portion to keep number, giving the index of the element.
 Used for trim pieces of wires
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oPortionNumber</tt>
   <dd>      Index of portion to keep on the element
   </dd>
    <dt><tt> iRank</tt>
   <dd>      Index of the trimmed element</dd>
</dl>
</dl>
</dl>
<a name="GetPreviousOrientation"><dt>

<table><tr><td>o Func <b>GetPreviousOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Gets Orientation used to compute the feature, referring to the previous trimmed element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>       index of the trimmed feature 
   </dd>
    <dt><tt> oOrientation</tt>
   <dd>        Orientation</dd>
</dl>
</dl>
</dl>
<a name="GetRemovedElem"><dt>

<table><tr><td>o Func <b>GetRemovedElem</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>) As <script type="text/javascript"> activateLink('Reference','Reference')</script> </table></dt>
<dl>
  <dd>
 Gets the removed feature at a given index.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oElem</tt>
   <dd>      Removed feature 
   </dd>
    <dt><tt> iRank</tt>
   <dd>      Index of one of the removed features</dd>
</dl>
</dl>
</dl>
<a name="InvertFirstOrientation"><dt>

<table><tr><td>o Sub <b>InvertFirstOrientation</b>(<td>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#SetPreviousOrientation
 Inverts the first orientation used to compute the trim. 
 
  <dt> <b>Example:</b> 
  <dd>  This example inverts the first orientation to compute
 the <code>hybTrim</code> hybrid shape trim object.
<pre>
 hybTrim.<font color="red">InvertFirstOrientation</font>
</pre>
</dl>
</dl>
<a name="InvertSecondOrientation"><dt>

<table><tr><td>o Sub <b>InvertSecondOrientation</b>(<td>)</table></dt>
<dl>
  <dd>
 
<dl>
  <dt> <b>Deprecated:</b> 
  <dd>  V5R17 CATIAHybridShapeTrim#SetPreviousOrientation
 Inverts the second orientation used to compute the trim. 
 This example inverts the first orientation to compute
 the <code>hybTrim</code> hybrid shape trim object.
<pre>
 hybTrim.<font color="red">InvertSecondOrientation</font>
</pre>
</dl>
</dl>
<a name="RemoveElementToKeep"><dt>

<table><tr><td>o Sub <b>RemoveElementToKeep</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>)</table></dt>
<dl>
  <dd>
 Removes an element from specifications.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>   Index of the kept element.</dd>
</dl>
</dl>
</dl>
<a name="RemoveElementToRemove"><dt>

<table><tr><td>o Sub <b>RemoveElementToRemove</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>)</table></dt>
<dl>
  <dd>
 Removes an element from specifications.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>   Index of the removed element.</dd>
</dl>
</dl>
</dl>
<a name="RemovePieceCutter"><dt>

<table><tr><td>o Sub <b>RemovePieceCutter</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iCutterIndex</tt>)</table></dt>
<dl>
  <dd>
 Remove piece Cutting element and its orientation.
 Used for trim pieces of shells only
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of the trimmed element (piece)
   </dd>
    <dt><tt> iCutterIndex</tt>
   <dd>      Index in cutters list</dd>
</dl>
</dl>
</dl>
<a name="SetElem"><dt>

<table><tr><td>o Sub <b>SetElem</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iElem</tt>)</table></dt>
<dl>
  <dd>
 Modifies the trimmed feature at a given index.  
 Use AddElem method to specify a new trimmed element
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of one of the trimmed features  
   </dd>
    <dt><tt> iElem</tt>
   <dd>      trimmed feature</dd>
</dl>
</dl>
</dl>
<a name="SetNextOrientation"><dt>

<table><tr><td>o Sub <b>SetNextOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iOrientation</tt>)</table></dt>
<dl>
  <dd>
 Sets the orientation used to compute the feature, referring to the next trimmed element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>       index of the feature 
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>        Orientation</dd>
</dl>
</dl>
</dl>
<a name="SetPortionToKeep"><dt>

<table><tr><td>o Sub <b>SetPortionToKeep</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iPortionNumber</tt>)</table></dt>
<dl>
  <dd>
 Sets a portion to keep number in Pieces mode.
 Used for trim pieces of wires
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>      Index of the trimmed element
   </dd>
    <dt><tt> iPortionNumber</tt>
   <dd>      Index of portion to keep on the element</dd>
</dl>
</dl>
</dl>
<a name="SetPreviousOrientation"><dt>

<table><tr><td>o Sub <b>SetPreviousOrientation</b>(<td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iRank</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iOrientation</tt>)</table></dt>
<dl>
  <dd>
 Sets the orientation used to compute the feature, referring to the previous trimmed element.
   
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRank</tt>
   <dd>       index of the feature 
   </dd>
    <dt><tt> iOrientation</tt>
   <dd>        Orientation</dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
