<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>KnowledgeInterfaces Parameters (Collection)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../KnowledgeInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('Parameters','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Parameters','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('Parameters','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('Parameters','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>Parameters<font size=-1> (Collection)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_Parameters_26337','Parameters','0');</script>
<b><i> Represents the Parameters collection of the part or the product.</i></b><br>

 The following example shows how to retrieve it:
  <pre>
	Dim CATDocs As Documents
 Set CATDocs = CATIA.Documents
 Dim part1 As Document
 Set part1   = CATDocs.Add("CATPart")
 Dim parameterList As Parameters
  Set parameterList = part1.Part.Parameters
  </pre><hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#RootParameterSet"><b>RootParameterSet</b></a>
<dd>  Returns the root parameter set of a document.
 <dt>
    <a href="#Units"><b>Units</b></a>
<dd>  Returns the collection of units.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateBoolean"><b>CreateBoolean</b></a>
<dd>  Creates a boolean parameter and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#CreateDimension"><b>CreateDimension</b></a>
<dd>  Creates a user dimension and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#CreateInteger"><b>CreateInteger</b></a>
<dd>  Creates an integer parameter</b> and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#CreateList"><b>CreateList</b></a>
<dd>  Creates a list parameter and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#CreateReal"><b>CreateReal</b></a>
<dd>  Creates a real parameter and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#CreateSetOfParameters"><b>CreateSetOfParameters</b></a>
<dd>  Creates a set of parameters and appends it to argument iFather.
 <dt>
    <a href="#CreateString"><b>CreateString</b></a>
<dd>  Creates a string parameter and adds it to
 the part's collection of  parameters.
 <dt>
    <a href="#GetNameToUseInRelation"><b>GetNameToUseInRelation</b></a>
<dd>  Returns a correct name of a feature to use it in a relation.
 <dt>
    <a href="#Item"><b>Item</b></a>
<dd>  Retrieves a parameter  using its index or its name from the
 from the Parameters collection.
 <dt>
    <a href="#Remove"><b>Remove</b></a>
<dd>  Removes a parameter from the Parameters collection.
 <dt>
    <a href="#SubList"><b>SubList</b></a>
<dd>  Returns a sub-collection of parameters aggregated to an object.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="RootParameterSet"><dt>

<table><tr><td>o Property <b>RootParameterSet</b>(<td>) As <script type="text/javascript"> activateLink('ParameterSet','ParameterSet')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the root parameter set of a document. If it doesn't exist, it is created.
</dl>
<a name="Units"><dt>

<table><tr><td>o Property <b>Units</b>(<td>) As <script type="text/javascript"> activateLink('Units','Units')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Returns the collection of units.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateBoolean"><dt>

<table><tr><td>o Func <b>CreateBoolean</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('BoolParam','BoolParam')</script> </table></dt>
<dl>
  <dd>
 Creates a boolean parameter and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd>    The parameter value
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>checked</tt> boolean parameter
 and adds it to the newly created part:
 <pre>
	Dim CATDocs As Documents
 Set CATDocs = CATIA.Documents
 Dim part1 As Document
 Set part1   = CATDocs.Add("CATPart")
 Dim chk As BooleanParam
  Set chk = part1.Part.Parameters.<font color="red">CreateBoolean</font> ("checked", False)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateDimension"><dt>

<table><tr><td>o Func <b>CreateDimension</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMagnitude</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('Dimension','Dimension')</script> </table></dt>
<dl>
  <dd>
 Creates a user dimension and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The dimension name
 </dd>
    <dt><tt> iMagnitude</tt>
   <dd>    The dimension magnitude.
    Units are those of the IS system.
    Valid magnitudes are:
    <ul>
    <li>"LENGTH": the unit is the meter.
    <li>"ANGLE": the unit is the radian.
    </ul>
    The </dd>
</dl>
<a href="#" onClick="openLink('Dimension','');return false">Dimension</a> object provides the 
<a href="#" onClick="openLink('Dimension','ValuateFromString');return false">Dimension.ValuateFromString</a> method    with which you may express the value in any unit for a given
    dimension (see the example below).
 
    <dt><tt> iValue</tt>
   <dd>    The dimension value provided as a real number
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example creates a <tt>LENGTH</tt> dimension
 and adds it to the newly created part. The initial value
 is expressed in meters. The new value is expressed in 
 millimeters. 
 <pre>
 Dim depth As Dimension
 Set depth = parameters.<font color="red">CreateDimension</font>("depth", "LENGTH", 20)
 depth.ValuateFromString("300mm");
 </pre>
 </dl></dd>
</dl>
</dl>
<a name="CreateInteger"><dt>

<table><tr><td>o Func <b>CreateInteger</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('IntParam','IntParam')</script> </table></dt>
<dl>
  <dd>
 Creates an integer parameter</b> and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd>    The parameter value
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>RevisionNumber</tt> integer parameter
 and adds it to the newly created part:
 <pre>
	Dim CATDocs As Documents
 Set CATDocs = CATIA.Documents
 Dim part1 As Document
 Set part1   = CATDocs.Add("CATPart")
 Dim revision As IntParam
  Set revision = part1.Part.Parameters.<font color="red">CreateInteger</font> ("RevisionRumber", 17)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateList"><dt>

<table><tr><td>o Func <b>CreateList</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>) As <script type="text/javascript"> activateLink('ListParameter','ListParameter')</script> </table></dt>
<dl>
  <dd>
 Creates a list parameter and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The parameter name
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>ListName</tt> list parameter
 and adds it to the newly created part:
 <pre>
  Set CATDocs = CATIA.Documents
  Set part1   = CATDocs.Add("CATPart")
  Set list1 = part1.Part.Parameters.<font color="red">CreateList</font> ("ListName")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateReal"><dt>

<table><tr><td>o Func <b>CreateReal</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('RealParam','RealParam')</script> </table></dt>
<dl>
  <dd>
 Creates a real parameter and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd>    The parameter value
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>ReliabilityRate</tt> real parameter
 and adds it to the newly created part:
 <pre>
	Dim CATDocs As Documents
 Set CATDocs = CATIA.Documents
 Dim part1 As Document
 Set part1   = CATDocs.Add("CATPart")
 Dim rate As RealParam
  Set rate = part1.Part.Parameters.<font color="red">CreateReal</font> ("ReliabilityRate", 2.5 )
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="CreateSetOfParameters"><dt>

<table><tr><td>o Sub <b>CreateSetOfParameters</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iFather</tt>)</table></dt>
<dl>
  <dd>
 Creates a set of parameters and appends it to argument iFather.
</dl>
<a name="CreateString"><dt>

<table><tr><td>o Func <b>CreateString</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iValue</tt>) As <script type="text/javascript"> activateLink('StrParam','StrParam')</script> </table></dt>
<dl>
  <dd>
 Creates a string parameter and adds it to
 the part's collection of  parameters.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iName</tt>
   <dd>    The parameter name
 </dd>
    <dt><tt> iValue</tt>
   <dd>    The parameter value
 <! @sample >
 </dl>
 <dt><b>Example:</b>
 <dd>
 This example creates the <tt>responsible</tt> string parameter
 and adds it to the newly created part:
 <pre>
  Set CATDocs = CATIA.Documents
  Set part1   = CATDocs.Add("CATPart")
  Set density = part1.Part.Parameters.<font color="red">CreateString</font> ("responsible", "The Boss")
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetNameToUseInRelation"><dt>

<table><tr><td>o Func <b>GetNameToUseInRelation</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iObject</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns a correct name of a feature to use it in a relation.
</dl>
<a name="Item"><dt>

<table><tr><td>o Func <b>Item</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>) As <script type="text/javascript"> activateLink('Parameter','Parameter')</script> </table></dt>
<dl>
  <dd>
 Retrieves a parameter  using its index or its name from the
 from the Parameters collection.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the parameter to retrieve from
   the collection of parameters.
   As a numerics, this index is the rank of the parameter
   in the collection.
   The index of the first parameter in the collection is 1, and
   the index of the last parameter is Count.
   As a string, it is the name you assigned to the parameter using
   the </dd>
</dl>
<a href="#" onClick="openLink('AnyObject','Name');return false">AnyObject.Name</a> property or when creating the parameter. <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example retrieves the last parameter in the <tt>parameters</tt>
 collection:
 <pre>
 Set lastParameter = parameters.<font color="red">Item</font>(parameters.Count)
 </pre>
 </dl>
</dl>
</dl>
<a name="Remove"><dt>

<table><tr><td>o Sub <b>Remove</b>(<td><script type="text/javascript"> activateLink('CATVariant','CATVariant')</script> <td><tt>iIndex</tt>)</table></dt>
<dl>
  <dd>
 Removes a parameter from the Parameters collection. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iIndex</tt>
   <dd>   The index or the name of the parameter to remove from
   the collection of parameters.
   As a numerics, this index is the rank of the parameter
   in the collection.
   The index of the first parameter in the collection is 1, and
   the index of the last parameter is Count.
   As a string, it is the name you assigned to the parameter using
   the </dd>
</dl>
<a href="#" onClick="openLink('AnyObject','Name');return false">AnyObject.Name</a> property or when creating the parameter. <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example removes the "depth" parameter from the <tt>parameters</tt>
 collection. 
 <pre>
 parameters.<font color="red">Remove</font>("depth")
 </pre>
 </dl>
</dl>
</dl>
<a name="SubList"><dt>

<table><tr><td>o Func <b>SubList</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iObject</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iRecursively</tt>) As <script type="text/javascript"> activateLink('Parameters','Parameters')</script> </table></dt>
<dl>
  <dd>
 Returns a sub-collection of parameters aggregated to an object.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iObject</tt>
   <dd> The object used to filter the whole parameter 
 collection to get the resulting sub-collection.
 </dd>
    <dt><tt> iRecursively</tt>
   <dd> A flag to specify if children parameters are to be searched for in the returned collection
 <! @sample >
 <dt><b>Example:</b>
 <dd>
 This example shows how to retrieve a collection of parameters that are
 associated to a Pad.
 <pre>
 Dim Parameters1 As Parameters
 Set Parameters1 = CATIA.ActiveDocument.Part.Parameters gets the collection of parameters in the part
 Dim Body0 As AnyObject
 Set Body0 = CATIA.ActiveDocument.Part.Bodies.Item  ( "MechanicalTool.1" ) 
 Dim Pad1 As AnyObject
 Set Pad1 = Body0.Shapes.Item  ( "Pad.1" ) gets the pad Pad.1
 Dim Parameters2 As Parameters
 Set Parameters2 = Parameters1.SubList(Pad1,TRUE) gets the collection of parameters that are under the pad Pad.1
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
