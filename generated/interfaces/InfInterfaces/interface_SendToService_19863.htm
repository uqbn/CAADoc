<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>InfInterfaces SendToService (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../InfInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('SendToService','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SendToService','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('SendToService','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('SendToService','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>SendToService<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_SendToService_19863','SendToService','0');</script>
<b><i> This interface allows to use 'Send To' functionalities  
 through an API.</i></b><br>
 
 <dt><b>Example:</b>
 Set Send=CATIA.CreateSendTo()
<br>
 This interface requires the installation of CATIA - PPR xPDM Gateway 1 Product (PX1)
 or the installation of the CATIA-SmarTeam plugin.
 In case one of these products is not granted, 
 the first invocation to one of CATIASendToService methods will fail.
<br>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddFile"><b>AddFile</b></a>
<dd>  Adds a file to the list of the files 'to be copied'.
 <dt>
    <a href="#GetLastSendToMethodError"><b>GetLastSendToMethodError</b></a>
<dd>  Retreives the diagnosis related to the last call to SendToService interface.
 <dt>
    <a href="#GetListOfDependantFile"><b>GetListOfDependantFile</b></a>
<dd>  Retreives the complete list of the files recursively pointed by the  
 file given in argument to SetInitialFile method.
 <dt>
    <a href="#GetListOfToBeCopiedFiles"><b>GetListOfToBeCopiedFiles</b></a>
<dd>  Retreives the complete list of the files that will be copied.
 <dt>
    <a href="#KeepDirectory"><b>KeepDirectory</b></a>
<dd>  Controls the directory tree structure in the target directory.
 <dt>
    <a href="#RemoveFile"><b>RemoveFile</b></a>
<dd>  Removes a file from the list of the files that will be copied.
 <dt>
    <a href="#Run"><b>Run</b></a>
<dd>  Executes the copy action, according to previously set files and options.
 <dt>
    <a href="#SetDirectoryFile"><b>SetDirectoryFile</b></a>
<dd>  Positions the destination directory.
 <dt>
    <a href="#SetDirectoryOneFile"><b>SetDirectoryOneFile</b></a>
<dd>  Allows positioning the destination directory for one given file to be copied.
 <dt>
    <a href="#SetInitialFile"><b>SetInitialFile</b></a>
<dd>  Sets the initial file to be copied.
 <dt>
    <a href="#SetRenameFile"><b>SetRenameFile</b></a>
<dd>  Renames one file to be copied.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddFile"><dt>

<table><tr><td>o Sub <b>AddFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>)</table></dt>
<dl>
  <dd>
 Adds a file to the list of the files 'to be copied'.  
 This method verifies that the given input file is valid (exists and is not a directory),
 it recursively adds pointed files.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd> : The path of the file to be added to the list of the 'to be copied' files.
 <dt><b>Example:</b>
 <dd>
 </pre>
 Send.AddFile(<font color="red">iPath</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetLastSendToMethodError"><dt>

<table><tr><td>o Sub <b>GetLastSendToMethodError</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>oErrorParam</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('long','long')</script> <td><tt>oErrorCode</tt>)</table></dt>
<dl>
  <dd>
 Retreives the diagnosis related to the last call to SendToService interface.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oErrorParam</tt>
   <dd> A parameter string given together with the error code. </dd>
    <dt><tt>  oErrorCode</tt>
   <dd> The last executed method error code: <br>
 <table align="center" border=1>
 <tr><TH>code</TH> <TH>diagnosis</TH><TH>oErrorParam value</TH> </tr>
 <tr><td > 0 </td><td > action successfully performed :-)</td><td > </td></tr>
 <tr><td > 1 </td><td > PX1 license not granted </td><td > </td></tr>
 <tr><td > 2 </td><td > internal error </td><td > </td></tr>
 <tr><td > 5 </td><td > file already in the list </td><td > file name </td></tr>
 <tr><td > 6 </td><td > file is not in the list </td><td >  file name </td></tr>
 <tr><td > 7 </td><td > empty file list </td><td > </td></tr>
 <tr><td > 8 </td><td > missing target directory </td><td > </td></tr>
 <tr><td > 9 </td><td > no common root directory </td><td > </td></tr>
 <tr><td > 10 </td><td > file does not exist </td><td >  file name </td></tr>
 <tr><td > 11 </td><td > input is a directory </td><td >  directory name </td></tr>
 <tr><td > 12 </td><td > directory check failed </td><td >directory name </td></tr>
 <tr><td > 13 </td><td > invalid file name </td><td >given name </td></tr>
 <tr><td > 14 </td><td > file has no read permission </td><td >given name </td></tr>
 <tr><td > 36 </td><td > allocation failed :-( </td><td > </td></tr>
 </table></dd>
</dl>
</dl>
</dl>
<a name="GetListOfDependantFile"><dt>

<table><tr><td>o Sub <b>GetListOfDependantFile</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oDependant</tt>)</table></dt>
<dl>
  <dd>
 Retreives the complete list of the files recursively pointed by the  
 file given in argument to SetInitialFile method.
 Notice : in case AddFile has also been invoked, the files recursively 
 pointed by the added file also are retreived.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oDependant</tt>
   <dd> : The table of dependant files. <dt><b>Example:</b>
 <dd>
 </pre>
 Send.GetListOfDependantFile(<font color="red">oDependant</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetListOfToBeCopiedFiles"><dt>

<table><tr><td>o Sub <b>GetListOfToBeCopiedFiles</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oWillBeCopied</tt>)</table></dt>
<dl>
  <dd>
 Retreives the complete list of the files that will be copied. This list matches the list
 of dependant files, but without the files for which RemoveFile has been invoked.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  oWillBeCopied</tt>
   <dd> : The table of the files that will be copied. <dt><b>Example:</b>
 <dd>
 </pre>
 Send.GetListOfToBeCopiedFiles(<font color="red">oWillBeCopied</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="KeepDirectory"><dt>

<table><tr><td>o Sub <b>KeepDirectory</b>(<td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iKeep</tt>)</table></dt>
<dl>
  <dd>
 Controls the directory tree structure in the target directory.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iKeep</tt>
   <dd>	=1: to preserve the relative tree structure of the files.<br> This option will be effective only if there is a common root directory for all files.
 </dd>
    <dt><tt> iKeep</tt>
   <dd> =0: to copy the files directly in the destination directory  <dt><b>Example:</b>
 <dd>
 </pre>
 Send.KeepDirectory(<font color="red">ikeep</font>)
 </pre></dd>
</dl>
</dl>
</dl>
<a name="RemoveFile"><dt>

<table><tr><td>o Sub <b>RemoveFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFile</tt>)</table></dt>
<dl>
  <dd>
 Removes a file from the list of the files that will be copied.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFile</tt>
   <dd> : The File (With extension) to be removed from the list of the 'to be copied' files. 
 <dt><b>Example:</b>
 <dd>
 </pre>
 Send.RemoveFile(<font color="red">iFile</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Run"><dt>

<table><tr><td>o Sub <b>Run</b>(<td>)</table></dt>
<dl>
  <dd>
 Executes the copy action, according to previously set files and options.
<br>A "report.txt" report file is generated in the specified destination directory.
</dl>
<a name="SetDirectoryFile"><dt>

<table><tr><td>o Sub <b>SetDirectoryFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDirectory</tt>)</table></dt>
<dl>
  <dd>
 Positions the destination directory.  
 This method verifies that the given directory exists.
 Be careful, if SetDirectoryOneFile method has been previously called, 
 its action is overriden by this SetDirectoryFile call. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iDirectory</tt>
   <dd> : The destination directory where the files will be copied.  <dt><b>Example:</b>
 <dd>
 </pre>
 Send.SetDirectoryFile(<font color="red">iDirectory</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetDirectoryOneFile"><dt>

<table><tr><td>o Sub <b>SetDirectoryOneFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iDirectory</tt>)</table></dt>
<dl>
  <dd>
 Allows positioning the destination directory for one given file to be copied.  
 The file will be copied in the specified target directory.
 Be careful that using this method implies that  
 the 'KeepDirectory' variable will be automatically set to 0. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFile</tt>
   <dd> : The name (Name With extension) of the given file. </dd>
    <dt><tt> iDirectory</tt>
   <dd> : The directory where this file will be copied.  <dt><b>Example:</b>
 <dd>
 </pre>
 Send.SetDirectoryOneFile(<font color="red">iFile, iDirectory</font>)
 </dl>
 </pre></dd>
</dl>
</dl>
</dl>
<a name="SetInitialFile"><dt>

<table><tr><td>o Sub <b>SetInitialFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPath</tt>)</table></dt>
<dl>
  <dd>
 Sets the initial file to be copied.
 This method verifies that the given input file is valid (exists and is not a directory)
 <br>
 It generates a complete list of the recursively dependent files to be copied. 
 <dt><b>Example:</b>
 <dd>
 This example positions the file of path <tt>ipath</tt> in the list 
 of 'to be copied' files. All its dependant files will 
 also be added in the list of 'to be copied' files.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPath</tt>
   <dd> : Full path of the file to be copied. <pre>
 Send.SetInitialFile(<font color="red">iPath</font>)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetRenameFile"><dt>

<table><tr><td>o Sub <b>SetRenameFile</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iOldname</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iNewName</tt>)</table></dt>
<dl>
  <dd>
 Renames one file to be copied.
 The new name may not have invalid characters
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt>  iOldname</tt>
   <dd> : The old file name (With extension). </dd>
    <dt><tt>  iNewName</tt>
   <dd> : The new file name (Without extension). <dt><b>Example:</b>
 <dd>
 </pre>
 Send.SetRenameFile(<font color="red">iOldname, iNewName</font>)
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
