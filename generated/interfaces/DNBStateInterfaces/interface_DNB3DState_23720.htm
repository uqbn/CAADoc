<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>DNBStateInterfaces DNB3DState (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../DNBStateInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('DNB3DState','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DNB3DState','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('DNB3DState','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('DNB3DState','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>DNB3DState<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_DNB3DState_23720','DNB3DState','0');</script>
<b><i> Interface representing the 3D State object.</i></b><br>


 <br><b>Role</b>: Represents a 3D State object and provides APIs to
 update an existing 3D state object.
 <p>

<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#StateName"><b>StateName</b></a>
<dd>  Returns or sets the Name of the 3D State.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#Add3DPosition"><b>Add3DPosition</b></a>
<dd>  Adds the specified 3D Position to the given  
 3D state as a child.
 <dt>
    <a href="#Add3DState"><b>Add3DState</b></a>
<dd>  Adds the specified 3D state to the given 
 3D state as a child.
 <dt>
    <a href="#Assign3DState"><b>Assign3DState</b></a>
<dd>  Assigns the 3D state to a specified process, based on the given condition.
 <dt>
    <a href="#GetChildren"><b>GetChildren</b></a>
<dd>  Returns the list of all the 3D states  or 3D positions 
 or both, managed by the given 3D state.
 <dt>
    <a href="#GetConditionName"><b>GetConditionName</b></a>
<dd>  Returns the condition type on which the 3D State has been assigned 
 to a specified activity.
 <dt>
    <a href="#GetNumberOfChildren"><b>GetNumberOfChildren</b></a>
<dd>  Returns the number of 3D states  or 3D positions 
 or both, managed by the given 3D state.
 <dt>
    <a href="#GetNumberofRelatedActivities"><b>GetNumberofRelatedActivities</b></a>
<dd>  Returns the number of activities/processes associated with the 3D State based on 
 the condition on which the state has been assigned.
 <dt>
    <a href="#GetParent"><b>GetParent</b></a>
<dd>  Returns the parent for the 3D State 
  
 <dt>
    <a href="#GetRelatedActivities"><b>GetRelatedActivities</b></a>
<dd>  Returns the list of activities/processes associated with the 3D State based on 
 the condition on which the state has been assigned.
 <dt>
    <a href="#GetRelatedObject"><b>GetRelatedObject</b></a>
<dd>  Returns the product/resource/MA/ASTMA on which the given state is being defined.
 <dt>
    <a href="#Remove3DPosition"><b>Remove3DPosition</b></a>
<dd>  Removes the specified 3D position from the given 
 3D state’s definition list 
 
 <dt>
    <a href="#Remove3DState"><b>Remove3DState</b></a>
<dd>  Removes the specified 3D state from the given 
 3D state’s definition list 
 
 <dt>
    <a href="#Unassign3DState"><b>Unassign3DState</b></a>
<dd>  Unassigns the 3D state from a specified process.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="StateName"><dt>

<table><tr><td>o Property <b>StateName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns or sets the Name of the 3D State. 
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example fetches the Name of a 3D State.
 <pre>
 Dim stateName As String
 stateName = mySelected3DState.<font color="red">StateName</font>
 </pre>
 </dd>
 <dd>
 This example sets the Name of a 3D State.
 <pre>
 mySelected3DState.StateName = "NewStateName"
 </pre>
 </dd>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="Add3DPosition"><dt>

<table><tr><td>o Sub <b>Add3DPosition</b>(<td><script type="text/javascript"> activateLink('DNBIA3DStatePosition','DNBIA3DStatePosition')</script> <td><tt>iPosition</tt>)</table></dt>
<dl>
  <dd>
 Adds the specified 3D Position to the given  
 3D state as a child. This input state object should be 
 defined inside the product hierarchy of the ‘this’ state. 
 Otherwise this method would return E_FAIL. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosition</tt>
   <dd>    The 3D position object to be added.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example adds a specified 3D position to a 3D State as a child.
 <pre>
 Dim myState1 As DNB3DState
 Dim myPostion As DNB3DStatePosition
 myPostion = <get the 3D position to be added>
 myState1.Add3DState(myPostion)
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Add3DState"><dt>

<table><tr><td>o Sub <b>Add3DState</b>(<td><script type="text/javascript"> activateLink('DNB3DState','DNB3DState')</script> <td><tt>iState</tt>)</table></dt>
<dl>
  <dd>
 Adds the specified 3D state to the given 
 3D state as a child. This input state object should be 
 defined inside the product hierarchy of the ‘this’ state. 
 Otherwise this method would return E_FAIL. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>    The 3D State object to be added.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example adds a specified 3D state to a 3D State as a child.
 <pre>
 Dim myState1 As DNB3DState
 Dim myState2 As DNB3DState
 myState2 = <get the state to be added>
 myState1.Add3DState(myState2)
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Assign3DState"><dt>

<table><tr><td>o Sub <b>Assign3DState</b>(<td><script type="text/javascript"> activateLink('Activity','Activity')</script> <td><tt>iProcess</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCondition</tt>)</table></dt>
<dl>
  <dd>
 Assigns the 3D state to a specified process, based on the given condition. 
 <! @sample>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProcess</tt>
   <dd>    The activity to which the 3D state is to be assigned.
 </dd>
    <dt><tt> iCondition</tt>
   <dd>    The condition on which the 3D state is assigned to the specified process.
    iCondition should be one of "Begin Condition" or "End Condition" or "3D Context"
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example assigns myState to mySelectedAct as a "Begin Condition" .
 <pre>
 Dim myState As DNB3DState
 mySelectedAct = <get the activity to which the state has to be assigned>
 myState = <get the 3D state to be assigned>
 myState1.Assign3DState(mySelectedAct, "Begin Condition")
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetChildren"><dt>

<table><tr><td>o Sub <b>GetChildren</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oChildrenArray</tt>)</table></dt>
<dl>
  <dd>
 Returns the list of all the 3D states  or 3D positions 
 or both, managed by the given 3D state. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    The type of children to be obtained which can be "3D State" or "3D Position" or "All".
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oChildrenArray    The list of 3D states  or 3D positions or both, managed by the given 3D state.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the list of 3D States managed by myState.
 <pre>
 Dim myState As DNB3DState
 Dim statesArray() 
 myState = <get the 3D state to whose children need to be obtained>
 numStates = myState.GetNumberOfChildren("3D State")
 Redim statesArray(numStates - 1)
 myState.GetChildren "3D State",statesArray
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetConditionName"><dt>

<table><tr><td>o Func <b>GetConditionName</b>(<td><script type="text/javascript"> activateLink('Activity','Activity')</script> <td><tt>iRelatedActivity</tt>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Returns the condition type on which the 3D State has been assigned 
 to a specified activity.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iRelatedActivity</tt>
   <dd>    The activity to which the 3D state has been assigned based on a condition.
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oConditonName    The condition type on which the 3D State has been assigned and can have the 
    value as "Begin Condition" or "End Condition" or "3D Context"
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the condition on which the given activity has been assigned to the state.
 <pre>
 Dim myState As DNB3DState
 Dim conditionName as String
 Dim activitiesArray()
 myState = <get the 3D state to whose related actvities are to be obtained>
 mySelectedAct = <get the activity to which the state has been assigned>
 conditionName = myState.GetConditionName(iRelatedActivity)
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetNumberOfChildren"><dt>

<table><tr><td>o Func <b>GetNumberOfChildren</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of 3D states  or 3D positions 
 or both, managed by the given 3D state. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd>    The type of children to be obtained which can be "3D State" or "3D Position" or "All".
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oNumberOfChild    The number of 3D states  or 3D positions or both, managed by the given 3D state.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the number of 3D States managed by myState.
 <pre>
 Dim myState As DNB3DState
 Dim statesArray() 
 myState = <get the 3D state to whose children need to be obtained>
 numStates = myState.GetNumberOfChildren("3D State")
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetNumberofRelatedActivities"><dt>

<table><tr><td>o Func <b>GetNumberofRelatedActivities</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iConditionType</tt>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of activities/processes associated with the 3D State based on 
 the condition on which the state has been assigned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConditionType</tt>
   <dd>    The condition on which the state has been assigned.
    The condition type should be one of "Begin Condition" or "End Condition" or "3D Context" or "All".
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oNumActivities    The number of activities assigned to the given 3D state based on the specified condition.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the number of activities assigned to myState as a "End Condition".
 <pre>
 Dim myState As DNB3DState
 Dim activitiesArray()
 myState = <get the 3D state to whose related actvities are to be obtained>
 numOfActivities = myState.GetNumberofRelatedActivities("End Conditon")
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetParent"><dt>

<table><tr><td>o Func <b>GetParent</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Returns the parent for the 3D State 
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oParent    The parent under which the 3D state has been created which could be "3D States" or 
    "Mfg Positions"
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the number of activities assigned to myState as a "End Condition".
 <pre>
 Dim myState As DNB3DState
 myState = <get the 3D state to whose related actvities are to be obtained>
 parentObj = myState.GetParent
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetRelatedActivities"><dt>

<table><tr><td>o Sub <b>GetRelatedActivities</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iConditionType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oActivitiesArray</tt>)</table></dt>
<dl>
  <dd>
 Returns the list of activities/processes associated with the 3D State based on 
 the condition on which the state has been assigned.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iConditionType</tt>
   <dd>    The condition on which the state has been assigned.
    The condition type should be one of "Begin Condition" or "End Condition" or "3D Context" or "All".
  </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oActivitiesArray    The list of activities assigned to the given 3D state based on the specified condition.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the list of activities assigned to myState as a "End Condition".
 <pre>
 Dim myState As DNB3DState
 Dim activitiesArray()
 myState = <get the 3D state to whose related actvities are to be obtained>
 numOfActivities = myState.GetNumberofRelatedActivities("End Conditon")
 Redim activitiesArray(numOfActivities - 1)
 myState.GetRelatedActivities "End Conditon",activitiesArray
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="GetRelatedObject"><dt>

<table><tr><td>o Func <b>GetRelatedObject</b>(<td>) As <script type="text/javascript"> activateLink('CATBaseDispatch','CATBaseDispatch')</script> </table></dt>
<dl>
  <dd>
 Returns the product/resource/MA/ASTMA on which the given state is being defined. 
  
<dl>
  <dt> <b>Returns:</b> 
  <dd>  oRelatedObj    The product/resource/MA/ASTMA on which the given state is being defined.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example returns the product/resource/MA/ASTMA on which the given state is being defined.
 <pre>
 Dim myState As DNB3DState
 myState = <get the 3D state to whose children need to be obtained>
 Set relObj = myState.GetRelatedObject
 </pre>
 </dd>
 </dl>
</dl>
</dl>
<a name="Remove3DPosition"><dt>

<table><tr><td>o Sub <b>Remove3DPosition</b>(<td><script type="text/javascript"> activateLink('DNBIA3DStatePosition','DNBIA3DStatePosition')</script> <td><tt>iPosition</tt>)</table></dt>
<dl>
  <dd>
 Removes the specified 3D position from the given 
 3D state’s definition list 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPosition</tt>
   <dd>    The 3D position object to be removed.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example removes a specified 3D state from a 3D state's definition list .
 <pre>
 Dim myState1 As DNB3DState
 Dim myPostion As DNB3DStatePosition
 myPostion = <get the 3D position to be removed>
 myState1.Remove3DPosition(myPostion)
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Remove3DState"><dt>

<table><tr><td>o Sub <b>Remove3DState</b>(<td><script type="text/javascript"> activateLink('DNB3DState','DNB3DState')</script> <td><tt>iState</tt>)</table></dt>
<dl>
  <dd>
 Removes the specified 3D state from the given 
 3D state’s definition list 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iState</tt>
   <dd>    The 3D State object to be removed.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example removes a specified 3D state from a 3D state's definition list .
 <pre>
 Dim myState1 As DNB3DState
 Dim myState2 As DNB3DState
 myState2 = <get the 3D state to be removed>
 myState1.Remove3DState(myState2)
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="Unassign3DState"><dt>

<table><tr><td>o Sub <b>Unassign3DState</b>(<td><script type="text/javascript"> activateLink('Activity','Activity')</script> <td><tt>iProcess</tt>)</table></dt>
<dl>
  <dd>
 Unassigns the 3D state from a specified process. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iProcess</tt>
   <dd>    The activity from which the 3D state is to be unassigned.
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 This example unassigns myState from mySelectedAct.
 <pre>
 Dim myState As DNB3DState
 mySelectedAct = <get the activity from which the state has to be unassigned>
 myState = <get the 3D state to be unassigned>
 myState.Assign3DState(mySelectedAct)
 </pre>
 </dd>
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
