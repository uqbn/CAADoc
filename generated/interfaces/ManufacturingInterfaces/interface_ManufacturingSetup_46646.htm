<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ManufacturingInterfaces ManufacturingSetup (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../ManufacturingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ManufacturingSetup','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ManufacturingSetup','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ManufacturingSetup','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ManufacturingSetup','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ManufacturingSetup<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ManufacturingSetup_46646','ManufacturingSetup','0');</script>
<b><i> A ManufacturingSetup for a Manufacturing Document.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Comment"><b>Comment</b></a>
<dd>  Return the Default Comment of a Manufacturing Setup.
 <dt>
    <a href="#Machine"><b>Machine</b></a>
<dd>  Give the Machine linked to a Manufacturing Setup.
 <dt>
    <a href="#MachiningAxisSystem"><b>MachiningAxisSystem</b></a>
<dd>  Retrieves the Machining Axis system from a Manufacturing Setup.
 <dt>
    <a href="#Product"><b>Product</b></a>
<dd>  Associate the Product to a Manufacturing Setup.
 <dt>
    <a href="#Programs"><b>Programs</b></a>
<dd>  Give the List of Programs linked to a Manufacturing Setup.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#CreateMachine"><b>CreateMachine</b></a>
<dd>  Initialise the Manufacturing Machine linked to a Manufacturing Setup.
 <dt>
    <a href="#DesignGeometriesCount"><b>DesignGeometriesCount</b></a>
<dd>  Returns the number of design geometries from a Manufacturing Setup.
 <dt>
    <a href="#ExportCATSetting"><b>ExportCATSetting</b></a>
<dd>  ExportCATSetting.
 <dt>
    <a href="#FixtureGeometriesCount"><b>FixtureGeometriesCount</b></a>
<dd>  Returns the number of fixture geometries from a Manufacturing Setup.
 <dt>
    <a href="#GetMachiningAxisSystemName"><b>GetMachiningAxisSystemName</b></a>
<dd>  Retrieves the Name of the Machining Axis system from a Manufacturing Setup.
 <dt>
    <a href="#GetManufacturingView"><b>GetManufacturingView</b></a>
<dd>  Retrieves the Manufacturing View from a  Manufacturing Setup.
 <dt>
    <a href="#GetPartName"><b>GetPartName</b></a>
<dd>  Retrieves the Name of the Design Part from a Manufacturing Setup.
 <dt>
    <a href="#GetProductInstance"><b>GetProductInstance</b></a>
<dd>  Give the Product of  the ProductList linked to a Manufacturing Setup.
 <dt>
    <a href="#GetSafetyPlane"><b>GetSafetyPlane</b></a>
<dd>  Retrieves the Safety Plane from a Manufacturing Setup.
 <dt>
    <a href="#GetStockFromSetup"><b>GetStockFromSetup</b></a>
<dd>  Retrieves the path of the Stock file from a Manufacturing Setup.
 <dt>
    <a href="#GetToolChangePoint"><b>GetToolChangePoint</b></a>
<dd>  Get the ToolChange point of the machine linked to a Manufacturing Setup.
 <dt>
    <a href="#ImportCATSetting"><b>ImportCATSetting</b></a>
<dd>  ImportCATSetting.
 <dt>
    <a href="#InProcessModelBodiesCount"><b>InProcessModelBodiesCount</b></a>
<dd>  Returns the number of In Process Model Bodies from a Manufacturing Setup.
 <dt>
    <a href="#ListDesignGeometries"><b>ListDesignGeometries</b></a>
<dd>  Retrieves the design geometries list from a Manufacturing Setup.
 <dt>
    <a href="#ListDesignGeometriesProducts"><b>ListDesignGeometriesProducts</b></a>
<dd>  Retrieves the design geometries products list from a Manufacturing Setup.
 <dt>
    <a href="#ListFixtureGeometries"><b>ListFixtureGeometries</b></a>
<dd>  Retrieves the fixture geometries list from a Manufacturing Setup.
 <dt>
    <a href="#ListFixtureGeometriesProducts"><b>ListFixtureGeometriesProducts</b></a>
<dd>  Retrieves the Fixture geometries products list from a Manufacturing Setup.
 <dt>
    <a href="#ListInProcessModelBodies"><b>ListInProcessModelBodies</b></a>
<dd>  Retrieves the In Process Model Bodies list from a Manufacturing Setup.
 <dt>
    <a href="#ListStockGeometries"><b>ListStockGeometries</b></a>
<dd>  Retrieves the stock geometries list from a Manufacturing Setup.
 <dt>
    <a href="#ListStockGeometriesProducts"><b>ListStockGeometriesProducts</b></a>
<dd>  Retrieves the Stock geometries products list from a Manufacturing Setup.
 <dt>
    <a href="#ReadMfgData"><b>ReadMfgData</b></a>
<dd>  ReadMfgData.
 <dt>
    <a href="#SetDesignPart"><b>SetDesignPart</b></a>
<dd>  Associates the design part to a Manufacturing Setup.
 <dt>
    <a href="#SetProductAndReconciliate"><b>SetProductAndReconciliate</b></a>
<dd>  Associate the Product to a Manufacturing Setup and reconciliate links.
 <dt>
    <a href="#SetSafetyPlane"><b>SetSafetyPlane</b></a>
<dd>  Associates a Safety Plane to a Manufacturing Setup.
 <dt>
    <a href="#SetStock"><b>SetStock</b></a>
<dd>  Associates a stock to a Manufacturing Setup.
 <dt>
    <a href="#SetToolChangePoint"><b>SetToolChangePoint</b></a>
<dd>  Initialise the ToolChange point of the machine linked to a Manufacturing Setup.
 <dt>
    <a href="#SetToolChangePointByName"><b>SetToolChangePointByName</b></a>
<dd>  Initialise the ToolChange point of the machine linked to a Manufacturing Setup.
 <dt>
    <a href="#StockGeometriesCount"><b>StockGeometriesCount</b></a>
<dd>  Returns the number of stock geometries from a Manufacturing Setup.
</dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Comment"><dt>

<table><tr><td>o Property <b>Comment</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Return the Default Comment of a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example return the comment <tt>SetupComment</tt> of to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set CurrentSetup.<font color="red">Comment</font>= "SetupComment"
</pre>
 </dl>
</dl>
<a name="Machine"><dt>

<table><tr><td>o Property <b>Machine</b>(<td>) As <script type="text/javascript"> activateLink('ManufacturingMachine','ManufacturingMachine')</script> </table></dt>
<dl>
  <dd>
 Give the Machine linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns the <tt>Machine</tt> linked to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set Machine = CurrentSetup.Machine
</pre>
 </dl>
</dl>
<a name="MachiningAxisSystem"><dt>

<table><tr><td>o Property <b>MachiningAxisSystem</b>(<td>) As <script type="text/javascript"> activateLink('ManufacturingMachiningAxis','ManufacturingMachiningAxis')</script> </table></dt>
<dl>
  <dd>
 Retrieves the Machining Axis system from a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Machining Axis system <tt>oMachiningAxis</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set oMachiningAxis = CurrentSetup.<font color="red">MachiningAxisSystem</font>
</pre>
 </dl>
</dl>
<a name="Product"><dt>

<table><tr><td>o Property <b>Product</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associate the Product to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates the Product <tt>iProduct</tt> to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 CurrentSetup.Product = iProduct
</pre>
 </dl>
</dl>
<a name="Programs"><dt>

<table><tr><td>o Property <b>Programs</b>(<td>) As <script type="text/javascript"> activateLink('MfgActivities','MfgActivities')</script>  (Read Only)</table></dt>
<dl>
  <dd>
 Give the List of Programs linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns the list of Programs <tt>ProgramsList</tt> linked to the manufacturing Setup <tt>CurrentSetup</tt>
 <pre>
 Set ProgramsList = CurrentSetup.Programs
</pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="CreateMachine"><dt>

<table><tr><td>o Func <b>CreateMachine</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMachine</tt>) As <script type="text/javascript"> activateLink('ManufacturingMachine','ManufacturingMachine')</script> </table></dt>
<dl>
  <dd>
 Initialise the Manufacturing Machine linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example initialise the machine <tt>Mfg3AxisWithTableRotationMachine</tt> as Manufacturing Machine in the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">CreateMachine</font>(Mfg3AxisWithTableRotationMachine)
</pre>
 </dl>
</dl>
<a name="DesignGeometriesCount"><dt>

<table><tr><td>o Func <b>DesignGeometriesCount</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of design geometries from a Manufacturing Setup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oDesignGeometriesListSize</tt>
   <dd>   The number of design geometries of this setup
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the number of design geometries of 
 the setup <tt>CurrentSetup</tt> in <tt>DesignGeometriesListSize</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim DesignGeometriesListSize As Long
 DesignGeometriesListSize = CurrentSetup.<font color="red">DesignGeometriesCount</font>
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="ExportCATSetting"><dt>

<table><tr><td>o Sub <b>ExportCATSetting</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>dirPath</tt>)</table></dt>
<dl>
  <dd>
 ExportCATSetting.
 Export All Machining CATSetting file to a location in xml format.
 dirPath = Absolute path to the location where all settings should be exported. eg, "D:\dirs\"
 Call on Current Manufacturngsetup
</dl>
<a name="FixtureGeometriesCount"><dt>

<table><tr><td>o Func <b>FixtureGeometriesCount</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of fixture geometries from a Manufacturing Setup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oFixtureGeometriesListSize</tt>
   <dd>   The number of fixture geometries of this setup
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the number of fixture geometries of 
 the setup <tt>CurrentSetup</tt> in <tt>FixtureGeometriesListSize</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim FixtureGeometriesListSize As Long
 FixtureGeometriesListSize = CurrentSetup.<font color="red">FixtureGeometriesCount</font>
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetMachiningAxisSystemName"><dt>

<table><tr><td>o Func <b>GetMachiningAxisSystemName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Retrieves the Name of the Machining Axis system from a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Name of the Machining Axis system<tt>oMachiningAxisSystemName</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set oMachiningAxisSystemName = CurrentSetup.<font color="red">GetMachiningAxisSystemName</font>
</pre>
 </dl>
</dl>
<a name="GetManufacturingView"><dt>

<table><tr><td>o Func <b>GetManufacturingView</b>(<td>) As <script type="text/javascript"> activateLink('ManufacturingView','ManufacturingView')</script> </table></dt>
<dl>
  <dd>
 Retrieves the Manufacturing View from a  Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrievec the Manufacturing View <tt>MfgView</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set MfgView = CurrentSetup.<font color="red">GetManufacturingView</font>
</pre>
 </dl>
</dl>
<a name="GetPartName"><dt>

<table><tr><td>o Func <b>GetPartName</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Retrieves the Name of the Design Part from a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Name of the Design Part<tt>oPartName</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set oPartName = CurrentSetup.<font color="red">GetPartName</font>
</pre>
 </dl>
</dl>
<a name="GetProductInstance"><dt>

<table><tr><td>o Func <b>GetProductInstance</b>(<td>) As <script type="text/javascript"> activateLink('Product','Product')</script> </table></dt>
<dl>
  <dd>
 Give the Product of  the ProductList linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns the <tt>Product</tt> linked to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 Set Product = CurrentSetup.<font color="red">GetProductInstance</font>
</pre>
 </dl>
</dl>
<a name="GetSafetyPlane"><dt>

<table><tr><td>o Func <b>GetSafetyPlane</b>(<td>) As <script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> </table></dt>
<dl>
  <dd>
 Retrieves the Safety Plane from a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Safety Plane <tt>oMathPLane</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 The size of oMathPlane is 9 (origin, first direction, second direction) 
 <pre>
 Set oMathPlane= CurrentSetup.<font color="red">GetSafetyPlane </font>
</pre>
 </dl>
</dl>
<a name="GetStockFromSetup"><dt>

<table><tr><td>o Sub <b>GetStockFromSetup</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>oStockPath</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the path of the Stock file from a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the  the path of the Stock file<tt>oStockPath</tt> from the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">GetStockFromSetup</font>(oStockPath)
</pre>
 </dl>
</dl>
<a name="GetToolChangePoint"><dt>

<table><tr><td>o Sub <b>GetToolChangePoint</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oZ</tt>)</table></dt>
<dl>
  <dd>
 Get the ToolChange point of the machine linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example gets the point with coordinates <tt>X,Y,Z</tt> as ToolChangePoint  in the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">GetToolChangePoint</font>(X,Y,Z)
</pre>
 </dl>
</dl>
<a name="ImportCATSetting"><dt>

<table><tr><td>o Sub <b>ImportCATSetting</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>XMLFilePath</tt>)</table></dt>
<dl>
  <dd>
 ImportCATSetting.
 Import the CATSetting in xml format from a specified location.
 XMLFilePath = Path to the xml file. eg, "D:\dirs\settings.xml"
 Call on Current Manufacturngsetup
</dl>
<a name="InProcessModelBodiesCount"><dt>

<table><tr><td>o Func <b>InProcessModelBodiesCount</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of In Process Model Bodies from a Manufacturing Setup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oIPMBodiesListSize</tt>
   <dd>   The number of In Process Model Bodies of this setup
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the number of In Process Model Bodies  of 
 the setup <tt>CurrentSetup</tt> in <tt>IPMBodiesListSize</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim IPMBodiesListSize As Long
 IPMBodiesListSize = CurrentSetup.<font color="red">InProcessModelBodiesCount</font>
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="ListDesignGeometries"><dt>

<table><tr><td>o Sub <b>ListDesignGeometries</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfDesignGeometries</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the design geometries list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfDesignGeometries</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','DesignGeometriesCount');return false">DesignGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the design geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfDesignGeometries</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim DesignGeometriesListSize As Long
 DesignGeometriesListSize = CurrentSetup.DesignGeometriesCount
 If DesignGeometriesListSize > 0 Then
   Dim ListOfDesignGeometries() As Variant
   Redim ListOfDesignGeometries(DesignGeometriesListSize-1)
   CurrentSetup.<font color="red">ListDesignGeometries</font>(ListOfDesignGeometries)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListDesignGeometriesProducts"><dt>

<table><tr><td>o Sub <b>ListDesignGeometriesProducts</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfDesignGeometriesProducts</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the design geometries products list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfDesignGeometriesProducts</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','DesignGeometriesCount');return false">DesignGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the design geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfDesignGeometriesProducts</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim DesignGeometriesListSize As Long
 DesignGeometriesListSize = CurrentSetup.DesignGeometriesCount
 If DesignGeometriesListSize > 0 Then
   Dim ListOfDesignGeometries() As Variant
   Redim ListOfDesignGeometries(DesignGeometriesListSize-1)
   CurrentSetup.<font color="red">ListDesignGeometriesProducts</font>(ListOfDesignGeometriesProducts)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListFixtureGeometries"><dt>

<table><tr><td>o Sub <b>ListFixtureGeometries</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfFixtureGeometries</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the fixture geometries list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfFixtureGeometries</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','FixtureGeometriesCount');return false">FixtureGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the fixture geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfFixtureGeometries</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim FixtureGeometriesListSize As Long
 FixtureGeometriesListSize = CurrentSetup.FixtureGeometriesCount
 If FixtureGeometriesListSize > 0 Then
   Dim ListOfFixtureGeometries() As Variant
   Redim ListOfFixtureGeometries(FixtureGeometriesListSize-1)
   CurrentSetup.<font color="red">ListFixtureGeometries</font>(ListOfFixtureGeometries)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListFixtureGeometriesProducts"><dt>

<table><tr><td>o Sub <b>ListFixtureGeometriesProducts</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfFixtureGeometriesProducts</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the Fixture geometries products list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfFixtureGeometriesProducts</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','FixtureGeometriesCount');return false">FixtureGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Fixture geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfFixtureGeometriesProducts</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim FixtureGeometriesListSize As Long
 FixtureGeometriesListSize = CurrentSetup.FixtureGeometriesCount
 If FixtureGeometriesListSize > 0 Then
   Dim ListOfFixtureGeometries() As Variant
   Redim ListOfFixtureGeometries(FixtureGeometriesListSize-1)
   CurrentSetup.<font color="red">ListFixtureGeometriesProducts</font>(ListOfFixtureGeometriesProducts)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListInProcessModelBodies"><dt>

<table><tr><td>o Sub <b>ListInProcessModelBodies</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfIPMBodies</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the In Process Model Bodies list from a Manufacturing Setup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfIPMBodies</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','InProcessModelBodiesCount');return false">InProcessModelBodiesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the In Process Model Bodies list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfIPMBodies</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim IPMBodiesListSize As Long
 IPMBodiesListSize = CurrentSetup.InProcessModelBodiesCount
 If IPMBodiesListSize > 0 Then
   Dim ListOfIPMBodies() As Variant
   Redim ListOfIPMBodies(IPMBodiesListSize-1)
   CurrentSetup.<font color="red">ListInProcessModelBodies</font>(ListOfIPMBodies)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListStockGeometries"><dt>

<table><tr><td>o Sub <b>ListStockGeometries</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfStockGeometries</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the stock geometries list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfStockGeometries</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','StockGeometriesCount');return false">StockGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the stock geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfStockGeometries</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim StockGeometriesListSize As Long
 StockGeometriesListSize = CurrentSetup.StockGeometriesCount
 If StockGeometriesListSize > 0 Then
   Dim ListOfStockGeometries() As Variant
   Redim ListOfStockGeometries(StockGeometriesListSize-1)
   CurrentSetup.<font color="red">ListStockGeometries</font>(ListOfStockGeometries)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ListStockGeometriesProducts"><dt>

<table><tr><td>o Sub <b>ListStockGeometriesProducts</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oListOfStockGeometriesProducts</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the Stock geometries products list from a Manufacturing Setup.
 Each of these geometries may be either a Product or a Body.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oListOfStockGeometriesProducts</tt>
   <dd>   The retrieved list.
   <br>
   The array must be previously initialized
   using the </dd>
</dl>
<a href="#" onClick="openLink('','StockGeometriesCount');return false">StockGeometriesCount</a> method. <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the Stock geometries list of 
 the manufacturing setup <tt>CurrentSetup</tt> in <tt>ListOfStockGeometriesProducts</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim StockGeometriesListSize As Long
 StockGeometriesListSize = CurrentSetup.StockGeometriesCount
 If StockGeometriesListSize > 0 Then
   Dim ListOfStockGeometries() As Variant
   Redim ListOfStockGeometries(StockGeometriesListSize-1)
   CurrentSetup.<font color="red">ListStockGeometriesProducts</font>(ListOfStockGeometriesProducts)
 End If
 </pre>
 </dl>
</dl>
</dl>
<a name="ReadMfgData"><dt>

<table><tr><td>o Sub <b>ReadMfgData</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFileName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iNCMILLSET</tt>)</table></dt>
<dl>
  <dd>
 ReadMfgData.
 Read Manufacturing V4 data.
 iFileName = Path for V4 product
 iNCMILLSET = NC sets
 Acts Same as command "Read Manufacturing data from V4 model" in NC Manufacturing Review workbench
 Call on Current Manufacturngsetup
</dl>
<a name="SetDesignPart"><dt>

<table><tr><td>o Sub <b>SetDesignPart</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associates the design part to a Manufacturing Setup.<br>
 The part must be a Body feature (Geometrical Set, Ordered Geometrical Set, PartBody, Body.n) 
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates the part <tt>iPart</tt> belonging to the Product <tt>iProduct</tt> to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetPart</font>(iPart,iProduct)
</pre>
 </dl>
</dl>
<a name="SetProductAndReconciliate"><dt>

<table><tr><td>o Sub <b>SetProductAndReconciliate</b>(<td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associate the Product to a Manufacturing Setup and reconciliate links.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates the Product <tt>iProduct</tt> to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetProductAndReconciliate</font>(iProduct)
</pre>
 </dl>
</dl>
<a name="SetSafetyPlane"><dt>

<table><tr><td>o Sub <b>SetSafetyPlane</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iSafetyPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associates a Safety Plane to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates the Safety Plane <tt>iSafetyPlane</tt> belonging to the Product <tt>iProduct</tt> to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetSafetyPlane</font>(iSafetyPlane,iProduct)
</pre>
 </dl>
</dl>
<a name="SetStock"><dt>

<table><tr><td>o Sub <b>SetStock</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iStock</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Associates a stock to a Manufacturing Setup.<br>
 The stock must be either a Body feature (Geometrical Set, Ordered Geometrical Set, PartBody, Body.n) either a CGR product.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates the stock <tt>iStock</tt> belonging to the Product <tt>iProduct</tt> to the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetStock</font>(iStock,iProduct)
</pre>
 </dl>
</dl>
<a name="SetToolChangePoint"><dt>

<table><tr><td>o Sub <b>SetToolChangePoint</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iX</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iY</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iZ</tt>)</table></dt>
<dl>
  <dd>
 Initialise the ToolChange point of the machine linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example initialise the point with coordinates <tt>X,Y,Z</tt> as ToolChangePoint  in the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetToolChangePoint</font>(X,Y,Z)
</pre>
 </dl>
</dl>
<a name="SetToolChangePointByName"><dt>

<table><tr><td>o Sub <b>SetToolChangePointByName</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPointName</tt>)</table></dt>
<dl>
  <dd>
 Initialise the ToolChange point of the machine linked to a Manufacturing Setup.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example initialise the point <tt>PT23</tt> as ToolChangePoint  in the manufacturing setup <tt>CurrentSetup</tt>
 <pre>
 call CurrentSetup.<font color="red">SetToolChangePointByName</font>(PT23)
</pre>
 </dl>
</dl>
<a name="StockGeometriesCount"><dt>

<table><tr><td>o Func <b>StockGeometriesCount</b>(<td>) As <script type="text/javascript"> activateLink('long','long')</script> </table></dt>
<dl>
  <dd>
 Returns the number of stock geometries from a Manufacturing Setup.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oStockGeometriesListSize</tt>
   <dd>   The number of stock geometries of this setup
 <!-- @sample -->
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the number of stock geometries of 
 the setup <tt>CurrentSetup</tt> in <tt>StockGeometriesListSize</tt>.
 <pre>
 Dim CurrentSetup As ManufacturingSetup
 Set CurrentSetup = ...
 Dim StockGeometriesListSize As Long
 StockGeometriesListSize = CurrentSetup.<font color="red">StockGeometriesCount</font>
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
