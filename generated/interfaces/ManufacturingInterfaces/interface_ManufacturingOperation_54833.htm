<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>ManufacturingInterfaces ManufacturingOperation (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../ManufacturingInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('ManufacturingOperation','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ManufacturingOperation','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('ManufacturingOperation','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('ManufacturingOperation','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>ManufacturingOperation<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_ManufacturingOperation_54833','ManufacturingOperation','0');</script>
<b><i> ManufacturingOperation defines a set of methods.</i></b><br>
<hr>
<dl>
 <h2><a name="PropertyIndex"></a>Property Index</h2>
 <dt>
    <a href="#Comment"><b>Comment</b></a>
<dd>  Return the Comment linked to a Manufacturing Operation.
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddClearance"><b>AddClearance</b></a>
<dd>  Add a 'clearance to a plane' path to a Manufacturing Operation.
 <dt>
    <a href="#AddDistanceAlongAlineMotion"><b>AddDistanceAlongAlineMotion</b></a>
<dd>  Add a path 'distance along a line' to a Manufacturing Operation.
 <dt>
    <a href="#AddDistanceAlongAlineMotionFeed"><b>AddDistanceAlongAlineMotionFeed</b></a>
<dd>  Add a path 'distance along a line' with Feedrate info to a Manufacturing Operation.
 <dt>
    <a href="#AddDistanceAlongAxis"><b>AddDistanceAlongAxis</b></a>
<dd>  Add a path 'distance along axis' to a Manufacturing Operation.
 <dt>
    <a href="#AddDistanceAlongAxisFeed"><b>AddDistanceAlongAxisFeed</b></a>
<dd>  Add a path 'distance along axis' with Feedrate info to a Manufacturing Operation.
 <dt>
    <a href="#AddGotoHorizontal"><b>AddGotoHorizontal</b></a>
<dd>  Add a path 'goto horizontal' to a Manufacturing Operation.
 <dt>
    <a href="#AddMotionGoToAPoint"><b>AddMotionGoToAPoint</b></a>
<dd>  Add a path 'goto a point' to a Manufacturing Operation.
 <dt>
    <a href="#AddMotionGoToAPointFeed"><b>AddMotionGoToAPointFeed</b></a>
<dd>  Add a path 'goto a point' with Feedrate info to a Manufacturing Operation.
 <dt>
    <a href="#AddMotionToAPlane"><b>AddMotionToAPlane</b></a>
<dd>  Add a path 'goto a plane with axial or perpendicular move' to a Manufacturing Operation.
 <dt>
    <a href="#AddPPWords"><b>AddPPWords</b></a>
<dd>  Add a path 'PP Words' to a Manufacturing Operation.
 <dt>
    <a href="#GetAGeometricAttribute"><b>GetAGeometricAttribute</b></a>
<dd>  Retrieve a Geometric Attribute of a Manufacturing Operation.
 <dt>
    <a href="#GetAnAttribute"><b>GetAnAttribute</b></a>
<dd>  Retrieve the Attribute of a Manufacturing Operation.
 <dt>
    <a href="#GetFeature"><b>GetFeature</b></a>
<dd>  Retrieve the Machinable Feature asociated to a Manufacturing Operation.
 <dt>
    <a href="#GetFeedSpeedAutoUpdate"><b>GetFeedSpeedAutoUpdate</b></a>
<dd>  Returns the Auto Update status for Feed Rate or Spindle Speed.
 <dt>
    <a href="#GetListOfToolMotions"><b>GetListOfToolMotions</b></a>
<dd>  Give a list of Manufacturing ToolMotion contained by  a sequential operation.
 <dt>
    <a href="#GetManufacturingFeature"><b>GetManufacturingFeature</b></a>
<dd>  Retrieve the Manufacturing Feature asociated to a Manufacturing Operation.
 <dt>
    <a href="#GetMfgAparamTopPln"><b>GetMfgAparamTopPln</b></a>
<dd>  Retrieve the Equation of the Top Plane of a Pocket Operation.
 <dt>
    <a href="#GetMfgAxialFeatureDiameter"><b>GetMfgAxialFeatureDiameter</b></a>
<dd>  Retrieve the diameter of an axial manufacturing feature.
 <dt>
    <a href="#GetMfgBparamTopPln"><b>GetMfgBparamTopPln</b></a>
<dd>  Retrieve the Equation of the Top Plane of a Pocket Operation.
 <dt>
    <a href="#GetMfgCparamTopPln"><b>GetMfgCparamTopPln</b></a>
<dd>  Retrieve the Equation of the Top Plane of a Pocket Operation.
 <dt>
    <a href="#GetMfgDparamTopPln"><b>GetMfgDparamTopPln</b></a>
<dd>  Retrieve the Equation of the Top Plane of a Pocket Operation.
 <dt>
    <a href="#GetMfgFeaturePosition"><b>GetMfgFeaturePosition</b></a>
<dd>  Retrieve the Coordinate of the Reference Point of a Drill Operation.
 <dt>
    <a href="#GetMfgFeatureXPosition"><b>GetMfgFeatureXPosition</b></a>
<dd>  Retrieve the Coordinate of the Reference Point of a Drill Operation.
 <dt>
    <a href="#GetMfgFeatureYPosition"><b>GetMfgFeatureYPosition</b></a>
<dd>  Retrieve the Coordinate of the Reference Point of a Drill Operation.
 <dt>
    <a href="#GetMfgFeatureZPosition"><b>GetMfgFeatureZPosition</b></a>
<dd>  Retrieve the Coordinate of the Reference Point of a Drill Operation.
 <dt>
    <a href="#GetMfgTopPlane"><b>GetMfgTopPlane</b></a>
<dd>  Retrieve the Equation of the Top Plane of a Pocket Operation.
 <dt>
    <a href="#GetPattern"><b>GetPattern</b></a>
<dd>  Retrieve the Machining Pattern asociated to a Manufacturing Operation.
 <dt>
    <a href="#GetRadiusOnMacro"><b>GetRadiusOnMacro</b></a>
<dd>  Retrieves radius attribute on the circular elementary macro motion on CIRCULAR MILLING
 or THREAD MILLING operations ONLY.
 <dt>
    <a href="#GetRelimitingGeometry"><b>GetRelimitingGeometry</b></a>
<dd>  Retrieves start / end  element on PROFILE CONTOURING operation ONLY.
 <dt>
    <a href="#GetStartPointGeometry"><b>GetStartPointGeometry</b></a>
<dd>  Retrieves geometry and offset of a start point on POCKETING operation ONLY.
 <dt>
    <a href="#GetToolGage"><b>GetToolGage</b></a>
<dd>  Retrieves the minimum tool cutting lentgh and the minimum tool gage length.
 <dt>
    <a href="#GetTrajectoryEndPointCoord"><b>GetTrajectoryEndPointCoord</b></a>
<dd>  Retrieve the Machining Operation's trajectory end point.
 <dt>
    <a href="#GetTrajectoryStartPointCoord"><b>GetTrajectoryStartPointCoord</b></a>
<dd>  Retrieve the Machining Operation's trajectory start point.
 <dt>
    <a href="#ImportNCOutput"><b>ImportNCOutput</b></a>
<dd>  Import an NC File.
 <dt>
    <a href="#InsertToolMotion"><b>InsertToolMotion</b></a>
<dd>  Create, given its type, a Manufacturing ToolMotion inside a sequential operation.
 <dt>
    <a href="#IsGeometricallyAccessibleOnSetup"><b>IsGeometricallyAccessibleOnSetup</b></a>
<dd>  Returns True if the Manufacturing Axial Operation is geometrically accessible on the given 
 Manufacturing Setup.
 <dt>
    <a href="#LockActivty"><b>LockActivty</b></a>
<dd>   Method is used for Locking and Unloking specific activity 
 Call on ManufacturingOperation

 <dt>
    <a href="#RemoveRelimitingGeometry"><b>RemoveRelimitingGeometry</b></a>
<dd>  Removes the geometry on relimiting element PROFILE CONTOURING operation ONLY.
 <dt>
    <a href="#RemoveStartPointGeometry"><b>RemoveStartPointGeometry</b></a>
<dd>  Removes the start point  element on POCKETING operation ONLY.
 <dt>
    <a href="#SetFeature"><b>SetFeature</b></a>
<dd>  Associate a Machinable Feature to a Manufacturing Operation.
 <dt>
    <a href="#SetFeedSpeedAutoUpdate"><b>SetFeedSpeedAutoUpdate</b></a>
<dd>  Set the Auto Update status for Feed Rate or Spindle Speed.
 <dt>
    <a href="#SetFeedrateMagnitude"><b>SetFeedrateMagnitude</b></a>
<dd>  Defines the magnitude of the feedrate values.
 <dt>
    <a href="#SetGeometry"><b>SetGeometry</b></a>
<dd>  Assigns geometry to a Manufacturing Operation.
 <dt>
    <a href="#SetPattern"><b>SetPattern</b></a>
<dd>  Associate a Machining Pattern to a Manufacturing Operation.
 <dt>
    <a href="#SetRadiusOnMacro"><b>SetRadiusOnMacro</b></a>
<dd>  Defines radius attribute on the circular elementary macro motion on CIRCULAR MILLING
 or THREAD MILLING operations ONLY.
 <dt>
    <a href="#SetRelimitingGeometry"><b>SetRelimitingGeometry</b></a>
<dd>  Defines start / end  element on PROFILE CONTOURING operation ONLY.
 <dt>
    <a href="#SetSpindleMagnitude"><b>SetSpindleMagnitude</b></a>
<dd>  Defines the magnitude of the spindle values.
 <dt>
    <a href="#SetStartPointGeometry"><b>SetStartPointGeometry</b></a>
<dd>  Defines the geometry and the offset of a start point on POCKETING operation ONLY.
 <dt>
    <a href="#SetTool"><b>SetTool</b></a>
<dd>  Assign an already created tool to a Manufacturing Operation.
 <dt>
    <a href="#UnlockActivty"><b>UnlockActivty</b></a>
<dd> </dl>
 <h2><a name="Properties"></a>Properties</h2> <br>
<a name="Comment"><dt>

<table><tr><td>o Property <b>Comment</b>(<td>) As <script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> </table></dt>
<dl>
  <dd>
 Return the Comment linked to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns the Comment <tt>ThisComment</tt> linked to a manufacturing operation <tt>CurrentMo</tt>
 <pre>
 Set ThisComment = CurrentMo.Comment
</pre>
 </dl>
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddClearance"><dt>

<table><tr><td>o Sub <b>AddClearance</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iC</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iD</tt>)</table></dt>
<dl>
  <dd>
 Add a 'clearance to a plane' path to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (clerarance) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddClearance</font>("Approach", A, B, C, D)
</pre>
 </dl>
</dl>
<a name="AddDistanceAlongAlineMotion"><dt>

<table><tr><td>o Sub <b>AddDistanceAlongAlineMotion</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iLine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'distance along a line' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (distance along a line) on the approach group of path of the Linking
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddDistanceAlongAlineMotion</font>("LinkingApproach", distance, iLine, iProduct)
</pre>
 </dl>
</dl>
<a name="AddDistanceAlongAlineMotionFeed"><dt>

<table><tr><td>o Sub <b>AddDistanceAlongAlineMotionFeed</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iLine</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFeedrateType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFeedrateValue</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'distance along a line' with Feedrate info to a Manufacturing Operation. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFeedrateType</tt>
   <dd>   <b>Legal values</b>: iFeedrateType can be
   <dl>
     <dt><tt>"None"</tt>		  <dd>
     <dt><tt>"Machining"</tt>  <dd>
     <dt><tt>"Approach"</tt>   <dd>
     <dt><tt>"Retract"</tt>    <dd>
     <dt><tt>"RAPID"</tt>    <dd>
     <dt><tt>"Local"</tt>    <dd>
   </dl>
 </dd>
    <dt><tt> iFeedrateValue</tt>
   <dd>   feedrate Value in MKS units : m/s if linear feedrate, or m/turn if angular feedrate (take into account only if iFeedrateType = "Local")
 </dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (distance along a line) on the approach group of path of the Linking
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddDistanceAlongAlineMotionFeed</font>("LinkingApproach", distance, iLine, iProduct, iFeedrateType, iFeedrateValue)
</pre></dd>
</dl>
</dl>
</dl>
<a name="AddDistanceAlongAxis"><dt>

<table><tr><td>o Sub <b>AddDistanceAlongAxis</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'distance along axis' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (distance along axis) on the approach group of path of the Linking
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddDistanceAlongAxis</font>("LinkingApproach", distance)
</pre>
 </dl>
</dl>
<a name="AddDistanceAlongAxisFeed"><dt>

<table><tr><td>o Sub <b>AddDistanceAlongAxisFeed</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFeedrateType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFeedrateValue</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'distance along axis' with Feedrate info to a Manufacturing Operation. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFeedrateType</tt>
   <dd>   <b>Legal values</b>: iFeedrateType can be
   <dl>
     <dt><tt>"None"</tt>		  <dd>
     <dt><tt>"Machining"</tt>  <dd>
     <dt><tt>"Approach"</tt>   <dd>
     <dt><tt>"Retract"</tt>    <dd>
     <dt><tt>"RAPID"</tt>    <dd>
     <dt><tt>"Local"</tt>    <dd>
   </dl>
 </dd>
    <dt><tt> iFeedrateValue</tt>
   <dd>   feedrate Value in MKS units : m/s if linear feedrate, or m/turn if angular feedrate (take into account only if iFeedrateType = "Local")
 </dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (distance along axis) on the approach group of path of the Linking
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddDistanceAlongAxisFeed</font>("LinkingApproach", distance, iFeedrateType, iFeedrateValue)
</pre></dd>
</dl>
</dl>
</dl>
<a name="AddGotoHorizontal"><dt>

<table><tr><td>o Sub <b>AddGotoHorizontal</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle2</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'goto horizontal' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (goto horizontal) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddGotoHorizontal</font>("Approach", distance, angle1, angle2)
</pre>
 </dl>
</dl>
<a name="AddMotionGoToAPoint"><dt>

<table><tr><td>o Sub <b>AddMotionGoToAPoint</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'goto a point' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (goto a point ) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddMotionGoToAPoint</font>("Approach", iPoint, iProduct )
</pre>
 </dl>
</dl>
<a name="AddMotionGoToAPointFeed"><dt>

<table><tr><td>o Sub <b>AddMotionGoToAPointFeed</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iPoint</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFeedrateType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iFeedrateValue</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'goto a point' with Feedrate info to a Manufacturing Operation. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iFeedrateType</tt>
   <dd>   <b>Legal values</b>: iFeedrateType can be
   <dl>
     <dt><tt>"None"</tt>		  <dd>
     <dt><tt>"Machining"</tt>  <dd>
     <dt><tt>"Approach"</tt>   <dd>
     <dt><tt>"Retract"</tt>    <dd>
     <dt><tt>"RAPID"</tt>    <dd>
     <dt><tt>"Local"</tt>    <dd>
   </dl>
 </dd>
    <dt><tt> iFeedrateValue</tt>
   <dd>   feedrate Value in MKS units : m/s if linear feedrate, or m/turn if angular feedrate (take into account only if iFeedrateType = "Local")
 </dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (goto a point ) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddMotionGoToAPointFeed</font>("Approach", iPoint, iProduct, iFeedrateType, iFeedrateValue)
</pre></dd>
</dl>
</dl>
</dl>
<a name="AddMotionToAPlane"><dt>

<table><tr><td>o Sub <b>AddMotionToAPlane</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Product','Product')</script> <td><tt>iProduct</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'goto a plane with axial or perpendicular move' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (goto a plane with axial move ) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddMotionToAPlane</font>("Approach", 1, iPlane, iProduct)
</pre>
 <dt><b>Example:</b>
 <dd>The following example add a path (goto a plane with perpendicular move ) on approach
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddMotionToAPlane</font>("Approach", 0, iPlane, iProduct)
</pre>
 </dl>
</dl>
<a name="AddPPWords"><dt>

<table><tr><td>o Sub <b>AddPPWords</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iTypeMacro</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPPWords</tt>)</table></dt>
<dl>
  <dd>
 Add a path 'PP Words' to a Manufacturing Operation. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example add a path (PP Words) on the retract group of path of the Linking
 macro of <tt>operation</tt> 
 <pre>
 call Operation.<font color="red">AddPPWords</font>("LinkingRetract", "PP Words example")
</pre>
 </dl>
</dl>
<a name="GetAGeometricAttribute"><dt>

<table><tr><td>o Func <b>GetAGeometricAttribute</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAttribut</tt>) As <script type="text/javascript"> activateLink('Parameter','Parameter')</script> </table></dt>
<dl>
  <dd>
 Retrieve a Geometric Attribute of a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves in <tt>Offset</tt> the attribute 
 <tt>OriginOffset</tt> of Manufacturing Operation <tt>firstOperation</tt>
 <pre>
 Set Offset = firstOperation.<font color="red">GetAttribute</font>(OriginOffset)
</pre>
 </dl>
</dl>
<a name="GetAnAttribute"><dt>

<table><tr><td>o Func <b>GetAnAttribute</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAttribut</tt>) As <script type="text/javascript"> activateLink('Parameter','Parameter')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Attribute of a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>RapidFeed</tt> the attribute 
 <tt>MfgRapidFeed</tt> of Manufacturing Operation <tt>firstOperation</tt>
 <pre>
 Set RapidFeed = firstOperation.<font color="red">GetAttribute</font>(MfgRapidFeed)
</pre>
 </dl>
</dl>
<a name="GetFeature"><dt>

<table><tr><td>o Func <b>GetFeature</b>(<td>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Machinable Feature asociated to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>firstOperation</tt> the machinable feature 
 <tt>Feature</tt>
 <pre>
 call firstOperation.<font color="red">GetFeature</font>(Feature)
</pre>
 </dl>
</dl>
<a name="GetFeedSpeedAutoUpdate"><dt>

<table><tr><td>o Func <b>GetFeedSpeedAutoUpdate</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns the Auto Update status for Feed Rate or Spindle Speed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> Determines if the method works on Feed Rate or Spindle Speed   <b>Legal values</b>: iType can be
   <ul>
     <li><tt>"FEEDRATE"</tt>		 </li>
     <li><tt>"SPINDLESPEED"</tt>  </li>
   </ul>
 </dd>
</dl>
  <dt> <b>Returns:</b> 
  <dd>  oAutoUpdate   Auto update status<br>
	 <ul>
		<li><b>Example:</b></li>
		<li>The following example checks the status of AutoUpdate for Feed Rate</li>
		<li>Dim isAutoUpdateEnabled As Boolean</li>
		<li>isAutoUpdateEnabled = firstOperation.<font color="red">GetFeedSpeedAutoUpdate("FEEDRATE")</font></li>
  </ul>
</dl>
</dl>
<a name="GetListOfToolMotions"><dt>

<table><tr><td>o Func <b>GetListOfToolMotions</b>(<td>) As <script type="text/javascript"> activateLink('MfgToolMotions','MfgToolMotions')</script> </table></dt>
<dl>
  <dd>
 Give a list of Manufacturing ToolMotion contained by  a sequential operation.<br>
 <dl> See interface CATIAMfgToolMotions for methods available on the list
 <dd> The following example extract the tool motions of operation SeqMO in the MfgToolMotions
 <dd> list TMList2 .
 <pre>
 <dt><b>Example:</b>
	Dim TMList2 As MfgToolMotions
	Set TMList2 = SeqMO.<font color="red">GetListOfToolMotions</font>
	Dim Test2 As ManufacturingToolMotion
	Set Test2 = TMList2.GetElement(1)
</pre>
 </dl>
</dl>
<a name="GetManufacturingFeature"><dt>

<table><tr><td>o Func <b>GetManufacturingFeature</b>(<td>) As <script type="text/javascript"> activateLink('ManufacturingFeature','ManufacturingFeature')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Manufacturing Feature asociated to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>firstOperation</tt> the manufacturing feature 
 <tt>Feature</tt>
 <pre>
 Set Feature = firstOperation.<font color="red">GetManufacturingFeature</font>
</pre>
 </dl>
</dl>
<a name="GetMfgAparamTopPln"><dt>

<table><tr><td>o Func <b>GetMfgAparamTopPln</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Equation of the Top Plane of a Pocket Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>A,B,C,D</tt> the equation
 Ax + By + Cz + D = 0 of Manufacturing Pocket Operation <tt>firstOperation</tt>
 <pre>
 Dim A
 Set A = firstOperation.<font color="red">GetMfgBparamTopPln</font>
</pre>
 </dl>
</dl>
<a name="GetMfgAxialFeatureDiameter"><dt>

<table><tr><td>o Func <b>GetMfgAxialFeatureDiameter</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the diameter of an axial manufacturing feature.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>Diam</tt> the diameter
 of the axial manufacturing feature linked to the operation <tt>firstOperation</tt>
 <pre>
 Dim Diam 
 Set Diam = firstOperation.<font color="red">GetMfgAxialFeatureDiameter</font>
</pre>
 </dl>
</dl>
<a name="GetMfgBparamTopPln"><dt>

<table><tr><td>o Func <b>GetMfgBparamTopPln</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Equation of the Top Plane of a Pocket Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>A,B,C,D</tt> the equation
 Ax + By + Cz + D = 0 of Manufacturing Pocket Operation <tt>firstOperation</tt>
 <pre>
 Dim B
 Set B = firstOperation.<font color="red">GetMfgBparamTopPln</font>
</pre>
 </dl>
</dl>
<a name="GetMfgCparamTopPln"><dt>

<table><tr><td>o Func <b>GetMfgCparamTopPln</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Equation of the Top Plane of a Pocket Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>A,B,C,D</tt> the equation
 Ax + By + Cz + D = 0 of Manufacturing Pocket Operation <tt>firstOperation</tt>
 <pre>
 Dim C
 Set C = firstOperation.<font color="red">GetMfgCparamTopPln</font>
</pre>
 </dl>
</dl>
<a name="GetMfgDparamTopPln"><dt>

<table><tr><td>o Func <b>GetMfgDparamTopPln</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Equation of the Top Plane of a Pocket Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>A,B,C,D</tt> the equation
 Ax + By + Cz + D = 0 of Manufacturing Pocket Operation <tt>firstOperation</tt>
 <pre>
 Dim D
 Set D = firstOperation.<font color="red">GetMfgDparamTopPln</font>
</pre>
 </dl>
</dl>
<a name="GetMfgFeaturePosition"><dt>

<table><tr><td>o Sub <b>GetMfgFeaturePosition</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>ioPosition</tt>)</table></dt>
<dl>
  <dd>
 Retrieve the Coordinate of the Reference Point of a Drill Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>X,Y,Z</tt> the coordinate
 (X,Y,Z) of the Reference Point of the Drill Operation <tt>firstOperation</tt>
 <pre>
 Dim oPositionArray(3) As CATSafeArrayVariant
 Call firstOperation.<font color="red">GetMfgFeaturePosition</font>(oPositionArray)
 Assume this array is <tt>oPositionArray</tt>. It contains: 
 <dl>
 <dt><tt>oPositionArray[0],oPositionArray[1],oPositionArray[2]</tt>
 <dd>The X, Y, and Z direction vector components
 </dl>
 <! @sample >
 <dl>
 <dt><b>Example:</b>
 <dd>The following example returns in <tt>oPositionArray</tt>
 the coordinates of the feature position
 <pre>
 Call firstOperation.<font color="red">GetMfgFeaturePosition</font>(oCoord)
 x = oPositionArray[0]
 y = oPositionArray[1]
 z = oPositionArray[2]
</pre>
 </dl>
</dl>
<a name="GetMfgFeatureXPosition"><dt>

<table><tr><td>o Func <b>GetMfgFeatureXPosition</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Coordinate of the Reference Point of a Drill Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>X,Y,Z</tt> the coordinate
 (X,Y,Z) of the Reference Point of the Drill Operation <tt>firstOperation</tt>
 <pre>
 Dim X
 X = firstOperation.<font color="red">GetMfgFeatureXPosition</font>
</pre>
 </dl>
</dl>
<a name="GetMfgFeatureYPosition"><dt>

<table><tr><td>o Func <b>GetMfgFeatureYPosition</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Coordinate of the Reference Point of a Drill Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>X,Y,Z</tt> the coordinate
 (X,Y,Z) of the Reference Point of the Drill Operation <tt>firstOperation</tt>
 <pre>
 Dim Y
 Y = firstOperation.<font color="red">GetMfgFeatureYPosition</font>
</pre>
 </dl>
</dl>
<a name="GetMfgFeatureZPosition"><dt>

<table><tr><td>o Func <b>GetMfgFeatureZPosition</b>(<td>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Coordinate of the Reference Point of a Drill Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>X,Y,Z</tt> the coordinate
 (X,Y,Z) of the Reference Point of the Drill Operation <tt>firstOperation</tt>
 <pre>
 Dim Z
 Z = firstOperation.<font color="red">GetMfgFeatureZPosition</font>
</pre>
 </dl>
</dl>
<a name="GetMfgTopPlane"><dt>

<table><tr><td>o Sub <b>GetMfgTopPlane</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oA</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oB</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oC</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oD</tt>)</table></dt>
<dl>
  <dd>
 Retrieve the Equation of the Top Plane of a Pocket Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>A,B,C,D</tt> the equation
 Ax + By + Cz + D = 0 of Manufacturing Pocket Operation <tt>firstOperation</tt>
 <pre>
 Call firstOperation.<font color="red">GetMfgTopPlane</font>(A,B,C,D)
</pre>
 </dl>
</dl>
<a name="GetPattern"><dt>

<table><tr><td>o Func <b>GetPattern</b>(<td>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Retrieve the Machining Pattern asociated to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>firstOperation</tt> the machining pattern 
 <tt>Pattern</tt>
 <pre>
 Set Pattern = firstOperation.<font color="red">GetPattern</font>
</pre>
 </dl>
</dl>
<a name="GetRadiusOnMacro"><dt>

<table><tr><td>o Func <b>GetRadiusOnMacro</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMacroType</tt>) As <script type="text/javascript"> activateLink('double','double')</script> </table></dt>
<dl>
  <dd>
 Retrieves radius attribute on the circular elementary macro motion on CIRCULAR MILLING
 or THREAD MILLING operations ONLY.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>   <b>Legal values</b>: iMacroType can be:
   <dl>
     <dt><tt>"Approach"</tt>, to get the radius on the Approach Macro <dd>
     <dt><tt>"Retract"</tt>, to get the radius on the Retract Macro <dd>
     <dt><tt>"ReturnInALevelApproach"</tt>, to get the radius on the Return in a level Macro (Approach) <dd>
     <dt><tt>"ReturnInALevelRetract"</tt>, to get the radius on the Return in a level Macro (Retract) <dd>
     <dt><tt>"ReturnBetweenLevelsApproach"</tt>, to get the radius on the Return between levels Macro (Approach) <dd>
     <dt><tt>"ReturnBetweenLevelsRetract"</tt>, to get the radius on the Return between levels Macro (Approach) <dd>
   </dl>
 </dd>
    <dt><tt> oRadius</tt>
   <dd>   Radius value. (expressed in millimeters)
 </dl>
 <dt><b>Example:</b>
 <dd>The following example retrieves the radius on the circular motion 
 of the retract macro on the Circular Milling operation CircularMilling1 
 <pre>
 dim RadValue as double
 RadValue = CircularMilling1.<font color="red">GetRadiusOnMacro</font>("Retract")
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetRelimitingGeometry"><dt>

<table><tr><td>o Sub <b>GetRelimitingGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iGeometryType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>oReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>oProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>oPosition</tt>)</table></dt>
<dl>
  <dd>
 Retrieves start / end  element on PROFILE CONTOURING operation ONLY.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometryType</tt>
   <dd>   <b>Legal values</b>: iGeometryType can be:
   <dl>
	    <dt><tt>"StartElement"</tt>, to get the Start element on Profile Contouring <dd>
     <dt><tt>"EndElement"</tt>, to get the End element on Profile Contouring <dd>
   </dl>
 </dd>
    <dt><tt> oReference</tt>
   <dd>   The relimiting geometry.
 </dd>
    <dt><tt> oProduct</tt>
   <dd>   Product containing the relimiting geometry.
 </dd>
    <dt><tt> oOffset</tt>
   <dd>   Offset set on the relimiting geometry. (expressed in millimeters)
 </dd>
    <dt><tt> oPosition</tt>
   <dd>   Tool position set on the relimiting geometry.<br>
   <b>Legal values</b>: oPosition can be:
   <dl>
	    <dt><tt>"IN"</tt><dd>
	    <dt><tt>"ON"</tt><dd>
	    <dt><tt>"OUT"</tt><dd>
   </dl>
 </dl>
 <dt><b>Example:</b>
 <dd>The following example gets the End relimiting element of the 
 Profile Contouring operation Contouring1 
 <pre>
 Call Contouring1.<font color="red">GetRelimitingGeometry</font>("EndElement",RelimitingElement,PartMachined,Offset,Position)
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetStartPointGeometry"><dt>

<table><tr><td>o Sub <b>GetStartPointGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>oGeometryPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>oReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>oProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oOffset</tt>)</table></dt>
<dl>
  <dd>
 Retrieves geometry and offset of a start point on POCKETING operation ONLY.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> oGeometryPosition</tt>
   <dd>   <b>Legal values</b>: oGeometryPosition can be:
   <dl>
	    <dt><tt>"Outside"</tt>, if the start point is outside the pocket contour <dd>
     <dt><tt>"Inside"</tt>, if the start point is inside the pocket contour <dd>
   </dl>
 </dd>
    <dt><tt> oReference</tt>
   <dd>   The start point geometry.
 </dd>
    <dt><tt> oProduct</tt>
   <dd>   Product containing the start point geometry.
 </dd>
    <dt><tt> oOffset</tt>
   <dd>   Offset set on the start point. (expressed in millimeters)<br>
   Offset has a meaning only if oGeometryPosition value is "Outside".
 </dl>
 <dt><b>Example:</b>
 <dd>The following example gets the Start point geometry on the Pocketing operation Pocketing1
 <pre>
 Call Pocketing1.<font color="red">GetStartPointGeometry</font>(Position,Point1,Part,OffsetValue)
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="GetToolGage"><dt>

<table><tr><td>o Sub <b>GetToolGage</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oMinToolLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>oMinToolGage</tt>)</table></dt>
<dl>
  <dd>
 Retrieves the minimum tool cutting lentgh and the minimum tool gage length.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>MinToolLength</tt> and <tt>MinToolGage</tt> the values
 of tool of Manufacturing Operation <tt>Operation</tt>
 <pre>
 Call Operation.<font color="red">GetToolGage</font>(MinToolLength,MinToolGage)
</pre>
 </dl>
</dl>
<a name="GetTrajectoryEndPointCoord"><dt>

<table><tr><td>o Sub <b>GetTrajectoryEndPointCoord</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oEndPoint</tt>)</table></dt>
<dl>
  <dd>
 Retrieve the Machining Operation's trajectory end point.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>oEndPoint</tt> the end point
 of the Machining Operation <tt>Operation</tt>
 <pre>
 Dim oEndPoint(2)
 call Operation.<font color="red">GetTrajectoryEndPointCoord(oEndPoint)</font>
 x = oEndPoint(0)
 y = oEndPoint(1)
 z = oEndPoint(2)
</pre>
 </dl>
</dl>
<a name="GetTrajectoryStartPointCoord"><dt>

<table><tr><td>o Sub <b>GetTrajectoryStartPointCoord</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>oStartPoint</tt>)</table></dt>
<dl>
  <dd>
 Retrieve the Machining Operation's trajectory start point.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example Retrieves in <tt>oStartPoint</tt> the start point
 of the Machining Operation <tt>Operation</tt>
 <pre>
 Dim oEndPoint(2)
 call Operation.<font color="red">GetTrajectoryStartPointCoord(oStartPoint)</font>
 x = oStartPoint(0)
 y = oStartPoint(1)
 z = oStartPoint(2)
</pre>
 </dl>
</dl>
<a name="ImportNCOutput"><dt>

<table><tr><td>o Sub <b>ImportNCOutput</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iNCOutputFile</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPPName</tt>)</table></dt>
<dl>
  <dd>
 Import an NC File.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example imports after an operation <tt>Operation</tt> an NC File of type <tt>TYPE</tt> available in the file path <tt>PATH</tt> using the PP <tt>PPNAME</tt> if required.
 <pre>
 Call Operation.<font color="red">ImportNCOutputOnProgram</font>(TYPE,PATH,PPNAME)
</pre>
 </dl>
</dl>
<a name="InsertToolMotion"><dt>

<table><tr><td>o Func <b>InsertToolMotion</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iPosition</tt>) As <script type="text/javascript"> activateLink('ManufacturingToolMotion','ManufacturingToolMotion')</script> </table></dt>
<dl>
  <dd>
 Create, given its type, a Manufacturing ToolMotion inside a sequential operation.<br>
 <dl>
 <dd>The available type for lathe sequential operation are : 
 <dd>for GoStandard and GoGo tool motion iType = <tt>MfgSeqMotionLatheGoStd</tt>
 <dd>for GoDelta tool motion, iType = <tt>MfgSeqMotionLatheDelta</tt> 
 <dd>for Indirv tool motion, iType = <tt>MfgSeqMotionLatheIndirv</tt>
 <dd>for Follow tool motion, iType = <tt>MfgSeqMotionLatheFollow</tt> 
 <dd>for PPWord tool motion, iType = <tt>MfgSeqMotionPPWord</tt>
 <dd>
 <dd>The available type for prismatic sequential operation are : 
 <dd>for Goto Point tool motion, iType = <tt>MfgSeqMotionPoint</tt>
 <dd>for Goto Position tool motion, iType = <tt>MfgSeqMotionPosition</tt>
 <dd>for Goto Delta tool motion, iType = <tt>MfgSeqMotionDelta</tt>
 <dd>
 <tt>iType</tt> type of the ToolMotion to be created
 <tt>iPosition</tt> rank in the operation list where the ToolMotion will be created
 <dd>                iPosition=0 means creation at the end of the list of tool motions
 <tt>oToolMotion</tt> the created ManufacturingToolMotion
 <dd>
 <dd>The following example creates in ManufacturingOperation  <tt>SeqMO</tt>
 <dd> which is a Lathe Sequential operation
 <dd>the ManufacturingToolMotion <tt>ThisToolMotion</tt> of type <tt>MfgSeqMotionLatheGoStd</tt> at the first rank
 <pre>
 <dt><b>Example:</b>
	Set SeqMO = Program1.AppendOperation("MfgLatheMfgSequentialOperation",1)
	Set ThisToolMotion = SeqMO.<font color="red">InsertToolMotion</font>("MfgSeqMotionLatheGoStd",1)
</pre>
 <dd>The following example creates in ManufacturingOperation  <tt>SeqMO</tt>
 <dd> which is an Axial Point to Point sequential operation
 <dd>the ManufacturingToolMotion <tt>ThisToolMotion</tt> of type <tt>MfgSeqMotionPoint</tt> at the first rank
 <pre>
 <dt><b>Example:</b>
	Set SeqMO = Program1.AppendOperation("PointToPoint",1)
	Set ThisToolMotion = SeqMO.<font color="red">InsertToolMotion</font>("MfgSeqMotionPoint",1)
</pre>
 </dl>
</dl>
<a name="IsGeometricallyAccessibleOnSetup"><dt>

<table><tr><td>o Func <b>IsGeometricallyAccessibleOnSetup</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iManufacturingSetup</tt>) As <script type="text/javascript"> activateLink('boolean','boolean')</script> </table></dt>
<dl>
  <dd>
 Returns True if the Manufacturing Axial Operation is geometrically accessible on the given 
 Manufacturing Setup.The Axial Operation must have a valid tool axis and a machine
 must be assigned to the Manufacturing Setup. If this is not the case, the method returns False.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSetup</tt>
   <dd> The Manufacturing Setup gives the accessibility checking context :				 the part,the machine and the relative orientation of the part on the machine.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example checks the accessibility of <tt>firstOperation</tt> on <tt>firstSetup</tt>.
 <pre>
 Dim isAccessible As Boolean
 isAccessible = firstOperation.<font color="red">IsGeometricallyAccessibleOnSetup</font>(firstSetup)
 </pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="LockActivty"><dt>

<table><tr><td>o Sub <b>LockActivty</b>(<td>)</table></dt>
<dl>
  <dd>
  Method is used for Locking and Unloking specific activity 
 Call on ManufacturingOperation

</dl>
<a name="RemoveRelimitingGeometry"><dt>

<table><tr><td>o Sub <b>RemoveRelimitingGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iGeometryType</tt>)</table></dt>
<dl>
  <dd>
 Removes the geometry on relimiting element PROFILE CONTOURING operation ONLY. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometryType</tt>
   <dd>   <b>Legal values</b>: iGeometryType can be:
   <dl>
	    <dt><tt>"StartElement"</tt>, to remove the Start element on Profile Contouring <dd>
     <dt><tt>"EndElement"</tt>, to remove the End element on Profile Contouring <dd>
   </dl>
 </dl>
 <dt><b>Example:</b>
 <dd>The following example removes the End relimiting element of the 
 Profile Contouring operation Contouring1 
 <pre>
 Call Contouring1.<font color="red">RemoveRelimitingGeometry</font>("EndElement")
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="RemoveStartPointGeometry"><dt>

<table><tr><td>o Sub <b>RemoveStartPointGeometry</b>(<td>)</table></dt>
<dl>
  <dd>
 Removes the start point  element on POCKETING operation ONLY. <br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example removes the start point of the Pocketing operation Pocketing1
 <pre>
 Call Pocketing1.<font color="red">RemoveStartPointGeometry</font>
</pre>
 </dl>
</dl>
<a name="SetFeature"><dt>

<table><tr><td>o Sub <b>SetFeature</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iMachinableFeature</tt>)</table></dt>
<dl>
  <dd>
 Associate a Machinable Feature to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates in <tt>firstOperation</tt> the machinable feature 
 <tt>Feature</tt>
 <pre>
 call firstOperation.<font color="red">SetFeature</font>(Feature)
</pre>
 </dl>
</dl>
<a name="SetFeedSpeedAutoUpdate"><dt>

<table><tr><td>o Sub <b>SetFeedSpeedAutoUpdate</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('boolean','boolean')</script> <td><tt>iAutoUpdate</tt>)</table></dt>
<dl>
  <dd>
 Set the Auto Update status for Feed Rate or Spindle Speed.
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iType</tt>
   <dd> Determines if the method works on Feed Rate or Spindle Speed   <b>Legal values</b>: iType can be
   <ul>
     <li><tt>"FEEDRATE"</tt>		 </li>
     <li><tt>"SPINDLESPEED"</tt>  </li>
   </ul>
 </dd>
    <dt><tt> iAutoUpdate</tt>
   <dd>   Auto update status
   <b>Legal values</b>: iType can be
   <ul>
     <li><tt>True</tt>	</li>
     <li><tt>False</tt>  </li>
		<br>
		<ul>
		  <li><b>Example:</b></li>
	      <li>The following example enables AutoUpdate for Spindle Speed</li>
       <li>firstOperation.<font color="red">SetFeedSpeedAutoUpdate("SPINDLESPEED", True)</font></li>
		</ul>
	  </ul></dd>
</dl>
</dl>
</dl>
<a name="SetFeedrateMagnitude"><dt>

<table><tr><td>o Sub <b>SetFeedrateMagnitude</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMagnitudeName</tt>)</table></dt>
<dl>
  <dd>
 Defines the magnitude of the feedrate values.
 <pre>
 <dd>
 <dd>The available types for Magnitude are: 
 <dd>for Linear Magnitude , iMagnitudeName = <tt>LINEARFEEDRATE</tt>
 <dd>for Angular Magnitude , iMagnitudeName = <tt>ANGULARFEEDRATE</tt>
 <dt><b>Example:</b>
 Dim Operation1 As ManufacturingOperation
 Set Operation1 = Program1.AppendOperation ("Drilling",1)
 Operation1.<font color="red">SetFeedrateMagnitude("LINEARFEEDRATE")</font>
</pre>
 </dl>
</dl>
<a name="SetGeometry"><dt>

<table><tr><td>o Sub <b>SetGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iGeometryType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('short','short')</script> <td><tt>iPosition</tt>)</table></dt>
<dl>
  <dd>
 Assigns geometry to a Manufacturing Operation. <br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometryType</tt>
   <dd>   Type of geometry to assign 
 List of valid iGeometryType:
		-	Parts
		-	Drives
		-	RoughStock
		-	PartBottom
		-	Checks
		-	GuidingCurves
		-	FirstGuideLine
		-	SecondGuideLine
		-	AuxGuidingCurves
		-	RelimitingFace
		-	RelimitingPlane
		-	FirstRelimitingElement
		-	SecondRelimitingElement
		-	EndingPoint
		-	StartingPoint
		-	Island
		-	SetupStocks
		-	SetupDesigns

 </dd>
    <dt><tt> iReference</tt>
   <dd>   Geometry to assign: it may be a feature (point, hole, ...) or a BREP feature.
 </dd>
    <dt><tt> iProduct</tt>
   <dd>   Product containing the geometry to assign. It must be the occurence of the product which owns the part containing the geometry.
   Also see method GetProductInstance of CATIAManufacturingSetup interface.
 </dd>
    <dt><tt> iPosition</tt>
   <dd>   Position of the geometry in the list (0 to append at the end of the list). 
 <dt><b>Example:</b>
 <dd>The following example assigns the plane <tt>Plane.1</tt> as bottom of
 operation <tt> Pocketing1 </tt> of the Manufacturing Program <tt>Program1</tt>.
 The Product <tt>Product1</tt> is associated to Manufacturing Setup <tt> Setup1</tt>.
 This example is valid only if the Product owning the part which contains the plane has been associated to the Manufacturing Setup
 (if the CATPart containing the plane has been associated to the Manufacturing Setup). In other cases, the product must be retrieved differently.
 <pre>
 Set Product1 = Setup1.GetProductInstance()
 Dim Pocketing1 As ManufacturingOperation
 Set Pocketing1 = Program1.AppendOperation ("Pocketing",1)
 Pocketing1 .<font color="red">SetGeometry("PartBottom",Plane1,Product1,0)</font>
</pre></dd>
</dl>
</dl>
</dl>
<a name="SetPattern"><dt>

<table><tr><td>o Sub <b>SetPattern</b>(<td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iPattern</tt>)</table></dt>
<dl>
  <dd>
 Associate a Machining Pattern to a Manufacturing Operation.<br>
 <dl>
 <dt><b>Example:</b>
 <dd>The following example associates in <tt>firstOperation</tt> the machining pattern 
 <tt>Pattern</tt>
 <pre>
 call firstOperation.<font color="red">SetPattern</font>(Pattern)
</pre>
 </dl>
</dl>
<a name="SetRadiusOnMacro"><dt>

<table><tr><td>o Sub <b>SetRadiusOnMacro</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMacroType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iRadius</tt>)</table></dt>
<dl>
  <dd>
 Defines radius attribute on the circular elementary macro motion on CIRCULAR MILLING
 or THREAD MILLING operations ONLY.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMacroType</tt>
   <dd>   <b>Legal values</b>: iMacroType can be:
   <dl>
     <dt><tt>"Approach"</tt>, to set the radius on the Approach Macro <dd>
     <dt><tt>"Retract"</tt>, to set the radius on the Retract Macro <dd>
     <dt><tt>"ReturnInALevelApproach"</tt>, to set the radius on the Return in a level Macro (Approach) <dd>
     <dt><tt>"ReturnInALevelRetract"</tt>, to set the radius on the Return in a level Macro (Retract) <dd>
     <dt><tt>"ReturnBetweenLevelsApproach"</tt>, to set the radius on the Return between levels Macro (Approach) <dd>
     <dt><tt>"ReturnBetweenLevelsRetract"</tt>, to set the radius on the Return between levels Macro (Approach) <dd>
   </dl>
 </dd>
    <dt><tt> iRadius</tt>
   <dd>   Radius value. (expressed in millimeters)
 </dl>
 <dt><b>Example:</b>
 <dd>The following example sets a radius 5mm on the circular motion 
 of the retract macro on the Circular Milling operation CircularMilling1 
 <pre>
 Dim CircularMilling1 As ManufacturingOperation
 Set CircularMilling1 = Program1.AppendOperation ("CircularMilling1",1)
 Call CircularMilling1.<font color="red">SetRadiusOnMacro</font>("Retract",5.00)
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetRelimitingGeometry"><dt>

<table><tr><td>o Sub <b>SetRelimitingGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iGeometryType</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iPosition</tt>)</table></dt>
<dl>
  <dd>
 Defines start / end  element on PROFILE CONTOURING operation ONLY.<br>
 Sets a geometry on relimiting element in profile contouring operation. 
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometryType</tt>
   <dd>   <b>Legal values</b>: iGeometryType can be:
   <dl>
	    <dt><tt>"StartElement"</tt>, to set the Start element on Profile Contouring <dd>
     <dt><tt>"EndElement"</tt>, to set the End element on Profile Contouring <dd>
   </dl>
 </dd>
    <dt><tt> iReference</tt>
   <dd>   Geometries to be set. It can be a list of curves or a single point. The curves must be adjacent.
 </dd>
    <dt><tt> iProduct</tt>
   <dd>   Product containing the geometry to be set.
 </dd>
    <dt><tt> iOffset</tt>
   <dd>   Offset to set on the relimiting geometry. (expressed in millimeters)
 </dd>
    <dt><tt> iPosition</tt>
   <dd>   Tool position to set on the relimiting geometry.<br>
   <b>Legal values</b>: iPosition can be:
   <dl>
	    <dt><tt>"IN"</tt>, to set the tool position IN <dd>
	    <dt><tt>"ON"</tt>, to set the tool position ON <dd>
	    <dt><tt>"OUT"</tt>, to set the tool position OUT <dd>
   </dl>
 </dl>
 <dt><b>Example:</b>
 <dd>The following example sets the Start relimiting element Curve1 
 on the Profile Contouring operation Contouring1
 <pre>
 Call Contouring1.<font color="red">SetRelimitingGeometry</font>("StartElement",Curve1,PartMachined,3.00,"ON")
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetSpindleMagnitude"><dt>

<table><tr><td>o Sub <b>SetSpindleMagnitude</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iMagnitudeName</tt>)</table></dt>
<dl>
  <dd>
 Defines the magnitude of the spindle values.
 <pre>
 <dd>
 <dd>The available types for Magnitude are: 
 <dd>for Linear Magnitude , iMagnitudeName = <tt>LINEARSPINDLESPEED</tt>
 <dd>for Angular Magnitude , iMagnitudeName = <tt>ANGULARSPINDLESPEED</tt>
 <dt><b>Example:</b>
 Dim Operation1 As ManufacturingOperation
 Set Operation1 = Program1.AppendOperation ("Drilling",1)
 Operation1.<font color="red">SetSpindleMagnitude("ANGULARSPINDLESPEED")</font>
</pre>
 </dl>
</dl>
<a name="SetStartPointGeometry"><dt>

<table><tr><td>o Sub <b>SetStartPointGeometry</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iGeometryPosition</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iProduct</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>)</table></dt>
<dl>
  <dd>
 Defines the geometry and the offset of a start point on POCKETING operation ONLY.<br>
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iGeometryPosition</tt>
   <dd>   <b>Legal values</b>: iGeometryPosition can be:
   <dl>
	    <dt><tt>"Outside"</tt>, to set the Start point outside the pocket contour <dd>
     <dt><tt>"Inside"</tt>, to set the Start point inside the pocket contour <dd>
   </dl>
 </dd>
    <dt><tt> iReference</tt>
   <dd>   Geometry to be set. It can be a point.
 </dd>
    <dt><tt> iProduct</tt>
   <dd>   Product containing the geometry to be set.
 </dd>
    <dt><tt> iOffset</tt>
   <dd>   Offset set on the start point. (expressed in millimeters)<br>
   Offset is taken into account only if iGeometryPosition is set to "Outside".
 </dl>
 <dt><b>Example:</b>
 <dd>The following example sets Point1 as Start point on the Pocketing operation Pocketing1
 <pre>
 Call Pocketing1.<font color="red">SetStartPointGeometry</font>("Inside",Point1,PartMachined,0.00)
</pre>
 </dl></dd>
</dl>
</dl>
</dl>
<a name="SetTool"><dt>

<table><tr><td>o Sub <b>SetTool</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iToolName</tt>)</table></dt>
<dl>
  <dd>
 Assign an already created tool to a Manufacturing Operation. <br>
 If the tool is not already created, or if it is not authorized for
 this kind of Manufacturing Operation, a default tool is created.
 <dl>
 <dt><b>Example:</b>
 <dd>The following example assign a drill tool named <tt>D-9.7</tt> on the
 operation <tt> MO1</tt> of the Manufacturing Program <tt>Program1</tt>
 A tool change with tool <tt>D-9.7</tt> has already been created in the
 Manufacturing Program.
 <pre>
 Dim Operation1 As ManufacturingOperation
 Set Operation1 = Program1.AppendOperation ("Drilling",1)
 Operation1.<font color="red">SetTool("D-9.7")</font>
</pre>
 </dl>
</dl>
<a name="UnlockActivty"><dt>

<table><tr><td>o Sub <b>UnlockActivty</b>(<td>)</table></dt>
<dl>
  <dd>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
