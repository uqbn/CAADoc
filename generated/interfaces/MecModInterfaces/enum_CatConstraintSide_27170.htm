<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>MecModInterfaces Enumeration CatConstraintSide</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../MecModInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  </pre>
<hr>
<h1>CatConstraintSide <font size=-1>(Enumeration)</font></h1>
<pre>
enum <b>CatConstraintSide</b> {
  catCstSidePositive,
  catCstSideNegative,
  catCstSideSameAsValue,
  catCstSideOppositeToValue,
  catCstSideUndefined
}
</pre>
<b><i> Constrained elements relative side.</i></b><br>

 <br>
 When two geometrical elements are constrained, there is often a variety 
 of relative positions and orientations of these elements that respect 
 the constraint. For instance,   
 if a distance constraint is placed on two planes, 
 the second plane can lie on both sides of first plane while maintaining
 the requested distance: the constraint is respected, but 
 geometry remains unresolved. Furthermore, even if the side is fixed,
 second plane still can be oriented so that its normal points towards the
 first plane or in the opposite direction, without breaking the constraint.
 <br>
 Managing such indetermination requires control over two variables:
 <dl>
 <dt><b>Side</b>
   <dd>determines, when relevant, on which side of each other constrained
       elements should be positionned
 <dt><b>Orientation</b>
   <dd>determines, when relevant, how to orient constrained elements,  
       whith respect to each other.  
 </dl>
 
 This enum deals with possibles options for dealing with the <b>Side</b>
 variable (see <a href="#" onClick="openLink('CatConstraintOrientation','');return false">CatConstraintOrientation</a> for possibles options for <b>Orientation</b>).  
 <p>
 This enum is based on the notion of characteristic vector. A
 characteristic vector is a vector which is associated with a constrained
 element each time it can be assimilated to a line or a plane. The vector
 represents the direction of the line, or the direction normal to the 
 plane. 
 
 
<dl>
  <dt> <b>Values:</b>
  <dd>
    <dl>
    <dt><tt> catCstSidePositive</tt>
   <dd>   First constrained element characteristic vector points towards 
   second constrained element.<br>
   Arithmetic sign of constraint value is ignored, only its absolute 
   value is taken into account. 
 </dd>
    <dt><tt> catCstSideNegative</tt>
   <dd>   First constrained element characteristic vector points opposite to  
   second constrained element.<br>
   Arithmetic sign of constraint value is ignored, only its absolute 
   value is taken into account. 
 </dd>
    <dt><tt> catCstSideSameAsValue</tt>
   <dd>   Arithmetic sign of constraint value specifies where second element 
   lies with regard to first one: a positive value means in the direction
   of first constrained element characteristic vector, a negative value in 
   the opposite direction.
 </dd>
    <dt><tt> catCstSideOppositeToValue</tt>
   <dd>   Arithmetic sign of constraint value specifies where second element 
   lies with regard to first one: a negative value means in the direction
   of first constrained element characteristic vector, a positive value in 
   the opposite direction.
 </dd>
    <dt><tt> catCstSideUndefined</tt>
   <dd>   Relative positionning of constrained elements is not defined.</dd>
</dl>
</dl>
<hr>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
