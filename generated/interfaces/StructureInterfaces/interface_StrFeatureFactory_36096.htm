<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>StructureInterfaces StrFeatureFactory (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../StructureInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('StrFeatureFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('StrFeatureFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('StrFeatureFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('StrFeatureFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>StrFeatureFactory<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_StrFeatureFactory_36096','StrFeatureFactory','0');</script>
<b><i>  Represents the Factory Object for Structure Features.</i></b><br>

 The factory is retrieved using the StrPlate or StrMember
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 The following example retrieves the Feature factory object from the Selection on ActiveDocument.
 <pre>
 Dim Plate As StrPlate
 Set Plate = strPlates.Item("Plate_007")
 Dim Sel As Selection
 Set Sel = CATIA.ActiveDocument.Selection
 ' Use the Add method to add Plate to selection
 Sel.Add Plate
 Dim Factory As StrFeatureFactory
 Set Factory = Sel.FindObject("CATIAStrFeatureFactory")
 </pre><hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddCutoutWithAfterFormingMode"><b>AddCutoutWithAfterFormingMode</b></a>
<dd>  Adds a Cutout Feature on Plate/Member using AfterForming Mode.
 <dt>
    <a href="#AddCutoutWithBeforeFormingMode"><b>AddCutoutWithBeforeFormingMode</b></a>
<dd>  Adds a Cutout Feature on Plate/Member using BeforeForming Mode.
 <dt>
    <a href="#AddNibbling"><b>AddNibbling</b></a>
<dd>  Adds a Coping on Plate or Member.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddCutoutWithAfterFormingMode"><dt>

<table><tr><td>o Func <b>AddCutoutWithAfterFormingMode</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iDirection</tt>) As <script type="text/javascript"> activateLink('StrCutoutFeature','StrCutoutFeature')</script> </table></dt>
<dl>
  <dd>
 Adds a Cutout Feature on Plate/Member using AfterForming Mode.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContour</tt>
   <dd> [in]   The Sketch used to create the cutout. This must exist in the document.
 </dd>
    <dt><tt> iDirection</tt>
   <dd> [in]   The direction in which the cutout should be created. Valid inputs are line created in sketch,3D Line.
 </dd>
    <dt><tt> oCutout[out]</tt>
   <dd>	  The CutOut Feature 
 </dd>
    <dt><tt> @return</tt>
   <dd>   <code>S_OK</code> if everything ran ok.
 <dl>
 <dt>Example</dt>:
 <dd>
 This example creates Cutout on Plate. 
 <pre>
 ' Define the Plate on which cutout is to be created
 Dim strPlates As strPlates
 Set strPlates = rootProduct.GetTechnologicalObject("StructurePlates")
 Dim PlateToCut As StrPlate
 Set PlateToCut = strPlates.Item("Plate_012")
' Add the Plate to Selection
 Dim Sel As Selection
 Set Sel = CATIA.ActiveDocument.Selection
 Sel.Add PlateToCut
 'Get The factory from selection
 Dim Factory As StrFeatureFactory
 Set Factory = Sel.FindObject("CATIAStrFeatureFactory")
 ' Select the Sketch profile exisitng in the document
 Dim sketch As Reference
 Set sketch = rootProduct.CreateReferenceFromName("Product1/Grid/!Sketch.1")
 ' Select the direction in which the cutout should be created
 Dim dir1 As Reference
 Set dir1 = rootProduct.CreateReferenceFromName("Product1/Grid/!Sketch.2")
 ' Create cutout
 Dim Cutout1 As StrCutoutFeature
 Set Cutout1 = Factory.<font color="red">AddCutoutWithAfterFormingMode(sketch, dir1)</font>
 </pre></dd>
</dl>
</dl>
</dl>
<a name="AddCutoutWithBeforeFormingMode"><dt>

<table><tr><td>o Func <b>AddCutoutWithBeforeFormingMode</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSurface</tt>) As <script type="text/javascript"> activateLink('StrCutoutFeature','StrCutoutFeature')</script> </table></dt>
<dl>
  <dd>
 Adds a Cutout Feature on Plate/Member using BeforeForming Mode.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iContour</tt>
   <dd> [in]   The Sketch used to create the cutout. This must exist in the document
 </dd>
    <dt><tt> iSurface</tt>
   <dd> [in]   A Surface on which Plate/Member is created.
 </dd>
    <dt><tt> oCutout[out]</tt>
   <dd>	  The CutOut Feature 
 </dd>
    <dt><tt> @return</tt>
   <dd>   <code>S_OK</code> if everything ran ok.
 <dl>
 <dt>Example</dt>:
 <dd>
 This example creates Cutout on Member. 
 <pre>
 'Define the Plate on which cutout is to be created
 Dim strPlates As strPlates
 Set strPlates = rootProduct.GetTechnologicalObject("StructurePlates")
 Dim PlateToCut As StrPlate
 Set PlateToCut = strPlates.Item("Plate_012")
 ' Add the Plate to Selection
 Dim Sel As Selection
 Set Sel = CATIA.ActiveDocument.Selection
 Sel.Add PlateToCut
 ' Get The factory from selection
 Dim Factory As StrFeatureFactory
 Set Factory = Sel.FindObject("CATIAStrFeatureFactory")
 ' Select the Sketch profile exisitng in the document
 Dim sketch As Reference
 Set sketch = rootProduct.CreateReferenceFromName("Product1/Grid/!Sketch.1")
 ' Select the surface 
 Dim Surface1 As Reference
 Set Surface1 = rootProduct.CreateReferenceFromName("Product1/Grid/!Extrude.1")
 ' Create cutout
 Dim Cutout1 As StrCutoutFeature
 Set Cutout1 = Factory.AddCutoutWithBeforeFormingMode(sketch, Surface1)
 </pre></dd>
</dl>
</dl>
</dl>
<a name="AddNibbling"><dt>

<table><tr><td>o Func <b>AddNibbling</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iListOfLimitingElements</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iNibblingType</tt>) As <script type="text/javascript"> activateLink('StrNibblingFeature','StrNibblingFeature')</script> </table></dt>
<dl>
  <dd>
 Adds a Coping on Plate or Member.  
 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iListOfLimitingElements</tt>
   <dd> [in]   List of Limiting elements used for limiting the Plate/Member. Pass only one limit at a time.
 </dd>
    <dt><tt> iNibblingType</tt>
   <dd> [in]   Possible Values for Plate:"Remove".
   Possible Values for Member:"Remove","ShortPoint","LongPoint","WeldCut". 
	For Defining further attributes refer CATIAStrNibblingFeature.
 </dd>
    <dt><tt> oNibblingFeature[out]</tt>
   <dd>	  The Nibbled Plate/Member.
 </dd>
    <dt><tt> @return</tt>
   <dd>   <code>S_OK</code> if everything ran ok.
 <dl>
 <dt>Example</dt>:
 <dd>
 This example creates Coping on Plate.  
 <pre>
 Dim Limitplate1 As StrPlate
 Set Limitplate1 = strPlates.Item("Plate_008")
 Dim Listoflimits As Variant
 Set Listoflimits(0) =Limitplate1
 Dim NibblingFeature As StrNibblingFeature
 Set NibblingFeature = Factory.<font color="red">AddNibbling(Listoflimits, "Remove")</font>
 </pre></dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
