<html>
<head>
 <meta name="Generator" content="mihGene v1.1">
 <meta http-equiv="Expires" content="Tue, 04 Dec 1993 21:29:02 GMT">
 <title>StructureInterfaces StrObjectFactory (Object)</title>
<link rel="Stylesheet" type="text/css" href="../../../caav5.css">
<script language="Javascript" src="../_index/jslink.js"></script> 
<script language="Javascript" src="jsFwLink.js"></script> 
<script language="Javascript" type="text/javascript" src="../_index/jsTree.js"></script>  
</head>
<body>
<pre><a href="../_index/main.htm">All Frameworks</a>  <a href="../_index/tree.htm">Object Hierarchy</a>  <a href="../StructureInterfaces.htm">This Framework</a>  <a href="../_index/CAAHomeIdx.htm">Indexes</a>  <script type="text/javascript"> 
 var test=locateObject('StrObjectFactory','interface','0'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('StrObjectFactory','interface','0');return false\">Previous</a> "); 
 } 
 test=locateObject('StrObjectFactory','interface','1'); 
 if(test==1){ 
     document.write("<a href=\"#\" onclick=\"openLinkNP('StrObjectFactory','interface','1');return false\">Next</a> "); 
 } 
 </script> 
</pre>
<hr>
<h1>StrObjectFactory<font size=-1> (Object)</font></h1>
<script type="text/javascript" > 
 generatedFatherClass('interface_StrObjectFactory_34319','StrObjectFactory','0');</script>
<b><i>  Represents the factory object for all the structure objects.</i></b><br>

 The factory is retrieved using the <a href="#" onClick="openLink('Product','GetTechnologicalObject');return false">Product.GetTechnologicalObject</a> method of the product. 
 <! @sample>
 <dl>
 <dt><b>Example:</b>
 <dd>
 The following example retrieves the structure factory object from the
 <tt>oProduct</tt> Product.
 <pre>
 Dim oFactory as AnyObject
 Set oFactory = oProduct.GetTechnologicalObject("StructureObjectFactory")
 </pre>
<hr>
<dl>
</dl>
<dl>
 <h2><a name="MethodIndex"></a>Method Index</h2>
 <dt>
    <a href="#AddDefExtFromCoordinates"><b>AddDefExtFromCoordinates</b></a>
<dd>  Creates a member extremity definition object from coordinates and an offset
 value.
 <dt>
    <a href="#AddDefExtFromReference"><b>AddDefExtFromReference</b></a>
<dd>  Creates a member extremity definition object from an existing object in the model 
 and an offset value.
 <dt>
    <a href="#AddDefExtOnMember"><b>AddDefExtOnMember</b></a>
<dd>  Creates a member extremity definition object from another member object, its
 side, a distance on it and an offset.
 <dt>
    <a href="#AddDimMember"><b>AddDimMember</b></a>
<dd>  Creates a dimension member object from a point and a mathematical definition of
 a direction.
 <dt>
    <a href="#AddDimMemberOnPlane"><b>AddDimMemberOnPlane</b></a>
<dd>  Creates a dimension member object on a plane following a mathematical
 definition of a plane.
 <dt>
    <a href="#AddDimMemberPtPt"><b>AddDimMemberPtPt</b></a>
<dd>  Creates a dimension member object from two given points.
 <dt>
    <a href="#AddDimMemberWithSupport"><b>AddDimMemberWithSupport</b></a>
<dd>  Creates a dimension member object using a support object.
 <dt>
    <a href="#AddMember"><b>AddMember</b></a>
<dd>  Creates a member object.
 <dt>
    <a href="#AddMemberFromDir"><b>AddMemberFromDir</b></a>
<dd>  Creates a member object using a direction object as a line or a plane.
 <dt>
    <a href="#AddMemberFromMathDir"><b>AddMemberFromMathDir</b></a>
<dd>  Creates a member object using a mathematical definition of the direction.
 <dt>
    <a href="#AddMemberFromMathPlane"><b>AddMemberFromMathPlane</b></a>
<dd>  Creates a member object from a mathematical definition of a plane.
 <dt>
    <a href="#AddMemberOnSupport"><b>AddMemberOnSupport</b></a>
<dd>  Creates a member object on a given support.
 <dt>
    <a href="#AddMemberOnSupportWithRef"><b>AddMemberOnSupportWithRef</b></a>
<dd>  Creates a member object on a given support object and a surface used
 to define the orientation of the section.
 <dt>
    <a href="#AddPlate"><b>AddPlate</b></a>
<dd>  Creates a plate from a contour defined by coordinates.
 <dt>
    <a href="#AddPlateOnSurface"><b>AddPlateOnSurface</b></a>
<dd>  Creates a plate from a surface.
 <dt>
    <a href="#AddRectangularEndPlate"><b>AddRectangularEndPlate</b></a>
<dd>  Creates a rectangular end plate on an extremity of a given member.
 <dt>
    <a href="#AddSection"><b>AddSection</b></a>
<dd>  Creates a section object from part document.
 <dt>
    <a href="#AddSectionFromCatalog"><b>AddSectionFromCatalog</b></a>
<dd>  Creates a section object from part document.
 <dt>
    <a href="#ExtendProductAsFoundation"><b>ExtendProductAsFoundation</b></a>
<dd>  Extend an assembly as a structure foundation assembly.
</dl>
 <h2><a name="Methods"></a>Methods</h2> <br>
<a name="AddDefExtFromCoordinates"><dt>

<table><tr><td>o Func <b>AddDefExtFromCoordinates</b>(<td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iCoord</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Creates a member extremity definition object from coordinates and an offset
 value.  

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCoord</tt>
   <dd>	The coordinates of the extremity
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset on this extremity</dd>
</dl>
</dl>
</dl>
<a name="AddDefExtFromReference"><dt>

<table><tr><td>o Func <b>AddDefExtFromReference</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iReference</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Creates a member extremity definition object from an existing object in the model 
 and an offset value. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iReference</tt>
   <dd>	The reference object defining the extremity
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset on this extremity</dd>
</dl>
</dl>
</dl>
<a name="AddDefExtOnMember"><dt>

<table><tr><td>o Func <b>AddDefExtOnMember</b>(<td><script type="text/javascript"> activateLink('StrMember','StrMember')</script> <td><tt>iMember</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMemberExtremity','CatStrMemberExtremity')</script> <td><tt>iSide</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iDistance</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>) As <script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> </table></dt>
<dl>
  <dd>
 Creates a member extremity definition object from another member object, its
 side, a distance on it and an offset.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMember</tt>
   <dd>	The member used to define the extremity
 </dd>
    <dt><tt> iSide</tt>
   <dd>	The side of the previous member used to define the distance along the member
 </dd>
    <dt><tt> iDistance</tt>
   <dd>	The distance along the selected member
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset on the extremity
</dd>
</dl>
</dl>
</dl>
<a name="AddDimMember"><dt>

<table><tr><td>o Func <b>AddDimMember</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iMathDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a dimension member object from a point and a mathematical definition of
 a direction.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iMathDirection</tt>
   <dd>	The mathematical definition of the direction
 </dd>
    <dt><tt> iLength</tt>
   <dd>	The length of the member
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddDimMemberOnPlane"><dt>

<table><tr><td>o Func <b>AddDimMemberOnPlane</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrPlaneMode','CatStrPlaneMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a dimension member object on a plane following a mathematical
 definition of a plane. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iDirection</tt>
   <dd>	The direction object. It can be a line or a plane
 </dd>
    <dt><tt> iMode</tt>
   <dd>	The way the member is created with respect to the direction plane. Useless if
       if the direction is not a plane.
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>	The orientation of the member
 </dd>
    <dt><tt> iLength</tt>
   <dd>	The length of the member
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddDimMemberPtPt"><dt>

<table><tr><td>o Func <b>AddDimMemberPtPt</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a dimension member object from two given points. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iLength</tt>
   <dd>	The length of the member
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddDimMemberWithSupport"><dt>

<table><tr><td>o Func <b>AddDimMemberWithSupport</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrPlaneMode','CatStrPlaneMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMaterialOrientation','CatStrMaterialOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iLength</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a dimension member object using a support object.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member. In case of line for a support,
   this parameter is not taking into account.
 </dd>
    <dt><tt> iDirection</tt>
   <dd>	The direction object. It can be a line or a plane
 </dd>
    <dt><tt> iMode</tt>
   <dd>	The way the member is created with respect to the direction plane. Useless if
       if the direction is not a plane.
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>	The orientation of the member
 </dd>
    <dt><tt> iLength</tt>
   <dd>	The length of the member
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member</dd>
</dl>
</dl>
</dl>
<a name="AddMember"><dt>

<table><tr><td>o Func <b>AddMember</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddMemberFromDir"><dt>

<table><tr><td>o Func <b>AddMemberFromDir</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrPlaneMode','CatStrPlaneMode')</script> <td><tt>iMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object using a direction object as a line or a plane.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iDirection</tt>
   <dd>	The direction object used to orientate the support. The
	direction object can be a plane or a line.
 </dd>
    <dt><tt> iMode</tt>
   <dd>	The way the member is created with respect to the direction plane. Useless if
       if the direction is not a plane.
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddMemberFromMathDir"><dt>

<table><tr><td>o Func <b>AddMemberFromMathDir</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iDirection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object using a mathematical definition of the direction.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iDirection</tt>
   <dd>	The mathematical definition of the direction
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.
</dd>
</dl>
</dl>
</dl>
<a name="AddMemberFromMathPlane"><dt>

<table><tr><td>o Func <b>AddMemberFromMathPlane</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iPlane</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrPlaneMode','CatStrPlaneMode')</script> <td><tt>iPlaneMode</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object from a mathematical definition of a plane. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member
 </dd>
    <dt><tt> iDirection</tt>
   <dd>	The mathematical definition of a plane
 </dd>
    <dt><tt> iPlaneMode</tt>
   <dd>	The way the member is created with respect to the direction plane. Useless if
       if the direction is not a plane.
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddMemberOnSupport"><dt>

<table><tr><td>o Func <b>AddMemberOnSupport</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object on a given support. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iSupport</tt>
   <dd>	The support for the member. The support can be a line or a curve
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member. It can
	be NULL.
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member. It can 
	be NULL.
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.
</dd>
</dl>
</dl>
</dl>
<a name="AddMemberOnSupportWithRef"><dt>

<table><tr><td>o Func <b>AddMemberOnSupportWithRef</b>(<td><script type="text/javascript"> activateLink('StrSection','StrSection')</script> <td><tt>iSection</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iAnchorName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSurfRef</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iAngle</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr1</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('AnyObject','AnyObject')</script> <td><tt>iDefExtr2</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrMember','StrMember')</script> </table></dt>
<dl>
  <dd>
 Creates a member object on a given support object and a surface used
 to define the orientation of the section. 
 
 The surface reference defines the relative orientation on which you
 add an angle. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSection</tt>
   <dd>	The section object defining the profile for the member
 </dd>
    <dt><tt> iAnchorName</tt>
   <dd>	The name of the anchor point
 </dd>
    <dt><tt> iReference</tt>
   <dd>	The reference to define the zero orientation of the section. The 
	section follows this guide line along the support of the member.
 </dd>
    <dt><tt> iAngle</tt>
   <dd>	The orientation of the section on its support
 </dd>
    <dt><tt> iSupport</tt>
   <dd>	The support for the member. The support can be a line or a curve
 </dd>
    <dt><tt> iDefExtr1</tt>
   <dd>	The extremity object defining the start limit of the member. It can
	be NULL.
 </dd>
    <dt><tt> iDefExtr2</tt>
   <dd>	The extremity object defining the end limit of the member. It can 
	be NULL.
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the member. This type is user defined.</dd>
</dl>
</dl>
</dl>
<a name="AddPlate"><dt>

<table><tr><td>o Func <b>AddPlate</b>(<td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSupport</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThickness</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMaterialOrientation','CatStrMaterialOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATSafeArrayVariant','CATSafeArrayVariant')</script> <td><tt>iContour</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrPlate','StrPlate')</script> </table></dt>
<dl>
  <dd>
 Creates a plate from a contour defined by coordinates.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iSupport</tt>
   <dd>	The plane defining the support of the plate
 </dd>
    <dt><tt> iThickness</tt>
   <dd>	The standard thickness of the plate. The thickness follows the 
	standard orientation of the support
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>	The material orientation of the plate
 </dd>
    <dt><tt> iContour</tt>
   <dd>	The array containing all objects defining the contour of the plate
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset applies to the support of the plate
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the plate. This information is user defined. It is added as an 
       attribute on the plate.</dd>
</dl>
</dl>
</dl>
<a name="AddPlateOnSurface"><dt>

<table><tr><td>o Func <b>AddPlateOnSurface</b>(<td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThickness</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMaterialOrientation','CatStrMaterialOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('Reference','Reference')</script> <td><tt>iSurface</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iOffset</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrPlate','StrPlate')</script> </table></dt>
<dl>
  <dd>
 Creates a plate from a surface.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iThickness</tt>
   <dd>	The standard thickness of the plate. The thickness follows the 
	standard orientation of the support
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>	The material orientation of the plate
 </dd>
    <dt><tt> iSurface</tt>
   <dd>	The surface on which plate is to be created.
 If Surface path is NULL then method will return E_INVALID_ARG
 </dd>
    <dt><tt> iOffset</tt>
   <dd>	The offset applies to the support of the plate
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the plate. This information is user defined. It is added as an 
 attribute on the plate.</dd>
</dl>
</dl>
</dl>
<a name="AddRectangularEndPlate"><dt>

<table><tr><td>o Func <b>AddRectangularEndPlate</b>(<td><script type="text/javascript"> activateLink('StrMember','StrMember')</script> <td><tt>iMember</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMemberExtremity','CatStrMemberExtremity')</script> <td><tt>iSide</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iThickness</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iHeight</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('double','double')</script> <td><tt>iWidth</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CatStrMaterialOrientation','CatStrMaterialOrientation')</script> <td><tt>iOrientation</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iType</tt>) As <script type="text/javascript"> activateLink('StrPlate','StrPlate')</script> </table></dt>
<dl>
  <dd>
 Creates a rectangular end plate on an extremity of a given member. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iMember</tt>
   <dd>	The member on which the end-plate will be created
 </dd>
    <dt><tt> iSide</tt>
   <dd>	The side of the selected member
 </dd>
    <dt><tt> iThickness</tt>
   <dd>	The standard thickness of the plate. The thickness follows the 
	standard orientation of the support
 </dd>
    <dt><tt> iHeight</tt>
   <dd>	The height of the plate
 </dd>
    <dt><tt> iWidth</tt>
   <dd>	The width of the plate
 </dd>
    <dt><tt> iOrientation</tt>
   <dd>	The material orientation of the plate
 </dd>
    <dt><tt> iType</tt>
   <dd>	The type of the plate. This information is user defined. It is added as an
       attribute on the plate.</dd>
</dl>
</dl>
</dl>
<a name="AddSection"><dt>

<table><tr><td>o Func <b>AddSection</b>(<td><script type="text/javascript"> activateLink('Document','Document')</script> <td><tt>iPart</tt>) As <script type="text/javascript"> activateLink('StrSection','StrSection')</script> </table></dt>
<dl>
  <dd>
 Creates a section object from part document. This part must aggregate a
 sketch object defining the contour of the section.

 The contour of the section have to be closed and may contain several
 domains.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iPart</tt>
   <dd>	The part document where the sketch of the section is defined</dd>
</dl>
</dl>
</dl>
<a name="AddSectionFromCatalog"><dt>

<table><tr><td>o Func <b>AddSectionFromCatalog</b>(<td><script type="text/javascript"> activateLink('Document','Document')</script> <td><tt>iPart</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iCatalogName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iFamilyName</tt>,<tr><td></td><td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iSectionName</tt>) As <script type="text/javascript"> activateLink('StrSection','StrSection')</script> </table></dt>
<dl>
  <dd>
 Creates a section object from part document. This part must aggregate a
 sketch object defining the contour of the section. This service gives you
 to define where the resolved part comes from to allow a replace mechanism.

 The contour of the section have to be closed and may contain several
 domains.

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iCatalogName</tt>
   <dd>	The catalog name where the document comes from
 </dd>
    <dt><tt> iFamilyName</tt>
   <dd>	The family name where the document comes from
 </dd>
    <dt><tt> iSectionName</tt>
   <dd>	The section name where the document comes from
 </dd>
    <dt><tt> iPart</tt>
   <dd>	The part document where the sketch of the section is defined</dd>
</dl>
</dl>
</dl>
<a name="ExtendProductAsFoundation"><dt>

<table><tr><td>o Func <b>ExtendProductAsFoundation</b>(<td><script type="text/javascript"> activateLink('CATBSTR','CATBSTR')</script> <td><tt>iClass</tt>) As <script type="text/javascript"> activateLink('StrFoundation','StrFoundation')</script> </table></dt>
<dl>
  <dd>
 Extend an assembly as a structure foundation assembly. 

 
<dl>
  <dt> <b>Parameters:</b>
  <dd>
    <dl>
    <dt><tt> iClass</tt>
   <dd>	the name of the user class</dd>
</dl>
</dl>
</dl>

</body>
<hr><p><i>
Copyright &#169; 1999-2011, Dassault Syst&#232;mes. All rights reserved.</i></p>
</html>
